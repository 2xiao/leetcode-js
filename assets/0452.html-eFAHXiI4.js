import{_ as c}from"./1288-HcFWwBIb.js";import{_ as i,r as p,o as r,c as u,a as n,b as s,d as t,w as a,f as d,e as k}from"./app-aQeLbVW9.js";const b={},h=n("h1",{id:"_452-用最少数量的箭引爆气球",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_452-用最少数量的箭引爆气球","aria-hidden":"true"},"#"),s(" 452. 用最少数量的箭引爆气球")],-1),m=n("code",null,"贪心",-1),_=n("code",null,"数组",-1),g=n("code",null,"排序",-1),v={href:"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"力扣",-1),x={href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"LeetCode",-1),w=k('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array <code>points</code> where <code>points[i] = [xstart, xend]</code> denotes a balloon whose <strong>horizontal diameter</strong> stretches between <code>xstart</code> and <code>xend</code>. You do not know the exact y-coordinates of the balloons.</p><p>Arrows can be shot up <strong>directly vertically</strong> (in the positive y-direction) from different points along the x-axis. A balloon with <code>xstart</code> and <code>xend</code> is <strong>burst</strong> by an arrow shot at <code>x</code> if <code>xstart &lt;= x &lt;= xend</code>. There is <strong>no limit</strong> to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.</p><p>Given the array <code>points</code>, return <em>the <strong>minimum</strong> number of arrows that must be shot to burst all balloons</em>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: points = [[10,16],[2,8],[1,6],[7,12]]</p><p>Output: 2</p><p>Explanation: The balloons can be burst by 2 arrows:</p><ul><li>Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].</li><li>Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].</li></ul></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: points = [[1,2],[3,4],[5,6],[7,8]]</p><p>Output: 4</p><p>Explanation: One arrow needs to be shot for each balloon for a total of 4 arrows.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: points = [[1,2],[2,3],[3,4],[4,5]]</p><p>Output: 2</p><p>Explanation: The balloons can be burst by 2 arrows:</p><ul><li>Shoot an arrow at x = 2, bursting the balloons [1,2] and [2,3].</li><li>Shoot an arrow at x = 4, bursting the balloons [3,4] and [4,5].</li></ul></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= points.length &lt;= 10^5</code></li><li><code>points[i].length == 2</code></li><li><code>-2^31 &lt;= xstart &lt; xend &lt;= 2^31 - 1</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 <code>points</code> ，其中 <code>points[i] = [xstart, xend]</code> 表示水平直径在 <code>xstart</code> 和 <code>xend</code> 之间的气球。你不知道气球的确切 <code>y</code> 坐标。</p><p>一支弓箭可以沿着 <code>x</code> 轴从不同点 <strong>完全垂直</strong> 地射出。在坐标 <code>x</code> 处射出一支箭，若有一个气球的直径的开始和结束坐标为 <code>xstart</code>，<code>xend</code>， 且满足 <code>xstart ≤ x ≤ xend</code>，则该气球会被 <strong>引爆</strong> 。可以射出的弓箭的数量 <strong>没有限制</strong> 。 弓箭一旦被射出之后，可以无限地前进。</p><p>给你一个数组 <code>points</code> ，返回引爆所有气球所必须射出的 <strong>最小</strong> 弓箭数 。</p><p><strong>示例 1:</strong></p><blockquote><p>输入: points = [[10,16],[2,8],[1,6],[7,12]]</p><p>输出: 2</p><p>解释：气球可以用 2 支箭来爆破:</p><ul><li>在 x = 6 处射出箭，击破气球[2,8]和[1,6]。</li><li>在 x = 11 处发射箭，击破气球[10,16]和[7,12]。</li></ul></blockquote><p><strong>示例 2:</strong></p><blockquote><p>输入: points = [[1,2],[3,4],[5,6],[7,8]]</p><p>输出: 4</p><p>解释：每个气球需要射出一支箭，总共需要 4 支箭。</p></blockquote><p><strong>示例 3:</strong></p><blockquote><p>输入: points = [[1,2],[2,3],[3,4],[4,5]]</p><p>输出: 2</p><p>解释：气球可以用 2 支箭来爆破:</p><ul><li>在 x = 2 处发射箭，击破气球[1,2]和[2,3]。</li><li>在 x = 4 处射出箭，击破气球[3,4]和[4,5]。</li></ul></blockquote><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>按照区间的起点进行升序排序，若起点相同时按照区间的终点进行降序排列；</li><li>两个相邻区间可能有如下三种情况：</li></ol><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>起点升序排序之后，一定有 <code>a1 &lt;= b1</code>，所以只需要对比和更新终点的情况：</li></ol><ul><li>对于情况一，找到了重合区间 <code>[b1, b2]</code>，可共用弓箭数加一，继续比较后续区间是否和 <code>[b1, b2]</code> 重合，所以更新终点为 <code>b2</code>；</li><li>对于情况二，找到了重合区间 <code>[b1, a2]</code>，可共用弓箭数加一，继续比较后续区间是否和 <code>[b1, a2]</code> 重合，终点依然为 <code>a2</code>；</li><li>对于情况三，两个区间完全不重合，更新终点终点为 <code>b2</code>；</li></ul><ol start="4"><li>最后返回总区间数减去可共用弓箭数 <code>points.length - count</code>；</li></ol><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">points</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">findMinArrowShots</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">points</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 按照起点升序排列，起点相同时，按终点降序排列</span>
	points<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token punctuation">[</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 记录可共用弓箭的数量</span>
	<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token comment">// 记录重合区间的起点和终点</span>
	<span class="token keyword">let</span> <span class="token punctuation">[</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">]</span> <span class="token operator">=</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> <span class="token punctuation">[</span>b1<span class="token punctuation">,</span> b2<span class="token punctuation">]</span> <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token comment">// 情况一，找到重合区间，更新终点为重合区间的终点 b2</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>a2 <span class="token operator">&gt;</span> b2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
			a2 <span class="token operator">=</span> b2<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 情况二，找到重合区间，重合区间的终点就是 a2，不用更新</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a2 <span class="token operator">&gt;=</span> b1 <span class="token operator">&amp;&amp;</span> a2 <span class="token operator">&lt;=</span> b2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 情况三，俩区间不重合，更新终点为 b2</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			a2 <span class="token operator">=</span> b2<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> points<span class="token punctuation">.</span>length <span class="token operator">-</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,31),q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),E=n("td",{style:{"text-align":"center"}},"253",-1),I=n("td",{style:{"text-align":"left"}},"会议室 II 🔒",-1),S=n("td",{style:{"text-align":"center"}},null,-1),T={style:{"text-align":"left"}},C=n("code",null,"贪心",-1),L=n("code",null,"数组",-1),N=n("code",null,"双指针",-1),V=n("code",null,"3+",-1),A=n("td",{style:{"text-align":"center"}},"🟠",-1),O={style:{"text-align":"center"}},j={href:"https://leetcode.cn/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},B={href:"https://leetcode.com/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},Y=n("td",{style:{"text-align":"center"}},"435",-1),z=n("td",{style:{"text-align":"left"}},"无重叠区间",-1),M={style:{"text-align":"center"}},R={style:{"text-align":"left"}},X=n("code",null,"贪心",-1),D=n("code",null,"数组",-1),G=n("code",null,"动态规划",-1),F=n("code",null,"1+",-1),H=n("td",{style:{"text-align":"center"}},"🟠",-1),J={style:{"text-align":"center"}},K={href:"https://leetcode.cn/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},P={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"};function Q(U,W){const l=p("font"),e=p("RouterLink"),o=p("ExternalLinkIcon");return r(),u("div",null,[h,n("p",null,[s("🟠 "),t(l,{color:"#ffb800"},{default:a(()=>[s("Medium")]),_:1}),s("  🔖  "),t(e,{to:"/tag/greedy.html"},{default:a(()=>[m]),_:1}),s(),t(e,{to:"/tag/array.html"},{default:a(()=>[_]),_:1}),s(),t(e,{to:"/tag/sorting.html"},{default:a(()=>[g]),_:1}),s("  🔗 "),n("a",v,[f,t(o)]),s(),n("a",x,[y,t(o)])]),w,d(" prettier-ignore "),n("table",null,[q,n("tbody",null,[n("tr",null,[E,I,S,n("td",T,[t(e,{to:"/tag/greedy.html"},{default:a(()=>[C]),_:1}),s(),t(e,{to:"/tag/array.html"},{default:a(()=>[L]),_:1}),s(),t(e,{to:"/tag/two-pointers.html"},{default:a(()=>[N]),_:1}),s(),V]),A,n("td",O,[n("a",j,[s("🀄️"),t(o)]),s(),n("a",B,[s("🔗"),t(o)])])]),n("tr",null,[Y,z,n("td",M,[t(e,{to:"/problem/0435.html"},{default:a(()=>[s("[✓]")]),_:1})]),n("td",R,[t(e,{to:"/tag/greedy.html"},{default:a(()=>[X]),_:1}),s(),t(e,{to:"/tag/array.html"},{default:a(()=>[D]),_:1}),s(),t(e,{to:"/tag/dynamic-programming.html"},{default:a(()=>[G]),_:1}),s(),F]),H,n("td",J,[n("a",K,[s("🀄️"),t(o)]),s(),n("a",P,[s("🔗"),t(o)])])])])])])}const nn=i(b,[["render",Q],["__file","0452.html.vue"]]);export{nn as default};
