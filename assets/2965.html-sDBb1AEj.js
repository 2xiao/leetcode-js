import{_ as d,r as t,o as u,c as k,a as n,b as s,d as a,w as e,e as m}from"./app-B5EG-zH0.js";const g={},b=n("h1",{id:"_2965-找出缺失和重复的数字",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2965-找出缺失和重复的数字","aria-hidden":"true"},"#"),s(" 2965. 找出缺失和重复的数字")],-1),h=n("code",null,"数组",-1),f=n("code",null,"哈希表",-1),x=n("code",null,"数学",-1),v=n("code",null,"矩阵",-1),y={href:"https://leetcode.cn/problems/find-missing-and-repeated-values",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"力扣",-1),w={href:"https://leetcode.com/problems/find-missing-and-repeated-values",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"LeetCode",-1),q=m('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given a <strong>0-indexed</strong> 2D integer matrix <code>grid</code> of size <code>n * n</code> with values in the range <code>[1, n2]</code>. Each integer appears <strong>exactly once</strong> except <code>a</code> which appears <strong>twice</strong> and <code>b</code> which is <strong>missing</strong>. The task is to find the repeating and missing numbers <code>a</code> and <code>b</code>.</p><p>Return _a <strong>0-indexed</strong> integer array _<code>ans</code> <em>of size</em><code>2</code><em>where</em><code>ans[0]</code><em>equals to</em><code>a</code> <em>and</em><code>ans[1]</code><em>equals to</em><code>b</code> <em>.</em></p><p><strong>Example 1:</strong></p><blockquote><p>Input: grid = [[1,3],[2,2]]</p><p>Output: [2,4]</p><p>Explanation: Number 2 is repeated and number 4 is missing so the answer is [2,4].</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: grid = [[9,1,7],[8,9,2],[3,4,6]]</p><p>Output: [9,5]</p><p>Explanation: Number 9 is repeated and number 5 is missing so the answer is [9,5].</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>2 &lt;= n == grid.length == grid[i].length &lt;= 50</code></li><li><code>1 &lt;= grid[i][j] &lt;= n * n</code></li><li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> there is exactly one <code>x</code> that is not equal to any of the grid members.</li><li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> there is exactly one <code>x</code> that is equal to exactly two of the grid members.</li><li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> except two of them there is exatly one pair of <code>i, j</code> that <code>0 &lt;= i, j &lt;= n - 1</code> and <code>grid[i][j] == x</code>.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个下标从<strong>0</strong> 开始的二维整数矩阵 <code>grid</code>，大小为 <code>n * n</code> ，其中的值在 <code>[1, n2]</code> 范围内。除了 <code>a</code> 出现 <strong>两次</strong> ，<code>b</code> <strong>缺失</strong> 之外，每个整数都<strong>恰好出现一次</strong> 。</p><p>任务是找出重复的数字<code>a</code> 和缺失的数字 <code>b</code> 。</p><p>返回一个下标从 0 开始、长度为 <code>2</code> 的整数数组 <code>ans</code> ，其中 <code>ans[0]</code> 等于 <code>a</code> ，<code>ans[1]</code> 等于 <code>b</code> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> grid = [[1,3],[2,2]]</p><p><strong>输出：</strong>[2,4]</p><p><strong>解释：</strong> 数字 2 重复，数字 4 缺失，所以答案是 [2,4] 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> grid = [[9,1,7],[8,9,2],[3,4,6]]</p><p><strong>输出：</strong>[9,5]</p><p><strong>解释：</strong> 数字 9 重复，数字 5 缺失，所以答案是 [9,5] 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>2 &lt;= n == grid.length == grid[i].length &lt;= 50</code></li><li><code>1 &lt;= grid[i][j] &lt;= n * n</code></li><li>对于所有满足<code>1 &lt;= x &lt;= n * n</code> 的 <code>x</code> ，恰好存在一个 <code>x</code> 与矩阵中的任何成员都不相等。</li><li>对于所有满足<code>1 &lt;= x &lt;= n * n</code> 的 <code>x</code> ，恰好存在一个 <code>x</code> 与矩阵中的两个成员相等。</li><li>除上述的两个之外，对于所有满足<code>1 &lt;= x &lt;= n * n</code> 的 <code>x</code> ，都恰好存在一对 <code>i, j</code> 满足 <code>0 &lt;= i, j &lt;= n - 1</code> 且 <code>grid[i][j] == x</code> 。</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><h3 id="思路一-数学法" tabindex="-1"><a class="header-anchor" href="#思路一-数学法" aria-hidden="true">#</a> 思路一：数学法</h3><p>设：<strong>缺失的数 <code>y</code></strong>，<strong>重复的数 <code>x</code></strong>，可以列出 <strong>两条数学公式</strong>：</p><ol><li><p><strong>和的公式</strong>：</p><ul><li>记 <code>expectSum</code> 为 <code>[1, 2, ..., n^2]</code> 的总和，<code>actualSum</code> 为 <code>grid</code> 中所有数的和：</li><li><code>y - x = expectSum - actualSum</code></li><li>记为：<code>diffSum</code>。</li></ul></li><li><p><strong>平方和的公式</strong>：</p><ul><li>记 <code>expectSquareSum</code> 为 <code>[1, 2, ..., n^2]</code> 的平方和，<code>actualSquareSum</code> 为 <code>grid</code> 中所有数的平方和：</li><li><code>y^2 - x^2 = expectSquareSum - actualSquareSum</code></li><li>记为：<code>diffSquareSum</code>。</li></ul></li><li><p><strong>解出 <code>y</code> 和 <code>x</code></strong></p><ul><li><code>y^2 - x^2</code> 可转换为：<code>(y-x)(y+x)</code></li><li>代入 <code>y - x</code>，可得：<code>y + x = diffSquareSum / diffSum</code></li><li>联立两个等式： <ul><li><code>y = (diffSquareSum / diffSum + diffSum) / 2</code></li><li><code>x = (diffSquareSum / diffSum - diffSum) / 2</code></li></ul></li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><p><strong>时间复杂度</strong>：<code>O(n^2)</code></p><ul><li>计算 <code>expectSquareSum</code> 需要 <code>O(n^2)</code></li><li>遍历 <code>grid</code> 计算 <code>actualSum</code> 和 <code>actualSquareSum</code> 需要 <code>O(n^2)</code></li><li>计算 <code>x</code> 和 <code>y</code> 仅需 <code>O(1)</code></li></ul></li><li><p><strong>空间复杂度</strong>：<code>O(1)</code>，仅使用常数级变量存储 <code>expectSum</code>, <code>actualSum</code>，所以是 <code>O(1)</code></p></li></ul><hr><h3 id="思路二-数组标记法" tabindex="-1"><a class="header-anchor" href="#思路二-数组标记法" aria-hidden="true">#</a> 思路二：数组标记法</h3><p><strong>1. 使用数组 <code>exists</code> 标记出现的数字</strong></p><ul><li>创建一个长度为 <code>n^2</code> 的布尔数组 <code>exists</code>，用于标记每个数是否出现过。</li><li>遍历 <code>grid</code>： <ul><li>如果当前数 <code>num</code> 已经在 <code>exists</code> 数组中被标记，则说明 <strong>它是重复的数 <code>x</code></strong>。</li><li>否则，标记 <code>exists[num - 1] = true</code>。</li></ul></li></ul><p><strong>2. 找到 <code>exists</code> 中 <code>false</code> 的索引</strong></p><ul><li>再次遍历 <code>exists</code>，找到 <strong>第一个 <code>false</code> 的位置 <code>i</code></strong>，说明 <strong><code>i+1</code> 是缺失的数 <code>y</code></strong>。</li></ul><h4 id="复杂度分析-1" tabindex="-1"><a class="header-anchor" href="#复杂度分析-1" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><p><strong>时间复杂度</strong>：<code>O(n^2)</code></p><ul><li>遍历 <code>grid</code> 需要 <code>O(n^2)</code></li><li>遍历 <code>exists</code> 数组需要 <code>O(n^2)</code></li><li>总体 <code>O(n^2)</code></li></ul></li><li><p><strong>空间复杂度</strong>：<code>O(n^2)</code>，额外使用了 <code>exists</code> 数组，大小 <code>O(n^2)</code></p></li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',34),j=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"grid"),s(`
 * `),n("span",{class:"token keyword"},"@return"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"var"),s(),n("span",{class:"token function-variable function"},"findMissingAndRepeatedValues"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"grid"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" n "),n("span",{class:"token operator"},"="),s(" grid"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" expectSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"+"),s(" n "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"*"),s(" n "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 期望的总和"),s(`
	`),n("span",{class:"token keyword"},"let"),s(" expectSquareSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 期望的平方和"),s(`

	`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<="),s(" n "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		expectSquareSum `),n("span",{class:"token operator"},"+="),s(" i "),n("span",{class:"token operator"},"*"),s(" i"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token keyword"},"let"),s(" actualSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(`
		actualSquareSum `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" row "),n("span",{class:"token keyword"},"of"),s(" grid"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" num "),n("span",{class:"token keyword"},"of"),s(" row"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			actualSum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
			actualSquareSum `),n("span",{class:"token operator"},"+="),s(" num "),n("span",{class:"token operator"},"*"),s(" num"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token keyword"},"const"),s(" diffSum "),n("span",{class:"token operator"},"="),s(" expectSum "),n("span",{class:"token operator"},"-"),s(" actualSum"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// y - x"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" diffSquareSum "),n("span",{class:"token operator"},"="),s(" expectSquareSum "),n("span",{class:"token operator"},"-"),s(" actualSquareSum"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// y^2 - x^2"),s(`

	`),n("span",{class:"token keyword"},"const"),s(" missing "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("diffSquareSum "),n("span",{class:"token operator"},"/"),s(" diffSum "),n("span",{class:"token operator"},"+"),s(" diffSum"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" repeated "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("diffSquareSum "),n("span",{class:"token operator"},"/"),s(" diffSum "),n("span",{class:"token operator"},"-"),s(" diffSum"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("repeated"),n("span",{class:"token punctuation"},","),s(" missing"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"grid"),s(`
 * `),n("span",{class:"token keyword"},"@return"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"var"),s(),n("span",{class:"token function-variable function"},"findMissingAndRepeatedValues"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"grid"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" n "),n("span",{class:"token operator"},"="),s(" grid"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"let"),s(" repeated"),n("span",{class:"token punctuation"},","),s(" missing"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"let"),s(" exists "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Array"),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fill"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token comment"},"// 1. 找到重复的数字，并标记出现的数字"),s(`
	`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" row "),n("span",{class:"token keyword"},"of"),s(" grid"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" num "),n("span",{class:"token keyword"},"of"),s(" row"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("exists"),n("span",{class:"token punctuation"},"["),s("num "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				repeated `),n("span",{class:"token operator"},"="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
			exists`),n("span",{class:"token punctuation"},"["),s("num "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"// 2. 找到缺失的数字"),s(`
	`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token operator"},"*"),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("exists"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			missing `),n("span",{class:"token operator"},"="),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("repeated"),n("span",{class:"token punctuation"},","),s(" missing"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function E(A,C){const p=t("font"),o=t("RouterLink"),i=t("ExternalLinkIcon"),r=t("CodeTabs");return u(),k("div",null,[b,n("p",null,[s("🟢 "),a(p,{color:"#15bd66"},{default:e(()=>[s("Easy")]),_:1}),s("  🔖  "),a(o,{to:"/tag/array.html"},{default:e(()=>[h]),_:1}),s(),a(o,{to:"/tag/hash-table.html"},{default:e(()=>[f]),_:1}),s(),a(o,{to:"/tag/math.html"},{default:e(()=>[x]),_:1}),s(),a(o,{to:"/tag/matrix.html"},{default:e(()=>[v]),_:1}),s("  🔗 "),n("a",y,[S,a(i)]),s(),n("a",w,[_,a(i)])]),q,a(r,{id:"340",data:[{id:"数学法"},{id:"数组标记法"}]},{title0:e(({value:c,isActive:l})=>[s("数学法")]),title1:e(({value:c,isActive:l})=>[s("数组标记法")]),tab0:e(({value:c,isActive:l})=>[j]),tab1:e(({value:c,isActive:l})=>[O]),_:1})])}const V=d(g,[["render",E],["__file","2965.html.vue"]]);export{V as default};
