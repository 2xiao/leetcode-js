import{_ as i,r as l,o as r,c as p,a as t,b as n,d as e,w as s,f as d,e as u}from"./app-fBVbqwGY.js";const h={},_=t("h1",{id:"_2367-等差三元组的数目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_2367-等差三元组的数目","aria-hidden":"true"},"#"),n(" 2367. 等差三元组的数目")],-1),m=t("code",null,"数组",-1),f=t("code",null,"哈希表",-1),k=t("code",null,"双指针",-1),g=t("code",null,"枚举",-1),b={href:"https://leetcode.cn/problems/number-of-arithmetic-triplets",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"力扣",-1),x={href:"https://leetcode.com/problems/number-of-arithmetic-triplets",target:"_blank",rel:"noopener noreferrer"},v=t("code",null,"LeetCode",-1),w=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given a <strong>0-indexed</strong> , <strong>strictly increasing</strong> integer array <code>nums</code> and a positive integer <code>diff</code>. A triplet <code>(i, j, k)</code> is an <strong>arithmetic triplet</strong> if the following conditions are met:</p><ul><li><code>i &lt; j &lt; k</code>,</li><li><code>nums[j] - nums[i] == diff</code>, and</li><li><code>nums[k] - nums[j] == diff</code>.</li></ul><p>Return <em>the number of unique <strong>arithmetic triplets</strong>.</em></p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [0,1,4,6,7,10], diff = 3</p><p>Output: 2</p><p>Explanation:</p><p>(1, 2, 4) is an arithmetic triplet because both 7 - 4 == 3 and 4 - 1 == 3.</p><p>(2, 4, 5) is an arithmetic triplet because both 10 - 7 == 3 and 7 - 4 == 3.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [4,5,6,7,8,9], diff = 2</p><p>Output: 2</p><p>Explanation:</p><p>(0, 2, 4) is an arithmetic triplet because both 8 - 6 == 2 and 6 - 4 == 2.</p><p>(1, 3, 5) is an arithmetic triplet because both 9 - 7 == 2 and 7 - 5 == 2.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>3 &lt;= nums.length &lt;= 200</code></li><li><code>0 &lt;= nums[i] &lt;= 200</code></li><li><code>1 &lt;= diff &lt;= 50</code></li><li><code>nums</code> is <strong>strictly</strong> increasing.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个下标从 <strong>0</strong> 开始、<strong>严格递增</strong> 的整数数组 <code>nums</code> 和一个正整数 <code>diff</code> 。如果满足下述全部条件，则三元组 <code>(i, j, k)</code> 就是一个 <strong>等差三元组</strong> ：</p><ul><li><code>i &lt; j &lt; k</code> ，</li><li><code>nums[j] - nums[i] == diff</code> 且</li><li><code>nums[k] - nums[j] == diff</code></li></ul><p>返回不同 <strong>等差三元组</strong> 的数目。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> nums = [0,1,4,6,7,10], diff = 3</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><p>(1, 2, 4) 是等差三元组：7 - 4 == 3 且 4 - 1 == 3 。</p><p>(2, 4, 5) 是等差三元组：10 - 7 == 3 且 7 - 4 == 3 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> nums = [4,5,6,7,8,9], diff = 2</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><p>(0, 2, 4) 是等差三元组：8 - 6 == 2 且 6 - 4 == 2 。</p><p>(1, 3, 5) 是等差三元组：9 - 7 == 2 且 7 - 5 == 2 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>3 &lt;= nums.length &lt;= 200</code></li><li><code>0 &lt;= nums[i] &lt;= 200</code></li><li><code>1 &lt;= diff &lt;= 50</code></li><li><code>nums</code> <strong>严格</strong> 递增</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>将数组元素存入 <code>Set</code>，以便快速查找。</li><li>遍历数组中的每个元素 <code>nums[i]</code>，判断 <code>nums[i] + diff</code> 和 <code>nums[i] + diff * 2</code> 是否存在，如果这两个元素都存在，就可以组成一个等差三元组。</li><li>如果找到符合条件的三元组，计数器 <code>res</code> 加一。</li><li>返回最终计数器的值。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，构建 <code>Set</code> 和遍历数组检查是否存在两个值构成等差三元组，时间复杂度都为 <code>O(n)</code></li><li><strong>空间复杂度</strong>：<code>O(n)</code>，使用了一个额外的 <code>Set</code> 存储数组元素。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">diff</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">arithmeticTriplets</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> diff</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 Set 存储数组元素</span>
	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 初始化结果计数器</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 检查 nums[i] + diff 和 nums[i] + diff * 2 是否在集合中</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> diff<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> diff <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			res<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 满足条件的三元组计数 +1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> res<span class="token punctuation">;</span> <span class="token comment">// 返回最终结果</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,27),j=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),q=t("td",{style:{"text-align":"center"}},"1",-1),E=t("td",{style:{"text-align":"left"}},"两数之和",-1),I={style:{"text-align":"center"}},S={style:{"text-align":"left"}},C=t("code",null,"数组",-1),L=t("code",null,"哈希表",-1),N=t("td",{style:{"text-align":"center"}},"🟢",-1),O={style:{"text-align":"center"}},V={href:"https://leetcode.cn/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},B={href:"https://leetcode.com/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},R=t("td",{style:{"text-align":"center"}},"15",-1),T=t("td",{style:{"text-align":"left"}},"三数之和",-1),A={style:{"text-align":"center"}},Y={style:{"text-align":"left"}},z=t("code",null,"数组",-1),D=t("code",null,"双指针",-1),F=t("code",null,"排序",-1),G=t("td",{style:{"text-align":"center"}},"🟠",-1),H={style:{"text-align":"center"}},J={href:"https://leetcode.cn/problems/3sum",target:"_blank",rel:"noopener noreferrer"},K={href:"https://leetcode.com/problems/3sum",target:"_blank",rel:"noopener noreferrer"},M=t("td",{style:{"text-align":"center"}},"2475",-1),P=t("td",{style:{"text-align":"left"}},"数组中不等三元组的数目",-1),Q=t("td",{style:{"text-align":"center"}},null,-1),U={style:{"text-align":"left"}},W=t("code",null,"数组",-1),X=t("code",null,"哈希表",-1),Z=t("code",null,"排序",-1),$=t("td",{style:{"text-align":"center"}},"🟢",-1),tt={style:{"text-align":"center"}},nt={href:"https://leetcode.cn/problems/number-of-unequal-triplets-in-array",target:"_blank",rel:"noopener noreferrer"},et={href:"https://leetcode.com/problems/number-of-unequal-triplets-in-array",target:"_blank",rel:"noopener noreferrer"},st=t("td",{style:{"text-align":"center"}},"2873",-1),at=t("td",{style:{"text-align":"left"}},"有序三元组中的最大值 I",-1),ot=t("td",{style:{"text-align":"center"}},null,-1),lt={style:{"text-align":"left"}},ct=t("code",null,"数组",-1),it=t("td",{style:{"text-align":"center"}},"🟢",-1),rt={style:{"text-align":"center"}},pt={href:"https://leetcode.cn/problems/maximum-value-of-an-ordered-triplet-i",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-i",target:"_blank",rel:"noopener noreferrer"},ut=t("td",{style:{"text-align":"center"}},"2908",-1),ht=t("td",{style:{"text-align":"left"}},"元素和最小的山形三元组 I",-1),_t=t("td",{style:{"text-align":"center"}},null,-1),mt={style:{"text-align":"left"}},ft=t("code",null,"数组",-1),kt=t("td",{style:{"text-align":"center"}},"🟢",-1),gt={style:{"text-align":"center"}},bt={href:"https://leetcode.cn/problems/minimum-sum-of-mountain-triplets-i",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://leetcode.com/problems/minimum-sum-of-mountain-triplets-i",target:"_blank",rel:"noopener noreferrer"};function xt(vt,wt){const c=l("font"),a=l("RouterLink"),o=l("ExternalLinkIcon");return r(),p("div",null,[_,t("p",null,[n("🟢 "),e(c,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),e(a,{to:"/tag/array.html"},{default:s(()=>[m]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[f]),_:1}),n(),e(a,{to:"/tag/two-pointers.html"},{default:s(()=>[k]),_:1}),n(),e(a,{to:"/tag/enumeration.html"},{default:s(()=>[g]),_:1}),n("  🔗 "),t("a",b,[y,e(o)]),n(),t("a",x,[v,e(o)])]),w,d(" prettier-ignore "),t("table",null,[j,t("tbody",null,[t("tr",null,[q,E,t("td",I,[e(a,{to:"/problem/0001.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",S,[e(a,{to:"/tag/array.html"},{default:s(()=>[C]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[L]),_:1})]),N,t("td",O,[t("a",V,[n("🀄️"),e(o)]),n(),t("a",B,[n("🔗"),e(o)])])]),t("tr",null,[R,T,t("td",A,[e(a,{to:"/problem/0015.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",Y,[e(a,{to:"/tag/array.html"},{default:s(()=>[z]),_:1}),n(),e(a,{to:"/tag/two-pointers.html"},{default:s(()=>[D]),_:1}),n(),e(a,{to:"/tag/sorting.html"},{default:s(()=>[F]),_:1})]),G,t("td",H,[t("a",J,[n("🀄️"),e(o)]),n(),t("a",K,[n("🔗"),e(o)])])]),t("tr",null,[M,P,Q,t("td",U,[e(a,{to:"/tag/array.html"},{default:s(()=>[W]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[X]),_:1}),n(),e(a,{to:"/tag/sorting.html"},{default:s(()=>[Z]),_:1})]),$,t("td",tt,[t("a",nt,[n("🀄️"),e(o)]),n(),t("a",et,[n("🔗"),e(o)])])]),t("tr",null,[st,at,ot,t("td",lt,[e(a,{to:"/tag/array.html"},{default:s(()=>[ct]),_:1})]),it,t("td",rt,[t("a",pt,[n("🀄️"),e(o)]),n(),t("a",dt,[n("🔗"),e(o)])])]),t("tr",null,[ut,ht,_t,t("td",mt,[e(a,{to:"/tag/array.html"},{default:s(()=>[ft]),_:1})]),kt,t("td",gt,[t("a",bt,[n("🀄️"),e(o)]),n(),t("a",yt,[n("🔗"),e(o)])])])])])])}const qt=i(h,[["render",xt],["__file","2367.html.vue"]]);export{qt as default};
