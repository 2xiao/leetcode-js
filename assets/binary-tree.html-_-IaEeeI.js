import{_ as d,r,o as _,c,a as t,d as o,w as n,b as e,f as a}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),e(" 二叉树")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),u=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),x=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),O=t("span",{class:"blue"},"二叉树",-1),L=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),U=t("code",null,"双连通分量",-1),E=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),M=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),A=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),H=t("code",null,"排序",-1),J=t("code",null,"桶排序",-1),X=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ut=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),xt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Vt=t("td",{style:{"text-align":"center"}},"94",-1),Tt=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),Ut={style:{"text-align":"center"}},Et={style:{"text-align":"left"}},Rt=t("code",null,"栈",-1),Wt=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"1+",-1),Qt=t("td",{style:{"text-align":"center"}},"🟢",-1),St={style:{"text-align":"center"}},Dt={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Zt=t("td",{style:{"text-align":"center"}},"95",-1),At=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树 II",-1),Ft={style:{"text-align":"center"}},Ht={style:{"text-align":"left"}},Jt=t("code",null,"树",-1),Xt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"2+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"96",-1),re=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"二叉搜索树",-1),ie=t("code",null,"数学",-1),he=t("code",null,"2+",-1),fe=t("td",{style:{"text-align":"center"}},"🟠",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"98",-1),pe=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),be={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),Ie=t("code",null,"二叉搜索树",-1),we=t("code",null,"1+",-1),ze=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"99",-1),Ce=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),Ne={style:{"text-align":"center"}},Pe={style:{"text-align":"left"}},Ke=t("code",null,"树",-1),Be=t("code",null,"深度优先搜索",-1),Ve=t("code",null,"二叉搜索树",-1),Te=t("code",null,"1+",-1),Ue=t("td",{style:{"text-align":"center"}},"🟠",-1),Ee={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},We={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"100",-1),Ye=t("td",{style:{"text-align":"left"}},"相同的树",-1),Qe={style:{"text-align":"center"}},Se={style:{"text-align":"left"}},De=t("code",null,"树",-1),Me=t("code",null,"深度优先搜索",-1),Ze=t("code",null,"广度优先搜索",-1),Ae=t("code",null,"1+",-1),Fe=t("td",{style:{"text-align":"center"}},"🟢",-1),He={style:{"text-align":"center"}},Je={href:"https://leetcode.cn/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"101",-1),to=t("td",{style:{"text-align":"left"}},"对称二叉树",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"树",-1),no=t("code",null,"深度优先搜索",-1),so=t("code",null,"广度优先搜索",-1),ro=t("code",null,"1+",-1),_o=t("td",{style:{"text-align":"center"}},"🟢",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"102",-1),fo=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历",-1),go={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},mo=t("code",null,"树",-1),yo=t("code",null,"广度优先搜索",-1),po=t("code",null,"二叉树",-1),bo=t("td",{style:{"text-align":"center"}},"🟠",-1),xo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},"103",-1),wo=t("td",{style:{"text-align":"left"}},"二叉树的锯齿形层序遍历",-1),zo={style:{"text-align":"center"}},qo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),Oo=t("code",null,"广度优先搜索",-1),Lo=t("code",null,"二叉树",-1),Co=t("td",{style:{"text-align":"center"}},"🟠",-1),No={style:{"text-align":"center"}},Po={href:"https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"104",-1),Vo=t("td",{style:{"text-align":"left"}},"二叉树的最大深度",-1),To={style:{"text-align":"center"}},Uo={style:{"text-align":"left"}},Eo=t("code",null,"树",-1),Ro=t("code",null,"深度优先搜索",-1),Wo=t("code",null,"广度优先搜索",-1),Go=t("code",null,"1+",-1),Yo=t("td",{style:{"text-align":"center"}},"🟢",-1),Qo={style:{"text-align":"center"}},So={href:"https://leetcode.cn/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Do={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},"105",-1),Zo=t("td",{style:{"text-align":"left"}},"从前序与中序遍历序列构造二叉树",-1),Ao={style:{"text-align":"center"}},Fo={style:{"text-align":"left"}},Ho=t("code",null,"树",-1),Jo=t("code",null,"数组",-1),Xo=t("code",null,"哈希表",-1),$o=t("code",null,"2+",-1),tl=t("td",{style:{"text-align":"center"}},"🟠",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"106",-1),sl=t("td",{style:{"text-align":"left"}},"从中序与后序遍历序列构造二叉树",-1),rl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"树",-1),cl=t("code",null,"数组",-1),al=t("code",null,"哈希表",-1),il=t("code",null,"2+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),fl={style:{"text-align":"center"}},gl={href:"https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},"107",-1),yl=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历 II",-1),pl={style:{"text-align":"center"}},bl={style:{"text-align":"left"}},xl=t("code",null,"树",-1),kl=t("code",null,"广度优先搜索",-1),vl=t("code",null,"二叉树",-1),Il=t("td",{style:{"text-align":"center"}},"🟠",-1),wl={style:{"text-align":"center"}},zl={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},jl=t("td",{style:{"text-align":"center"}},"108",-1),Ol=t("td",{style:{"text-align":"left"}},"将有序数组转换为二叉搜索树",-1),Ll={style:{"text-align":"center"}},Cl={style:{"text-align":"left"}},Nl=t("code",null,"树",-1),Pl=t("code",null,"二叉搜索树",-1),Kl=t("code",null,"数组",-1),Bl=t("code",null,"2+",-1),Vl=t("td",{style:{"text-align":"center"}},"🟢",-1),Tl={style:{"text-align":"center"}},Ul={href:"https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},El={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},"109",-1),Wl=t("td",{style:{"text-align":"left"}},"有序链表转换二叉搜索树",-1),Gl={style:{"text-align":"center"}},Yl={style:{"text-align":"left"}},Ql=t("code",null,"树",-1),Sl=t("code",null,"二叉搜索树",-1),Dl=t("code",null,"链表",-1),Ml=t("code",null,"2+",-1),Zl=t("td",{style:{"text-align":"center"}},"🟠",-1),Al={style:{"text-align":"center"}},Fl={href:"https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",{style:{"text-align":"center"}},"110",-1),Xl=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),$l={style:{"text-align":"center"}},tn={style:{"text-align":"left"}},en=t("code",null,"树",-1),on=t("code",null,"深度优先搜索",-1),ln=t("code",null,"二叉树",-1),nn=t("td",{style:{"text-align":"center"}},"🟢",-1),sn={style:{"text-align":"center"}},rn={href:"https://leetcode.cn/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"111",-1),cn=t("td",{style:{"text-align":"left"}},"二叉树的最小深度",-1),an={style:{"text-align":"center"}},hn={style:{"text-align":"left"}},fn=t("code",null,"树",-1),gn=t("code",null,"深度优先搜索",-1),un=t("code",null,"广度优先搜索",-1),mn=t("code",null,"1+",-1),yn=t("td",{style:{"text-align":"center"}},"🟢",-1),pn={style:{"text-align":"center"}},bn={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"112",-1),vn=t("td",{style:{"text-align":"left"}},"路径总和",-1),In={style:{"text-align":"center"}},wn={style:{"text-align":"left"}},zn=t("code",null,"树",-1),qn=t("code",null,"深度优先搜索",-1),jn=t("code",null,"广度优先搜索",-1),On=t("code",null,"1+",-1),Ln=t("td",{style:{"text-align":"center"}},"🟢",-1),Cn={style:{"text-align":"center"}},Nn={href:"https://leetcode.cn/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},"113",-1),Bn=t("td",{style:{"text-align":"left"}},"路径总和 II",-1),Vn={style:{"text-align":"center"}},Tn={style:{"text-align":"left"}},Un=t("code",null,"树",-1),En=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"回溯",-1),Wn=t("code",null,"1+",-1),Gn=t("td",{style:{"text-align":"center"}},"🟠",-1),Yn={style:{"text-align":"center"}},Qn={href:"https://leetcode.cn/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},"114",-1),Mn=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),Zn={style:{"text-align":"center"}},An={style:{"text-align":"left"}},Fn=t("code",null,"栈",-1),Hn=t("code",null,"树",-1),Jn=t("code",null,"深度优先搜索",-1),Xn=t("code",null,"2+",-1),$n=t("td",{style:{"text-align":"center"}},"🟠",-1),ts={style:{"text-align":"center"}},es={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},os={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"116",-1),ns=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针",-1),ss={style:{"text-align":"center"}},rs={style:{"text-align":"left"}},ds=t("code",null,"树",-1),_s=t("code",null,"深度优先搜索",-1),cs=t("code",null,"广度优先搜索",-1),as=t("code",null,"2+",-1),is=t("td",{style:{"text-align":"center"}},"🟠",-1),hs={style:{"text-align":"center"}},fs={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},"117",-1),ms=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针 II",-1),ys={style:{"text-align":"center"}},ps={style:{"text-align":"left"}},bs=t("code",null,"树",-1),xs=t("code",null,"深度优先搜索",-1),ks=t("code",null,"广度优先搜索",-1),vs=t("code",null,"2+",-1),Is=t("td",{style:{"text-align":"center"}},"🟠",-1),ws={style:{"text-align":"center"}},zs={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},"124",-1),Os=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),Ls={style:{"text-align":"center"}},Cs={style:{"text-align":"left"}},Ns=t("code",null,"树",-1),Ps=t("code",null,"深度优先搜索",-1),Ks=t("code",null,"动态规划",-1),Bs=t("code",null,"1+",-1),Vs=t("td",{style:{"text-align":"center"}},"🔴",-1),Ts={style:{"text-align":"center"}},Us={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Es={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Rs=t("td",{style:{"text-align":"center"}},"129",-1),Ws=t("td",{style:{"text-align":"left"}},"求根节点到叶节点数字之和",-1),Gs={style:{"text-align":"center"}},Ys={style:{"text-align":"left"}},Qs=t("code",null,"树",-1),Ss=t("code",null,"深度优先搜索",-1),Ds=t("code",null,"二叉树",-1),Ms=t("td",{style:{"text-align":"center"}},"🟠",-1),Zs={style:{"text-align":"center"}},As={href:"https://leetcode.cn/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Fs={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},"144",-1),Js=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),Xs={style:{"text-align":"center"}},$s={style:{"text-align":"left"}},tr=t("code",null,"栈",-1),er=t("code",null,"树",-1),or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"1+",-1),nr=t("td",{style:{"text-align":"center"}},"🟢",-1),sr={style:{"text-align":"center"}},rr={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"145",-1),cr=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),ar={style:{"text-align":"center"}},ir={style:{"text-align":"left"}},hr=t("code",null,"栈",-1),fr=t("code",null,"树",-1),gr=t("code",null,"深度优先搜索",-1),ur=t("code",null,"1+",-1),mr=t("td",{style:{"text-align":"center"}},"🟢",-1),yr={style:{"text-align":"center"}},pr={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},br={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},xr=t("td",{style:{"text-align":"center"}},"156",-1),kr=t("td",{style:{"text-align":"left"}},"上下翻转二叉树 🔒",-1),vr={style:{"text-align":"center"}},Ir={style:{"text-align":"left"}},wr=t("code",null,"树",-1),zr=t("code",null,"深度优先搜索",-1),qr=t("code",null,"二叉树",-1),jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Or={style:{"text-align":"center"}},Lr={href:"https://leetcode.cn/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Nr=t("td",{style:{"text-align":"center"}},"173",-1),Pr=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),Kr={style:{"text-align":"center"}},Br={style:{"text-align":"left"}},Vr=t("code",null,"栈",-1),Tr=t("code",null,"树",-1),Ur=t("code",null,"设计",-1),Er=t("code",null,"3+",-1),Rr=t("td",{style:{"text-align":"center"}},"🟠",-1),Wr={style:{"text-align":"center"}},Gr={href:"https://leetcode.cn/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Yr={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Qr=t("td",{style:{"text-align":"center"}},"199",-1),Sr=t("td",{style:{"text-align":"left"}},"二叉树的右视图",-1),Dr={style:{"text-align":"center"}},Mr={style:{"text-align":"left"}},Zr=t("code",null,"树",-1),Ar=t("code",null,"深度优先搜索",-1),Fr=t("code",null,"广度优先搜索",-1),Hr=t("code",null,"1+",-1),Jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Xr={style:{"text-align":"center"}},$r={href:"https://leetcode.cn/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"222",-1),od=t("td",{style:{"text-align":"left"}},"完全二叉树的节点个数",-1),ld={style:{"text-align":"center"}},nd={style:{"text-align":"left"}},sd=t("code",null,"位运算",-1),rd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd=t("td",{style:{"text-align":"center"}},"🟢",-1),ad={style:{"text-align":"center"}},id={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},"226",-1),gd=t("td",{style:{"text-align":"left"}},"翻转二叉树",-1),ud={style:{"text-align":"center"}},md={style:{"text-align":"left"}},yd=t("code",null,"树",-1),pd=t("code",null,"深度优先搜索",-1),bd=t("code",null,"广度优先搜索",-1),xd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"center"}},"🟢",-1),vd={style:{"text-align":"center"}},Id={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},wd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},"230",-1),qd=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),jd={style:{"text-align":"center"}},Od={style:{"text-align":"left"}},Ld=t("code",null,"树",-1),Cd=t("code",null,"深度优先搜索",-1),Nd=t("code",null,"二叉搜索树",-1),Pd=t("code",null,"1+",-1),Kd=t("td",{style:{"text-align":"center"}},"🟠",-1),Bd={style:{"text-align":"center"}},Vd={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Td={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},"235",-1),Ed=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Rd={style:{"text-align":"center"}},Wd={style:{"text-align":"left"}},Gd=t("code",null,"树",-1),Yd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉搜索树",-1),Sd=t("code",null,"1+",-1),Dd=t("td",{style:{"text-align":"center"}},"🟠",-1),Md={style:{"text-align":"center"}},Zd={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ad={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"236",-1),Hd=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),Jd={style:{"text-align":"center"}},Xd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),o_=t("td",{style:{"text-align":"center"}},"🟠",-1),l_={style:{"text-align":"center"}},n_={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},"250",-1),d_=t("td",{style:{"text-align":"left"}},"统计同值子树 🔒",-1),__=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},a_=t("code",null,"树",-1),i_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"二叉树",-1),f_=t("td",{style:{"text-align":"center"}},"🟠",-1),g_={style:{"text-align":"center"}},u_={href:"https://leetcode.cn/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},m_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},"255",-1),p_=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),b_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),v_=t("code",null,"树",-1),I_=t("code",null,"二叉搜索树",-1),w_=t("code",null,"4+",-1),z_=t("td",{style:{"text-align":"center"}},"🟠",-1),q_={style:{"text-align":"center"}},j_={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},O_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},"257",-1),C_=t("td",{style:{"text-align":"left"}},"二叉树的所有路径",-1),N_={style:{"text-align":"center"}},P_={style:{"text-align":"left"}},K_=t("code",null,"树",-1),B_=t("code",null,"深度优先搜索",-1),V_=t("code",null,"字符串",-1),T_=t("code",null,"2+",-1),U_=t("td",{style:{"text-align":"center"}},"🟢",-1),E_={style:{"text-align":"center"}},R_={href:"https://leetcode.cn/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},W_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},"270",-1),Y_=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},D_=t("code",null,"树",-1),M_=t("code",null,"深度优先搜索",-1),Z_=t("code",null,"二叉搜索树",-1),A_=t("code",null,"2+",-1),F_=t("td",{style:{"text-align":"center"}},"🟢",-1),H_={style:{"text-align":"center"}},J_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},X_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},"272",-1),tc=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),ec=t("td",{style:{"text-align":"center"}},null,-1),oc={style:{"text-align":"left"}},lc=t("code",null,"栈",-1),nc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),rc=t("code",null,"4+",-1),dc=t("td",{style:{"text-align":"center"}},"🔴",-1),_c={style:{"text-align":"center"}},cc={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ac={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},"285",-1),hc=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},uc=t("code",null,"树",-1),mc=t("code",null,"深度优先搜索",-1),yc=t("code",null,"二叉搜索树",-1),pc=t("code",null,"1+",-1),bc=t("td",{style:{"text-align":"center"}},"🟠",-1),xc={style:{"text-align":"center"}},kc={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},vc={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},"297",-1),wc=t("td",{style:{"text-align":"left"}},"二叉树的序列化与反序列化",-1),zc={style:{"text-align":"center"}},qc={style:{"text-align":"left"}},jc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),Lc=t("code",null,"广度优先搜索",-1),Cc=t("code",null,"3+",-1),Nc=t("td",{style:{"text-align":"center"}},"🔴",-1),Pc={style:{"text-align":"center"}},Kc={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},"298",-1),Tc=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 🔒",-1),Uc=t("td",{style:{"text-align":"center"}},null,-1),Ec={style:{"text-align":"left"}},Rc=t("code",null,"树",-1),Wc=t("code",null,"深度优先搜索",-1),Gc=t("code",null,"二叉树",-1),Yc=t("td",{style:{"text-align":"center"}},"🟠",-1),Qc={style:{"text-align":"center"}},Sc={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Dc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},"314",-1),Zc=t("td",{style:{"text-align":"left"}},"二叉树的垂直遍历 🔒",-1),Ac=t("td",{style:{"text-align":"center"}},null,-1),Fc={style:{"text-align":"left"}},Hc=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Xc=t("code",null,"广度优先搜索",-1),$c=t("code",null,"3+",-1),ta=t("td",{style:{"text-align":"center"}},"🟠",-1),ea={style:{"text-align":"center"}},oa={href:"https://leetcode.cn/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},la={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},"331",-1),sa=t("td",{style:{"text-align":"left"}},"验证二叉树的前序序列化",-1),ra={style:{"text-align":"center"}},da={style:{"text-align":"left"}},_a=t("code",null,"栈",-1),ca=t("code",null,"树",-1),aa=t("code",null,"字符串",-1),ia=t("code",null,"1+",-1),ha=t("td",{style:{"text-align":"center"}},"🟠",-1),fa={style:{"text-align":"center"}},ga={href:"https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"333",-1),ya=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),pa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},xa=t("code",null,"树",-1),ka=t("code",null,"深度优先搜索",-1),va=t("code",null,"二叉搜索树",-1),Ia=t("code",null,"2+",-1),wa=t("td",{style:{"text-align":"center"}},"🟠",-1),za={style:{"text-align":"center"}},qa={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},ja={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},"337",-1),La=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),Ca={style:{"text-align":"center"}},Na={style:{"text-align":"left"}},Pa=t("code",null,"树",-1),Ka=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"动态规划",-1),Va=t("code",null,"1+",-1),Ta=t("td",{style:{"text-align":"center"}},"🟠",-1),Ua={style:{"text-align":"center"}},Ea={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ra={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},"366",-1),Ga=t("td",{style:{"text-align":"left"}},"寻找二叉树的叶子节点 🔒",-1),Ya={style:{"text-align":"center"}},Qa={style:{"text-align":"left"}},Sa=t("code",null,"树",-1),Da=t("code",null,"深度优先搜索",-1),Ma=t("code",null,"二叉树",-1),Za=t("td",{style:{"text-align":"center"}},"🟠",-1),Aa={style:{"text-align":"center"}},Fa={href:"https://leetcode.cn/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ha={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},"404",-1),Xa=t("td",{style:{"text-align":"left"}},"左叶子之和",-1),$a={style:{"text-align":"center"}},ti={style:{"text-align":"left"}},ei=t("code",null,"树",-1),oi=t("code",null,"深度优先搜索",-1),li=t("code",null,"广度优先搜索",-1),ni=t("code",null,"1+",-1),si=t("td",{style:{"text-align":"center"}},"🟢",-1),ri={style:{"text-align":"center"}},di={href:"https://leetcode.cn/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},_i={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},"426",-1),ai=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),ii={style:{"text-align":"center"}},hi={style:{"text-align":"left"}},fi=t("code",null,"栈",-1),gi=t("code",null,"树",-1),ui=t("code",null,"深度优先搜索",-1),mi=t("code",null,"4+",-1),yi=t("td",{style:{"text-align":"center"}},"🟠",-1),pi={style:{"text-align":"center"}},bi={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},xi={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"431",-1),vi=t("td",{style:{"text-align":"left"}},"将 N 叉树编码为二叉树 🔒",-1),Ii=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},zi=t("code",null,"树",-1),qi=t("code",null,"深度优先搜索",-1),ji=t("code",null,"广度优先搜索",-1),Oi=t("code",null,"2+",-1),Li=t("td",{style:{"text-align":"center"}},"🔴",-1),Ci={style:{"text-align":"center"}},Ni={href:"https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ki=t("td",{style:{"text-align":"center"}},"437",-1),Bi=t("td",{style:{"text-align":"left"}},"路径总和 III",-1),Vi={style:{"text-align":"center"}},Ti={style:{"text-align":"left"}},Ui=t("code",null,"树",-1),Ei=t("code",null,"深度优先搜索",-1),Ri=t("code",null,"二叉树",-1),Wi=t("td",{style:{"text-align":"center"}},"🟠",-1),Gi={style:{"text-align":"center"}},Yi={href:"https://leetcode.cn/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Qi={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Si=t("td",{style:{"text-align":"center"}},"449",-1),Di=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),Mi={style:{"text-align":"center"}},Zi={style:{"text-align":"left"}},Ai=t("code",null,"树",-1),Fi=t("code",null,"深度优先搜索",-1),Hi=t("code",null,"广度优先搜索",-1),Ji=t("code",null,"4+",-1),Xi=t("td",{style:{"text-align":"center"}},"🟠",-1),$i={style:{"text-align":"center"}},th={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},eh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},"450",-1),lh=t("td",{style:{"text-align":"left"}},"删除二叉搜索树中的节点",-1),nh={style:{"text-align":"center"}},sh={style:{"text-align":"left"}},rh=t("code",null,"树",-1),dh=t("code",null,"二叉搜索树",-1),_h=t("code",null,"二叉树",-1),ch=t("td",{style:{"text-align":"center"}},"🟠",-1),ah={style:{"text-align":"center"}},ih={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},hh={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},"501",-1),gh=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),uh={style:{"text-align":"center"}},mh={style:{"text-align":"left"}},yh=t("code",null,"树",-1),ph=t("code",null,"深度优先搜索",-1),bh=t("code",null,"二叉搜索树",-1),xh=t("code",null,"1+",-1),kh=t("td",{style:{"text-align":"center"}},"🟢",-1),vh={style:{"text-align":"center"}},Ih={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},wh={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},zh=t("td",{style:{"text-align":"center"}},"508",-1),qh=t("td",{style:{"text-align":"left"}},"出现次数最多的子树元素和",-1),jh=t("td",{style:{"text-align":"center"}},null,-1),Oh={style:{"text-align":"left"}},Lh=t("code",null,"树",-1),Ch=t("code",null,"深度优先搜索",-1),Nh=t("code",null,"哈希表",-1),Ph=t("code",null,"1+",-1),Kh=t("td",{style:{"text-align":"center"}},"🟠",-1),Bh={style:{"text-align":"center"}},Vh={href:"https://leetcode.cn/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},Th={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},Uh=t("td",{style:{"text-align":"center"}},"510",-1),Eh=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 II 🔒",-1),Rh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Gh=t("code",null,"树",-1),Yh=t("code",null,"二叉搜索树",-1),Qh=t("code",null,"二叉树",-1),Sh=t("td",{style:{"text-align":"center"}},"🟠",-1),Dh={style:{"text-align":"center"}},Mh={href:"https://leetcode.cn/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Zh={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},"513",-1),Fh=t("td",{style:{"text-align":"left"}},"找树左下角的值",-1),Hh=t("td",{style:{"text-align":"center"}},null,-1),Jh={style:{"text-align":"left"}},Xh=t("code",null,"树",-1),$h=t("code",null,"深度优先搜索",-1),t1=t("code",null,"广度优先搜索",-1),e1=t("code",null,"1+",-1),o1=t("td",{style:{"text-align":"center"}},"🟠",-1),l1={style:{"text-align":"center"}},n1={href:"https://leetcode.cn/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},s1={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},r1=t("td",{style:{"text-align":"center"}},"515",-1),d1=t("td",{style:{"text-align":"left"}},"在每个树行中找最大值",-1),_1={style:{"text-align":"center"}},c1={style:{"text-align":"left"}},a1=t("code",null,"树",-1),i1=t("code",null,"深度优先搜索",-1),h1=t("code",null,"广度优先搜索",-1),f1=t("code",null,"1+",-1),g1=t("td",{style:{"text-align":"center"}},"🟠",-1),u1={style:{"text-align":"center"}},m1={href:"https://leetcode.cn/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},y1={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},p1=t("td",{style:{"text-align":"center"}},"530",-1),b1=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),x1={style:{"text-align":"center"}},k1={style:{"text-align":"left"}},v1=t("code",null,"树",-1),I1=t("code",null,"深度优先搜索",-1),w1=t("code",null,"广度优先搜索",-1),z1=t("code",null,"2+",-1),q1=t("td",{style:{"text-align":"center"}},"🟢",-1),j1={style:{"text-align":"center"}},O1={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},L1={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},"536",-1),N1=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),P1=t("td",{style:{"text-align":"center"}},null,-1),K1={style:{"text-align":"left"}},B1=t("code",null,"栈",-1),V1=t("code",null,"树",-1),T1=t("code",null,"深度优先搜索",-1),U1=t("code",null,"2+",-1),E1=t("td",{style:{"text-align":"center"}},"🟠",-1),R1={style:{"text-align":"center"}},W1={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},G1={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},"538",-1),Q1=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),S1=t("td",{style:{"text-align":"center"}},null,-1),D1={style:{"text-align":"left"}},M1=t("code",null,"树",-1),Z1=t("code",null,"深度优先搜索",-1),A1=t("code",null,"二叉搜索树",-1),F1=t("code",null,"1+",-1),H1=t("td",{style:{"text-align":"center"}},"🟠",-1),J1={style:{"text-align":"center"}},X1={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},$1={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},tf=t("td",{style:{"text-align":"center"}},"543",-1),ef=t("td",{style:{"text-align":"left"}},"二叉树的直径",-1),of={style:{"text-align":"center"}},lf={style:{"text-align":"left"}},nf=t("code",null,"树",-1),sf=t("code",null,"深度优先搜索",-1),rf=t("code",null,"二叉树",-1),df=t("td",{style:{"text-align":"center"}},"🟢",-1),_f={style:{"text-align":"center"}},cf={href:"https://leetcode.cn/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},af={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},"545",-1),ff=t("td",{style:{"text-align":"left"}},"二叉树的边界 🔒",-1),gf=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},mf=t("code",null,"树",-1),yf=t("code",null,"深度优先搜索",-1),pf=t("code",null,"二叉树",-1),bf=t("td",{style:{"text-align":"center"}},"🟠",-1),xf={style:{"text-align":"center"}},kf={href:"https://leetcode.cn/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},vf={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},If=t("td",{style:{"text-align":"center"}},"549",-1),wf=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 II 🔒",-1),zf=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},jf=t("code",null,"树",-1),Of=t("code",null,"深度优先搜索",-1),Lf=t("code",null,"二叉树",-1),Cf=t("td",{style:{"text-align":"center"}},"🟠",-1),Nf={style:{"text-align":"center"}},Pf={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Kf={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Bf=t("td",{style:{"text-align":"center"}},"563",-1),Vf=t("td",{style:{"text-align":"left"}},"二叉树的坡度",-1),Tf={style:{"text-align":"center"}},Uf={style:{"text-align":"left"}},Ef=t("code",null,"树",-1),Rf=t("code",null,"深度优先搜索",-1),Wf=t("code",null,"二叉树",-1),Gf=t("td",{style:{"text-align":"center"}},"🟢",-1),Yf={style:{"text-align":"center"}},Qf={href:"https://leetcode.cn/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Sf={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Df=t("td",{style:{"text-align":"center"}},"572",-1),Mf=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),Zf={style:{"text-align":"center"}},Af={style:{"text-align":"left"}},Ff=t("code",null,"树",-1),Hf=t("code",null,"深度优先搜索",-1),Jf=t("code",null,"二叉树",-1),Xf=t("code",null,"2+",-1),$f=t("td",{style:{"text-align":"center"}},"🟢",-1),tg={style:{"text-align":"center"}},eg={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},og={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},lg=t("td",{style:{"text-align":"center"}},"606",-1),ng=t("td",{style:{"text-align":"left"}},"根据二叉树创建字符串",-1),sg=t("td",{style:{"text-align":"center"}},null,-1),rg={style:{"text-align":"left"}},dg=t("code",null,"树",-1),_g=t("code",null,"深度优先搜索",-1),cg=t("code",null,"字符串",-1),ag=t("code",null,"1+",-1),ig=t("td",{style:{"text-align":"center"}},"🟠",-1),hg={style:{"text-align":"center"}},fg={href:"https://leetcode.cn/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},gg={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},"617",-1),mg=t("td",{style:{"text-align":"left"}},"合并二叉树",-1),yg={style:{"text-align":"center"}},pg={style:{"text-align":"left"}},bg=t("code",null,"树",-1),xg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"广度优先搜索",-1),vg=t("code",null,"1+",-1),Ig=t("td",{style:{"text-align":"center"}},"🟢",-1),wg={style:{"text-align":"center"}},zg={href:"https://leetcode.cn/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},qg={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},jg=t("td",{style:{"text-align":"center"}},"623",-1),Og=t("td",{style:{"text-align":"left"}},"在二叉树中增加一行",-1),Lg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Ng=t("code",null,"树",-1),Pg=t("code",null,"深度优先搜索",-1),Kg=t("code",null,"广度优先搜索",-1),Bg=t("code",null,"1+",-1),Vg=t("td",{style:{"text-align":"center"}},"🟠",-1),Tg={style:{"text-align":"center"}},Ug={href:"https://leetcode.cn/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Eg={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Rg=t("td",{style:{"text-align":"center"}},"637",-1),Wg=t("td",{style:{"text-align":"left"}},"二叉树的层平均值",-1),Gg={style:{"text-align":"center"}},Yg={style:{"text-align":"left"}},Qg=t("code",null,"树",-1),Sg=t("code",null,"深度优先搜索",-1),Dg=t("code",null,"广度优先搜索",-1),Mg=t("code",null,"1+",-1),Zg=t("td",{style:{"text-align":"center"}},"🟢",-1),Ag={style:{"text-align":"center"}},Fg={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hg={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},"652",-1),Xg=t("td",{style:{"text-align":"left"}},"寻找重复的子树",-1),$g=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"树",-1),ou=t("code",null,"深度优先搜索",-1),lu=t("code",null,"哈希表",-1),nu=t("code",null,"1+",-1),su=t("td",{style:{"text-align":"center"}},"🟠",-1),ru={style:{"text-align":"center"}},du={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},_u={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},"653",-1),au=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),iu={style:{"text-align":"center"}},hu={style:{"text-align":"left"}},fu=t("code",null,"树",-1),gu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"广度优先搜索",-1),mu=t("code",null,"4+",-1),yu=t("td",{style:{"text-align":"center"}},"🟢",-1),pu={style:{"text-align":"center"}},bu={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},xu={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},ku=t("td",{style:{"text-align":"center"}},"654",-1),vu=t("td",{style:{"text-align":"left"}},"最大二叉树",-1),Iu={style:{"text-align":"center"}},wu={style:{"text-align":"left"}},zu=t("code",null,"栈",-1),qu=t("code",null,"树",-1),ju=t("code",null,"数组",-1),Ou=t("code",null,"3+",-1),Lu=t("td",{style:{"text-align":"center"}},"🟠",-1),Cu={style:{"text-align":"center"}},Nu={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pu={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ku=t("td",{style:{"text-align":"center"}},"655",-1),Bu=t("td",{style:{"text-align":"left"}},"输出二叉树",-1),Vu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Uu=t("code",null,"树",-1),Eu=t("code",null,"深度优先搜索",-1),Ru=t("code",null,"广度优先搜索",-1),Wu=t("code",null,"1+",-1),Gu=t("td",{style:{"text-align":"center"}},"🟠",-1),Yu={style:{"text-align":"center"}},Qu={href:"https://leetcode.cn/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Su={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Du=t("td",{style:{"text-align":"center"}},"662",-1),Mu=t("td",{style:{"text-align":"left"}},"二叉树最大宽度",-1),Zu={style:{"text-align":"center"}},Au={style:{"text-align":"left"}},Fu=t("code",null,"树",-1),Hu=t("code",null,"深度优先搜索",-1),Ju=t("code",null,"广度优先搜索",-1),Xu=t("code",null,"1+",-1),$u=t("td",{style:{"text-align":"center"}},"🟠",-1),tm={style:{"text-align":"center"}},em={href:"https://leetcode.cn/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},om={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},lm=t("td",{style:{"text-align":"center"}},"663",-1),nm=t("td",{style:{"text-align":"left"}},"均匀树划分 🔒",-1),sm=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},dm=t("code",null,"树",-1),_m=t("code",null,"深度优先搜索",-1),cm=t("code",null,"二叉树",-1),am=t("td",{style:{"text-align":"center"}},"🟠",-1),im={style:{"text-align":"center"}},hm={href:"https://leetcode.cn/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},fm={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},gm=t("td",{style:{"text-align":"center"}},"666",-1),um=t("td",{style:{"text-align":"left"}},"路径总和 IV 🔒",-1),mm=t("td",{style:{"text-align":"center"}},null,-1),ym={style:{"text-align":"left"}},pm=t("code",null,"树",-1),bm=t("code",null,"深度优先搜索",-1),xm=t("code",null,"数组",-1),km=t("code",null,"2+",-1),vm=t("td",{style:{"text-align":"center"}},"🟠",-1),Im={style:{"text-align":"center"}},wm={href:"https://leetcode.cn/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},zm={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},qm=t("td",{style:{"text-align":"center"}},"669",-1),jm=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),Om=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},Cm=t("code",null,"树",-1),Nm=t("code",null,"深度优先搜索",-1),Pm=t("code",null,"二叉搜索树",-1),Km=t("code",null,"1+",-1),Bm=t("td",{style:{"text-align":"center"}},"🟠",-1),Vm={style:{"text-align":"center"}},Tm={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Um={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},"671",-1),Rm=t("td",{style:{"text-align":"left"}},"二叉树中第二小的节点",-1),Wm={style:{"text-align":"center"}},Gm={style:{"text-align":"left"}},Ym=t("code",null,"树",-1),Qm=t("code",null,"深度优先搜索",-1),Sm=t("code",null,"二叉树",-1),Dm=t("td",{style:{"text-align":"center"}},"🟢",-1),Mm={style:{"text-align":"center"}},Zm={href:"https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Am={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},"687",-1),Hm=t("td",{style:{"text-align":"left"}},"最长同值路径",-1),Jm=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},$m=t("code",null,"树",-1),ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"二叉树",-1),oy=t("td",{style:{"text-align":"center"}},"🟠",-1),ly={style:{"text-align":"center"}},ny={href:"https://leetcode.cn/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},sy={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},ry=t("td",{style:{"text-align":"center"}},"700",-1),dy=t("td",{style:{"text-align":"left"}},"二叉搜索树中的搜索",-1),_y={style:{"text-align":"center"}},cy={style:{"text-align":"left"}},ay=t("code",null,"树",-1),iy=t("code",null,"二叉搜索树",-1),hy=t("code",null,"二叉树",-1),fy=t("td",{style:{"text-align":"center"}},"🟢",-1),gy={style:{"text-align":"center"}},uy={href:"https://leetcode.cn/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},my={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},yy=t("td",{style:{"text-align":"center"}},"701",-1),py=t("td",{style:{"text-align":"left"}},"二叉搜索树中的插入操作",-1),by={style:{"text-align":"center"}},xy={style:{"text-align":"left"}},ky=t("code",null,"树",-1),vy=t("code",null,"二叉搜索树",-1),Iy=t("code",null,"二叉树",-1),wy=t("td",{style:{"text-align":"center"}},"🟠",-1),zy={style:{"text-align":"center"}},qy={href:"https://leetcode.cn/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jy={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},"703",-1),Ly=t("td",{style:{"text-align":"left"}},"数据流中的第 K 大元素",-1),Cy={style:{"text-align":"center"}},Ny={style:{"text-align":"left"}},Py=t("code",null,"树",-1),Ky=t("code",null,"设计",-1),By=t("code",null,"二叉搜索树",-1),Vy=t("code",null,"3+",-1),Ty=t("td",{style:{"text-align":"center"}},"🟢",-1),Uy={style:{"text-align":"center"}},Ey={href:"https://leetcode.cn/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Ry={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Wy=t("td",{style:{"text-align":"center"}},"742",-1),Gy=t("td",{style:{"text-align":"left"}},"二叉树最近的叶节点 🔒",-1),Yy=t("td",{style:{"text-align":"center"}},null,-1),Qy={style:{"text-align":"left"}},Sy=t("code",null,"树",-1),Dy=t("code",null,"深度优先搜索",-1),My=t("code",null,"广度优先搜索",-1),Zy=t("code",null,"1+",-1),Ay=t("td",{style:{"text-align":"center"}},"🟠",-1),Fy={style:{"text-align":"center"}},Hy={href:"https://leetcode.cn/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jy={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},"776",-1),$y=t("td",{style:{"text-align":"left"}},"拆分二叉搜索树 🔒",-1),t2=t("td",{style:{"text-align":"center"}},null,-1),e2={style:{"text-align":"left"}},o2=t("code",null,"树",-1),l2=t("code",null,"二叉搜索树",-1),n2=t("code",null,"递归",-1),s2=t("code",null,"1+",-1),r2=t("td",{style:{"text-align":"center"}},"🟠",-1),d2={style:{"text-align":"center"}},_2={href:"https://leetcode.cn/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},c2={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},"783",-1),i2=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),h2={style:{"text-align":"center"}},f2={style:{"text-align":"left"}},g2=t("code",null,"树",-1),u2=t("code",null,"深度优先搜索",-1),m2=t("code",null,"广度优先搜索",-1),y2=t("code",null,"2+",-1),p2=t("td",{style:{"text-align":"center"}},"🟢",-1),b2={style:{"text-align":"center"}},x2={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},k2={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},"814",-1),I2=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),w2=t("td",{style:{"text-align":"center"}},null,-1),z2={style:{"text-align":"left"}},q2=t("code",null,"树",-1),j2=t("code",null,"深度优先搜索",-1),O2=t("code",null,"二叉树",-1),L2=t("td",{style:{"text-align":"center"}},"🟠",-1),C2={style:{"text-align":"center"}},N2={href:"https://leetcode.cn/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},P2={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},"863",-1),B2=t("td",{style:{"text-align":"left"}},"二叉树中所有距离为 K 的结点",-1),V2=t("td",{style:{"text-align":"center"}},null,-1),T2={style:{"text-align":"left"}},U2=t("code",null,"树",-1),E2=t("code",null,"深度优先搜索",-1),R2=t("code",null,"广度优先搜索",-1),W2=t("code",null,"2+",-1),G2=t("td",{style:{"text-align":"center"}},"🟠",-1),Y2={style:{"text-align":"center"}},Q2={href:"https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},S2={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},D2=t("td",{style:{"text-align":"center"}},"865",-1),M2=t("td",{style:{"text-align":"left"}},"具有所有最深节点的最小子树",-1),Z2=t("td",{style:{"text-align":"center"}},null,-1),A2={style:{"text-align":"left"}},F2=t("code",null,"树",-1),H2=t("code",null,"深度优先搜索",-1),J2=t("code",null,"广度优先搜索",-1),X2=t("code",null,"2+",-1),$2=t("td",{style:{"text-align":"center"}},"🟠",-1),tp={style:{"text-align":"center"}},ep={href:"https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},op={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},lp=t("td",{style:{"text-align":"center"}},"872",-1),np=t("td",{style:{"text-align":"left"}},"叶子相似的树",-1),sp={style:{"text-align":"center"}},rp={style:{"text-align":"left"}},dp=t("code",null,"树",-1),_p=t("code",null,"深度优先搜索",-1),cp=t("code",null,"二叉树",-1),ap=t("td",{style:{"text-align":"center"}},"🟢",-1),ip={style:{"text-align":"center"}},hp={href:"https://leetcode.cn/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},fp={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},gp=t("td",{style:{"text-align":"center"}},"889",-1),up=t("td",{style:{"text-align":"left"}},"根据前序和后序遍历构造二叉树",-1),mp={style:{"text-align":"center"}},yp={style:{"text-align":"left"}},pp=t("code",null,"树",-1),bp=t("code",null,"数组",-1),xp=t("code",null,"哈希表",-1),kp=t("code",null,"2+",-1),vp=t("td",{style:{"text-align":"center"}},"🟠",-1),Ip={style:{"text-align":"center"}},wp={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},zp={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},qp=t("td",{style:{"text-align":"center"}},"894",-1),jp=t("td",{style:{"text-align":"left"}},"所有可能的真二叉树",-1),Op=t("td",{style:{"text-align":"center"}},null,-1),Lp={style:{"text-align":"left"}},Cp=t("code",null,"树",-1),Np=t("code",null,"递归",-1),Pp=t("code",null,"记忆化搜索",-1),Kp=t("code",null,"2+",-1),Bp=t("td",{style:{"text-align":"center"}},"🟠",-1),Vp={style:{"text-align":"center"}},Tp={href:"https://leetcode.cn/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Up={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},"897",-1),Rp=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),Wp={style:{"text-align":"center"}},Gp={style:{"text-align":"left"}},Yp=t("code",null,"栈",-1),Qp=t("code",null,"树",-1),Sp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"2+",-1),Mp=t("td",{style:{"text-align":"center"}},"🟢",-1),Zp={style:{"text-align":"center"}},Ap={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Fp={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Hp=t("td",{style:{"text-align":"center"}},"919",-1),Jp=t("td",{style:{"text-align":"left"}},"完全二叉树插入器",-1),Xp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},tb=t("code",null,"树",-1),eb=t("code",null,"广度优先搜索",-1),ob=t("code",null,"设计",-1),lb=t("code",null,"1+",-1),nb=t("td",{style:{"text-align":"center"}},"🟠",-1),sb={style:{"text-align":"center"}},rb={href:"https://leetcode.cn/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},db={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},"938",-1),cb=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),ab={style:{"text-align":"center"}},ib={style:{"text-align":"left"}},hb=t("code",null,"树",-1),fb=t("code",null,"深度优先搜索",-1),gb=t("code",null,"二叉搜索树",-1),ub=t("code",null,"1+",-1),mb=t("td",{style:{"text-align":"center"}},"🟢",-1),yb={style:{"text-align":"center"}},pb={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},bb={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},"951",-1),kb=t("td",{style:{"text-align":"left"}},"翻转等价二叉树",-1),vb={style:{"text-align":"center"}},Ib={style:{"text-align":"left"}},wb=t("code",null,"树",-1),zb=t("code",null,"深度优先搜索",-1),qb=t("code",null,"二叉树",-1),jb=t("td",{style:{"text-align":"center"}},"🟠",-1),Ob={style:{"text-align":"center"}},Lb={href:"https://leetcode.cn/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Cb={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Nb=t("td",{style:{"text-align":"center"}},"958",-1),Pb=t("td",{style:{"text-align":"left"}},"二叉树的完全性检验",-1),Kb={style:{"text-align":"center"}},Bb={style:{"text-align":"left"}},Vb=t("code",null,"树",-1),Tb=t("code",null,"广度优先搜索",-1),Ub=t("code",null,"二叉树",-1),Eb=t("td",{style:{"text-align":"center"}},"🟠",-1),Rb={style:{"text-align":"center"}},Wb={href:"https://leetcode.cn/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gb={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yb=t("td",{style:{"text-align":"center"}},"965",-1),Qb=t("td",{style:{"text-align":"left"}},"单值二叉树",-1),Sb={style:{"text-align":"center"}},Db={style:{"text-align":"left"}},Mb=t("code",null,"树",-1),Zb=t("code",null,"深度优先搜索",-1),Ab=t("code",null,"广度优先搜索",-1),Fb=t("code",null,"1+",-1),Hb=t("td",{style:{"text-align":"center"}},"🟢",-1),Jb={style:{"text-align":"center"}},Xb={href:"https://leetcode.cn/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},$b={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},tx=t("td",{style:{"text-align":"center"}},"968",-1),ex=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),ox=t("td",{style:{"text-align":"center"}},null,-1),lx={style:{"text-align":"left"}},nx=t("code",null,"树",-1),sx=t("code",null,"深度优先搜索",-1),rx=t("code",null,"动态规划",-1),dx=t("code",null,"1+",-1),_x=t("td",{style:{"text-align":"center"}},"🔴",-1),cx={style:{"text-align":"center"}},ax={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},ix={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},"971",-1),fx=t("td",{style:{"text-align":"left"}},"翻转二叉树以匹配先序遍历",-1),gx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},mx=t("code",null,"树",-1),yx=t("code",null,"深度优先搜索",-1),px=t("code",null,"二叉树",-1),bx=t("td",{style:{"text-align":"center"}},"🟠",-1),xx={style:{"text-align":"center"}},kx={href:"https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},vx={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ix=t("td",{style:{"text-align":"center"}},"979",-1),wx=t("td",{style:{"text-align":"left"}},"在二叉树中分配硬币",-1),zx=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},jx=t("code",null,"树",-1),Ox=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"二叉树",-1),Cx=t("td",{style:{"text-align":"center"}},"🟠",-1),Nx={style:{"text-align":"center"}},Px={href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kx={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},"987",-1),Vx=t("td",{style:{"text-align":"left"}},"二叉树的垂序遍历",-1),Tx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Ex=t("code",null,"树",-1),Rx=t("code",null,"深度优先搜索",-1),Wx=t("code",null,"广度优先搜索",-1),Gx=t("code",null,"3+",-1),Yx=t("td",{style:{"text-align":"center"}},"🔴",-1),Qx={style:{"text-align":"center"}},Sx={href:"https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dx={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mx=t("td",{style:{"text-align":"center"}},"988",-1),Zx=t("td",{style:{"text-align":"left"}},"从叶结点开始的最小字符串",-1),Ax=t("td",{style:{"text-align":"center"}},null,-1),Fx={style:{"text-align":"left"}},Hx=t("code",null,"树",-1),Jx=t("code",null,"深度优先搜索",-1),Xx=t("code",null,"字符串",-1),$x=t("code",null,"2+",-1),t3=t("td",{style:{"text-align":"center"}},"🟠",-1),e3={style:{"text-align":"center"}},o3={href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},l3={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},"993",-1),s3=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点",-1),r3={style:{"text-align":"center"}},d3={style:{"text-align":"left"}},_3=t("code",null,"树",-1),c3=t("code",null,"深度优先搜索",-1),a3=t("code",null,"广度优先搜索",-1),i3=t("code",null,"1+",-1),h3=t("td",{style:{"text-align":"center"}},"🟢",-1),f3={style:{"text-align":"center"}},g3={href:"https://leetcode.cn/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},u3={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},m3=t("td",{style:{"text-align":"center"}},"998",-1),y3=t("td",{style:{"text-align":"left"}},"最大二叉树 II",-1),p3=t("td",{style:{"text-align":"center"}},null,-1),b3={style:{"text-align":"left"}},x3=t("code",null,"树",-1),k3=t("code",null,"二叉树",-1),v3=t("td",{style:{"text-align":"center"}},"🟠",-1),I3={style:{"text-align":"center"}},w3={href:"https://leetcode.cn/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},z3={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},"1008",-1),j3=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),O3={style:{"text-align":"center"}},L3={style:{"text-align":"left"}},C3=t("code",null,"栈",-1),N3=t("code",null,"树",-1),P3=t("code",null,"二叉搜索树",-1),K3=t("code",null,"3+",-1),B3=t("td",{style:{"text-align":"center"}},"🟠",-1),V3={style:{"text-align":"center"}},T3={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},U3={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},"1022",-1),R3=t("td",{style:{"text-align":"left"}},"从根到叶的二进制数之和",-1),W3={style:{"text-align":"center"}},G3={style:{"text-align":"left"}},Y3=t("code",null,"树",-1),Q3=t("code",null,"深度优先搜索",-1),S3=t("code",null,"二叉树",-1),D3=t("td",{style:{"text-align":"center"}},"🟢",-1),M3={style:{"text-align":"center"}},Z3={href:"https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},A3={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},F3=t("td",{style:{"text-align":"center"}},"1026",-1),H3=t("td",{style:{"text-align":"left"}},"节点与其祖先之间的最大差值",-1),J3=t("td",{style:{"text-align":"center"}},null,-1),X3={style:{"text-align":"left"}},$3=t("code",null,"树",-1),t4=t("code",null,"深度优先搜索",-1),e4=t("code",null,"二叉树",-1),o4=t("td",{style:{"text-align":"center"}},"🟠",-1),l4={style:{"text-align":"center"}},n4={href:"https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},s4={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},r4=t("td",{style:{"text-align":"center"}},"1028",-1),d4=t("td",{style:{"text-align":"left"}},"从先序遍历还原二叉树",-1),_4={style:{"text-align":"center"}},c4={style:{"text-align":"left"}},a4=t("code",null,"树",-1),i4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"字符串",-1),f4=t("code",null,"1+",-1),g4=t("td",{style:{"text-align":"center"}},"🔴",-1),u4={style:{"text-align":"center"}},m4={href:"https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},y4={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},"1038",-1),b4=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),x4=t("td",{style:{"text-align":"center"}},null,-1),k4={style:{"text-align":"left"}},v4=t("code",null,"树",-1),I4=t("code",null,"深度优先搜索",-1),w4=t("code",null,"二叉搜索树",-1),z4=t("code",null,"1+",-1),q4=t("td",{style:{"text-align":"center"}},"🟠",-1),j4={style:{"text-align":"center"}},O4={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},L4={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},C4=t("td",{style:{"text-align":"center"}},"1080",-1),N4=t("td",{style:{"text-align":"left"}},"根到叶路径上的不足节点",-1),P4=t("td",{style:{"text-align":"center"}},null,-1),K4={style:{"text-align":"left"}},B4=t("code",null,"树",-1),V4=t("code",null,"深度优先搜索",-1),T4=t("code",null,"二叉树",-1),U4=t("td",{style:{"text-align":"center"}},"🟠",-1),E4={style:{"text-align":"center"}},R4={href:"https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},W4={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},G4=t("td",{style:{"text-align":"center"}},"1104",-1),Y4=t("td",{style:{"text-align":"left"}},"二叉树寻路",-1),Q4=t("td",{style:{"text-align":"center"}},null,-1),S4={style:{"text-align":"left"}},D4=t("code",null,"树",-1),M4=t("code",null,"数学",-1),Z4=t("code",null,"二叉树",-1),A4=t("td",{style:{"text-align":"center"}},"🟠",-1),F4={style:{"text-align":"center"}},H4={href:"https://leetcode.cn/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},J4={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},X4=t("td",{style:{"text-align":"center"}},"1110",-1),$4=t("td",{style:{"text-align":"left"}},"删点成林",-1),t5=t("td",{style:{"text-align":"center"}},null,-1),e5={style:{"text-align":"left"}},o5=t("code",null,"树",-1),l5=t("code",null,"深度优先搜索",-1),n5=t("code",null,"数组",-1),s5=t("code",null,"2+",-1),r5=t("td",{style:{"text-align":"center"}},"🟠",-1),d5={style:{"text-align":"center"}},_5={href:"https://leetcode.cn/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},c5={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},a5=t("td",{style:{"text-align":"center"}},"1120",-1),i5=t("td",{style:{"text-align":"left"}},"子树的最大平均值 🔒",-1),h5=t("td",{style:{"text-align":"center"}},null,-1),f5={style:{"text-align":"left"}},g5=t("code",null,"树",-1),u5=t("code",null,"深度优先搜索",-1),m5=t("code",null,"二叉树",-1),y5=t("td",{style:{"text-align":"center"}},"🟠",-1),p5={style:{"text-align":"center"}},b5={href:"https://leetcode.cn/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},x5={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},"1123",-1),v5=t("td",{style:{"text-align":"left"}},"最深叶节点的最近公共祖先",-1),I5=t("td",{style:{"text-align":"center"}},null,-1),w5={style:{"text-align":"left"}},z5=t("code",null,"树",-1),q5=t("code",null,"深度优先搜索",-1),j5=t("code",null,"广度优先搜索",-1),O5=t("code",null,"2+",-1),L5=t("td",{style:{"text-align":"center"}},"🟠",-1),C5={style:{"text-align":"center"}},N5={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},P5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},"1145",-1),B5=t("td",{style:{"text-align":"left"}},"二叉树着色游戏",-1),V5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},U5=t("code",null,"树",-1),E5=t("code",null,"深度优先搜索",-1),R5=t("code",null,"二叉树",-1),W5=t("td",{style:{"text-align":"center"}},"🟠",-1),G5={style:{"text-align":"center"}},Y5={href:"https://leetcode.cn/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Q5={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},S5=t("td",{style:{"text-align":"center"}},"1161",-1),D5=t("td",{style:{"text-align":"left"}},"最大层内元素和",-1),M5={style:{"text-align":"center"}},Z5={style:{"text-align":"left"}},A5=t("code",null,"树",-1),F5=t("code",null,"深度优先搜索",-1),H5=t("code",null,"广度优先搜索",-1),J5=t("code",null,"1+",-1),X5=t("td",{style:{"text-align":"center"}},"🟠",-1),$5={style:{"text-align":"center"}},t0={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},e0={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},"1214",-1),l0=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),n0=t("td",{style:{"text-align":"center"}},null,-1),s0={style:{"text-align":"left"}},r0=t("code",null,"栈",-1),d0=t("code",null,"树",-1),_0=t("code",null,"深度优先搜索",-1),c0=t("code",null,"4+",-1),a0=t("td",{style:{"text-align":"center"}},"🟠",-1),i0={style:{"text-align":"center"}},h0={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},f0={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},g0=t("td",{style:{"text-align":"center"}},"1261",-1),u0=t("td",{style:{"text-align":"left"}},"在受污染的二叉树中查找元素",-1),m0={style:{"text-align":"center"}},y0={style:{"text-align":"left"}},p0=t("code",null,"树",-1),b0=t("code",null,"深度优先搜索",-1),x0=t("code",null,"广度优先搜索",-1),k0=t("code",null,"3+",-1),v0=t("td",{style:{"text-align":"center"}},"🟠",-1),I0={style:{"text-align":"center"}},w0={href:"https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},z0={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},q0=t("td",{style:{"text-align":"center"}},"1302",-1),j0=t("td",{style:{"text-align":"left"}},"层数最深叶子节点的和",-1),O0=t("td",{style:{"text-align":"center"}},null,-1),L0={style:{"text-align":"left"}},C0=t("code",null,"树",-1),N0=t("code",null,"深度优先搜索",-1),P0=t("code",null,"广度优先搜索",-1),K0=t("code",null,"1+",-1),B0=t("td",{style:{"text-align":"center"}},"🟠",-1),V0={style:{"text-align":"center"}},T0={href:"https://leetcode.cn/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},U0={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},"1305",-1),R0=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),W0=t("td",{style:{"text-align":"center"}},null,-1),G0={style:{"text-align":"left"}},Y0=t("code",null,"树",-1),Q0=t("code",null,"深度优先搜索",-1),S0=t("code",null,"二叉搜索树",-1),D0=t("code",null,"2+",-1),M0=t("td",{style:{"text-align":"center"}},"🟠",-1),Z0={style:{"text-align":"center"}},A0={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},F0={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},H0=t("td",{style:{"text-align":"center"}},"1315",-1),J0=t("td",{style:{"text-align":"left"}},"祖父节点值为偶数的节点和",-1),X0=t("td",{style:{"text-align":"center"}},null,-1),$0={style:{"text-align":"left"}},t6=t("code",null,"树",-1),e6=t("code",null,"深度优先搜索",-1),o6=t("code",null,"广度优先搜索",-1),l6=t("code",null,"1+",-1),n6=t("td",{style:{"text-align":"center"}},"🟠",-1),s6={style:{"text-align":"center"}},r6={href:"https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},d6={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},"1325",-1),c6=t("td",{style:{"text-align":"left"}},"删除给定值的叶子节点",-1),a6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},h6=t("code",null,"树",-1),f6=t("code",null,"深度优先搜索",-1),g6=t("code",null,"二叉树",-1),u6=t("td",{style:{"text-align":"center"}},"🟠",-1),m6={style:{"text-align":"center"}},y6={href:"https://leetcode.cn/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},p6={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},"1339",-1),x6=t("td",{style:{"text-align":"left"}},"分裂二叉树的最大乘积",-1),k6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},I6=t("code",null,"树",-1),w6=t("code",null,"深度优先搜索",-1),z6=t("code",null,"二叉树",-1),q6=t("td",{style:{"text-align":"center"}},"🟠",-1),j6={style:{"text-align":"center"}},O6={href:"https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},L6={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},"1361",-1),N6=t("td",{style:{"text-align":"left"}},"验证二叉树",-1),P6=t("td",{style:{"text-align":"center"}},null,-1),K6={style:{"text-align":"left"}},B6=t("code",null,"树",-1),V6=t("code",null,"深度优先搜索",-1),T6=t("code",null,"广度优先搜索",-1),U6=t("code",null,"3+",-1),E6=t("td",{style:{"text-align":"center"}},"🟠",-1),R6={style:{"text-align":"center"}},W6={href:"https://leetcode.cn/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},G6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Y6=t("td",{style:{"text-align":"center"}},"1367",-1),Q6=t("td",{style:{"text-align":"left"}},"二叉树中的链表",-1),S6=t("td",{style:{"text-align":"center"}},null,-1),D6={style:{"text-align":"left"}},M6=t("code",null,"树",-1),Z6=t("code",null,"深度优先搜索",-1),A6=t("code",null,"链表",-1),F6=t("code",null,"1+",-1),H6=t("td",{style:{"text-align":"center"}},"🟠",-1),J6={style:{"text-align":"center"}},X6={href:"https://leetcode.cn/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$6={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},"1372",-1),e9=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),o9={style:{"text-align":"center"}},l9={style:{"text-align":"left"}},n9=t("code",null,"树",-1),s9=t("code",null,"深度优先搜索",-1),r9=t("code",null,"动态规划",-1),d9=t("code",null,"1+",-1),_9=t("td",{style:{"text-align":"center"}},"🟠",-1),c9={style:{"text-align":"center"}},a9={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i9={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},"1373",-1),f9=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),g9=t("td",{style:{"text-align":"center"}},null,-1),u9={style:{"text-align":"left"}},m9=t("code",null,"树",-1),y9=t("code",null,"深度优先搜索",-1),p9=t("code",null,"二叉搜索树",-1),b9=t("code",null,"2+",-1),x9=t("td",{style:{"text-align":"center"}},"🔴",-1),k9={style:{"text-align":"center"}},v9={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},I9={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},w9=t("td",{style:{"text-align":"center"}},"1379",-1),z9=t("td",{style:{"text-align":"left"}},"找出克隆二叉树中的相同节点",-1),q9={style:{"text-align":"center"}},j9={style:{"text-align":"left"}},O9=t("code",null,"树",-1),L9=t("code",null,"深度优先搜索",-1),C9=t("code",null,"广度优先搜索",-1),N9=t("code",null,"1+",-1),P9=t("td",{style:{"text-align":"center"}},"🟢",-1),K9={style:{"text-align":"center"}},B9={href:"https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},V9={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},T9=t("td",{style:{"text-align":"center"}},"1382",-1),U9=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),E9=t("td",{style:{"text-align":"center"}},null,-1),R9={style:{"text-align":"left"}},W9=t("code",null,"贪心",-1),G9=t("code",null,"树",-1),Y9=t("code",null,"深度优先搜索",-1),Q9=t("code",null,"3+",-1),S9=t("td",{style:{"text-align":"center"}},"🟠",-1),D9={style:{"text-align":"center"}},M9={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Z9={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},"1430",-1),F9=t("td",{style:{"text-align":"left"}},"判断给定的序列是否是二叉树从根到叶的路径 🔒",-1),H9=t("td",{style:{"text-align":"center"}},null,-1),J9={style:{"text-align":"left"}},X9=t("code",null,"树",-1),$9=t("code",null,"深度优先搜索",-1),t7=t("code",null,"广度优先搜索",-1),e7=t("code",null,"1+",-1),o7=t("td",{style:{"text-align":"center"}},"🟠",-1),l7={style:{"text-align":"center"}},n7={href:"https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s7={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},r7=t("td",{style:{"text-align":"center"}},"1448",-1),d7=t("td",{style:{"text-align":"left"}},"统计二叉树中好节点的数目",-1),_7={style:{"text-align":"center"}},c7={style:{"text-align":"left"}},a7=t("code",null,"树",-1),i7=t("code",null,"深度优先搜索",-1),h7=t("code",null,"广度优先搜索",-1),f7=t("code",null,"1+",-1),g7=t("td",{style:{"text-align":"center"}},"🟠",-1),u7={style:{"text-align":"center"}},m7={href:"https://leetcode.cn/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},y7={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},p7=t("td",{style:{"text-align":"center"}},"1457",-1),b7=t("td",{style:{"text-align":"left"}},"二叉树中的伪回文路径",-1),x7=t("td",{style:{"text-align":"center"}},null,-1),k7={style:{"text-align":"left"}},v7=t("code",null,"位运算",-1),I7=t("code",null,"树",-1),w7=t("code",null,"深度优先搜索",-1),z7=t("code",null,"2+",-1),q7=t("td",{style:{"text-align":"center"}},"🟠",-1),j7={style:{"text-align":"center"}},O7={href:"https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},L7={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},"1469",-1),N7=t("td",{style:{"text-align":"left"}},"寻找所有的独生节点 🔒",-1),P7=t("td",{style:{"text-align":"center"}},null,-1),K7={style:{"text-align":"left"}},B7=t("code",null,"树",-1),V7=t("code",null,"深度优先搜索",-1),T7=t("code",null,"广度优先搜索",-1),U7=t("code",null,"1+",-1),E7=t("td",{style:{"text-align":"center"}},"🟢",-1),R7={style:{"text-align":"center"}},W7={href:"https://leetcode.cn/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},G7={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},"1485",-1),Q7=t("td",{style:{"text-align":"left"}},"克隆含随机指针的二叉树 🔒",-1),S7=t("td",{style:{"text-align":"center"}},null,-1),D7={style:{"text-align":"left"}},M7=t("code",null,"树",-1),Z7=t("code",null,"深度优先搜索",-1),A7=t("code",null,"广度优先搜索",-1),F7=t("code",null,"2+",-1),H7=t("td",{style:{"text-align":"center"}},"🟠",-1),J7={style:{"text-align":"center"}},X7={href:"https://leetcode.cn/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},$7={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},"1530",-1),e8=t("td",{style:{"text-align":"left"}},"好叶子节点对的数量",-1),o8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},n8=t("code",null,"树",-1),s8=t("code",null,"深度优先搜索",-1),r8=t("code",null,"二叉树",-1),d8=t("td",{style:{"text-align":"center"}},"🟠",-1),_8={style:{"text-align":"center"}},c8={href:"https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},a8={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},"1569",-1),h8=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},u8=t("code",null,"树",-1),m8=t("code",null,"并查集",-1),y8=t("code",null,"二叉搜索树",-1),p8=t("code",null,"7+",-1),b8=t("td",{style:{"text-align":"center"}},"🔴",-1),x8={style:{"text-align":"center"}},k8={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},v8={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},"1586",-1),w8=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器 II 🔒",-1),z8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},j8=t("code",null,"栈",-1),O8=t("code",null,"树",-1),L8=t("code",null,"设计",-1),C8=t("code",null,"3+",-1),N8=t("td",{style:{"text-align":"center"}},"🟠",-1),P8={style:{"text-align":"center"}},K8={href:"https://leetcode.cn/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},B8={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},V8=t("td",{style:{"text-align":"center"}},"1597",-1),T8=t("td",{style:{"text-align":"left"}},"根据中缀表达式构造二叉表达式树 🔒",-1),U8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},R8=t("code",null,"栈",-1),W8=t("code",null,"树",-1),G8=t("code",null,"字符串",-1),Y8=t("code",null,"1+",-1),Q8=t("td",{style:{"text-align":"center"}},"🔴",-1),S8={style:{"text-align":"center"}},D8={href:"https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},M8={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Z8=t("td",{style:{"text-align":"center"}},"1602",-1),A8=t("td",{style:{"text-align":"left"}},"找到二叉树中最近的右侧节点 🔒",-1),F8=t("td",{style:{"text-align":"center"}},null,-1),H8={style:{"text-align":"left"}},J8=t("code",null,"树",-1),X8=t("code",null,"广度优先搜索",-1),$8=t("code",null,"二叉树",-1),tk=t("td",{style:{"text-align":"center"}},"🟠",-1),ek={style:{"text-align":"center"}},ok={href:"https://leetcode.cn/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},lk={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},nk=t("td",{style:{"text-align":"center"}},"1609",-1),sk=t("td",{style:{"text-align":"left"}},"奇偶树",-1),rk=t("td",{style:{"text-align":"center"}},null,-1),dk={style:{"text-align":"left"}},_k=t("code",null,"树",-1),ck=t("code",null,"广度优先搜索",-1),ak=t("code",null,"二叉树",-1),ik=t("td",{style:{"text-align":"center"}},"🟠",-1),hk={style:{"text-align":"center"}},fk={href:"https://leetcode.cn/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},gk={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},"1612",-1),mk=t("td",{style:{"text-align":"left"}},"检查两棵二叉表达式树是否等价 🔒",-1),yk=t("td",{style:{"text-align":"center"}},null,-1),pk={style:{"text-align":"left"}},bk=t("code",null,"树",-1),xk=t("code",null,"深度优先搜索",-1),kk=t("code",null,"哈希表",-1),vk=t("code",null,"2+",-1),Ik=t("td",{style:{"text-align":"center"}},"🟠",-1),wk={style:{"text-align":"center"}},zk={href:"https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},qk={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},jk=t("td",{style:{"text-align":"center"}},"1628",-1),Ok=t("td",{style:{"text-align":"left"}},"设计带解析函数的表达式树 🔒",-1),Lk=t("td",{style:{"text-align":"center"}},null,-1),Ck={style:{"text-align":"left"}},Nk=t("code",null,"栈",-1),Pk=t("code",null,"树",-1),Kk=t("code",null,"设计",-1),Bk=t("code",null,"3+",-1),Vk=t("td",{style:{"text-align":"center"}},"🟠",-1),Tk={style:{"text-align":"center"}},Uk={href:"https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},Ek={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},Rk=t("td",{style:{"text-align":"center"}},"1644",-1),Wk=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 II 🔒",-1),Gk=t("td",{style:{"text-align":"center"}},null,-1),Yk={style:{"text-align":"left"}},Qk=t("code",null,"树",-1),Sk=t("code",null,"深度优先搜索",-1),Dk=t("code",null,"二叉树",-1),Mk=t("td",{style:{"text-align":"center"}},"🟠",-1),Zk={style:{"text-align":"center"}},Ak={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Fk={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Hk=t("td",{style:{"text-align":"center"}},"1650",-1),Jk=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 III 🔒",-1),Xk=t("td",{style:{"text-align":"center"}},null,-1),$k={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"哈希表",-1),ov=t("code",null,"双指针",-1),lv=t("code",null,"1+",-1),nv=t("td",{style:{"text-align":"center"}},"🟠",-1),sv={style:{"text-align":"center"}},rv={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},dv={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},"1660",-1),cv=t("td",{style:{"text-align":"left"}},"纠正二叉树 🔒",-1),av=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},hv=t("code",null,"树",-1),fv=t("code",null,"深度优先搜索",-1),gv=t("code",null,"广度优先搜索",-1),uv=t("code",null,"2+",-1),mv=t("td",{style:{"text-align":"center"}},"🟠",-1),yv={style:{"text-align":"center"}},pv={href:"https://leetcode.cn/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},bv={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},"1666",-1),kv=t("td",{style:{"text-align":"left"}},"改变二叉树的根节点 🔒",-1),vv=t("td",{style:{"text-align":"center"}},null,-1),Iv={style:{"text-align":"left"}},wv=t("code",null,"树",-1),zv=t("code",null,"深度优先搜索",-1),qv=t("code",null,"二叉树",-1),jv=t("td",{style:{"text-align":"center"}},"🟠",-1),Ov={style:{"text-align":"center"}},Lv={href:"https://leetcode.cn/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cv={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nv=t("td",{style:{"text-align":"center"}},"1676",-1),Pv=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 IV 🔒",-1),Kv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Vv=t("code",null,"树",-1),Tv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"哈希表",-1),Ev=t("code",null,"1+",-1),Rv=t("td",{style:{"text-align":"center"}},"🟠",-1),Wv={style:{"text-align":"center"}},Gv={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},Yv={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},"1740",-1),Sv=t("td",{style:{"text-align":"left"}},"找到二叉树中的距离 🔒",-1),Dv=t("td",{style:{"text-align":"center"}},null,-1),Mv={style:{"text-align":"left"}},Zv=t("code",null,"树",-1),Av=t("code",null,"深度优先搜索",-1),Fv=t("code",null,"广度优先搜索",-1),Hv=t("code",null,"2+",-1),Jv=t("td",{style:{"text-align":"center"}},"🟠",-1),Xv={style:{"text-align":"center"}},$v={href:"https://leetcode.cn/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},tI={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},eI=t("td",{style:{"text-align":"center"}},"1902",-1),oI=t("td",{style:{"text-align":"left"}},"给定二叉搜索树的插入顺序求深度 🔒",-1),lI=t("td",{style:{"text-align":"center"}},null,-1),nI={style:{"text-align":"left"}},sI=t("code",null,"树",-1),rI=t("code",null,"二叉搜索树",-1),dI=t("code",null,"数组",-1),_I=t("code",null,"2+",-1),cI=t("td",{style:{"text-align":"center"}},"🟠",-1),aI={style:{"text-align":"center"}},iI={href:"https://leetcode.cn/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},hI={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},fI=t("td",{style:{"text-align":"center"}},"1932",-1),gI=t("td",{style:{"text-align":"left"}},"合并多棵二叉搜索树",-1),uI=t("td",{style:{"text-align":"center"}},null,-1),mI={style:{"text-align":"left"}},yI=t("code",null,"树",-1),pI=t("code",null,"深度优先搜索",-1),bI=t("code",null,"哈希表",-1),xI=t("code",null,"2+",-1),kI=t("td",{style:{"text-align":"center"}},"🔴",-1),vI={style:{"text-align":"center"}},II={href:"https://leetcode.cn/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},wI={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},zI=t("td",{style:{"text-align":"center"}},"1973",-1),qI=t("td",{style:{"text-align":"left"}},"值等于子节点值之和的节点数量 🔒",-1),jI=t("td",{style:{"text-align":"center"}},null,-1),OI={style:{"text-align":"left"}},LI=t("code",null,"树",-1),CI=t("code",null,"深度优先搜索",-1),NI=t("code",null,"二叉树",-1),PI=t("td",{style:{"text-align":"center"}},"🟠",-1),KI={style:{"text-align":"center"}},BI={href:"https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},VI={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},TI=t("td",{style:{"text-align":"center"}},"2005",-1),UI=t("td",{style:{"text-align":"left"}},"斐波那契树的移除子树游戏 🔒",-1),EI=t("td",{style:{"text-align":"center"}},null,-1),RI={style:{"text-align":"left"}},WI=t("code",null,"树",-1),GI=t("code",null,"数学",-1),YI=t("code",null,"动态规划",-1),QI=t("code",null,"2+",-1),SI=t("td",{style:{"text-align":"center"}},"🔴",-1),DI={style:{"text-align":"center"}},MI={href:"https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},ZI={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},AI=t("td",{style:{"text-align":"center"}},"2049",-1),FI=t("td",{style:{"text-align":"left"}},"统计最高分的节点数目",-1),HI=t("td",{style:{"text-align":"center"}},null,-1),JI={style:{"text-align":"left"}},XI=t("code",null,"树",-1),$I=t("code",null,"深度优先搜索",-1),tw=t("code",null,"数组",-1),ew=t("code",null,"1+",-1),ow=t("td",{style:{"text-align":"center"}},"🟠",-1),lw={style:{"text-align":"center"}},nw={href:"https://leetcode.cn/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},sw={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},rw=t("td",{style:{"text-align":"center"}},"2096",-1),dw=t("td",{style:{"text-align":"left"}},"从二叉树一个节点到另一个节点每一步的方向",-1),_w=t("td",{style:{"text-align":"center"}},null,-1),cw={style:{"text-align":"left"}},aw=t("code",null,"树",-1),iw=t("code",null,"深度优先搜索",-1),hw=t("code",null,"字符串",-1),fw=t("code",null,"1+",-1),gw=t("td",{style:{"text-align":"center"}},"🟠",-1),uw={style:{"text-align":"center"}},mw={href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},yw={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},pw=t("td",{style:{"text-align":"center"}},"2196",-1),bw=t("td",{style:{"text-align":"left"}},"根据描述创建二叉树",-1),xw={style:{"text-align":"center"}},kw={style:{"text-align":"left"}},vw=t("code",null,"树",-1),Iw=t("code",null,"数组",-1),ww=t("code",null,"哈希表",-1),zw=t("code",null,"1+",-1),qw=t("td",{style:{"text-align":"center"}},"🟠",-1),jw={style:{"text-align":"center"}},Ow={href:"https://leetcode.cn/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},Lw={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},Cw=t("td",{style:{"text-align":"center"}},"2236",-1),Nw=t("td",{style:{"text-align":"left"}},"判断根结点是否等于子结点之和",-1),Pw={style:{"text-align":"center"}},Kw={style:{"text-align":"left"}},Bw=t("code",null,"树",-1),Vw=t("code",null,"二叉树",-1),Tw=t("td",{style:{"text-align":"center"}},"🟢",-1),Uw={style:{"text-align":"center"}},Ew={href:"https://leetcode.cn/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Rw={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},"2265",-1),Gw=t("td",{style:{"text-align":"left"}},"统计值等于子树平均值的节点数",-1),Yw=t("td",{style:{"text-align":"center"}},null,-1),Qw={style:{"text-align":"left"}},Sw=t("code",null,"树",-1),Dw=t("code",null,"深度优先搜索",-1),Mw=t("code",null,"二叉树",-1),Zw=t("td",{style:{"text-align":"center"}},"🟠",-1),Aw={style:{"text-align":"center"}},Fw={href:"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},Hw={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},Jw=t("td",{style:{"text-align":"center"}},"2313",-1),Xw=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),$w=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"树",-1),oz=t("code",null,"深度优先搜索",-1),lz=t("code",null,"动态规划",-1),nz=t("code",null,"1+",-1),sz=t("td",{style:{"text-align":"center"}},"🔴",-1),rz={style:{"text-align":"center"}},dz={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},_z={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},cz=t("td",{style:{"text-align":"center"}},"2331",-1),az=t("td",{style:{"text-align":"left"}},"计算布尔二叉树的值",-1),iz={style:{"text-align":"center"}},hz={style:{"text-align":"left"}},fz=t("code",null,"树",-1),gz=t("code",null,"深度优先搜索",-1),uz=t("code",null,"二叉树",-1),mz=t("td",{style:{"text-align":"center"}},"🟢",-1),yz={style:{"text-align":"center"}},pz={href:"https://leetcode.cn/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},bz={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},"2385",-1),kz=t("td",{style:{"text-align":"left"}},"感染二叉树需要的总时间",-1),vz=t("td",{style:{"text-align":"center"}},null,-1),Iz={style:{"text-align":"left"}},wz=t("code",null,"树",-1),zz=t("code",null,"深度优先搜索",-1),qz=t("code",null,"广度优先搜索",-1),jz=t("code",null,"2+",-1),Oz=t("td",{style:{"text-align":"center"}},"🟠",-1),Lz={style:{"text-align":"center"}},Cz={href:"https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},Nz={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},Pz=t("td",{style:{"text-align":"center"}},"2415",-1),Kz=t("td",{style:{"text-align":"left"}},"反转二叉树的奇数层",-1),Bz={style:{"text-align":"center"}},Vz={style:{"text-align":"left"}},Tz=t("code",null,"树",-1),Uz=t("code",null,"深度优先搜索",-1),Ez=t("code",null,"广度优先搜索",-1),Rz=t("code",null,"1+",-1),Wz=t("td",{style:{"text-align":"center"}},"🟠",-1),Gz={style:{"text-align":"center"}},Yz={href:"https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qz={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Sz=t("td",{style:{"text-align":"center"}},"2445",-1),Dz=t("td",{style:{"text-align":"left"}},"值为 1 的节点数 🔒",-1),Mz=t("td",{style:{"text-align":"center"}},null,-1),Zz={style:{"text-align":"left"}},Az=t("code",null,"树",-1),Fz=t("code",null,"深度优先搜索",-1),Hz=t("code",null,"广度优先搜索",-1),Jz=t("code",null,"1+",-1),Xz=t("td",{style:{"text-align":"center"}},"🟠",-1),$z={style:{"text-align":"center"}},tq={href:"https://leetcode.cn/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},eq={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},"2458",-1),lq=t("td",{style:{"text-align":"left"}},"移除子树后的二叉树高度",-1),nq={style:{"text-align":"center"}},sq={style:{"text-align":"left"}},rq=t("code",null,"树",-1),dq=t("code",null,"深度优先搜索",-1),_q=t("code",null,"广度优先搜索",-1),cq=t("code",null,"2+",-1),aq=t("td",{style:{"text-align":"center"}},"🔴",-1),iq={style:{"text-align":"center"}},hq={href:"https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},fq={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},gq=t("td",{style:{"text-align":"center"}},"2471",-1),uq=t("td",{style:{"text-align":"left"}},"逐层排序二叉树所需的最少操作数目",-1),mq={style:{"text-align":"center"}},yq={style:{"text-align":"left"}},pq=t("code",null,"树",-1),bq=t("code",null,"广度优先搜索",-1),xq=t("code",null,"二叉树",-1),kq=t("td",{style:{"text-align":"center"}},"🟠",-1),vq={style:{"text-align":"center"}},Iq={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},wq={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},zq=t("td",{style:{"text-align":"center"}},"2476",-1),qq=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),jq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},Lq=t("code",null,"树",-1),Cq=t("code",null,"深度优先搜索",-1),Nq=t("code",null,"二叉搜索树",-1),Pq=t("code",null,"3+",-1),Kq=t("td",{style:{"text-align":"center"}},"🟠",-1),Bq={style:{"text-align":"center"}},Vq={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Tq={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Uq=t("td",{style:{"text-align":"center"}},"2509",-1),Eq=t("td",{style:{"text-align":"left"}},"查询树中环的长度",-1),Rq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Gq=t("code",null,"树",-1),Yq=t("code",null,"数组",-1),Qq=t("code",null,"二叉树",-1),Sq=t("td",{style:{"text-align":"center"}},"🔴",-1),Dq={style:{"text-align":"center"}},Mq={href:"https://leetcode.cn/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Zq={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},"2583",-1),Fq=t("td",{style:{"text-align":"left"}},"二叉树中的第 K 大层和",-1),Hq={style:{"text-align":"center"}},Jq={style:{"text-align":"left"}},Xq=t("code",null,"树",-1),$q=t("code",null,"广度优先搜索",-1),tj=t("code",null,"二叉树",-1),ej=t("code",null,"1+",-1),oj=t("td",{style:{"text-align":"center"}},"🟠",-1),lj={style:{"text-align":"center"}},nj={href:"https://leetcode.cn/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sj={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},rj=t("td",{style:{"text-align":"center"}},"2641",-1),dj=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点 II",-1),_j={style:{"text-align":"center"}},cj={style:{"text-align":"left"}},aj=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),hj=t("code",null,"广度优先搜索",-1),fj=t("code",null,"2+",-1),gj=t("td",{style:{"text-align":"center"}},"🟠",-1),uj={style:{"text-align":"center"}},mj={href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},yj={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},pj=t("td",{style:{"text-align":"center"}},"2673",-1),bj=t("td",{style:{"text-align":"left"}},"使二叉树所有路径值相等的最小代价",-1),xj=t("td",{style:{"text-align":"center"}},null,-1),kj={style:{"text-align":"left"}},vj=t("code",null,"贪心",-1),Ij=t("code",null,"树",-1),wj=t("code",null,"数组",-1),zj=t("code",null,"2+",-1),qj=t("td",{style:{"text-align":"center"}},"🟠",-1),jj={style:{"text-align":"center"}},Oj={href:"https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lj={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cj=t("td",{style:{"text-align":"center"}},"2689",-1),Nj=t("td",{style:{"text-align":"left"}},"从 Rope 树中提取第 K 个字符 🔒",-1),Pj=t("td",{style:{"text-align":"center"}},null,-1),Kj={style:{"text-align":"left"}},Bj=t("code",null,"树",-1),Vj=t("code",null,"深度优先搜索",-1),Tj=t("code",null,"二叉树",-1),Uj=t("td",{style:{"text-align":"center"}},"🟢",-1),Ej={style:{"text-align":"center"}},Rj={href:"https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},Wj={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},Gj=t("td",{style:{"text-align":"center"}},"2764",-1),Yj=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),Qj=t("td",{style:{"text-align":"center"}},null,-1),Sj={style:{"text-align":"left"}},Dj=t("code",null,"栈",-1),Mj=t("code",null,"树",-1),Zj=t("code",null,"深度优先搜索",-1),Aj=t("code",null,"1+",-1),Fj=t("td",{style:{"text-align":"center"}},"🟠",-1),Hj={style:{"text-align":"center"}},Jj={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xj={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},$j=t("td",{style:{"text-align":"center"}},"2773",-1),tO=t("td",{style:{"text-align":"left"}},"特殊二叉树的高度 🔒",-1),eO=t("td",{style:{"text-align":"center"}},null,-1),oO={style:{"text-align":"left"}},lO=t("code",null,"树",-1),nO=t("code",null,"深度优先搜索",-1),sO=t("code",null,"广度优先搜索",-1),rO=t("code",null,"1+",-1),dO=t("td",{style:{"text-align":"center"}},"🟠",-1),_O={style:{"text-align":"center"}},cO={href:"https://leetcode.cn/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},aO={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},iO=t("td",{style:{"text-align":"center"}},"2792",-1),hO=t("td",{style:{"text-align":"left"}},"计算足够大的节点数 🔒",-1),fO=t("td",{style:{"text-align":"center"}},null,-1),gO={style:{"text-align":"left"}},uO=t("code",null,"树",-1),mO=t("code",null,"深度优先搜索",-1),yO=t("code",null,"分治",-1),pO=t("code",null,"1+",-1),bO=t("td",{style:{"text-align":"center"}},"🔴",-1),xO={style:{"text-align":"center"}},kO={href:"https://leetcode.cn/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},vO={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},IO=t("td",{style:{"text-align":"center"}},"3157",-1),wO=t("td",{style:{"text-align":"left"}},"找到具有最小和的树的层数 🔒",-1),zO=t("td",{style:{"text-align":"center"}},null,-1),qO={style:{"text-align":"left"}},jO=t("code",null,"树",-1),OO=t("code",null,"深度优先搜索",-1),LO=t("code",null,"广度优先搜索",-1),CO=t("code",null,"1+",-1),NO=t("td",{style:{"text-align":"center"}},"🟠",-1),PO={style:{"text-align":"center"}},KO={href:"https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},BO={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},VO=t("td",{style:{"text-align":"center"}},"3319",-1),TO=t("td",{style:{"text-align":"left"}},"第 K 大的完美二叉子树的大小",-1),UO={style:{"text-align":"center"}},EO={style:{"text-align":"left"}},RO=t("code",null,"树",-1),WO=t("code",null,"深度优先搜索",-1),GO=t("code",null,"二叉树",-1),YO=t("code",null,"1+",-1),QO=t("td",{style:{"text-align":"center"}},"🟠",-1),SO={style:{"text-align":"center"}},DO={href:"https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},MO={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZO=t("td",{style:{"text-align":"center"}},"LCP 10",-1),AO=t("td",{style:{"text-align":"left"}},"二叉树任务调度",-1),FO=t("td",{style:{"text-align":"center"}},null,-1),HO={style:{"text-align":"left"}},JO=t("code",null,"树",-1),XO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"动态规划",-1),tL=t("code",null,"1+",-1),eL=t("td",{style:{"text-align":"center"}},"🔴",-1),oL={style:{"text-align":"center"}},lL={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},nL=t("td",{style:{"text-align":"center"}},"LCP 26",-1),sL=t("td",{style:{"text-align":"left"}},"导航装置",-1),rL=t("td",{style:{"text-align":"center"}},null,-1),dL={style:{"text-align":"left"}},_L=t("code",null,"树",-1),cL=t("code",null,"动态规划",-1),aL=t("code",null,"二叉树",-1),iL=t("td",{style:{"text-align":"center"}},"🔴",-1),hL={style:{"text-align":"center"}},fL={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},gL=t("td",{style:{"text-align":"center"}},"LCP 34",-1),uL=t("td",{style:{"text-align":"left"}},"二叉树染色",-1),mL=t("td",{style:{"text-align":"center"}},null,-1),yL={style:{"text-align":"left"}},pL=t("code",null,"树",-1),bL=t("code",null,"动态规划",-1),xL=t("code",null,"二叉树",-1),kL=t("td",{style:{"text-align":"center"}},"🟠",-1),vL={style:{"text-align":"center"}},IL={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},wL=t("td",{style:{"text-align":"center"}},"LCP 44",-1),zL=t("td",{style:{"text-align":"left"}},"开幕式焰火",-1),qL=t("td",{style:{"text-align":"center"}},null,-1),jL={style:{"text-align":"left"}},OL=t("code",null,"树",-1),LL=t("code",null,"深度优先搜索",-1),CL=t("code",null,"广度优先搜索",-1),NL=t("code",null,"2+",-1),PL=t("td",{style:{"text-align":"center"}},"🟢",-1),KL={style:{"text-align":"center"}},BL={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},VL=t("td",{style:{"text-align":"center"}},"LCP 52",-1),TL=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),UL=t("td",{style:{"text-align":"center"}},null,-1),EL={style:{"text-align":"left"}},RL=t("code",null,"树",-1),WL=t("code",null,"线段树",-1),GL=t("code",null,"二叉搜索树",-1),YL=t("code",null,"4+",-1),QL=t("td",{style:{"text-align":"center"}},"🟠",-1),SL={style:{"text-align":"center"}},DL={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},ML=t("td",{style:{"text-align":"center"}},"LCP 60",-1),ZL=t("td",{style:{"text-align":"left"}},"力扣泡泡龙",-1),AL=t("td",{style:{"text-align":"center"}},null,-1),FL={style:{"text-align":"left"}},HL=t("code",null,"树",-1),JL=t("code",null,"动态规划",-1),XL=t("code",null,"二叉树",-1),$L=t("td",{style:{"text-align":"center"}},"🔴",-1),tC={style:{"text-align":"center"}},eC={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},oC=t("td",{style:{"text-align":"center"}},"LCP 64",-1),lC=t("td",{style:{"text-align":"left"}},"二叉树灯饰",-1),nC=t("td",{style:{"text-align":"center"}},null,-1),sC={style:{"text-align":"left"}},rC=t("code",null,"树",-1),dC=t("code",null,"深度优先搜索",-1),_C=t("code",null,"动态规划",-1),cC=t("code",null,"1+",-1),aC=t("td",{style:{"text-align":"center"}},"🟠",-1),iC={style:{"text-align":"center"}},hC={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},fC=t("td",{style:{"text-align":"center"}},"LCP 67",-1),gC=t("td",{style:{"text-align":"left"}},"装饰树",-1),uC=t("td",{style:{"text-align":"center"}},null,-1),mC={style:{"text-align":"left"}},yC=t("code",null,"树",-1),pC=t("code",null,"深度优先搜索",-1),bC=t("code",null,"广度优先搜索",-1),xC=t("code",null,"1+",-1),kC=t("td",{style:{"text-align":"center"}},"🟠",-1),vC={style:{"text-align":"center"}},IC={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},wC=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),zC=t("td",{style:{"text-align":"left"}},"树的子结构",-1),qC={style:{"text-align":"center"}},jC={style:{"text-align":"left"}},OC=t("code",null,"树",-1),LC=t("code",null,"深度优先搜索",-1),CC=t("code",null,"二叉树",-1),NC=t("td",{style:{"text-align":"center"}},"🟠",-1),PC={style:{"text-align":"center"}},KC={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},BC=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),VC=t("td",{style:{"text-align":"left"}},"二叉树的镜像",-1),TC={style:{"text-align":"center"}},UC={style:{"text-align":"left"}},EC=t("code",null,"树",-1),RC=t("code",null,"深度优先搜索",-1),WC=t("code",null,"广度优先搜索",-1),GC=t("code",null,"1+",-1),YC=t("td",{style:{"text-align":"center"}},"🟢",-1),QC={style:{"text-align":"center"}},SC={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},DC=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),MC=t("td",{style:{"text-align":"left"}},"对称的二叉树",-1),ZC={style:{"text-align":"center"}},AC={style:{"text-align":"left"}},FC=t("code",null,"树",-1),HC=t("code",null,"深度优先搜索",-1),JC=t("code",null,"广度优先搜索",-1),XC=t("code",null,"1+",-1),$C=t("td",{style:{"text-align":"center"}},"🟢",-1),tN={style:{"text-align":"center"}},eN={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},oN=t("td",{style:{"text-align":"center"}},"剑指 Offer 32",-1),lN=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树",-1),nN={style:{"text-align":"center"}},sN={style:{"text-align":"left"}},rN=t("code",null,"树",-1),dN=t("code",null,"广度优先搜索",-1),_N=t("code",null,"二叉树",-1),cN=t("td",{style:{"text-align":"center"}},"🟠",-1),aN={style:{"text-align":"center"}},iN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},hN=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-II",-1),fN=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 II",-1),gN={style:{"text-align":"center"}},uN={style:{"text-align":"left"}},mN=t("code",null,"树",-1),yN=t("code",null,"广度优先搜索",-1),pN=t("code",null,"二叉树",-1),bN=t("td",{style:{"text-align":"center"}},"🟢",-1),xN={style:{"text-align":"center"}},kN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},vN=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-III",-1),IN=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 III",-1),wN={style:{"text-align":"center"}},zN={style:{"text-align":"left"}},qN=t("code",null,"树",-1),jN=t("code",null,"广度优先搜索",-1),ON=t("code",null,"二叉树",-1),LN=t("td",{style:{"text-align":"center"}},"🟠",-1),CN={style:{"text-align":"center"}},NN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},PN=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),KN=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),BN={style:{"text-align":"center"}},VN={style:{"text-align":"left"}},TN=t("code",null,"栈",-1),UN=t("code",null,"树",-1),EN=t("code",null,"二叉搜索树",-1),RN=t("code",null,"4+",-1),WN=t("td",{style:{"text-align":"center"}},"🟠",-1),GN={style:{"text-align":"center"}},YN={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},QN=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),SN=t("td",{style:{"text-align":"left"}},"二叉树中和为某一值的路径",-1),DN={style:{"text-align":"center"}},MN={style:{"text-align":"left"}},ZN=t("code",null,"树",-1),AN=t("code",null,"深度优先搜索",-1),FN=t("code",null,"回溯",-1),HN=t("code",null,"1+",-1),JN=t("td",{style:{"text-align":"center"}},"🟠",-1),XN={style:{"text-align":"center"}},$N={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},tP=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),eP=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),oP={style:{"text-align":"center"}},lP={style:{"text-align":"left"}},nP=t("code",null,"栈",-1),sP=t("code",null,"树",-1),rP=t("code",null,"深度优先搜索",-1),dP=t("code",null,"4+",-1),_P=t("td",{style:{"text-align":"center"}},"🟠",-1),cP={style:{"text-align":"center"}},aP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},iP=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),hP=t("td",{style:{"text-align":"left"}},"序列化二叉树",-1),fP={style:{"text-align":"center"}},gP={style:{"text-align":"left"}},uP=t("code",null,"树",-1),mP=t("code",null,"深度优先搜索",-1),yP=t("code",null,"广度优先搜索",-1),pP=t("code",null,"3+",-1),bP=t("td",{style:{"text-align":"center"}},"🔴",-1),xP={style:{"text-align":"center"}},kP={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},vP=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),IP=t("td",{style:{"text-align":"left"}},"二叉搜索树的第k大节点",-1),wP={style:{"text-align":"center"}},zP={style:{"text-align":"left"}},qP=t("code",null,"树",-1),jP=t("code",null,"深度优先搜索",-1),OP=t("code",null,"二叉搜索树",-1),LP=t("code",null,"1+",-1),CP=t("td",{style:{"text-align":"center"}},"🟢",-1),NP={style:{"text-align":"center"}},PP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},KP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55",-1),BP=t("td",{style:{"text-align":"left"}},"二叉树的深度",-1),VP={style:{"text-align":"center"}},TP={style:{"text-align":"left"}},UP=t("code",null,"树",-1),EP=t("code",null,"深度优先搜索",-1),RP=t("code",null,"广度优先搜索",-1),WP=t("code",null,"1+",-1),GP=t("td",{style:{"text-align":"center"}},"🟢",-1),YP={style:{"text-align":"center"}},QP={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},SP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55-II",-1),DP=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),MP={style:{"text-align":"center"}},ZP={style:{"text-align":"left"}},AP=t("code",null,"树",-1),FP=t("code",null,"深度优先搜索",-1),HP=t("code",null,"二叉树",-1),JP=t("td",{style:{"text-align":"center"}},"🟢",-1),XP={style:{"text-align":"center"}},$P={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},tK=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),eK=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),oK={style:{"text-align":"center"}},lK={style:{"text-align":"left"}},nK=t("code",null,"树",-1),sK=t("code",null,"深度优先搜索",-1),rK=t("code",null,"二叉搜索树",-1),dK=t("code",null,"1+",-1),_K=t("td",{style:{"text-align":"center"}},"🟢",-1),cK={style:{"text-align":"center"}},aK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},iK=t("td",{style:{"text-align":"center"}},"剑指 Offer 68-II",-1),hK=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),fK={style:{"text-align":"center"}},gK={style:{"text-align":"left"}},uK=t("code",null,"树",-1),mK=t("code",null,"深度优先搜索",-1),yK=t("code",null,"二叉树",-1),pK=t("td",{style:{"text-align":"center"}},"🟢",-1),bK={style:{"text-align":"center"}},xK={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},kK=t("td",{style:{"text-align":"center"}},"剑指 Offer 7",-1),vK=t("td",{style:{"text-align":"left"}},"重建二叉树",-1),IK={style:{"text-align":"center"}},wK={style:{"text-align":"left"}},zK=t("code",null,"树",-1),qK=t("code",null,"数组",-1),jK=t("code",null,"哈希表",-1),OK=t("code",null,"2+",-1),LK=t("td",{style:{"text-align":"center"}},"🟠",-1),CK={style:{"text-align":"center"}},NK={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},PK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),KK=t("td",{style:{"text-align":"left"}},"往完全二叉树添加节点",-1),BK=t("td",{style:{"text-align":"center"}},null,-1),VK={style:{"text-align":"left"}},TK=t("code",null,"树",-1),UK=t("code",null,"广度优先搜索",-1),EK=t("code",null,"设计",-1),RK=t("code",null,"1+",-1),WK=t("td",{style:{"text-align":"center"}},"🟠",-1),GK={style:{"text-align":"center"}},YK={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},QK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),SK=t("td",{style:{"text-align":"left"}},"二叉树每层的最大值",-1),DK=t("td",{style:{"text-align":"center"}},null,-1),MK={style:{"text-align":"left"}},ZK=t("code",null,"树",-1),AK=t("code",null,"深度优先搜索",-1),FK=t("code",null,"广度优先搜索",-1),HK=t("code",null,"1+",-1),JK=t("td",{style:{"text-align":"center"}},"🟠",-1),XK={style:{"text-align":"center"}},$K={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},tB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),eB=t("td",{style:{"text-align":"left"}},"二叉树最底层最左边的值",-1),oB=t("td",{style:{"text-align":"center"}},null,-1),lB={style:{"text-align":"left"}},nB=t("code",null,"树",-1),sB=t("code",null,"深度优先搜索",-1),rB=t("code",null,"广度优先搜索",-1),dB=t("code",null,"1+",-1),_B=t("td",{style:{"text-align":"center"}},"🟠",-1),cB={style:{"text-align":"center"}},aB={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),hB=t("td",{style:{"text-align":"left"}},"二叉树的右侧视图",-1),fB={style:{"text-align":"center"}},gB={style:{"text-align":"left"}},uB=t("code",null,"树",-1),mB=t("code",null,"深度优先搜索",-1),yB=t("code",null,"广度优先搜索",-1),pB=t("code",null,"1+",-1),bB=t("td",{style:{"text-align":"center"}},"🟠",-1),xB={style:{"text-align":"center"}},kB={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},vB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),IB=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),wB=t("td",{style:{"text-align":"center"}},null,-1),zB={style:{"text-align":"left"}},qB=t("code",null,"树",-1),jB=t("code",null,"深度优先搜索",-1),OB=t("code",null,"二叉树",-1),LB=t("td",{style:{"text-align":"center"}},"🟠",-1),CB={style:{"text-align":"center"}},NB={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},PB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),KB=t("td",{style:{"text-align":"left"}},"序列化与反序列化二叉树",-1),BB={style:{"text-align":"center"}},VB={style:{"text-align":"left"}},TB=t("code",null,"树",-1),UB=t("code",null,"深度优先搜索",-1),EB=t("code",null,"广度优先搜索",-1),RB=t("code",null,"3+",-1),WB=t("td",{style:{"text-align":"center"}},"🔴",-1),GB={style:{"text-align":"center"}},YB={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},QB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),SB=t("td",{style:{"text-align":"left"}},"从根节点到叶节点的路径数字之和",-1),DB={style:{"text-align":"center"}},MB={style:{"text-align":"left"}},ZB=t("code",null,"树",-1),AB=t("code",null,"深度优先搜索",-1),FB=t("code",null,"二叉树",-1),HB=t("td",{style:{"text-align":"center"}},"🟠",-1),JB={style:{"text-align":"center"}},XB={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},$B=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),tV=t("td",{style:{"text-align":"left"}},"向下的路径节点之和",-1),eV={style:{"text-align":"center"}},oV={style:{"text-align":"left"}},lV=t("code",null,"树",-1),nV=t("code",null,"深度优先搜索",-1),sV=t("code",null,"二叉树",-1),rV=t("td",{style:{"text-align":"center"}},"🟠",-1),dV={style:{"text-align":"center"}},_V={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},cV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),aV=t("td",{style:{"text-align":"left"}},"节点之和最大的路径",-1),iV={style:{"text-align":"center"}},hV={style:{"text-align":"left"}},fV=t("code",null,"树",-1),gV=t("code",null,"深度优先搜索",-1),uV=t("code",null,"动态规划",-1),mV=t("code",null,"1+",-1),yV=t("td",{style:{"text-align":"center"}},"🔴",-1),pV={style:{"text-align":"center"}},bV={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},xV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),kV=t("td",{style:{"text-align":"left"}},"展平二叉搜索树",-1),vV=t("td",{style:{"text-align":"center"}},null,-1),IV={style:{"text-align":"left"}},wV=t("code",null,"栈",-1),zV=t("code",null,"树",-1),qV=t("code",null,"深度优先搜索",-1),jV=t("code",null,"2+",-1),OV=t("td",{style:{"text-align":"center"}},"🟢",-1),LV={style:{"text-align":"center"}},CV={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},NV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),PV=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继",-1),KV=t("td",{style:{"text-align":"center"}},null,-1),BV={style:{"text-align":"left"}},VV=t("code",null,"树",-1),TV=t("code",null,"深度优先搜索",-1),UV=t("code",null,"二叉搜索树",-1),EV=t("code",null,"1+",-1),RV=t("td",{style:{"text-align":"center"}},"🟠",-1),WV={style:{"text-align":"center"}},GV={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},YV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),QV=t("td",{style:{"text-align":"left"}},"所有大于等于节点的值之和",-1),SV=t("td",{style:{"text-align":"center"}},null,-1),DV={style:{"text-align":"left"}},MV=t("code",null,"树",-1),ZV=t("code",null,"深度优先搜索",-1),AV=t("code",null,"二叉搜索树",-1),FV=t("code",null,"1+",-1),HV=t("td",{style:{"text-align":"center"}},"🟠",-1),JV={style:{"text-align":"center"}},XV={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},$V=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),tT=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),eT={style:{"text-align":"center"}},oT={style:{"text-align":"left"}},lT=t("code",null,"栈",-1),nT=t("code",null,"树",-1),sT=t("code",null,"设计",-1),rT=t("code",null,"3+",-1),dT=t("td",{style:{"text-align":"center"}},"🟠",-1),_T={style:{"text-align":"center"}},cT={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},aT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),iT=t("td",{style:{"text-align":"left"}},"数据流的第 K 大数值",-1),hT={style:{"text-align":"center"}},fT={style:{"text-align":"left"}},gT=t("code",null,"树",-1),uT=t("code",null,"设计",-1),mT=t("code",null,"二叉搜索树",-1),yT=t("code",null,"3+",-1),pT=t("td",{style:{"text-align":"center"}},"🟢",-1),bT={style:{"text-align":"center"}},xT={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},kT=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),vT=t("td",{style:{"text-align":"left"}},"最小高度树",-1),IT=t("td",{style:{"text-align":"center"}},null,-1),wT={style:{"text-align":"left"}},zT=t("code",null,"树",-1),qT=t("code",null,"二叉搜索树",-1),jT=t("code",null,"数组",-1),OT=t("code",null,"2+",-1),LT=t("td",{style:{"text-align":"center"}},"🟢",-1),CT={style:{"text-align":"center"}},NT={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},PT=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),KT=t("td",{style:{"text-align":"left"}},"特定深度节点链表",-1),BT=t("td",{style:{"text-align":"center"}},null,-1),VT={style:{"text-align":"left"}},TT=t("code",null,"树",-1),UT=t("code",null,"广度优先搜索",-1),ET=t("code",null,"链表",-1),RT=t("code",null,"1+",-1),WT=t("td",{style:{"text-align":"center"}},"🟠",-1),GT={style:{"text-align":"center"}},YT={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},QT=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),ST=t("td",{style:{"text-align":"left"}},"检查平衡性",-1),DT=t("td",{style:{"text-align":"center"}},null,-1),MT={style:{"text-align":"left"}},ZT=t("code",null,"树",-1),AT=t("code",null,"深度优先搜索",-1),FT=t("code",null,"二叉树",-1),HT=t("td",{style:{"text-align":"center"}},"🟢",-1),JT={style:{"text-align":"center"}},XT={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},$T=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),tU=t("td",{style:{"text-align":"left"}},"合法二叉搜索树",-1),eU=t("td",{style:{"text-align":"center"}},null,-1),oU={style:{"text-align":"left"}},lU=t("code",null,"树",-1),nU=t("code",null,"深度优先搜索",-1),sU=t("code",null,"二叉搜索树",-1),rU=t("code",null,"1+",-1),dU=t("td",{style:{"text-align":"center"}},"🟠",-1),_U={style:{"text-align":"center"}},cU={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},aU=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),iU=t("td",{style:{"text-align":"left"}},"后继者",-1),hU=t("td",{style:{"text-align":"center"}},null,-1),fU={style:{"text-align":"left"}},gU=t("code",null,"树",-1),uU=t("code",null,"深度优先搜索",-1),mU=t("code",null,"二叉搜索树",-1),yU=t("code",null,"1+",-1),pU=t("td",{style:{"text-align":"center"}},"🟠",-1),bU={style:{"text-align":"center"}},xU={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},kU=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),vU=t("td",{style:{"text-align":"left"}},"首个共同祖先",-1),IU=t("td",{style:{"text-align":"center"}},null,-1),wU={style:{"text-align":"left"}},zU=t("code",null,"树",-1),qU=t("code",null,"深度优先搜索",-1),jU=t("code",null,"二叉树",-1),OU=t("td",{style:{"text-align":"center"}},"🟠",-1),LU={style:{"text-align":"center"}},CU={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},NU=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),PU=t("td",{style:{"text-align":"left"}},"二叉搜索树序列",-1),KU=t("td",{style:{"text-align":"center"}},null,-1),BU={style:{"text-align":"left"}},VU=t("code",null,"树",-1),TU=t("code",null,"二叉搜索树",-1),UU=t("code",null,"回溯",-1),EU=t("code",null,"1+",-1),RU=t("td",{style:{"text-align":"center"}},"🔴",-1),WU={style:{"text-align":"center"}},GU={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},YU=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),QU=t("td",{style:{"text-align":"left"}},"检查子树",-1),SU=t("td",{style:{"text-align":"center"}},null,-1),DU={style:{"text-align":"left"}},MU=t("code",null,"树",-1),ZU=t("code",null,"深度优先搜索",-1),AU=t("code",null,"二叉树",-1),FU=t("code",null,"2+",-1),HU=t("td",{style:{"text-align":"center"}},"🟠",-1),JU={style:{"text-align":"center"}},XU={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},$U=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),tE=t("td",{style:{"text-align":"left"}},"求和路径",-1),eE=t("td",{style:{"text-align":"center"}},null,-1),oE={style:{"text-align":"left"}},lE=t("code",null,"树",-1),nE=t("code",null,"深度优先搜索",-1),sE=t("code",null,"二叉树",-1),rE=t("td",{style:{"text-align":"center"}},"🟠",-1),dE={style:{"text-align":"center"}},_E={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},cE=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),aE=t("td",{style:{"text-align":"left"}},"BiNode",-1),iE=t("td",{style:{"text-align":"center"}},null,-1),hE={style:{"text-align":"left"}},fE=t("code",null,"栈",-1),gE=t("code",null,"树",-1),uE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"3+",-1),yE=t("td",{style:{"text-align":"center"}},"🟢",-1),pE={style:{"text-align":"center"}},bE={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"};function xE(kE,vE){const l=r("RouterLink"),s=r("ExternalLinkIcon");return _(),c("div",null,[h,t("details",null,[f,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[u]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),O,e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[Y]),_:1})]),Q,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ut,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Pt]),_:1})])]),Kt,a(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Vt,Tt,t("td",Ut,[o(l,{to:"/problem/0094.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Et,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Wt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gt]),_:1}),e(),Yt]),Qt,t("td",St,[t("a",Dt,[e("🀄️"),o(s)]),e(),t("a",Mt,[e("🔗"),o(s)])])]),t("tr",null,[Zt,At,t("td",Ft,[o(l,{to:"/problem/0095.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ht,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,re,t("td",de,[o(l,{to:"/problem/0096.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ie]),_:1}),e(),he]),fe,t("td",ge,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,t("td",be,[o(l,{to:"/problem/0098.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ve]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ie]),_:1}),e(),we]),ze,t("td",qe,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Oe,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ce,t("td",Ne,[o(l,{to:"/problem/0099.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Pe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Be]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ve]),_:1}),e(),Te]),Ue,t("td",Ee,[t("a",Re,[e("🀄️"),o(s)]),e(),t("a",We,[e("🔗"),o(s)])])]),t("tr",null,[Ge,Ye,t("td",Qe,[o(l,{to:"/problem/0100.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Se,[o(l,{to:"/tag/tree.html"},{default:n(()=>[De]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Me]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ze]),_:1}),e(),Ae]),Fe,t("td",He,[t("a",Je,[e("🀄️"),o(s)]),e(),t("a",Xe,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0101.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[so]),_:1}),e(),ro]),_o,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,fo,t("td",go,[o(l,{to:"/problem/0102.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yo]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[po]),_:1})]),bo,t("td",xo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[Io,wo,t("td",zo,[o(l,{to:"/problem/0103.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lo]),_:1})]),Co,t("td",No,[t("a",Po,[e("🀄️"),o(s)]),e(),t("a",Ko,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Vo,t("td",To,[o(l,{to:"/problem/0104.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Uo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Eo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ro]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Wo]),_:1}),e(),Go]),Yo,t("td",Qo,[t("a",So,[e("🀄️"),o(s)]),e(),t("a",Do,[e("🔗"),o(s)])])]),t("tr",null,[Mo,Zo,t("td",Ao,[o(l,{to:"/problem/0105.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ho]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jo]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Xo]),_:1}),e(),$o]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",rl,[o(l,{to:"/problem/0106.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_l]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[al]),_:1}),e(),il]),hl,t("td",fl,[t("a",gl,[e("🀄️"),o(s)]),e(),t("a",ul,[e("🔗"),o(s)])])]),t("tr",null,[ml,yl,t("td",pl,[o(l,{to:"/problem/0107.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[vl]),_:1})]),Il,t("td",wl,[t("a",zl,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[jl,Ol,t("td",Ll,[o(l,{to:"/problem/0108.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Cl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Nl]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Kl]),_:1}),e(),Bl]),Vl,t("td",Tl,[t("a",Ul,[e("🀄️"),o(s)]),e(),t("a",El,[e("🔗"),o(s)])])]),t("tr",null,[Rl,Wl,t("td",Gl,[o(l,{to:"/problem/0109.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ql]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Sl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Dl]),_:1}),e(),Ml]),Zl,t("td",Al,[t("a",Fl,[e("🀄️"),o(s)]),e(),t("a",Hl,[e("🔗"),o(s)])])]),t("tr",null,[Jl,Xl,t("td",$l,[o(l,{to:"/problem/0110.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[en]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ln]),_:1})]),nn,t("td",sn,[t("a",rn,[e("🀄️"),o(s)]),e(),t("a",dn,[e("🔗"),o(s)])])]),t("tr",null,[_n,cn,t("td",an,[o(l,{to:"/problem/0111.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[un]),_:1}),e(),mn]),yn,t("td",pn,[t("a",bn,[e("🀄️"),o(s)]),e(),t("a",xn,[e("🔗"),o(s)])])]),t("tr",null,[kn,vn,t("td",In,[o(l,{to:"/problem/0112.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jn]),_:1}),e(),On]),Ln,t("td",Cn,[t("a",Nn,[e("🀄️"),o(s)]),e(),t("a",Pn,[e("🔗"),o(s)])])]),t("tr",null,[Kn,Bn,t("td",Vn,[o(l,{to:"/problem/0113.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Un]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[En]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Rn]),_:1}),e(),Wn]),Gn,t("td",Yn,[t("a",Qn,[e("🀄️"),o(s)]),e(),t("a",Sn,[e("🔗"),o(s)])])]),t("tr",null,[Dn,Mn,t("td",Zn,[o(l,{to:"/problem/0114.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",An,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Fn]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jn]),_:1}),e(),Xn]),$n,t("td",ts,[t("a",es,[e("🀄️"),o(s)]),e(),t("a",os,[e("🔗"),o(s)])])]),t("tr",null,[ls,ns,t("td",ss,[o(l,{to:"/problem/0116.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rs,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_s]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[cs]),_:1}),e(),as]),is,t("td",hs,[t("a",fs,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[us,ms,t("td",ys,[o(l,{to:"/problem/0117.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ps,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ks]),_:1}),e(),vs]),Is,t("td",ws,[t("a",zs,[e("🀄️"),o(s)]),e(),t("a",qs,[e("🔗"),o(s)])])]),t("tr",null,[js,Os,t("td",Ls,[o(l,{to:"/problem/0124.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Cs,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ns]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ps]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ks]),_:1}),e(),Bs]),Vs,t("td",Ts,[t("a",Us,[e("🀄️"),o(s)]),e(),t("a",Es,[e("🔗"),o(s)])])]),t("tr",null,[Rs,Ws,t("td",Gs,[o(l,{to:"/problem/0129.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ys,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ss]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ds]),_:1})]),Ms,t("td",Zs,[t("a",As,[e("🀄️"),o(s)]),e(),t("a",Fs,[e("🔗"),o(s)])])]),t("tr",null,[Hs,Js,t("td",Xs,[o(l,{to:"/problem/0144.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$s,[o(l,{to:"/tag/stack.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[er]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[or]),_:1}),e(),lr]),nr,t("td",sr,[t("a",rr,[e("🀄️"),o(s)]),e(),t("a",dr,[e("🔗"),o(s)])])]),t("tr",null,[_r,cr,t("td",ar,[o(l,{to:"/problem/0145.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ir,[o(l,{to:"/tag/stack.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[fr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gr]),_:1}),e(),ur]),mr,t("td",yr,[t("a",pr,[e("🀄️"),o(s)]),e(),t("a",br,[e("🔗"),o(s)])])]),t("tr",null,[xr,kr,t("td",vr,[o(l,{to:"/problem/0156.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ir,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zr]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qr]),_:1})]),jr,t("td",Or,[t("a",Lr,[e("🀄️"),o(s)]),e(),t("a",Cr,[e("🔗"),o(s)])])]),t("tr",null,[Nr,Pr,t("td",Kr,[o(l,{to:"/problem/0173.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Br,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Vr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Tr]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ur]),_:1}),e(),Er]),Rr,t("td",Wr,[t("a",Gr,[e("🀄️"),o(s)]),e(),t("a",Yr,[e("🔗"),o(s)])])]),t("tr",null,[Qr,Sr,t("td",Dr,[o(l,{to:"/problem/0199.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ar]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Fr]),_:1}),e(),Hr]),Jr,t("td",Xr,[t("a",$r,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,t("td",ld,[o(l,{to:"/problem/0222.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nd,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[sd]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rd]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[dd]),_:1}),e(),_d]),cd,t("td",ad,[t("a",id,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[fd,gd,t("td",ud,[o(l,{to:"/problem/0226.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",md,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bd]),_:1}),e(),xd]),kd,t("td",vd,[t("a",Id,[e("🀄️"),o(s)]),e(),t("a",wd,[e("🔗"),o(s)])])]),t("tr",null,[zd,qd,t("td",jd,[o(l,{to:"/problem/0230.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Od,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Nd]),_:1}),e(),Pd]),Kd,t("td",Bd,[t("a",Vd,[e("🀄️"),o(s)]),e(),t("a",Td,[e("🔗"),o(s)])])]),t("tr",null,[Ud,Ed,t("td",Rd,[o(l,{to:"/problem/0235.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Yd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Qd]),_:1}),e(),Sd]),Dd,t("td",Md,[t("a",Zd,[e("🀄️"),o(s)]),e(),t("a",Ad,[e("🔗"),o(s)])])]),t("tr",null,[Fd,Hd,t("td",Jd,[o(l,{to:"/problem/0236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[e_]),_:1})]),o_,t("td",l_,[t("a",n_,[e("🀄️"),o(s)]),e(),t("a",s_,[e("🔗"),o(s)])])]),t("tr",null,[r_,d_,__,t("td",c_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[h_]),_:1})]),f_,t("td",g_,[t("a",u_,[e("🀄️"),o(s)]),e(),t("a",m_,[e("🔗"),o(s)])])]),t("tr",null,[y_,p_,b_,t("td",x_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[k_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[v_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[I_]),_:1}),e(),w_]),z_,t("td",q_,[t("a",j_,[e("🀄️"),o(s)]),e(),t("a",O_,[e("🔗"),o(s)])])]),t("tr",null,[L_,C_,t("td",N_,[o(l,{to:"/problem/0257.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",P_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[K_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[V_]),_:1}),e(),T_]),U_,t("td",E_,[t("a",R_,[e("🀄️"),o(s)]),e(),t("a",W_,[e("🔗"),o(s)])])]),t("tr",null,[G_,Y_,Q_,t("td",S_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[M_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Z_]),_:1}),e(),A_]),F_,t("td",H_,[t("a",J_,[e("🀄️"),o(s)]),e(),t("a",X_,[e("🔗"),o(s)])])]),t("tr",null,[$_,tc,ec,t("td",oc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[nc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sc]),_:1}),e(),rc]),dc,t("td",_c,[t("a",cc,[e("🀄️"),o(s)]),e(),t("a",ac,[e("🔗"),o(s)])])]),t("tr",null,[ic,hc,fc,t("td",gc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[yc]),_:1}),e(),pc]),bc,t("td",xc,[t("a",kc,[e("🀄️"),o(s)]),e(),t("a",vc,[e("🔗"),o(s)])])]),t("tr",null,[Ic,wc,t("td",zc,[o(l,{to:"/problem/0297.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Oc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Lc]),_:1}),e(),Cc]),Nc,t("td",Pc,[t("a",Kc,[e("🀄️"),o(s)]),e(),t("a",Bc,[e("🔗"),o(s)])])]),t("tr",null,[Vc,Tc,Uc,t("td",Ec,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Rc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wc]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Gc]),_:1})]),Yc,t("td",Qc,[t("a",Sc,[e("🀄️"),o(s)]),e(),t("a",Dc,[e("🔗"),o(s)])])]),t("tr",null,[Mc,Zc,Ac,t("td",Fc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xc]),_:1}),e(),$c]),ta,t("td",ea,[t("a",oa,[e("🀄️"),o(s)]),e(),t("a",la,[e("🔗"),o(s)])])]),t("tr",null,[na,sa,t("td",ra,[o(l,{to:"/problem/0331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",da,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_a]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ca]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[aa]),_:1}),e(),ia]),ha,t("td",fa,[t("a",ga,[e("🀄️"),o(s)]),e(),t("a",ua,[e("🔗"),o(s)])])]),t("tr",null,[ma,ya,pa,t("td",ba,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ka]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[va]),_:1}),e(),Ia]),wa,t("td",za,[t("a",qa,[e("🀄️"),o(s)]),e(),t("a",ja,[e("🔗"),o(s)])])]),t("tr",null,[Oa,La,t("td",Ca,[o(l,{to:"/problem/0337.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Na,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Pa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ka]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ba]),_:1}),e(),Va]),Ta,t("td",Ua,[t("a",Ea,[e("🀄️"),o(s)]),e(),t("a",Ra,[e("🔗"),o(s)])])]),t("tr",null,[Wa,Ga,t("td",Ya,[o(l,{to:"/problem/0366.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Qa,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Da]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ma]),_:1})]),Za,t("td",Aa,[t("a",Fa,[e("🀄️"),o(s)]),e(),t("a",Ha,[e("🔗"),o(s)])])]),t("tr",null,[Ja,Xa,t("td",$a,[o(l,{to:"/problem/0404.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ti,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ei]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[li]),_:1}),e(),ni]),si,t("td",ri,[t("a",di,[e("🀄️"),o(s)]),e(),t("a",_i,[e("🔗"),o(s)])])]),t("tr",null,[ci,ai,t("td",ii,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fi]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ui]),_:1}),e(),mi]),yi,t("td",pi,[t("a",bi,[e("🀄️"),o(s)]),e(),t("a",xi,[e("🔗"),o(s)])])]),t("tr",null,[ki,vi,Ii,t("td",wi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ji]),_:1}),e(),Oi]),Li,t("td",Ci,[t("a",Ni,[e("🀄️"),o(s)]),e(),t("a",Pi,[e("🔗"),o(s)])])]),t("tr",null,[Ki,Bi,t("td",Vi,[o(l,{to:"/problem/0437.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ti,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ui]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ei]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ri]),_:1})]),Wi,t("td",Gi,[t("a",Yi,[e("🀄️"),o(s)]),e(),t("a",Qi,[e("🔗"),o(s)])])]),t("tr",null,[Si,Di,t("td",Mi,[o(l,{to:"/problem/0449.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ai]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Hi]),_:1}),e(),Ji]),Xi,t("td",$i,[t("a",th,[e("🀄️"),o(s)]),e(),t("a",eh,[e("🔗"),o(s)])])]),t("tr",null,[oh,lh,t("td",nh,[o(l,{to:"/problem/0450.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[_h]),_:1})]),ch,t("td",ah,[t("a",ih,[e("🀄️"),o(s)]),e(),t("a",hh,[e("🔗"),o(s)])])]),t("tr",null,[fh,gh,t("td",uh,[o(l,{to:"/problem/0501.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ph]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[bh]),_:1}),e(),xh]),kh,t("td",vh,[t("a",Ih,[e("🀄️"),o(s)]),e(),t("a",wh,[e("🔗"),o(s)])])]),t("tr",null,[zh,qh,jh,t("td",Oh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ch]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Nh]),_:1}),e(),Ph]),Kh,t("td",Bh,[t("a",Vh,[e("🀄️"),o(s)]),e(),t("a",Th,[e("🔗"),o(s)])])]),t("tr",null,[Uh,Eh,Rh,t("td",Wh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Yh]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qh]),_:1})]),Sh,t("td",Dh,[t("a",Mh,[e("🀄️"),o(s)]),e(),t("a",Zh,[e("🔗"),o(s)])])]),t("tr",null,[Ah,Fh,Hh,t("td",Jh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Xh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$h]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[t1]),_:1}),e(),e1]),o1,t("td",l1,[t("a",n1,[e("🀄️"),o(s)]),e(),t("a",s1,[e("🔗"),o(s)])])]),t("tr",null,[r1,d1,t("td",_1,[o(l,{to:"/problem/0515.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[h1]),_:1}),e(),f1]),g1,t("td",u1,[t("a",m1,[e("🀄️"),o(s)]),e(),t("a",y1,[e("🔗"),o(s)])])]),t("tr",null,[p1,b1,t("td",x1,[o(l,{to:"/problem/0530.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",k1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[I1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[w1]),_:1}),e(),z1]),q1,t("td",j1,[t("a",O1,[e("🀄️"),o(s)]),e(),t("a",L1,[e("🔗"),o(s)])])]),t("tr",null,[C1,N1,P1,t("td",K1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[B1]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[V1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[T1]),_:1}),e(),U1]),E1,t("td",R1,[t("a",W1,[e("🀄️"),o(s)]),e(),t("a",G1,[e("🔗"),o(s)])])]),t("tr",null,[Y1,Q1,S1,t("td",D1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[M1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Z1]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[A1]),_:1}),e(),F1]),H1,t("td",J1,[t("a",X1,[e("🀄️"),o(s)]),e(),t("a",$1,[e("🔗"),o(s)])])]),t("tr",null,[tf,ef,t("td",of,[o(l,{to:"/problem/0543.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[rf]),_:1})]),df,t("td",_f,[t("a",cf,[e("🀄️"),o(s)]),e(),t("a",af,[e("🔗"),o(s)])])]),t("tr",null,[hf,ff,gf,t("td",uf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[pf]),_:1})]),bf,t("td",xf,[t("a",kf,[e("🀄️"),o(s)]),e(),t("a",vf,[e("🔗"),o(s)])])]),t("tr",null,[If,wf,zf,t("td",qf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Of]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lf]),_:1})]),Cf,t("td",Nf,[t("a",Pf,[e("🀄️"),o(s)]),e(),t("a",Kf,[e("🔗"),o(s)])])]),t("tr",null,[Bf,Vf,t("td",Tf,[o(l,{to:"/problem/0563.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Uf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ef]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Wf]),_:1})]),Gf,t("td",Yf,[t("a",Qf,[e("🀄️"),o(s)]),e(),t("a",Sf,[e("🔗"),o(s)])])]),t("tr",null,[Df,Mf,t("td",Zf,[o(l,{to:"/problem/0572.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Af,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ff]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Jf]),_:1}),e(),Xf]),$f,t("td",tg,[t("a",eg,[e("🀄️"),o(s)]),e(),t("a",og,[e("🔗"),o(s)])])]),t("tr",null,[lg,ng,sg,t("td",rg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_g]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[cg]),_:1}),e(),ag]),ig,t("td",hg,[t("a",fg,[e("🀄️"),o(s)]),e(),t("a",gg,[e("🔗"),o(s)])])]),t("tr",null,[ug,mg,t("td",yg,[o(l,{to:"/problem/0617.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kg]),_:1}),e(),vg]),Ig,t("td",wg,[t("a",zg,[e("🀄️"),o(s)]),e(),t("a",qg,[e("🔗"),o(s)])])]),t("tr",null,[jg,Og,Lg,t("td",Cg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ng]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Kg]),_:1}),e(),Bg]),Vg,t("td",Tg,[t("a",Ug,[e("🀄️"),o(s)]),e(),t("a",Eg,[e("🔗"),o(s)])])]),t("tr",null,[Rg,Wg,t("td",Gg,[o(l,{to:"/problem/0637.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Dg]),_:1}),e(),Mg]),Zg,t("td",Ag,[t("a",Fg,[e("🀄️"),o(s)]),e(),t("a",Hg,[e("🔗"),o(s)])])]),t("tr",null,[Jg,Xg,$g,t("td",tu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[eu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ou]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[lu]),_:1}),e(),nu]),su,t("td",ru,[t("a",du,[e("🀄️"),o(s)]),e(),t("a",_u,[e("🔗"),o(s)])])]),t("tr",null,[cu,au,t("td",iu,[o(l,{to:"/problem/0653.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[uu]),_:1}),e(),mu]),yu,t("td",pu,[t("a",bu,[e("🀄️"),o(s)]),e(),t("a",xu,[e("🔗"),o(s)])])]),t("tr",null,[ku,vu,t("td",Iu,[o(l,{to:"/problem/0654.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zu]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[qu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ju]),_:1}),e(),Ou]),Lu,t("td",Cu,[t("a",Nu,[e("🀄️"),o(s)]),e(),t("a",Pu,[e("🔗"),o(s)])])]),t("tr",null,[Ku,Bu,Vu,t("td",Tu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Uu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Eu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ru]),_:1}),e(),Wu]),Gu,t("td",Yu,[t("a",Qu,[e("🀄️"),o(s)]),e(),t("a",Su,[e("🔗"),o(s)])])]),t("tr",null,[Du,Mu,t("td",Zu,[o(l,{to:"/problem/0662.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Au,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ju]),_:1}),e(),Xu]),$u,t("td",tm,[t("a",em,[e("🀄️"),o(s)]),e(),t("a",om,[e("🔗"),o(s)])])]),t("tr",null,[lm,nm,sm,t("td",rm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_m]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cm]),_:1})]),am,t("td",im,[t("a",hm,[e("🀄️"),o(s)]),e(),t("a",fm,[e("🔗"),o(s)])])]),t("tr",null,[gm,um,mm,t("td",ym,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bm]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xm]),_:1}),e(),km]),vm,t("td",Im,[t("a",wm,[e("🀄️"),o(s)]),e(),t("a",zm,[e("🔗"),o(s)])])]),t("tr",null,[qm,jm,Om,t("td",Lm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Nm]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Pm]),_:1}),e(),Km]),Bm,t("td",Vm,[t("a",Tm,[e("🀄️"),o(s)]),e(),t("a",Um,[e("🔗"),o(s)])])]),t("tr",null,[Em,Rm,t("td",Wm,[o(l,{to:"/problem/0671.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ym]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qm]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Sm]),_:1})]),Dm,t("td",Mm,[t("a",Zm,[e("🀄️"),o(s)]),e(),t("a",Am,[e("🔗"),o(s)])])]),t("tr",null,[Fm,Hm,Jm,t("td",Xm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$m]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ty]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ey]),_:1})]),oy,t("td",ly,[t("a",ny,[e("🀄️"),o(s)]),e(),t("a",sy,[e("🔗"),o(s)])])]),t("tr",null,[ry,dy,t("td",_y,[o(l,{to:"/problem/0700.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ay]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[iy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[hy]),_:1})]),fy,t("td",gy,[t("a",uy,[e("🀄️"),o(s)]),e(),t("a",my,[e("🔗"),o(s)])])]),t("tr",null,[yy,py,t("td",by,[o(l,{to:"/problem/0701.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ky]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[vy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Iy]),_:1})]),wy,t("td",zy,[t("a",qy,[e("🀄️"),o(s)]),e(),t("a",jy,[e("🔗"),o(s)])])]),t("tr",null,[Oy,Ly,t("td",Cy,[o(l,{to:"/problem/0703.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ny,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Py]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ky]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[By]),_:1}),e(),Vy]),Ty,t("td",Uy,[t("a",Ey,[e("🀄️"),o(s)]),e(),t("a",Ry,[e("🔗"),o(s)])])]),t("tr",null,[Wy,Gy,Yy,t("td",Qy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[My]),_:1}),e(),Zy]),Ay,t("td",Fy,[t("a",Hy,[e("🀄️"),o(s)]),e(),t("a",Jy,[e("🔗"),o(s)])])]),t("tr",null,[Xy,$y,t2,t("td",e2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[o2]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[l2]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[n2]),_:1}),e(),s2]),r2,t("td",d2,[t("a",_2,[e("🀄️"),o(s)]),e(),t("a",c2,[e("🔗"),o(s)])])]),t("tr",null,[a2,i2,t("td",h2,[o(l,{to:"/problem/0783.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",f2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[g2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[u2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[m2]),_:1}),e(),y2]),p2,t("td",b2,[t("a",x2,[e("🀄️"),o(s)]),e(),t("a",k2,[e("🔗"),o(s)])])]),t("tr",null,[v2,I2,w2,t("td",z2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[q2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[j2]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[O2]),_:1})]),L2,t("td",C2,[t("a",N2,[e("🀄️"),o(s)]),e(),t("a",P2,[e("🔗"),o(s)])])]),t("tr",null,[K2,B2,V2,t("td",T2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[U2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[E2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[R2]),_:1}),e(),W2]),G2,t("td",Y2,[t("a",Q2,[e("🀄️"),o(s)]),e(),t("a",S2,[e("🔗"),o(s)])])]),t("tr",null,[D2,M2,Z2,t("td",A2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[F2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[H2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[J2]),_:1}),e(),X2]),$2,t("td",tp,[t("a",ep,[e("🀄️"),o(s)]),e(),t("a",op,[e("🔗"),o(s)])])]),t("tr",null,[lp,np,t("td",sp,[o(l,{to:"/problem/0872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_p]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cp]),_:1})]),ap,t("td",ip,[t("a",hp,[e("🀄️"),o(s)]),e(),t("a",fp,[e("🔗"),o(s)])])]),t("tr",null,[gp,up,t("td",mp,[o(l,{to:"/problem/0889.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bp]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[xp]),_:1}),e(),kp]),vp,t("td",Ip,[t("a",wp,[e("🀄️"),o(s)]),e(),t("a",zp,[e("🔗"),o(s)])])]),t("tr",null,[qp,jp,Op,t("td",Lp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cp]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Np]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Pp]),_:1}),e(),Kp]),Bp,t("td",Vp,[t("a",Tp,[e("🀄️"),o(s)]),e(),t("a",Up,[e("🔗"),o(s)])])]),t("tr",null,[Ep,Rp,t("td",Wp,[o(l,{to:"/problem/0897.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gp,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yp]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Qp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sp]),_:1}),e(),Dp]),Mp,t("td",Zp,[t("a",Ap,[e("🀄️"),o(s)]),e(),t("a",Fp,[e("🔗"),o(s)])])]),t("tr",null,[Hp,Jp,Xp,t("td",$p,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[eb]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[ob]),_:1}),e(),lb]),nb,t("td",sb,[t("a",rb,[e("🀄️"),o(s)]),e(),t("a",db,[e("🔗"),o(s)])])]),t("tr",null,[_b,cb,t("td",ab,[o(l,{to:"/problem/0938.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ib,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fb]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[gb]),_:1}),e(),ub]),mb,t("td",yb,[t("a",pb,[e("🀄️"),o(s)]),e(),t("a",bb,[e("🔗"),o(s)])])]),t("tr",null,[xb,kb,t("td",vb,[o(l,{to:"/problem/0951.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ib,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zb]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qb]),_:1})]),jb,t("td",Ob,[t("a",Lb,[e("🀄️"),o(s)]),e(),t("a",Cb,[e("🔗"),o(s)])])]),t("tr",null,[Nb,Pb,t("td",Kb,[o(l,{to:"/problem/0958.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Tb]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ub]),_:1})]),Eb,t("td",Rb,[t("a",Wb,[e("🀄️"),o(s)]),e(),t("a",Gb,[e("🔗"),o(s)])])]),t("tr",null,[Yb,Qb,t("td",Sb,[o(l,{to:"/problem/0965.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Db,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ab]),_:1}),e(),Fb]),Hb,t("td",Jb,[t("a",Xb,[e("🀄️"),o(s)]),e(),t("a",$b,[e("🔗"),o(s)])])]),t("tr",null,[tx,ex,ox,t("td",lx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rx]),_:1}),e(),dx]),_x,t("td",cx,[t("a",ax,[e("🀄️"),o(s)]),e(),t("a",ix,[e("🔗"),o(s)])])]),t("tr",null,[hx,fx,gx,t("td",ux,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yx]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[px]),_:1})]),bx,t("td",xx,[t("a",kx,[e("🀄️"),o(s)]),e(),t("a",vx,[e("🔗"),o(s)])])]),t("tr",null,[Ix,wx,zx,t("td",qx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ox]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lx]),_:1})]),Cx,t("td",Nx,[t("a",Px,[e("🀄️"),o(s)]),e(),t("a",Kx,[e("🔗"),o(s)])])]),t("tr",null,[Bx,Vx,Tx,t("td",Ux,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ex]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Wx]),_:1}),e(),Gx]),Yx,t("td",Qx,[t("a",Sx,[e("🀄️"),o(s)]),e(),t("a",Dx,[e("🔗"),o(s)])])]),t("tr",null,[Mx,Zx,Ax,t("td",Fx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jx]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Xx]),_:1}),e(),$x]),t3,t("td",e3,[t("a",o3,[e("🀄️"),o(s)]),e(),t("a",l3,[e("🔗"),o(s)])])]),t("tr",null,[n3,s3,t("td",r3,[o(l,{to:"/problem/0993.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",d3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[c3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[a3]),_:1}),e(),i3]),h3,t("td",f3,[t("a",g3,[e("🀄️"),o(s)]),e(),t("a",u3,[e("🔗"),o(s)])])]),t("tr",null,[m3,y3,p3,t("td",b3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[x3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[k3]),_:1})]),v3,t("td",I3,[t("a",w3,[e("🀄️"),o(s)]),e(),t("a",z3,[e("🔗"),o(s)])])]),t("tr",null,[q3,j3,t("td",O3,[o(l,{to:"/problem/1008.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",L3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[C3]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[N3]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[P3]),_:1}),e(),K3]),B3,t("td",V3,[t("a",T3,[e("🀄️"),o(s)]),e(),t("a",U3,[e("🔗"),o(s)])])]),t("tr",null,[E3,R3,t("td",W3,[o(l,{to:"/problem/1022.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",G3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Y3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[S3]),_:1})]),D3,t("td",M3,[t("a",Z3,[e("🀄️"),o(s)]),e(),t("a",A3,[e("🔗"),o(s)])])]),t("tr",null,[F3,H3,J3,t("td",X3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[e4]),_:1})]),o4,t("td",l4,[t("a",n4,[e("🀄️"),o(s)]),e(),t("a",s4,[e("🔗"),o(s)])])]),t("tr",null,[r4,d4,t("td",_4,[o(l,{to:"/problem/1028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i4]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[h4]),_:1}),e(),f4]),g4,t("td",u4,[t("a",m4,[e("🀄️"),o(s)]),e(),t("a",y4,[e("🔗"),o(s)])])]),t("tr",null,[p4,b4,x4,t("td",k4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[I4]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[w4]),_:1}),e(),z4]),q4,t("td",j4,[t("a",O4,[e("🀄️"),o(s)]),e(),t("a",L4,[e("🔗"),o(s)])])]),t("tr",null,[C4,N4,P4,t("td",K4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[B4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[V4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[T4]),_:1})]),U4,t("td",E4,[t("a",R4,[e("🀄️"),o(s)]),e(),t("a",W4,[e("🔗"),o(s)])])]),t("tr",null,[G4,Y4,Q4,t("td",S4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D4]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[M4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Z4]),_:1})]),A4,t("td",F4,[t("a",H4,[e("🀄️"),o(s)]),e(),t("a",J4,[e("🔗"),o(s)])])]),t("tr",null,[X4,$4,t5,t("td",e5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[o5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[l5]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[n5]),_:1}),e(),s5]),r5,t("td",d5,[t("a",_5,[e("🀄️"),o(s)]),e(),t("a",c5,[e("🔗"),o(s)])])]),t("tr",null,[a5,i5,h5,t("td",f5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[g5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[u5]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[m5]),_:1})]),y5,t("td",p5,[t("a",b5,[e("🀄️"),o(s)]),e(),t("a",x5,[e("🔗"),o(s)])])]),t("tr",null,[k5,v5,I5,t("td",w5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[z5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[q5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[j5]),_:1}),e(),O5]),L5,t("td",C5,[t("a",N5,[e("🀄️"),o(s)]),e(),t("a",P5,[e("🔗"),o(s)])])]),t("tr",null,[K5,B5,V5,t("td",T5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[U5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[E5]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[R5]),_:1})]),W5,t("td",G5,[t("a",Y5,[e("🀄️"),o(s)]),e(),t("a",Q5,[e("🔗"),o(s)])])]),t("tr",null,[S5,D5,t("td",M5,[o(l,{to:"/problem/1161.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Z5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[A5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[H5]),_:1}),e(),J5]),X5,t("td",$5,[t("a",t0,[e("🀄️"),o(s)]),e(),t("a",e0,[e("🔗"),o(s)])])]),t("tr",null,[o0,l0,n0,t("td",s0,[o(l,{to:"/tag/stack.html"},{default:n(()=>[r0]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[d0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_0]),_:1}),e(),c0]),a0,t("td",i0,[t("a",h0,[e("🀄️"),o(s)]),e(),t("a",f0,[e("🔗"),o(s)])])]),t("tr",null,[g0,u0,t("td",m0,[o(l,{to:"/problem/1261.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",y0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[p0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[b0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[x0]),_:1}),e(),k0]),v0,t("td",I0,[t("a",w0,[e("🀄️"),o(s)]),e(),t("a",z0,[e("🔗"),o(s)])])]),t("tr",null,[q0,j0,O0,t("td",L0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[C0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[N0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[P0]),_:1}),e(),K0]),B0,t("td",V0,[t("a",T0,[e("🀄️"),o(s)]),e(),t("a",U0,[e("🔗"),o(s)])])]),t("tr",null,[E0,R0,W0,t("td",G0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Y0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q0]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[S0]),_:1}),e(),D0]),M0,t("td",Z0,[t("a",A0,[e("🀄️"),o(s)]),e(),t("a",F0,[e("🔗"),o(s)])])]),t("tr",null,[H0,J0,X0,t("td",$0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[t6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[e6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[o6]),_:1}),e(),l6]),n6,t("td",s6,[t("a",r6,[e("🀄️"),o(s)]),e(),t("a",d6,[e("🔗"),o(s)])])]),t("tr",null,[_6,c6,a6,t("td",i6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[h6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[f6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[g6]),_:1})]),u6,t("td",m6,[t("a",y6,[e("🀄️"),o(s)]),e(),t("a",p6,[e("🔗"),o(s)])])]),t("tr",null,[b6,x6,k6,t("td",v6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[I6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[z6]),_:1})]),q6,t("td",j6,[t("a",O6,[e("🀄️"),o(s)]),e(),t("a",L6,[e("🔗"),o(s)])])]),t("tr",null,[C6,N6,P6,t("td",K6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[B6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[V6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[T6]),_:1}),e(),U6]),E6,t("td",R6,[t("a",W6,[e("🀄️"),o(s)]),e(),t("a",G6,[e("🔗"),o(s)])])]),t("tr",null,[Y6,Q6,S6,t("td",D6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[M6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Z6]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[A6]),_:1}),e(),F6]),H6,t("td",J6,[t("a",X6,[e("🀄️"),o(s)]),e(),t("a",$6,[e("🔗"),o(s)])])]),t("tr",null,[t9,e9,t("td",o9,[o(l,{to:"/problem/1372.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",l9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[n9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s9]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[r9]),_:1}),e(),d9]),_9,t("td",c9,[t("a",a9,[e("🀄️"),o(s)]),e(),t("a",i9,[e("🔗"),o(s)])])]),t("tr",null,[h9,f9,g9,t("td",u9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[m9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[y9]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[p9]),_:1}),e(),b9]),x9,t("td",k9,[t("a",v9,[e("🀄️"),o(s)]),e(),t("a",I9,[e("🔗"),o(s)])])]),t("tr",null,[w9,z9,t("td",q9,[o(l,{to:"/problem/1379.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",j9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[O9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[L9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[C9]),_:1}),e(),N9]),P9,t("td",K9,[t("a",B9,[e("🀄️"),o(s)]),e(),t("a",V9,[e("🔗"),o(s)])])]),t("tr",null,[T9,U9,E9,t("td",R9,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[W9]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[G9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Y9]),_:1}),e(),Q9]),S9,t("td",D9,[t("a",M9,[e("🀄️"),o(s)]),e(),t("a",Z9,[e("🔗"),o(s)])])]),t("tr",null,[A9,F9,H9,t("td",J9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[X9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[t7]),_:1}),e(),e7]),o7,t("td",l7,[t("a",n7,[e("🀄️"),o(s)]),e(),t("a",s7,[e("🔗"),o(s)])])]),t("tr",null,[r7,d7,t("td",_7,[o(l,{to:"/problem/1448.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[h7]),_:1}),e(),f7]),g7,t("td",u7,[t("a",m7,[e("🀄️"),o(s)]),e(),t("a",y7,[e("🔗"),o(s)])])]),t("tr",null,[p7,b7,x7,t("td",k7,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[v7]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[I7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w7]),_:1}),e(),z7]),q7,t("td",j7,[t("a",O7,[e("🀄️"),o(s)]),e(),t("a",L7,[e("🔗"),o(s)])])]),t("tr",null,[C7,N7,P7,t("td",K7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[B7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[V7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[T7]),_:1}),e(),U7]),E7,t("td",R7,[t("a",W7,[e("🀄️"),o(s)]),e(),t("a",G7,[e("🔗"),o(s)])])]),t("tr",null,[Y7,Q7,S7,t("td",D7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[M7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Z7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[A7]),_:1}),e(),F7]),H7,t("td",J7,[t("a",X7,[e("🀄️"),o(s)]),e(),t("a",$7,[e("🔗"),o(s)])])]),t("tr",null,[t8,e8,o8,t("td",l8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[n8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[r8]),_:1})]),d8,t("td",_8,[t("a",c8,[e("🀄️"),o(s)]),e(),t("a",a8,[e("🔗"),o(s)])])]),t("tr",null,[i8,h8,f8,t("td",g8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[u8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[m8]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[y8]),_:1}),e(),p8]),b8,t("td",x8,[t("a",k8,[e("🀄️"),o(s)]),e(),t("a",v8,[e("🔗"),o(s)])])]),t("tr",null,[I8,w8,z8,t("td",q8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[j8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[O8]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[L8]),_:1}),e(),C8]),N8,t("td",P8,[t("a",K8,[e("🀄️"),o(s)]),e(),t("a",B8,[e("🔗"),o(s)])])]),t("tr",null,[V8,T8,U8,t("td",E8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[R8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[W8]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[G8]),_:1}),e(),Y8]),Q8,t("td",S8,[t("a",D8,[e("🀄️"),o(s)]),e(),t("a",M8,[e("🔗"),o(s)])])]),t("tr",null,[Z8,A8,F8,t("td",H8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[J8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[X8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$8]),_:1})]),tk,t("td",ek,[t("a",ok,[e("🀄️"),o(s)]),e(),t("a",lk,[e("🔗"),o(s)])])]),t("tr",null,[nk,sk,rk,t("td",dk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_k]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ck]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ak]),_:1})]),ik,t("td",hk,[t("a",fk,[e("🀄️"),o(s)]),e(),t("a",gk,[e("🔗"),o(s)])])]),t("tr",null,[uk,mk,yk,t("td",pk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xk]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[kk]),_:1}),e(),vk]),Ik,t("td",wk,[t("a",zk,[e("🀄️"),o(s)]),e(),t("a",qk,[e("🔗"),o(s)])])]),t("tr",null,[jk,Ok,Lk,t("td",Ck,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Nk]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Pk]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Kk]),_:1}),e(),Bk]),Vk,t("td",Tk,[t("a",Uk,[e("🀄️"),o(s)]),e(),t("a",Ek,[e("🔗"),o(s)])])]),t("tr",null,[Rk,Wk,Gk,t("td",Yk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sk]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Dk]),_:1})]),Mk,t("td",Zk,[t("a",Ak,[e("🀄️"),o(s)]),e(),t("a",Fk,[e("🔗"),o(s)])])]),t("tr",null,[Hk,Jk,Xk,t("td",$k,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tv]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ev]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[ov]),_:1}),e(),lv]),nv,t("td",sv,[t("a",rv,[e("🀄️"),o(s)]),e(),t("a",dv,[e("🔗"),o(s)])])]),t("tr",null,[_v,cv,av,t("td",iv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gv]),_:1}),e(),uv]),mv,t("td",yv,[t("a",pv,[e("🀄️"),o(s)]),e(),t("a",bv,[e("🔗"),o(s)])])]),t("tr",null,[xv,kv,vv,t("td",Iv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qv]),_:1})]),jv,t("td",Ov,[t("a",Lv,[e("🀄️"),o(s)]),e(),t("a",Cv,[e("🔗"),o(s)])])]),t("tr",null,[Nv,Pv,Kv,t("td",Bv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tv]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Uv]),_:1}),e(),Ev]),Rv,t("td",Wv,[t("a",Gv,[e("🀄️"),o(s)]),e(),t("a",Yv,[e("🔗"),o(s)])])]),t("tr",null,[Qv,Sv,Dv,t("td",Mv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Av]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Fv]),_:1}),e(),Hv]),Jv,t("td",Xv,[t("a",$v,[e("🀄️"),o(s)]),e(),t("a",tI,[e("🔗"),o(s)])])]),t("tr",null,[eI,oI,lI,t("td",nI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[sI]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[rI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dI]),_:1}),e(),_I]),cI,t("td",aI,[t("a",iI,[e("🀄️"),o(s)]),e(),t("a",hI,[e("🔗"),o(s)])])]),t("tr",null,[fI,gI,uI,t("td",mI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pI]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[bI]),_:1}),e(),xI]),kI,t("td",vI,[t("a",II,[e("🀄️"),o(s)]),e(),t("a",wI,[e("🔗"),o(s)])])]),t("tr",null,[zI,qI,jI,t("td",OI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[LI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[CI]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[NI]),_:1})]),PI,t("td",KI,[t("a",BI,[e("🀄️"),o(s)]),e(),t("a",VI,[e("🔗"),o(s)])])]),t("tr",null,[TI,UI,EI,t("td",RI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[WI]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[GI]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[YI]),_:1}),e(),QI]),SI,t("td",DI,[t("a",MI,[e("🀄️"),o(s)]),e(),t("a",ZI,[e("🔗"),o(s)])])]),t("tr",null,[AI,FI,HI,t("td",JI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$I]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tw]),_:1}),e(),ew]),ow,t("td",lw,[t("a",nw,[e("🀄️"),o(s)]),e(),t("a",sw,[e("🔗"),o(s)])])]),t("tr",null,[rw,dw,_w,t("td",cw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iw]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[hw]),_:1}),e(),fw]),gw,t("td",uw,[t("a",mw,[e("🀄️"),o(s)]),e(),t("a",yw,[e("🔗"),o(s)])])]),t("tr",null,[pw,bw,t("td",xw,[o(l,{to:"/problem/2196.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",kw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vw]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Iw]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ww]),_:1}),e(),zw]),qw,t("td",jw,[t("a",Ow,[e("🀄️"),o(s)]),e(),t("a",Lw,[e("🔗"),o(s)])])]),t("tr",null,[Cw,Nw,t("td",Pw,[o(l,{to:"/problem/2236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Kw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Bw]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Vw]),_:1})]),Tw,t("td",Uw,[t("a",Ew,[e("🀄️"),o(s)]),e(),t("a",Rw,[e("🔗"),o(s)])])]),t("tr",null,[Ww,Gw,Yw,t("td",Qw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dw]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Mw]),_:1})]),Zw,t("td",Aw,[t("a",Fw,[e("🀄️"),o(s)]),e(),t("a",Hw,[e("🔗"),o(s)])])]),t("tr",null,[Jw,Xw,$w,t("td",tz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ez]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oz]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lz]),_:1}),e(),nz]),sz,t("td",rz,[t("a",dz,[e("🀄️"),o(s)]),e(),t("a",_z,[e("🔗"),o(s)])])]),t("tr",null,[cz,az,t("td",iz,[o(l,{to:"/problem/2331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gz]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[uz]),_:1})]),mz,t("td",yz,[t("a",pz,[e("🀄️"),o(s)]),e(),t("a",bz,[e("🔗"),o(s)])])]),t("tr",null,[xz,kz,vz,t("td",Iz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qz]),_:1}),e(),jz]),Oz,t("td",Lz,[t("a",Cz,[e("🀄️"),o(s)]),e(),t("a",Nz,[e("🔗"),o(s)])])]),t("tr",null,[Pz,Kz,t("td",Bz,[o(l,{to:"/problem/2415.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Tz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Uz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ez]),_:1}),e(),Rz]),Wz,t("td",Gz,[t("a",Yz,[e("🀄️"),o(s)]),e(),t("a",Qz,[e("🔗"),o(s)])])]),t("tr",null,[Sz,Dz,Mz,t("td",Zz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Az]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Hz]),_:1}),e(),Jz]),Xz,t("td",$z,[t("a",tq,[e("🀄️"),o(s)]),e(),t("a",eq,[e("🔗"),o(s)])])]),t("tr",null,[oq,lq,t("td",nq,[o(l,{to:"/problem/2458.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_q]),_:1}),e(),cq]),aq,t("td",iq,[t("a",hq,[e("🀄️"),o(s)]),e(),t("a",fq,[e("🔗"),o(s)])])]),t("tr",null,[gq,uq,t("td",mq,[o(l,{to:"/problem/2471.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xq]),_:1})]),kq,t("td",vq,[t("a",Iq,[e("🀄️"),o(s)]),e(),t("a",wq,[e("🔗"),o(s)])])]),t("tr",null,[zq,qq,jq,t("td",Oq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cq]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Nq]),_:1}),e(),Pq]),Kq,t("td",Bq,[t("a",Vq,[e("🀄️"),o(s)]),e(),t("a",Tq,[e("🔗"),o(s)])])]),t("tr",null,[Uq,Eq,Rq,t("td",Wq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qq]),_:1})]),Sq,t("td",Dq,[t("a",Mq,[e("🀄️"),o(s)]),e(),t("a",Zq,[e("🔗"),o(s)])])]),t("tr",null,[Aq,Fq,t("td",Hq,[o(l,{to:"/problem/2583.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Xq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$q]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[tj]),_:1}),e(),ej]),oj,t("td",lj,[t("a",nj,[e("🀄️"),o(s)]),e(),t("a",sj,[e("🔗"),o(s)])])]),t("tr",null,[rj,dj,t("td",_j,[o(l,{to:"/problem/2641.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ij]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hj]),_:1}),e(),fj]),gj,t("td",uj,[t("a",mj,[e("🀄️"),o(s)]),e(),t("a",yj,[e("🔗"),o(s)])])]),t("tr",null,[pj,bj,xj,t("td",kj,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[vj]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Ij]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wj]),_:1}),e(),zj]),qj,t("td",jj,[t("a",Oj,[e("🀄️"),o(s)]),e(),t("a",Lj,[e("🔗"),o(s)])])]),t("tr",null,[Cj,Nj,Pj,t("td",Kj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Bj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Vj]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Tj]),_:1})]),Uj,t("td",Ej,[t("a",Rj,[e("🀄️"),o(s)]),e(),t("a",Wj,[e("🔗"),o(s)])])]),t("tr",null,[Gj,Yj,Qj,t("td",Sj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Dj]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Mj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zj]),_:1}),e(),Aj]),Fj,t("td",Hj,[t("a",Jj,[e("🀄️"),o(s)]),e(),t("a",Xj,[e("🔗"),o(s)])])]),t("tr",null,[$j,tO,eO,t("td",oO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sO]),_:1}),e(),rO]),dO,t("td",_O,[t("a",cO,[e("🀄️"),o(s)]),e(),t("a",aO,[e("🔗"),o(s)])])]),t("tr",null,[iO,hO,fO,t("td",gO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mO]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[yO]),_:1}),e(),pO]),bO,t("td",xO,[t("a",kO,[e("🀄️"),o(s)]),e(),t("a",vO,[e("🔗"),o(s)])])]),t("tr",null,[IO,wO,zO,t("td",qO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[OO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LO]),_:1}),e(),CO]),NO,t("td",PO,[t("a",KO,[e("🀄️"),o(s)]),e(),t("a",BO,[e("🔗"),o(s)])])]),t("tr",null,[VO,TO,t("td",UO,[o(l,{to:"/problem/3319.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",EO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[RO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[WO]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[GO]),_:1}),e(),YO]),QO,t("td",SO,[t("a",DO,[e("🀄️"),o(s)]),e(),t("a",MO,[e("🔗"),o(s)])])]),t("tr",null,[ZO,AO,FO,t("td",HO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[JO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$O]),_:1}),e(),tL]),eL,t("td",oL,[t("a",lL,[e("🀄️"),o(s)])])]),t("tr",null,[nL,sL,rL,t("td",dL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_L]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[aL]),_:1})]),iL,t("td",hL,[t("a",fL,[e("🀄️"),o(s)])])]),t("tr",null,[gL,uL,mL,t("td",yL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xL]),_:1})]),kL,t("td",vL,[t("a",IL,[e("🀄️"),o(s)])])]),t("tr",null,[wL,zL,qL,t("td",jL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[CL]),_:1}),e(),NL]),PL,t("td",KL,[t("a",BL,[e("🀄️"),o(s)])])]),t("tr",null,[VL,TL,UL,t("td",EL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[RL]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[WL]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[GL]),_:1}),e(),YL]),QL,t("td",SL,[t("a",DL,[e("🀄️"),o(s)])])]),t("tr",null,[ML,ZL,AL,t("td",FL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[XL]),_:1})]),$L,t("td",tC,[t("a",eC,[e("🀄️"),o(s)])])]),t("tr",null,[oC,lC,nC,t("td",sC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_C]),_:1}),e(),cC]),aC,t("td",iC,[t("a",hC,[e("🀄️"),o(s)])])]),t("tr",null,[fC,gC,uC,t("td",mC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bC]),_:1}),e(),xC]),kC,t("td",vC,[t("a",IC,[e("🀄️"),o(s)])])]),t("tr",null,[wC,zC,t("td",qC,[o(l,{to:"/offer/jz_offer_26_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",jC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LC]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[CC]),_:1})]),NC,t("td",PC,[t("a",KC,[e("🀄️"),o(s)])])]),t("tr",null,[BC,VC,t("td",TC,[o(l,{to:"/offer/jz_offer_27_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",UC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[WC]),_:1}),e(),GC]),YC,t("td",QC,[t("a",SC,[e("🀄️"),o(s)])])]),t("tr",null,[DC,MC,t("td",ZC,[o(l,{to:"/offer/jz_offer_28_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",AC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[FC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[JC]),_:1}),e(),XC]),$C,t("td",tN,[t("a",eN,[e("🀄️"),o(s)])])]),t("tr",null,[oN,lN,t("td",nN,[o(l,{to:"/offer/jz_offer_32_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[dN]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[_N]),_:1})]),cN,t("td",aN,[t("a",iN,[e("🀄️"),o(s)])])]),t("tr",null,[hN,fN,t("td",gN,[o(l,{to:"/offer/jz_offer_32_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yN]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[pN]),_:1})]),bN,t("td",xN,[t("a",kN,[e("🀄️"),o(s)])])]),t("tr",null,[vN,IN,t("td",wN,[o(l,{to:"/offer/jz_offer_32_3.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jN]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ON]),_:1})]),LN,t("td",CN,[t("a",NN,[e("🀄️"),o(s)])])]),t("tr",null,[PN,KN,t("td",BN,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",VN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[TN]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[UN]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[EN]),_:1}),e(),RN]),WN,t("td",GN,[t("a",YN,[e("🀄️"),o(s)])])]),t("tr",null,[QN,SN,t("td",DN,[o(l,{to:"/offer/jz_offer_34_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",MN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ZN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AN]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[FN]),_:1}),e(),HN]),JN,t("td",XN,[t("a",$N,[e("🀄️"),o(s)])])]),t("tr",null,[tP,eP,t("td",oP,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lP,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nP]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[sP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rP]),_:1}),e(),dP]),_P,t("td",cP,[t("a",aP,[e("🀄️"),o(s)])])]),t("tr",null,[iP,hP,t("td",fP,[o(l,{to:"/offer/jz_offer_37_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yP]),_:1}),e(),pP]),bP,t("td",xP,[t("a",kP,[e("🀄️"),o(s)])])]),t("tr",null,[vP,IP,t("td",wP,[o(l,{to:"/offer/jz_offer_54_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jP]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[OP]),_:1}),e(),LP]),CP,t("td",NP,[t("a",PP,[e("🀄️"),o(s)])])]),t("tr",null,[KP,BP,t("td",VP,[o(l,{to:"/offer/jz_offer_55_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",TP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[UP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[EP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[RP]),_:1}),e(),WP]),GP,t("td",YP,[t("a",QP,[e("🀄️"),o(s)])])]),t("tr",null,[SP,DP,t("td",MP,[o(l,{to:"/offer/jz_offer_55_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ZP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[AP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FP]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[HP]),_:1})]),JP,t("td",XP,[t("a",$P,[e("🀄️"),o(s)])])]),t("tr",null,[tK,eK,t("td",oK,[o(l,{to:"/offer/jz_offer_68_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sK]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[rK]),_:1}),e(),dK]),_K,t("td",cK,[t("a",aK,[e("🀄️"),o(s)])])]),t("tr",null,[iK,hK,t("td",fK,[o(l,{to:"/offer/jz_offer_68_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[yK]),_:1})]),pK,t("td",bK,[t("a",xK,[e("🀄️"),o(s)])])]),t("tr",null,[kK,vK,t("td",IK,[o(l,{to:"/offer/jz_offer_07_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zK]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qK]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[jK]),_:1}),e(),OK]),LK,t("td",CK,[t("a",NK,[e("🀄️"),o(s)])])]),t("tr",null,[PK,KK,BK,t("td",VK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[UK]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[EK]),_:1}),e(),RK]),WK,t("td",GK,[t("a",YK,[e("🀄️"),o(s)])])]),t("tr",null,[QK,SK,DK,t("td",MK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ZK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[FK]),_:1}),e(),HK]),JK,t("td",XK,[t("a",$K,[e("🀄️"),o(s)])])]),t("tr",null,[tB,eB,oB,t("td",lB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rB]),_:1}),e(),dB]),_B,t("td",cB,[t("a",aB,[e("🀄️"),o(s)])])]),t("tr",null,[iB,hB,t("td",fB,[o(l,{to:"/offer2/jz_offer_II_046.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yB]),_:1}),e(),pB]),bB,t("td",xB,[t("a",kB,[e("🀄️"),o(s)])])]),t("tr",null,[vB,IB,wB,t("td",zB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jB]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[OB]),_:1})]),LB,t("td",CB,[t("a",NB,[e("🀄️"),o(s)])])]),t("tr",null,[PB,KB,t("td",BB,[o(l,{to:"/offer2/jz_offer_II_048.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",VB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[UB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[EB]),_:1}),e(),RB]),WB,t("td",GB,[t("a",YB,[e("🀄️"),o(s)])])]),t("tr",null,[QB,SB,t("td",DB,[o(l,{to:"/offer2/jz_offer_II_049.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",MB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ZB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AB]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[FB]),_:1})]),HB,t("td",JB,[t("a",XB,[e("🀄️"),o(s)])])]),t("tr",null,[$B,tV,t("td",eV,[o(l,{to:"/offer2/jz_offer_II_050.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nV]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[sV]),_:1})]),rV,t("td",dV,[t("a",_V,[e("🀄️"),o(s)])])]),t("tr",null,[cV,aV,t("td",iV,[o(l,{to:"/offer2/jz_offer_II_051.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gV]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uV]),_:1}),e(),mV]),yV,t("td",pV,[t("a",bV,[e("🀄️"),o(s)])])]),t("tr",null,[xV,kV,vV,t("td",IV,[o(l,{to:"/tag/stack.html"},{default:n(()=>[wV]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[zV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qV]),_:1}),e(),jV]),OV,t("td",LV,[t("a",CV,[e("🀄️"),o(s)])])]),t("tr",null,[NV,PV,KV,t("td",BV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[VV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[TV]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[UV]),_:1}),e(),EV]),RV,t("td",WV,[t("a",GV,[e("🀄️"),o(s)])])]),t("tr",null,[YV,QV,SV,t("td",DV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[MV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ZV]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[AV]),_:1}),e(),FV]),HV,t("td",JV,[t("a",XV,[e("🀄️"),o(s)])])]),t("tr",null,[$V,tT,t("td",eT,[o(l,{to:"/offer2/jz_offer_II_055.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oT,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lT]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[nT]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[sT]),_:1}),e(),rT]),dT,t("td",_T,[t("a",cT,[e("🀄️"),o(s)])])]),t("tr",null,[aT,iT,t("td",hT,[o(l,{to:"/offer2/jz_offer_II_059.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gT]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[uT]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[mT]),_:1}),e(),yT]),pT,t("td",bT,[t("a",xT,[e("🀄️"),o(s)])])]),t("tr",null,[kT,vT,IT,t("td",wT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zT]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[qT]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jT]),_:1}),e(),OT]),LT,t("td",CT,[t("a",NT,[e("🀄️"),o(s)])])]),t("tr",null,[PT,KT,BT,t("td",VT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[UT]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[ET]),_:1}),e(),RT]),WT,t("td",GT,[t("a",YT,[e("🀄️"),o(s)])])]),t("tr",null,[QT,ST,DT,t("td",MT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ZT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AT]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[FT]),_:1})]),HT,t("td",JT,[t("a",XT,[e("🀄️"),o(s)])])]),t("tr",null,[$T,tU,eU,t("td",oU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nU]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[sU]),_:1}),e(),rU]),dU,t("td",_U,[t("a",cU,[e("🀄️"),o(s)])])]),t("tr",null,[aU,iU,hU,t("td",fU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uU]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[mU]),_:1}),e(),yU]),pU,t("td",bU,[t("a",xU,[e("🀄️"),o(s)])])]),t("tr",null,[kU,vU,IU,t("td",wU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qU]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[jU]),_:1})]),OU,t("td",LU,[t("a",CU,[e("🀄️"),o(s)])])]),t("tr",null,[NU,PU,KU,t("td",BU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[VU]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[TU]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[UU]),_:1}),e(),EU]),RU,t("td",WU,[t("a",GU,[e("🀄️"),o(s)])])]),t("tr",null,[YU,QU,SU,t("td",DU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[MU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ZU]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[AU]),_:1}),e(),FU]),HU,t("td",JU,[t("a",XU,[e("🀄️"),o(s)])])]),t("tr",null,[$U,tE,eE,t("td",oE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nE]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[sE]),_:1})]),rE,t("td",dE,[t("a",_E,[e("🀄️"),o(s)])])]),t("tr",null,[cE,aE,iE,t("td",hE,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fE]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[gE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uE]),_:1}),e(),mE]),yE,t("td",pE,[t("a",bE,[e("🀄️"),o(s)])])])])])])}const wE=d(i,[["render",xE],["__file","binary-tree.html.vue"]]);export{wE as default};
