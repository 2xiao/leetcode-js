import{_ as c,r as l,o as p,c as r,a as n,b as e,d as t,w as s,f as d,e as u}from"./app-B5EG-zH0.js";const h={},m=n("h1",{id:"_2210-统计数组中峰和谷的数量",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2210-统计数组中峰和谷的数量","aria-hidden":"true"},"#"),e(" 2210. 统计数组中峰和谷的数量")],-1),g=n("code",null,"数组",-1),k={href:"https://leetcode.cn/problems/count-hills-and-valleys-in-an-array",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"力扣",-1),b={href:"https://leetcode.com/problems/count-hills-and-valleys-in-an-array",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"LeetCode",-1),x=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>. An index <code>i</code> is part of a <strong>hill</strong> in <code>nums</code> if the closest non-equal neighbors of <code>i</code> are smaller than <code>nums[i]</code>. Similarly, an index <code>i</code> is part of a <strong>valley</strong> in <code>nums</code> if the closest non-equal neighbors of <code>i</code> are larger than <code>nums[i]</code>. Adjacent indices <code>i</code> and <code>j</code> are part of the <strong>same</strong> hill or valley if <code>nums[i] == nums[j]</code>.</p><p>Note that for an index to be part of a hill or valley, it must have a non- equal neighbor on <strong>both</strong> the left and right of the index.</p><p>Return <em>the number of hills and valleys in</em> <code>nums</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [2,4,1,1,6,5]</p><p>Output: 3</p><p>Explanation:</p><p>At index 0: There is no non-equal neighbor of 2 on the left, so index 0 is neither a hill nor a valley.</p><p>At index 1: The closest non-equal neighbors of 4 are 2 and 1. Since 4 &gt; 2 and 4 &gt; 1, index 1 is a hill.</p><p>At index 2: The closest non-equal neighbors of 1 are 4 and 6. Since 1 &lt; 4 and 1 &lt; 6, index 2 is a valley.</p><p>At index 3: The closest non-equal neighbors of 1 are 4 and 6. Since 1 &lt; 4 and 1 &lt; 6, index 3 is a valley, but note that it is part of the same valley as index 2.</p><p>At index 4: The closest non-equal neighbors of 6 are 1 and 5. Since 6 &gt; 1 and 6 &gt; 5, index 4 is a hill.</p><p>At index 5: There is no non-equal neighbor of 5 on the right, so index 5 is neither a hill nor a valley.</p><p>There are 3 hills and valleys so we return 3.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [6,6,5,5,4,1]</p><p>Output: 0</p><p>Explanation:</p><p>At index 0: There is no non-equal neighbor of 6 on the left, so index 0 is neither a hill nor a valley.</p><p>At index 1: There is no non-equal neighbor of 6 on the left, so index 1 is neither a hill nor a valley.</p><p>At index 2: The closest non-equal neighbors of 5 are 6 and 4. Since 5 &lt; 6 and 5 &gt; 4, index 2 is neither a hill nor a valley.</p><p>At index 3: The closest non-equal neighbors of 5 are 6 and 4. Since 5 &lt; 6 and 5 &gt; 4, index 3 is neither a hill nor a valley.</p><p>At index 4: The closest non-equal neighbors of 4 are 5 and 1. Since 4 &lt; 5 and 4 &gt; 1, index 4 is neither a hill nor a valley.</p><p>At index 5: There is no non-equal neighbor of 1 on the right, so index 5 is neither a hill nor a valley.</p><p>There are 0 hills and valleys so we return 0.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>3 &lt;= nums.length &lt;= 100</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> 。如果两侧距 <code>i</code> 最近的不相等邻居的值均小于 <code>nums[i]</code> ，则下标 <code>i</code> 是 <code>nums</code> 中，某个峰的一部分。类似地，如果两侧距 <code>i</code> 最近的不相等邻居的值均大于 <code>nums[i]</code> ，则下标 <code>i</code> 是 <code>nums</code> 中某个谷的一部分。对于相邻下标 <code>i</code> 和 <code>j</code> ，如果 <code>nums[i] == nums[j]</code> ， 则认为这两下标属于 <strong>同一个</strong> 峰或谷。</p><p>注意，要使某个下标所做峰或谷的一部分，那么它左右两侧必须 <strong>都</strong> 存在不相等邻居。</p><p>返回 <code>nums</code> 中峰和谷的数量。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> nums = [2,4,1,1,6,5]</p><p><strong>输出：</strong> 3</p><p><strong>解释：</strong></p><p>在下标 0 ：由于 2 的左侧不存在不相等邻居，所以下标 0 既不是峰也不是谷。</p><p>在下标 1 ：4 的最近不相等邻居是 2 和 1 。由于 4 &gt; 2 且 4 &gt; 1 ，下标 1 是一个峰。</p><p>在下标 2 ：1 的最近不相等邻居是 4 和 6 。由于 1 &lt; 4 且 1 &lt; 6 ，下标 2 是一个谷。</p><p>在下标 3 ：1 的最近不相等邻居是 4 和 6 。由于 1 &lt; 4 且 1 &lt; 6 ，下标 3 符合谷的定义，但需要注意它和下标 2 是同一个谷的一部分。</p><p>在下标 4 ：6 的最近不相等邻居是 1 和 5 。由于 6 &gt; 1 且 6 &gt; 5 ，下标 4 是一个峰。</p><p>在下标 5 ：由于 5 的右侧不存在不相等邻居，所以下标 5 既不是峰也不是谷。</p><p>共有 3 个峰和谷，所以返回 3 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> nums = [6,6,5,5,4,1]</p><p><strong>输出：</strong> 0</p><p><strong>解释：</strong></p><p>在下标 0 ：由于 6 的左侧不存在不相等邻居，所以下标 0 既不是峰也不是谷。</p><p>在下标 1 ：由于 6 的左侧不存在不相等邻居，所以下标 1 既不是峰也不是谷。</p><p>在下标 2 ：5 的最近不相等邻居是 6 和 4 。由于 5 &lt; 6 且 5 &gt; 4 ，下标 2 既不是峰也不是谷。</p><p>在下标 3 ：5 的最近不相等邻居是 6 和 4 。由于 5 &lt; 6 且 5 &gt; 4 ，下标 3 既不是峰也不是谷。</p><p>在下标 4 ：4 的最近不相等邻居是 5 和 1 。由于 4 &lt; 5 且 4 &gt; 1 ，下标 4 既不是峰也不是谷。</p><p>在下标 5 ：由于 1 的右侧不存在不相等邻居，所以下标 5 既不是峰也不是谷。</p><p>共有 0 个峰和谷，所以返回 0 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>3 &lt;= nums.length &lt;= 100</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>遍历数组，从第二个元素（索引 1）到倒数第二个元素（索引 <code>n-2</code>）。</li><li>检查当前元素是否满足山峰或谷地的条件： <ul><li>山峰：<code>nums[j] &lt; nums[i] &gt; nums[i+1]</code></li><li>谷地：<code>nums[j] &gt; nums[i] &lt; nums[i+1]</code></li><li>如果满足，更新结果计数器 <code>res</code> 并移动参考点 <code>j</code>。</li></ul></li><li>跳过相邻重复值： <ul><li>如果 <code>nums[i]</code> 和前一个参考点 <code>nums[j]</code> 值相同，则跳过（因为重复值无法形成山峰或谷地）。</li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是数组长度，遍历数组一次。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，仅使用常量级额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">countHillValley</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 检查是否为山峰或谷地</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>
			<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span>
			<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			res<span class="token operator">++</span><span class="token punctuation">;</span>
			<span class="token comment">// 更新参考点</span>
			j <span class="token operator">=</span> i<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,27),v=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),y=n("td",{style:{"text-align":"center"}},"162",-1),q=n("td",{style:{"text-align":"left"}},"寻找峰值",-1),j={style:{"text-align":"center"}},T={style:{"text-align":"left"}},A=n("code",null,"数组",-1),w=n("code",null,"二分查找",-1),S=n("td",{style:{"text-align":"center"}},"🟠",-1),E={style:{"text-align":"center"}},N={href:"https://leetcode.cn/problems/find-peak-element",target:"_blank",rel:"noopener noreferrer"},V={href:"https://leetcode.com/problems/find-peak-element",target:"_blank",rel:"noopener noreferrer"},C=n("td",{style:{"text-align":"center"}},"896",-1),L=n("td",{style:{"text-align":"left"}},"单调数列",-1),I={style:{"text-align":"center"}},O={style:{"text-align":"left"}},B=n("code",null,"数组",-1),R=n("td",{style:{"text-align":"center"}},"🟢",-1),H={style:{"text-align":"center"}},Y={href:"https://leetcode.cn/problems/monotonic-array",target:"_blank",rel:"noopener noreferrer"},z={href:"https://leetcode.com/problems/monotonic-array",target:"_blank",rel:"noopener noreferrer"},D=n("td",{style:{"text-align":"center"}},"1403",-1),F=n("td",{style:{"text-align":"left"}},"非递增顺序的最小子序列",-1),G={style:{"text-align":"center"}},J={style:{"text-align":"left"}},K=n("code",null,"贪心",-1),M=n("code",null,"数组",-1),P=n("code",null,"排序",-1),Q=n("td",{style:{"text-align":"center"}},"🟢",-1),U={style:{"text-align":"center"}},W={href:"https://leetcode.cn/problems/minimum-subsequence-in-non-increasing-order",target:"_blank",rel:"noopener noreferrer"},X={href:"https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order",target:"_blank",rel:"noopener noreferrer"};function Z($,nn){const i=l("font"),a=l("RouterLink"),o=l("ExternalLinkIcon");return p(),r("div",null,[m,n("p",null,[e("🟢 "),t(i,{color:"#15bd66"},{default:s(()=>[e("Easy")]),_:1}),e("  🔖  "),t(a,{to:"/tag/array.html"},{default:s(()=>[g]),_:1}),e("  🔗 "),n("a",k,[_,t(o)]),e(),n("a",b,[f,t(o)])]),x,d(" prettier-ignore "),n("table",null,[v,n("tbody",null,[n("tr",null,[y,q,n("td",j,[t(a,{to:"/problem/0162.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",T,[t(a,{to:"/tag/array.html"},{default:s(()=>[A]),_:1}),e(),t(a,{to:"/tag/binary-search.html"},{default:s(()=>[w]),_:1})]),S,n("td",E,[n("a",N,[e("🀄️"),t(o)]),e(),n("a",V,[e("🔗"),t(o)])])]),n("tr",null,[C,L,n("td",I,[t(a,{to:"/problem/0896.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",O,[t(a,{to:"/tag/array.html"},{default:s(()=>[B]),_:1})]),R,n("td",H,[n("a",Y,[e("🀄️"),t(o)]),e(),n("a",z,[e("🔗"),t(o)])])]),n("tr",null,[D,F,n("td",G,[t(a,{to:"/problem/1403.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",J,[t(a,{to:"/tag/greedy.html"},{default:s(()=>[K]),_:1}),e(),t(a,{to:"/tag/array.html"},{default:s(()=>[M]),_:1}),e(),t(a,{to:"/tag/sorting.html"},{default:s(()=>[P]),_:1})]),Q,n("td",U,[n("a",W,[e("🀄️"),t(o)]),e(),n("a",X,[e("🔗"),t(o)])])])])])])}const tn=c(h,[["render",Z],["__file","2210.html.vue"]]);export{tn as default};
