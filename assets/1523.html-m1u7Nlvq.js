import{_ as r,r as l,o as p,c as i,a as n,b as e,d as s,w as a,f as d,e as u}from"./app-aQeLbVW9.js";const h={},g=n("h1",{id:"_1523-在区间范围内统计奇数数目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1523-在区间范围内统计奇数数目","aria-hidden":"true"},"#"),e(" 1523. 在区间范围内统计奇数数目")],-1),k=n("code",null,"数学",-1),m={href:"https://leetcode.cn/problems/count-odd-numbers-in-an-interval-range",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"力扣",-1),_={href:"https://leetcode.com/problems/count-odd-numbers-in-an-interval-range",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"LeetCode",-1),f=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given two non-negative integers <code>low</code> and <code>high</code>. Return the <em>count of odd numbers between</em><code>low</code> <em>and</em><code> high</code> _ (inclusive)_.</p><p><strong>Example 1:</strong></p><blockquote><p><strong>Input:</strong> low = 3, high = 7</p><p>Output: 3</p><p>Explanation: The odd numbers between 3 and 7 are [3,5,7].</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p><strong>Input:</strong> low = 8, high = 10</p><p>Output: 1</p><p>Explanation: The odd numbers between 8 and 10 are [9].</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= low &lt;= high &lt;= 10^9</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你两个非负整数 <code>low</code> 和 <code>high</code> 。请你返回 <code>low</code> 和 <code>high</code> 之间（包括二者）奇数的数目。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> low = 3, high = 7</p><p><strong>输出：</strong> 3</p><p><strong>解释：</strong> 3 到 7 之间奇数数字为 [3,5,7] 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> low = 8, high = 10</p><p><strong>输出：</strong> 1</p><p><strong>解释：</strong> 8 到 10 之间奇数数字为 [9] 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>0 &lt;= low &lt;= high &lt;= 10^9</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p><strong>奇数的范围调整</strong>：</p><ul><li>为了方便计算奇数的个数，我们可以将 <code>low</code> 和 <code>high</code> 都调整为偶数。</li><li>若原始的 <code>low</code> 和 <code>high</code> 已经是偶数，不作调整。</li><li>若 <code>low</code> 是奇数，将 <code>low</code> 调整为前一个偶数（减 1）</li><li>若 <code>high</code> 是奇数，将 <code>high</code> 调整为后一个偶数（加 1）。</li></ul></li><li><p><strong>奇数个数的计算</strong>：</p><ul><li>调整后奇数的个数可以通过公式计算：<code>奇数个数 = (high - low) / 2</code></li><li>调整的目的是确保所有奇数都在 <code>[low, high]</code> 这个范围内，不会遗漏或多算。</li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(1)</code>，所有操作均为常数时间操作。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，仅使用常数变量。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">low</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">high</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">countOdds</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">low<span class="token punctuation">,</span> high</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 若 low 是奇数，调整为前一个偶数</span>
		low <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>high <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 若 high 是奇数，调整为后一个偶数</span>
		high <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 奇数个数为调整后范围的长度的一半</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,23),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),x=n("td",{style:{"text-align":"center"}},"2980",-1),y=n("td",{style:{"text-align":"left"}},"检查按位或是否存在尾随零",-1),q=n("td",{style:{"text-align":"center"}},null,-1),E={style:{"text-align":"left"}},C=n("code",null,"位运算",-1),L=n("code",null,"数组",-1),N=n("td",{style:{"text-align":"center"}},"🟢",-1),O={style:{"text-align":"center"}},V={href:"https://leetcode.cn/problems/check-if-bitwise-or-has-trailing-zeros",target:"_blank",rel:"noopener noreferrer"},I={href:"https://leetcode.com/problems/check-if-bitwise-or-has-trailing-zeros",target:"_blank",rel:"noopener noreferrer"};function j(B,R){const c=l("font"),o=l("RouterLink"),t=l("ExternalLinkIcon");return p(),i("div",null,[g,n("p",null,[e("🟢 "),s(c,{color:"#15bd66"},{default:a(()=>[e("Easy")]),_:1}),e("  🔖  "),s(o,{to:"/tag/math.html"},{default:a(()=>[k]),_:1}),e("  🔗 "),n("a",m,[b,s(t)]),e(),n("a",_,[v,s(t)])]),f,d(" prettier-ignore "),n("table",null,[w,n("tbody",null,[n("tr",null,[x,y,q,n("td",E,[s(o,{to:"/tag/bit-manipulation.html"},{default:a(()=>[C]),_:1}),e(),s(o,{to:"/tag/array.html"},{default:a(()=>[L]),_:1})]),N,n("td",O,[n("a",V,[e("🀄️"),s(t)]),e(),n("a",I,[e("🔗"),s(t)])])])])])])}const z=r(h,[["render",j],["__file","1523.html.vue"]]);export{z as default};
