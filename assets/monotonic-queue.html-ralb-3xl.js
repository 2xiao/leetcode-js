import{_,r as d,o as c,c as a,a as t,d as o,w as n,b as e,f as r}from"./app-aQeLbVW9.js";const i={},h=t("h1",{id:"单调队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调队列","aria-hidden":"true"},"#"),e(" 单调队列")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),f=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),q=t("span",{class:"blue"},"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),V=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),E=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),H=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),M=t("code",null,"递归",-1),P=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),ft=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Vt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Et=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ot=t("td",{style:{"text-align":"center"}},"239",-1),Rt=t("td",{style:{"text-align":"left"}},"滑动窗口最大值",-1),Qt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},At=t("code",null,"队列",-1),Dt=t("code",null,"数组",-1),Ft=t("code",null,"滑动窗口",-1),Gt=t("code",null,"2+",-1),Ht=t("td",{style:{"text-align":"center"}},"🔴",-1),Jt={style:{"text-align":"center"}},Mt={href:"https://leetcode.cn/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},"683",-1),Ut=t("td",{style:{"text-align":"left"}},"K 个关闭的灯泡 🔒",-1),Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"树状数组",-1),Zt=t("code",null,"线段树",-1),$t=t("code",null,"队列",-1),te=t("code",null,"5+",-1),ee=t("td",{style:{"text-align":"center"}},"🔴",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"862",-1),de=t("td",{style:{"text-align":"left"}},"和至少为 K 的最短子数组",-1),_e={style:{"text-align":"center"}},ce={style:{"text-align":"left"}},ae=t("code",null,"队列",-1),re=t("code",null,"数组",-1),ie=t("code",null,"二分查找",-1),he=t("code",null,"4+",-1),ue=t("td",{style:{"text-align":"center"}},"🔴",-1),ge={style:{"text-align":"center"}},me={href:"https://leetcode.cn/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"918",-1),pe=t("td",{style:{"text-align":"left"}},"环形子数组的最大和",-1),xe={style:{"text-align":"center"}},be={style:{"text-align":"left"}},ke=t("code",null,"队列",-1),qe=t("code",null,"数组",-1),we=t("code",null,"分治",-1),ve=t("code",null,"2+",-1),Ie=t("td",{style:{"text-align":"center"}},"🟠",-1),ze={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"1425",-1),Ne=t("td",{style:{"text-align":"left"}},"带限制的子序列和",-1),Be=t("td",{style:{"text-align":"center"}},null,-1),Ce={style:{"text-align":"left"}},Ee=t("code",null,"队列",-1),Ke=t("code",null,"数组",-1),Oe=t("code",null,"动态规划",-1),Re=t("code",null,"3+",-1),Qe=t("td",{style:{"text-align":"center"}},"🔴",-1),Te={style:{"text-align":"center"}},Ae={href:"https://leetcode.cn/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},De={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},"1438",-1),Ge=t("td",{style:{"text-align":"left"}},"绝对差不超过限制的最长连续子数组",-1),He=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Me=t("code",null,"队列",-1),Pe=t("code",null,"数组",-1),Se=t("code",null,"有序集合",-1),Ue=t("code",null,"3+",-1),We=t("td",{style:{"text-align":"center"}},"🟠",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"1499",-1),to=t("td",{style:{"text-align":"left"}},"满足不等式的最大值",-1),eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"队列",-1),no=t("code",null,"数组",-1),so=t("code",null,"滑动窗口",-1),_o=t("code",null,"2+",-1),co=t("td",{style:{"text-align":"center"}},"🔴",-1),ao={style:{"text-align":"center"}},ro={href:"https://leetcode.cn/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"1687",-1),uo=t("td",{style:{"text-align":"left"}},"从仓库到码头运输箱子",-1),go=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},fo=t("code",null,"线段树",-1),yo=t("code",null,"队列",-1),po=t("code",null,"数组",-1),xo=t("code",null,"4+",-1),bo=t("td",{style:{"text-align":"center"}},"🔴",-1),ko={style:{"text-align":"center"}},qo={href:"https://leetcode.cn/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},wo={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},"1696",-1),Io=t("td",{style:{"text-align":"left"}},"跳跃游戏 VI",-1),zo=t("td",{style:{"text-align":"center"}},null,-1),jo={style:{"text-align":"left"}},Vo=t("code",null,"队列",-1),Lo=t("code",null,"数组",-1),No=t("code",null,"动态规划",-1),Bo=t("code",null,"2+",-1),Co=t("td",{style:{"text-align":"center"}},"🟠",-1),Eo={style:{"text-align":"center"}},Ko={href:"https://leetcode.cn/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Oo={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},"2071",-1),Qo=t("td",{style:{"text-align":"left"}},"你可以安排的最多任务数目",-1),To=t("td",{style:{"text-align":"center"}},null,-1),Ao={style:{"text-align":"left"}},Do=t("code",null,"贪心",-1),Fo=t("code",null,"队列",-1),Go=t("code",null,"数组",-1),Ho=t("code",null,"3+",-1),Jo=t("td",{style:{"text-align":"center"}},"🔴",-1),Mo={style:{"text-align":"center"}},Po={href:"https://leetcode.cn/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},So={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},Uo=t("td",{style:{"text-align":"center"}},"2398",-1),Wo=t("td",{style:{"text-align":"left"}},"预算内的最多机器人数目",-1),Xo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"队列",-1),$o=t("code",null,"数组",-1),tl=t("code",null,"二分查找",-1),el=t("code",null,"4+",-1),ol=t("td",{style:{"text-align":"center"}},"🔴",-1),ll={style:{"text-align":"center"}},nl={href:"https://leetcode.cn/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},"2407",-1),_l=t("td",{style:{"text-align":"left"}},"最长递增子序列 II",-1),cl=t("td",{style:{"text-align":"center"}},null,-1),al={style:{"text-align":"left"}},rl=t("code",null,"树状数组",-1),il=t("code",null,"线段树",-1),hl=t("code",null,"队列",-1),ul=t("code",null,"4+",-1),gl=t("td",{style:{"text-align":"center"}},"🔴",-1),ml={style:{"text-align":"center"}},fl={href:"https://leetcode.cn/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},"2444",-1),xl=t("td",{style:{"text-align":"left"}},"统计定界子数组的数目",-1),bl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},ql=t("code",null,"队列",-1),wl=t("code",null,"数组",-1),vl=t("code",null,"滑动窗口",-1),Il=t("code",null,"1+",-1),zl=t("td",{style:{"text-align":"center"}},"🔴",-1),jl={style:{"text-align":"center"}},Vl={href:"https://leetcode.cn/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},"2762",-1),Bl=t("td",{style:{"text-align":"left"}},"不间断子数组",-1),Cl={style:{"text-align":"center"}},El={style:{"text-align":"left"}},Kl=t("code",null,"队列",-1),Ol=t("code",null,"数组",-1),Rl=t("code",null,"有序集合",-1),Ql=t("code",null,"3+",-1),Tl=t("td",{style:{"text-align":"center"}},"🟠",-1),Al={style:{"text-align":"center"}},Dl={href:"https://leetcode.cn/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},"2944",-1),Hl=t("td",{style:{"text-align":"left"}},"购买水果需要的最少金币数",-1),Jl=t("td",{style:{"text-align":"center"}},null,-1),Ml={style:{"text-align":"left"}},Pl=t("code",null,"队列",-1),Sl=t("code",null,"数组",-1),Ul=t("code",null,"动态规划",-1),Wl=t("code",null,"2+",-1),Xl=t("td",{style:{"text-align":"center"}},"🟠",-1),Yl={style:{"text-align":"center"}},Zl={href:"https://leetcode.cn/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},"2945",-1),en=t("td",{style:{"text-align":"left"}},"找到最大非递减数组的长度",-1),on=t("td",{style:{"text-align":"center"}},null,-1),ln={style:{"text-align":"left"}},nn=t("code",null,"栈",-1),sn=t("code",null,"队列",-1),dn=t("code",null,"数组",-1),_n=t("code",null,"4+",-1),cn=t("td",{style:{"text-align":"center"}},"🔴",-1),an={style:{"text-align":"center"}},rn={href:"https://leetcode.cn/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},"2969",-1),gn=t("td",{style:{"text-align":"left"}},"购买水果需要的最少金币数 II 🔒",-1),mn=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},yn=t("code",null,"队列",-1),pn=t("code",null,"数组",-1),xn=t("code",null,"动态规划",-1),bn=t("code",null,"2+",-1),kn=t("td",{style:{"text-align":"center"}},"🔴",-1),qn={style:{"text-align":"center"}},wn={href:"https://leetcode.cn/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},"3420",-1),zn=t("td",{style:{"text-align":"left"}},"统计 K 次操作以内得到非递减子数组的数目",-1),jn=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},Ln=t("code",null,"栈",-1),Nn=t("code",null,"线段树",-1),Bn=t("code",null,"队列",-1),Cn=t("code",null,"4+",-1),En=t("td",{style:{"text-align":"center"}},"🔴",-1),Kn={style:{"text-align":"center"}},On={href:"https://leetcode.cn/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},"剑指 Offer 59",-1),Tn=t("td",{style:{"text-align":"left"}},"滑动窗口的最大值",-1),An={style:{"text-align":"center"}},Dn={style:{"text-align":"left"}},Fn=t("code",null,"队列",-1),Gn=t("code",null,"数组",-1),Hn=t("code",null,"滑动窗口",-1),Jn=t("code",null,"2+",-1),Mn=t("td",{style:{"text-align":"center"}},"🔴",-1),Pn={style:{"text-align":"center"}},Sn={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},"剑指 Offer 59-II",-1),Wn=t("td",{style:{"text-align":"left"}},"队列的最大值",-1),Xn={style:{"text-align":"center"}},Yn={style:{"text-align":"left"}},Zn=t("code",null,"设计",-1),$n=t("code",null,"队列",-1),ts=t("code",null,"单调队列",-1),es=t("td",{style:{"text-align":"center"}},"🟠",-1),os={style:{"text-align":"center"}},ls={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"};function ns(ss,ds){const l=d("RouterLink"),s=d("ExternalLinkIcon");return c(),a("div",null,[h,t("details",null,[u,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),q,e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[G]),_:1})]),H,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ut]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),mt,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Ct]),_:1})])]),Et,r(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Ot,Rt,t("td",Qt,[o(l,{to:"/problem/0239.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tt,[o(l,{to:"/tag/queue.html"},{default:n(()=>[At]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Dt]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Ft]),_:1}),e(),Gt]),Ht,t("td",Jt,[t("a",Mt,[e("🀄️"),o(s)]),e(),t("a",Pt,[e("🔗"),o(s)])])]),t("tr",null,[St,Ut,Wt,t("td",Xt,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,de,t("td",_e,[o(l,{to:"/problem/0862.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ce,[o(l,{to:"/tag/queue.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[re]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ie]),_:1}),e(),he]),ue,t("td",ge,[t("a",me,[e("🀄️"),o(s)]),e(),t("a",fe,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,t("td",xe,[o(l,{to:"/problem/0918.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",be,[o(l,{to:"/tag/queue.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qe]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[we]),_:1}),e(),ve]),Ie,t("td",ze,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Ve,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ne,Be,t("td",Ce,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Ee]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ke]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Oe]),_:1}),e(),Re]),Qe,t("td",Te,[t("a",Ae,[e("🀄️"),o(s)]),e(),t("a",De,[e("🔗"),o(s)])])]),t("tr",null,[Fe,Ge,He,t("td",Je,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Me]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[Se]),_:1}),e(),Ue]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,eo,t("td",oo,[o(l,{to:"/tag/queue.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[so]),_:1}),e(),_o]),co,t("td",ao,[t("a",ro,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,uo,go,t("td",mo,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[fo]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[yo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[po]),_:1}),e(),xo]),bo,t("td",ko,[t("a",qo,[e("🀄️"),o(s)]),e(),t("a",wo,[e("🔗"),o(s)])])]),t("tr",null,[vo,Io,zo,t("td",jo,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Vo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Lo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[No]),_:1}),e(),Bo]),Co,t("td",Eo,[t("a",Ko,[e("🀄️"),o(s)]),e(),t("a",Oo,[e("🔗"),o(s)])])]),t("tr",null,[Ro,Qo,To,t("td",Ao,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Do]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Fo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Go]),_:1}),e(),Ho]),Jo,t("td",Mo,[t("a",Po,[e("🀄️"),o(s)]),e(),t("a",So,[e("🔗"),o(s)])])]),t("tr",null,[Uo,Wo,Xo,t("td",Yo,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Zo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$o]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[tl]),_:1}),e(),el]),ol,t("td",ll,[t("a",nl,[e("🀄️"),o(s)]),e(),t("a",sl,[e("🔗"),o(s)])])]),t("tr",null,[dl,_l,cl,t("td",al,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[rl]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[il]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[hl]),_:1}),e(),ul]),gl,t("td",ml,[t("a",fl,[e("🀄️"),o(s)]),e(),t("a",yl,[e("🔗"),o(s)])])]),t("tr",null,[pl,xl,bl,t("td",kl,[o(l,{to:"/tag/queue.html"},{default:n(()=>[ql]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wl]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[vl]),_:1}),e(),Il]),zl,t("td",jl,[t("a",Vl,[e("🀄️"),o(s)]),e(),t("a",Ll,[e("🔗"),o(s)])])]),t("tr",null,[Nl,Bl,t("td",Cl,[o(l,{to:"/problem/2762.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",El,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Kl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ol]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[Rl]),_:1}),e(),Ql]),Tl,t("td",Al,[t("a",Dl,[e("🀄️"),o(s)]),e(),t("a",Fl,[e("🔗"),o(s)])])]),t("tr",null,[Gl,Hl,Jl,t("td",Ml,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Sl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ul]),_:1}),e(),Wl]),Xl,t("td",Yl,[t("a",Zl,[e("🀄️"),o(s)]),e(),t("a",$l,[e("🔗"),o(s)])])]),t("tr",null,[tn,en,on,t("td",ln,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nn]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[sn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dn]),_:1}),e(),_n]),cn,t("td",an,[t("a",rn,[e("🀄️"),o(s)]),e(),t("a",hn,[e("🔗"),o(s)])])]),t("tr",null,[un,gn,mn,t("td",fn,[o(l,{to:"/tag/queue.html"},{default:n(()=>[yn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[pn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[xn]),_:1}),e(),bn]),kn,t("td",qn,[t("a",wn,[e("🀄️"),o(s)]),e(),t("a",vn,[e("🔗"),o(s)])])]),t("tr",null,[In,zn,jn,t("td",Vn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ln]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Nn]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Bn]),_:1}),e(),Cn]),En,t("td",Kn,[t("a",On,[e("🀄️"),o(s)]),e(),t("a",Rn,[e("🔗"),o(s)])])]),t("tr",null,[Qn,Tn,t("td",An,[o(l,{to:"/offer/jz_offer_59_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dn,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Fn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Gn]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Hn]),_:1}),e(),Jn]),Mn,t("td",Pn,[t("a",Sn,[e("🀄️"),o(s)])])]),t("tr",null,[Un,Wn,t("td",Xn,[o(l,{to:"/offer/jz_offer_59_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yn,[o(l,{to:"/tag/design.html"},{default:n(()=>[Zn]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[$n]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[ts]),_:1})]),es,t("td",os,[t("a",ls,[e("🀄️"),o(s)])])])])])])}const cs=_(i,[["render",ns],["__file","monotonic-queue.html.vue"]]);export{cs as default};
