import{_,r as d,o as r,c,a as t,d as o,w as l,b as e,f as a}from"./app-aQeLbVW9.js";const i={},h=t("h1",{id:"树状数组",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树状数组","aria-hidden":"true"},"#"),e(" 树状数组")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),f=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),B=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),E=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),M=t("code",null,"并查集",-1),O=t("code",null,"字典树",-1),P=t("code",null,"线段树",-1),U=t("span",{class:"blue"},"树状数组",-1),D=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),G=t("code",null,"枚举",-1),H=t("code",null,"递归",-1),J=t("code",null,"分治",-1),Q=t("code",null,"回溯",-1),S=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),lt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),ft=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),Et=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Rt=t("td",{style:{"text-align":"center"}},"218",-1),Tt=t("td",{style:{"text-align":"left"}},"天际线问题",-1),At=t("td",{style:{"text-align":"center"}},null,-1),Mt={style:{"text-align":"left"}},Ot=t("code",null,"树状数组",-1),Pt=t("code",null,"线段树",-1),Ut=t("code",null,"数组",-1),Dt=t("code",null,"4+",-1),Ft=t("td",{style:{"text-align":"center"}},"🔴",-1),Gt={style:{"text-align":"center"}},Ht={href:"https://leetcode.cn/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},"307",-1),St=t("td",{style:{"text-align":"left"}},"区域和检索 - 数组可修改",-1),Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"设计",-1),Zt=t("code",null,"树状数组",-1),$t=t("code",null,"线段树",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},ne={href:"https://leetcode.cn/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"308",-1),de=t("td",{style:{"text-align":"left"}},"二维区域和检索 - 矩阵可修改 🔒",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},ce=t("code",null,"设计",-1),ae=t("code",null,"树状数组",-1),ie=t("code",null,"线段树",-1),he=t("code",null,"2+",-1),ue=t("td",{style:{"text-align":"center"}},"🔴",-1),ge={style:{"text-align":"center"}},me={href:"https://leetcode.cn/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"315",-1),pe=t("td",{style:{"text-align":"left"}},"计算右侧小于当前元素的个数",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"树状数组",-1),qe=t("code",null,"线段树",-1),we=t("code",null,"数组",-1),Ie=t("code",null,"4+",-1),ve=t("td",{style:{"text-align":"center"}},"🔴",-1),ze={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},"327",-1),Ce=t("td",{style:{"text-align":"left"}},"区间和的个数",-1),Ne=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},Ee=t("code",null,"树状数组",-1),Ke=t("code",null,"线段树",-1),Re=t("code",null,"数组",-1),Te=t("code",null,"4+",-1),Ae=t("td",{style:{"text-align":"center"}},"🔴",-1),Me={style:{"text-align":"center"}},Oe={href:"https://leetcode.cn/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"406",-1),De=t("td",{style:{"text-align":"left"}},"根据身高重建队列",-1),Fe={style:{"text-align":"center"}},Ge={style:{"text-align":"left"}},He=t("code",null,"树状数组",-1),Je=t("code",null,"线段树",-1),Qe=t("code",null,"数组",-1),Se=t("code",null,"1+",-1),We=t("td",{style:{"text-align":"center"}},"🟠",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"493",-1),to=t("td",{style:{"text-align":"left"}},"翻转对",-1),eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},no=t("code",null,"树状数组",-1),lo=t("code",null,"线段树",-1),so=t("code",null,"数组",-1),_o=t("code",null,"4+",-1),ro=t("td",{style:{"text-align":"center"}},"🔴",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"673",-1),uo=t("td",{style:{"text-align":"left"}},"最长递增子序列的个数",-1),go={style:{"text-align":"center"}},mo={style:{"text-align":"left"}},fo=t("code",null,"树状数组",-1),yo=t("code",null,"线段树",-1),po=t("code",null,"数组",-1),xo=t("code",null,"1+",-1),bo=t("td",{style:{"text-align":"center"}},"🟠",-1),ko={style:{"text-align":"center"}},qo={href:"https://leetcode.cn/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},wo={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},"683",-1),vo=t("td",{style:{"text-align":"left"}},"K 个关闭的灯泡 🔒",-1),zo=t("td",{style:{"text-align":"center"}},null,-1),jo={style:{"text-align":"left"}},Lo=t("code",null,"树状数组",-1),Bo=t("code",null,"线段树",-1),Co=t("code",null,"队列",-1),No=t("code",null,"5+",-1),Vo=t("td",{style:{"text-align":"center"}},"🔴",-1),Eo={style:{"text-align":"center"}},Ko={href:"https://leetcode.cn/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Ro={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},"1157",-1),Ao=t("td",{style:{"text-align":"left"}},"子数组中占绝大多数的元素",-1),Mo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"设计",-1),Uo=t("code",null,"树状数组",-1),Do=t("code",null,"线段树",-1),Fo=t("code",null,"2+",-1),Go=t("td",{style:{"text-align":"center"}},"🔴",-1),Ho={style:{"text-align":"center"}},Jo={href:"https://leetcode.cn/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},Qo={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},"1395",-1),Wo=t("td",{style:{"text-align":"left"}},"统计作战单位数",-1),Xo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"树状数组",-1),$o=t("code",null,"线段树",-1),tn=t("code",null,"数组",-1),en=t("code",null,"1+",-1),on=t("td",{style:{"text-align":"center"}},"🟠",-1),nn={style:{"text-align":"center"}},ln={href:"https://leetcode.cn/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},"1409",-1),_n=t("td",{style:{"text-align":"left"}},"查询带键的排列",-1),rn=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},an=t("code",null,"树状数组",-1),hn=t("code",null,"数组",-1),un=t("code",null,"模拟",-1),gn=t("td",{style:{"text-align":"center"}},"🟠",-1),mn={style:{"text-align":"center"}},fn={href:"https://leetcode.cn/problems/queries-on-a-permutation-with-key",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://leetcode.com/problems/queries-on-a-permutation-with-key",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},"1505",-1),xn=t("td",{style:{"text-align":"left"}},"最多 K 次交换相邻数位后得到的最小整数",-1),bn=t("td",{style:{"text-align":"center"}},null,-1),kn={style:{"text-align":"left"}},qn=t("code",null,"贪心",-1),wn=t("code",null,"树状数组",-1),In=t("code",null,"线段树",-1),vn=t("code",null,"1+",-1),zn=t("td",{style:{"text-align":"center"}},"🔴",-1),jn={style:{"text-align":"center"}},Ln={href:"https://leetcode.cn/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},"1649",-1),Nn=t("td",{style:{"text-align":"left"}},"通过指令创建有序数组",-1),Vn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},Kn=t("code",null,"树状数组",-1),Rn=t("code",null,"线段树",-1),Tn=t("code",null,"数组",-1),An=t("code",null,"4+",-1),Mn=t("td",{style:{"text-align":"center"}},"🔴",-1),On={style:{"text-align":"center"}},Pn={href:"https://leetcode.cn/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},"1756",-1),Fn=t("td",{style:{"text-align":"left"}},"设计最近使用（MRU）队列 🔒",-1),Gn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},Jn=t("code",null,"栈",-1),Qn=t("code",null,"设计",-1),Sn=t("code",null,"树状数组",-1),Wn=t("code",null,"3+",-1),Xn=t("td",{style:{"text-align":"center"}},"🟠",-1),Yn={style:{"text-align":"center"}},Zn={href:"https://leetcode.cn/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},"1964",-1),el=t("td",{style:{"text-align":"left"}},"找出到每个位置为止最长的有效障碍赛跑路线",-1),ol={style:{"text-align":"center"}},nl={style:{"text-align":"left"}},ll=t("code",null,"树状数组",-1),sl=t("code",null,"数组",-1),dl=t("code",null,"二分查找",-1),_l=t("td",{style:{"text-align":"center"}},"🔴",-1),rl={style:{"text-align":"center"}},cl={href:"https://leetcode.cn/problems/find-the-longest-valid-obstacle-course-at-each-position",target:"_blank",rel:"noopener noreferrer"},al={href:"https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},"2031",-1),hl=t("td",{style:{"text-align":"left"}},"1 比 0 多的子数组个数 🔒",-1),ul=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"树状数组",-1),fl=t("code",null,"线段树",-1),yl=t("code",null,"数组",-1),pl=t("code",null,"4+",-1),xl=t("td",{style:{"text-align":"center"}},"🟠",-1),bl={style:{"text-align":"center"}},kl={href:"https://leetcode.cn/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},"2179",-1),Il=t("td",{style:{"text-align":"left"}},"统计数组中好三元组数目",-1),vl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},jl=t("code",null,"树状数组",-1),Ll=t("code",null,"线段树",-1),Bl=t("code",null,"数组",-1),Cl=t("code",null,"4+",-1),Nl=t("td",{style:{"text-align":"center"}},"🔴",-1),Vl={style:{"text-align":"center"}},El={href:"https://leetcode.cn/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},Kl={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},"2193",-1),Tl=t("td",{style:{"text-align":"left"}},"得到回文串的最少操作次数",-1),Al=t("td",{style:{"text-align":"center"}},null,-1),Ml={style:{"text-align":"left"}},Ol=t("code",null,"贪心",-1),Pl=t("code",null,"树状数组",-1),Ul=t("code",null,"双指针",-1),Dl=t("code",null,"1+",-1),Fl=t("td",{style:{"text-align":"center"}},"🔴",-1),Gl={style:{"text-align":"center"}},Hl={href:"https://leetcode.cn/problems/minimum-number-of-moves-to-make-palindrome",target:"_blank",rel:"noopener noreferrer"},Jl={href:"https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},"2250",-1),Sl=t("td",{style:{"text-align":"left"}},"统计包含每个点的矩形数目",-1),Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"树状数组",-1),Zl=t("code",null,"数组",-1),$l=t("code",null,"二分查找",-1),ts=t("code",null,"1+",-1),es=t("td",{style:{"text-align":"center"}},"🟠",-1),os={style:{"text-align":"center"}},ns={href:"https://leetcode.cn/problems/count-number-of-rectangles-containing-each-point",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://leetcode.com/problems/count-number-of-rectangles-containing-each-point",target:"_blank",rel:"noopener noreferrer"},ss=t("td",{style:{"text-align":"center"}},"2286",-1),ds=t("td",{style:{"text-align":"left"}},"以组为单位订音乐会的门票",-1),_s=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},cs=t("code",null,"设计",-1),as=t("code",null,"树状数组",-1),is=t("code",null,"线段树",-1),hs=t("code",null,"1+",-1),us=t("td",{style:{"text-align":"center"}},"🔴",-1),gs={style:{"text-align":"center"}},ms={href:"https://leetcode.cn/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},"2407",-1),ps=t("td",{style:{"text-align":"left"}},"最长递增子序列 II",-1),xs=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ks=t("code",null,"树状数组",-1),qs=t("code",null,"线段树",-1),ws=t("code",null,"队列",-1),Is=t("code",null,"4+",-1),vs=t("td",{style:{"text-align":"center"}},"🔴",-1),zs={style:{"text-align":"center"}},js={href:"https://leetcode.cn/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Ls={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},"2424",-1),Cs=t("td",{style:{"text-align":"left"}},"最长上传前缀",-1),Ns=t("td",{style:{"text-align":"center"}},null,-1),Vs={style:{"text-align":"left"}},Es=t("code",null,"并查集",-1),Ks=t("code",null,"设计",-1),Rs=t("code",null,"树状数组",-1),Ts=t("code",null,"4+",-1),As=t("td",{style:{"text-align":"center"}},"🟠",-1),Ms={style:{"text-align":"center"}},Os={href:"https://leetcode.cn/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},Ps={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},"2426",-1),Ds=t("td",{style:{"text-align":"left"}},"满足不等式的数对数目",-1),Fs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Hs=t("code",null,"树状数组",-1),Js=t("code",null,"线段树",-1),Qs=t("code",null,"数组",-1),Ss=t("code",null,"4+",-1),Ws=t("td",{style:{"text-align":"center"}},"🔴",-1),Xs={style:{"text-align":"center"}},Ys={href:"https://leetcode.cn/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Zs={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},$s=t("td",{style:{"text-align":"center"}},"2519",-1),td=t("td",{style:{"text-align":"left"}},"统计 K-Big 索引的数量 🔒",-1),ed=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},nd=t("code",null,"树状数组",-1),ld=t("code",null,"线段树",-1),sd=t("code",null,"数组",-1),dd=t("code",null,"4+",-1),_d=t("td",{style:{"text-align":"center"}},"🔴",-1),rd={style:{"text-align":"center"}},cd={href:"https://leetcode.cn/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},ad={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},id=t("td",{style:{"text-align":"center"}},"2552",-1),hd=t("td",{style:{"text-align":"left"}},"统计上升四元组",-1),ud=t("td",{style:{"text-align":"center"}},null,-1),gd={style:{"text-align":"left"}},md=t("code",null,"树状数组",-1),fd=t("code",null,"数组",-1),yd=t("code",null,"动态规划",-1),pd=t("code",null,"2+",-1),xd=t("td",{style:{"text-align":"center"}},"🔴",-1),bd={style:{"text-align":"center"}},kd={href:"https://leetcode.cn/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},qd={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},"2659",-1),Id=t("td",{style:{"text-align":"left"}},"将数组清空",-1),vd=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},jd=t("code",null,"贪心",-1),Ld=t("code",null,"树状数组",-1),Bd=t("code",null,"线段树",-1),Cd=t("code",null,"4+",-1),Nd=t("td",{style:{"text-align":"center"}},"🔴",-1),Vd={style:{"text-align":"center"}},Ed={href:"https://leetcode.cn/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},Kd={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},"2736",-1),Td=t("td",{style:{"text-align":"left"}},"最大和查询",-1),Ad=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Od=t("code",null,"栈",-1),Pd=t("code",null,"树状数组",-1),Ud=t("code",null,"线段树",-1),Dd=t("code",null,"4+",-1),Fd=t("td",{style:{"text-align":"center"}},"🔴",-1),Gd={style:{"text-align":"center"}},Hd={href:"https://leetcode.cn/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Jd={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"2907",-1),Sd=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 I 🔒",-1),Wd=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Yd=t("code",null,"树状数组",-1),Zd=t("code",null,"线段树",-1),$d=t("code",null,"数组",-1),t_=t("td",{style:{"text-align":"center"}},"🟠",-1),e_={style:{"text-align":"center"}},o_={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},n_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},"2916",-1),s_=t("td",{style:{"text-align":"left"}},"子数组不同元素数目的平方和 II",-1),d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},r_=t("code",null,"树状数组",-1),c_=t("code",null,"线段树",-1),a_=t("code",null,"数组",-1),i_=t("code",null,"1+",-1),h_=t("td",{style:{"text-align":"center"}},"🔴",-1),u_={style:{"text-align":"center"}},g_={href:"https://leetcode.cn/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},m_={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},f_=t("td",{style:{"text-align":"center"}},"2921",-1),y_=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 II 🔒",-1),p_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"树状数组",-1),k_=t("code",null,"线段树",-1),q_=t("code",null,"数组",-1),w_=t("td",{style:{"text-align":"center"}},"🔴",-1),I_={style:{"text-align":"center"}},v_={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},z_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"2926",-1),L_=t("td",{style:{"text-align":"left"}},"平衡子序列的最大和",-1),B_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},N_=t("code",null,"树状数组",-1),V_=t("code",null,"线段树",-1),E_=t("code",null,"数组",-1),K_=t("code",null,"2+",-1),R_=t("td",{style:{"text-align":"center"}},"🔴",-1),T_={style:{"text-align":"center"}},A_={href:"https://leetcode.cn/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},M_={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},"2940",-1),P_=t("td",{style:{"text-align":"left"}},"找到 Alice 和 Bob 可以相遇的建筑",-1),U_={style:{"text-align":"center"}},D_={style:{"text-align":"left"}},F_=t("code",null,"栈",-1),G_=t("code",null,"树状数组",-1),H_=t("code",null,"线段树",-1),J_=t("code",null,"4+",-1),Q_=t("td",{style:{"text-align":"center"}},"🔴",-1),S_={style:{"text-align":"center"}},W_={href:"https://leetcode.cn/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},X_={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},"3009",-1),Z_=t("td",{style:{"text-align":"left"}},"折线图上的最大交点数量 🔒",-1),$_=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"树状数组",-1),or=t("code",null,"几何",-1),nr=t("code",null,"数组",-1),lr=t("code",null,"1+",-1),sr=t("td",{style:{"text-align":"center"}},"🔴",-1),dr={style:{"text-align":"center"}},_r={href:"https://leetcode.cn/problems/maximum-number-of-intersections-on-the-chart",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://leetcode.com/problems/maximum-number-of-intersections-on-the-chart",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"3072",-1),ar=t("td",{style:{"text-align":"left"}},"将元素分配到两个数组中 II",-1),ir=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"树状数组",-1),gr=t("code",null,"线段树",-1),mr=t("code",null,"数组",-1),fr=t("code",null,"1+",-1),yr=t("td",{style:{"text-align":"center"}},"🔴",-1),pr={style:{"text-align":"center"}},xr={href:"https://leetcode.cn/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},br={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},"3109",-1),qr=t("td",{style:{"text-align":"left"}},"查找排列的下标 🔒",-1),wr=t("td",{style:{"text-align":"center"}},null,-1),Ir={style:{"text-align":"left"}},vr=t("code",null,"树状数组",-1),zr=t("code",null,"线段树",-1),jr=t("code",null,"数组",-1),Lr=t("code",null,"4+",-1),Br=t("td",{style:{"text-align":"center"}},"🟠",-1),Cr={style:{"text-align":"center"}},Nr={href:"https://leetcode.cn/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Er=t("td",{style:{"text-align":"center"}},"3161",-1),Kr=t("td",{style:{"text-align":"left"}},"物块放置查询",-1),Rr=t("td",{style:{"text-align":"center"}},null,-1),Tr={style:{"text-align":"left"}},Ar=t("code",null,"树状数组",-1),Mr=t("code",null,"线段树",-1),Or=t("code",null,"数组",-1),Pr=t("code",null,"1+",-1),Ur=t("td",{style:{"text-align":"center"}},"🔴",-1),Dr={style:{"text-align":"center"}},Fr={href:"https://leetcode.cn/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Gr={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Hr=t("td",{style:{"text-align":"center"}},"3187",-1),Jr=t("td",{style:{"text-align":"left"}},"数组中的峰值",-1),Qr=t("td",{style:{"text-align":"center"}},null,-1),Sr={style:{"text-align":"left"}},Wr=t("code",null,"树状数组",-1),Xr=t("code",null,"线段树",-1),Yr=t("code",null,"数组",-1),Zr=t("td",{style:{"text-align":"center"}},"🔴",-1),$r={style:{"text-align":"center"}},tc={href:"https://leetcode.cn/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},ec={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},"3245",-1),nc=t("td",{style:{"text-align":"left"}},"交替组 III",-1),lc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},dc=t("code",null,"树状数组",-1),_c=t("code",null,"数组",-1),rc=t("td",{style:{"text-align":"center"}},"🔴",-1),cc={style:{"text-align":"center"}},ac={href:"https://leetcode.cn/problems/alternating-groups-iii",target:"_blank",rel:"noopener noreferrer"},ic={href:"https://leetcode.com/problems/alternating-groups-iii",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},"3380",-1),uc=t("td",{style:{"text-align":"left"}},"用点构造面积最大的矩形 I",-1),gc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},fc=t("code",null,"树状数组",-1),yc=t("code",null,"线段树",-1),pc=t("code",null,"几何",-1),xc=t("code",null,"4+",-1),bc=t("td",{style:{"text-align":"center"}},"🟠",-1),kc={style:{"text-align":"center"}},qc={href:"https://leetcode.cn/problems/maximum-area-rectangle-with-point-constraints-i",target:"_blank",rel:"noopener noreferrer"},wc={href:"https://leetcode.com/problems/maximum-area-rectangle-with-point-constraints-i",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},"3382",-1),vc=t("td",{style:{"text-align":"left"}},"用点构造面积最大的矩形 II",-1),zc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},Lc=t("code",null,"树状数组",-1),Bc=t("code",null,"线段树",-1),Cc=t("code",null,"几何",-1),Nc=t("code",null,"3+",-1),Vc=t("td",{style:{"text-align":"center"}},"🔴",-1),Ec={style:{"text-align":"center"}},Kc={href:"https://leetcode.cn/problems/maximum-area-rectangle-with-point-constraints-ii",target:"_blank",rel:"noopener noreferrer"},Rc={href:"https://leetcode.com/problems/maximum-area-rectangle-with-point-constraints-ii",target:"_blank",rel:"noopener noreferrer"},Tc=t("td",{style:{"text-align":"center"}},"LCP 05",-1),Ac=t("td",{style:{"text-align":"left"}},"发 LeetCoin",-1),Mc=t("td",{style:{"text-align":"center"}},null,-1),Oc={style:{"text-align":"left"}},Pc=t("code",null,"树状数组",-1),Uc=t("code",null,"线段树",-1),Dc=t("code",null,"数组",-1),Fc=t("td",{style:{"text-align":"center"}},"🔴",-1),Gc={style:{"text-align":"center"}},Hc={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Qc=t("td",{style:{"text-align":"left"}},"数组中的逆序对",-1),Sc={style:{"text-align":"center"}},Wc={style:{"text-align":"left"}},Xc=t("code",null,"树状数组",-1),Yc=t("code",null,"线段树",-1),Zc=t("code",null,"数组",-1),$c=t("code",null,"4+",-1),ta=t("td",{style:{"text-align":"center"}},"🔴",-1),ea={style:{"text-align":"center"}},oa={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},"面试题 10.10",-1),la=t("td",{style:{"text-align":"left"}},"数字流的秩",-1),sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"设计",-1),ra=t("code",null,"树状数组",-1),ca=t("code",null,"二分查找",-1),aa=t("code",null,"1+",-1),ia=t("td",{style:{"text-align":"center"}},"🟠",-1),ha={style:{"text-align":"center"}},ua={href:"https://leetcode.cn/problems/rank-from-stream-lcci",target:"_blank",rel:"noopener noreferrer"};function ga(ma,fa){const n=d("RouterLink"),s=d("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[u,g,t("p",null,[o(n,{to:"/tag/array.html"},{default:l(()=>[m]),_:1}),e(),o(n,{to:"/tag/matrix.html"},{default:l(()=>[f]),_:1}),e(),o(n,{to:"/tag/linked-list.html"},{default:l(()=>[y]),_:1}),e(),o(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),e(),o(n,{to:"/tag/stack.html"},{default:l(()=>[x]),_:1}),e(),o(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[b]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[k]),_:1}),e(),o(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[q]),_:1}),e(),o(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[I]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[z]),_:1}),e(),o(n,{to:"/tag/tree.html"},{default:l(()=>[j]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[B]),_:1}),e(),o(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[C]),_:1}),e(),o(n,{to:"/tag/graph.html"},{default:l(()=>[N]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[V]),_:1}),e(),o(n,{to:"/tag/topological-sort.html"},{default:l(()=>[E]),_:1}),e(),o(n,{to:"/tag/shortest-path.html"},{default:l(()=>[K]),_:1}),e(),o(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[R]),_:1}),e(),o(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),e(),o(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[M]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[O]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[P]),_:1}),e(),U,e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[D]),_:1})]),F,t("p",null,[o(n,{to:"/tag/enumeration.html"},{default:l(()=>[G]),_:1}),e(),o(n,{to:"/tag/recursion.html"},{default:l(()=>[H]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[J]),_:1}),e(),o(n,{to:"/tag/backtracking.html"},{default:l(()=>[Q]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[S]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[X]),_:1}),e(),o(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[Y]),_:1}),e(),o(n,{to:"/tag/counting-sort.html"},{default:l(()=>[Z]),_:1}),e(),o(n,{to:"/tag/radix-sort.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/merge-sort.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/quickselect.html"},{default:l(()=>[et]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[ot]),_:1}),e(),o(n,{to:"/tag/memoization.html"},{default:l(()=>[nt]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[lt]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[st]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[dt]),_:1}),e(),o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[_t]),_:1}),e(),o(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),e(),o(n,{to:"/tag/counting.html"},{default:l(()=>[ct]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[at]),_:1}),e(),o(n,{to:"/tag/bitmask.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[ht]),_:1}),e(),o(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[ut]),_:1}),e(),o(n,{to:"/tag/line-sweep.html"},{default:l(()=>[gt]),_:1})]),mt,t("p",null,[o(n,{to:"/tag/math.html"},{default:l(()=>[ft]),_:1}),e(),o(n,{to:"/tag/number-theory.html"},{default:l(()=>[yt]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[pt]),_:1}),e(),o(n,{to:"/tag/game-theory.html"},{default:l(()=>[xt]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[bt]),_:1}),e(),o(n,{to:"/tag/combinatorics.html"},{default:l(()=>[kt]),_:1}),e(),o(n,{to:"/tag/randomized.html"},{default:l(()=>[qt]),_:1}),e(),o(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),e(),o(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[vt]),_:1}),e(),o(n,{to:"/tag/database.html"},{default:l(()=>[zt]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[jt]),_:1}),e(),o(n,{to:"/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),e(),o(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Bt]),_:1}),e(),o(n,{to:"/tag/interactive.html"},{default:l(()=>[Ct]),_:1}),e(),o(n,{to:"/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),e(),o(n,{to:"/tag/concurrency.html"},{default:l(()=>[Vt]),_:1})])]),Et,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Rt,Tt,At,t("td",Mt,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ot]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Pt]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ut]),_:1}),e(),Dt]),Ft,t("td",Gt,[t("a",Ht,[e("🀄️"),o(s)]),e(),t("a",Jt,[e("🔗"),o(s)])])]),t("tr",null,[Qt,St,t("td",Wt,[o(n,{to:"/problem/0307.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Xt,[o(n,{to:"/tag/design.html"},{default:l(()=>[Yt]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Zt]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",ne,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",re,[o(n,{to:"/tag/design.html"},{default:l(()=>[ce]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ae]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ie]),_:1}),e(),he]),ue,t("td",ge,[t("a",me,[e("🀄️"),o(s)]),e(),t("a",fe,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,xe,t("td",be,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ke]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[qe]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[we]),_:1}),e(),Ie]),ve,t("td",ze,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Le,[e("🔗"),o(s)])])]),t("tr",null,[Be,Ce,Ne,t("td",Ve,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ee]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ke]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Re]),_:1}),e(),Te]),Ae,t("td",Me,[t("a",Oe,[e("🀄️"),o(s)]),e(),t("a",Pe,[e("🔗"),o(s)])])]),t("tr",null,[Ue,De,t("td",Fe,[o(n,{to:"/problem/0406.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Ge,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[He]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Je]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Qe]),_:1}),e(),Se]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,eo,t("td",oo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[no]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[lo]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[so]),_:1}),e(),_o]),ro,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,uo,t("td",go,[o(n,{to:"/problem/0673.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",mo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[fo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[yo]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[po]),_:1}),e(),xo]),bo,t("td",ko,[t("a",qo,[e("🀄️"),o(s)]),e(),t("a",wo,[e("🔗"),o(s)])])]),t("tr",null,[Io,vo,zo,t("td",jo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Lo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Bo]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[Co]),_:1}),e(),No]),Vo,t("td",Eo,[t("a",Ko,[e("🀄️"),o(s)]),e(),t("a",Ro,[e("🔗"),o(s)])])]),t("tr",null,[To,Ao,Mo,t("td",Oo,[o(n,{to:"/tag/design.html"},{default:l(()=>[Po]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Uo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Do]),_:1}),e(),Fo]),Go,t("td",Ho,[t("a",Jo,[e("🀄️"),o(s)]),e(),t("a",Qo,[e("🔗"),o(s)])])]),t("tr",null,[So,Wo,Xo,t("td",Yo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Zo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[$o]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[tn]),_:1}),e(),en]),on,t("td",nn,[t("a",ln,[e("🀄️"),o(s)]),e(),t("a",sn,[e("🔗"),o(s)])])]),t("tr",null,[dn,_n,rn,t("td",cn,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[an]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[hn]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[un]),_:1})]),gn,t("td",mn,[t("a",fn,[e("🀄️"),o(s)]),e(),t("a",yn,[e("🔗"),o(s)])])]),t("tr",null,[pn,xn,bn,t("td",kn,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[qn]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[wn]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[In]),_:1}),e(),vn]),zn,t("td",jn,[t("a",Ln,[e("🀄️"),o(s)]),e(),t("a",Bn,[e("🔗"),o(s)])])]),t("tr",null,[Cn,Nn,Vn,t("td",En,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Kn]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Rn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Tn]),_:1}),e(),An]),Mn,t("td",On,[t("a",Pn,[e("🀄️"),o(s)]),e(),t("a",Un,[e("🔗"),o(s)])])]),t("tr",null,[Dn,Fn,Gn,t("td",Hn,[o(n,{to:"/tag/stack.html"},{default:l(()=>[Jn]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Qn]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Sn]),_:1}),e(),Wn]),Xn,t("td",Yn,[t("a",Zn,[e("🀄️"),o(s)]),e(),t("a",$n,[e("🔗"),o(s)])])]),t("tr",null,[tl,el,t("td",ol,[o(n,{to:"/problem/1964.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",nl,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ll]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[sl]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[dl]),_:1})]),_l,t("td",rl,[t("a",cl,[e("🀄️"),o(s)]),e(),t("a",al,[e("🔗"),o(s)])])]),t("tr",null,[il,hl,ul,t("td",gl,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ml]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[fl]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[yl]),_:1}),e(),pl]),xl,t("td",bl,[t("a",kl,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[wl,Il,vl,t("td",zl,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[jl]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ll]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Bl]),_:1}),e(),Cl]),Nl,t("td",Vl,[t("a",El,[e("🀄️"),o(s)]),e(),t("a",Kl,[e("🔗"),o(s)])])]),t("tr",null,[Rl,Tl,Al,t("td",Ml,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Ol]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Pl]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[Ul]),_:1}),e(),Dl]),Fl,t("td",Gl,[t("a",Hl,[e("🀄️"),o(s)]),e(),t("a",Jl,[e("🔗"),o(s)])])]),t("tr",null,[Ql,Sl,Wl,t("td",Xl,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Yl]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Zl]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[$l]),_:1}),e(),ts]),es,t("td",os,[t("a",ns,[e("🀄️"),o(s)]),e(),t("a",ls,[e("🔗"),o(s)])])]),t("tr",null,[ss,ds,_s,t("td",rs,[o(n,{to:"/tag/design.html"},{default:l(()=>[cs]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[as]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[is]),_:1}),e(),hs]),us,t("td",gs,[t("a",ms,[e("🀄️"),o(s)]),e(),t("a",fs,[e("🔗"),o(s)])])]),t("tr",null,[ys,ps,xs,t("td",bs,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ks]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[qs]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[ws]),_:1}),e(),Is]),vs,t("td",zs,[t("a",js,[e("🀄️"),o(s)]),e(),t("a",Ls,[e("🔗"),o(s)])])]),t("tr",null,[Bs,Cs,Ns,t("td",Vs,[o(n,{to:"/tag/union-find.html"},{default:l(()=>[Es]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Ks]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Rs]),_:1}),e(),Ts]),As,t("td",Ms,[t("a",Os,[e("🀄️"),o(s)]),e(),t("a",Ps,[e("🔗"),o(s)])])]),t("tr",null,[Us,Ds,Fs,t("td",Gs,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Hs]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Js]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Qs]),_:1}),e(),Ss]),Ws,t("td",Xs,[t("a",Ys,[e("🀄️"),o(s)]),e(),t("a",Zs,[e("🔗"),o(s)])])]),t("tr",null,[$s,td,ed,t("td",od,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[nd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ld]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[sd]),_:1}),e(),dd]),_d,t("td",rd,[t("a",cd,[e("🀄️"),o(s)]),e(),t("a",ad,[e("🔗"),o(s)])])]),t("tr",null,[id,hd,ud,t("td",gd,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[md]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[fd]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[yd]),_:1}),e(),pd]),xd,t("td",bd,[t("a",kd,[e("🀄️"),o(s)]),e(),t("a",qd,[e("🔗"),o(s)])])]),t("tr",null,[wd,Id,vd,t("td",zd,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[jd]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ld]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Bd]),_:1}),e(),Cd]),Nd,t("td",Vd,[t("a",Ed,[e("🀄️"),o(s)]),e(),t("a",Kd,[e("🔗"),o(s)])])]),t("tr",null,[Rd,Td,Ad,t("td",Md,[o(n,{to:"/tag/stack.html"},{default:l(()=>[Od]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Pd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ud]),_:1}),e(),Dd]),Fd,t("td",Gd,[t("a",Hd,[e("🀄️"),o(s)]),e(),t("a",Jd,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Sd,Wd,t("td",Xd,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Yd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Zd]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[$d]),_:1})]),t_,t("td",e_,[t("a",o_,[e("🀄️"),o(s)]),e(),t("a",n_,[e("🔗"),o(s)])])]),t("tr",null,[l_,s_,d_,t("td",__,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[r_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[c_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[a_]),_:1}),e(),i_]),h_,t("td",u_,[t("a",g_,[e("🀄️"),o(s)]),e(),t("a",m_,[e("🔗"),o(s)])])]),t("tr",null,[f_,y_,p_,t("td",x_,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[b_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[k_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[q_]),_:1})]),w_,t("td",I_,[t("a",v_,[e("🀄️"),o(s)]),e(),t("a",z_,[e("🔗"),o(s)])])]),t("tr",null,[j_,L_,B_,t("td",C_,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[N_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[V_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[E_]),_:1}),e(),K_]),R_,t("td",T_,[t("a",A_,[e("🀄️"),o(s)]),e(),t("a",M_,[e("🔗"),o(s)])])]),t("tr",null,[O_,P_,t("td",U_,[o(n,{to:"/problem/2940.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",D_,[o(n,{to:"/tag/stack.html"},{default:l(()=>[F_]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[G_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[H_]),_:1}),e(),J_]),Q_,t("td",S_,[t("a",W_,[e("🀄️"),o(s)]),e(),t("a",X_,[e("🔗"),o(s)])])]),t("tr",null,[Y_,Z_,$_,t("td",tr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[er]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[or]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[nr]),_:1}),e(),lr]),sr,t("td",dr,[t("a",_r,[e("🀄️"),o(s)]),e(),t("a",rr,[e("🔗"),o(s)])])]),t("tr",null,[cr,ar,ir,t("td",hr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ur]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[gr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[mr]),_:1}),e(),fr]),yr,t("td",pr,[t("a",xr,[e("🀄️"),o(s)]),e(),t("a",br,[e("🔗"),o(s)])])]),t("tr",null,[kr,qr,wr,t("td",Ir,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[vr]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[zr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[jr]),_:1}),e(),Lr]),Br,t("td",Cr,[t("a",Nr,[e("🀄️"),o(s)]),e(),t("a",Vr,[e("🔗"),o(s)])])]),t("tr",null,[Er,Kr,Rr,t("td",Tr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ar]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Mr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Or]),_:1}),e(),Pr]),Ur,t("td",Dr,[t("a",Fr,[e("🀄️"),o(s)]),e(),t("a",Gr,[e("🔗"),o(s)])])]),t("tr",null,[Hr,Jr,Qr,t("td",Sr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Wr]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Xr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Yr]),_:1})]),Zr,t("td",$r,[t("a",tc,[e("🀄️"),o(s)]),e(),t("a",ec,[e("🔗"),o(s)])])]),t("tr",null,[oc,nc,lc,t("td",sc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[dc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[_c]),_:1})]),rc,t("td",cc,[t("a",ac,[e("🀄️"),o(s)]),e(),t("a",ic,[e("🔗"),o(s)])])]),t("tr",null,[hc,uc,gc,t("td",mc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[fc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[yc]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[pc]),_:1}),e(),xc]),bc,t("td",kc,[t("a",qc,[e("🀄️"),o(s)]),e(),t("a",wc,[e("🔗"),o(s)])])]),t("tr",null,[Ic,vc,zc,t("td",jc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Lc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Bc]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[Cc]),_:1}),e(),Nc]),Vc,t("td",Ec,[t("a",Kc,[e("🀄️"),o(s)]),e(),t("a",Rc,[e("🔗"),o(s)])])]),t("tr",null,[Tc,Ac,Mc,t("td",Oc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Pc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Uc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Dc]),_:1})]),Fc,t("td",Gc,[t("a",Hc,[e("🀄️"),o(s)])])]),t("tr",null,[Jc,Qc,t("td",Sc,[o(n,{to:"/offer/jz_offer_51_1.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Wc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Xc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Yc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Zc]),_:1}),e(),$c]),ta,t("td",ea,[t("a",oa,[e("🀄️"),o(s)])])]),t("tr",null,[na,la,sa,t("td",da,[o(n,{to:"/tag/design.html"},{default:l(()=>[_a]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ra]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[ca]),_:1}),e(),aa]),ia,t("td",ha,[t("a",ua,[e("🀄️"),o(s)])])])])])])}const pa=_(i,[["render",ga],["__file","binary-indexed-tree.html.vue"]]);export{pa as default};
