import{_,r as d,o as r,c,a as t,d as o,w as l,b as e,f as i}from"./app-aQeLbVW9.js";const a={},h=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),e(" 字符串匹配")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("span",{class:"blue"},"字符串匹配",-1),N=t("code",null,"树",-1),V=t("code",null,"二叉树",-1),B=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),M=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),H=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),K=t("p",null,[t("strong",null,"算法")],-1),O=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),Q=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),lt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),at=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),Nt=t("code",null,"设计",-1),Vt=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Mt=t("td",{style:{"text-align":"center"}},"28",-1),Tt=t("td",{style:{"text-align":"left"}},"找出字符串中第一个匹配项的下标",-1),At={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Ft=t("code",null,"双指针",-1),Gt=t("code",null,"字符串",-1),Ht=t("code",null,"字符串匹配",-1),Jt=t("td",{style:{"text-align":"center"}},"🟢",-1),Kt={style:{"text-align":"center"}},Ot={href:"https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St=t("td",{style:{"text-align":"left"}},"最短回文串",-1),Ut=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Xt=t("code",null,"字符串",-1),Yt=t("code",null,"字符串匹配",-1),Zt=t("code",null,"哈希函数",-1),$t=t("code",null,"1+",-1),te=t("td",{style:{"text-align":"center"}},"🔴",-1),ee={style:{"text-align":"center"}},oe={href:"https://leetcode.cn/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},le=t("td",{style:{"text-align":"center"}},"459",-1),se=t("td",{style:{"text-align":"left"}},"重复的子字符串",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},re=t("code",null,"字符串",-1),ce=t("code",null,"字符串匹配",-1),ie=t("td",{style:{"text-align":"center"}},"🟢",-1),ae={style:{"text-align":"center"}},he={href:"https://leetcode.cn/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},"572",-1),fe=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),me={style:{"text-align":"center"}},pe={style:{"text-align":"left"}},ye=t("code",null,"树",-1),xe=t("code",null,"深度优先搜索",-1),be=t("code",null,"二叉树",-1),ke=t("code",null,"2+",-1),we=t("td",{style:{"text-align":"center"}},"🟢",-1),ve={style:{"text-align":"center"}},Ie={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"616",-1),Ne=t("td",{style:{"text-align":"left"}},"给字符串添加加粗标签 🔒",-1),Ve=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Ce=t("code",null,"字典树",-1),Ee=t("code",null,"数组",-1),ze=t("code",null,"哈希表",-1),Re=t("code",null,"2+",-1),je=t("td",{style:{"text-align":"center"}},"🟠",-1),Me={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},"686",-1),Fe=t("td",{style:{"text-align":"left"}},"重复叠加字符串匹配",-1),Ge=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},Je=t("code",null,"字符串",-1),Ke=t("code",null,"字符串匹配",-1),Oe=t("td",{style:{"text-align":"center"}},"🟠",-1),Pe={style:{"text-align":"center"}},Qe={href:"https://leetcode.cn/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"758",-1),We=t("td",{style:{"text-align":"left"}},"字符串中的加粗单词 🔒",-1),Xe=t("td",{style:{"text-align":"center"}},null,-1),Ye={style:{"text-align":"left"}},Ze=t("code",null,"字典树",-1),$e=t("code",null,"数组",-1),to=t("code",null,"哈希表",-1),eo=t("code",null,"2+",-1),oo=t("td",{style:{"text-align":"center"}},"🟠",-1),no={style:{"text-align":"center"}},lo={href:"https://leetcode.cn/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},so={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},"796",-1),ro=t("td",{style:{"text-align":"left"}},"旋转字符串",-1),co={style:{"text-align":"center"}},io={style:{"text-align":"left"}},ao=t("code",null,"字符串",-1),ho=t("code",null,"字符串匹配",-1),go=t("td",{style:{"text-align":"center"}},"🟢",-1),uo={style:{"text-align":"center"}},fo={href:"https://leetcode.cn/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},"1023",-1),yo=t("td",{style:{"text-align":"left"}},"驼峰式匹配",-1),xo=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},ko=t("code",null,"字典树",-1),wo=t("code",null,"数组",-1),vo=t("code",null,"双指针",-1),Io=t("code",null,"2+",-1),qo=t("td",{style:{"text-align":"center"}},"🟠",-1),Lo={style:{"text-align":"center"}},No={href:"https://leetcode.cn/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"1392",-1),Co=t("td",{style:{"text-align":"left"}},"最长快乐前缀",-1),Eo=t("td",{style:{"text-align":"center"}},null,-1),zo={style:{"text-align":"left"}},Ro=t("code",null,"字符串",-1),jo=t("code",null,"字符串匹配",-1),Mo=t("code",null,"哈希函数",-1),To=t("code",null,"1+",-1),Ao=t("td",{style:{"text-align":"center"}},"🔴",-1),Do={style:{"text-align":"center"}},Fo={href:"https://leetcode.cn/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},"1397",-1),Jo=t("td",{style:{"text-align":"left"}},"找到所有好字符串",-1),Ko=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"字符串",-1),Qo=t("code",null,"动态规划",-1),So=t("code",null,"字符串匹配",-1),Uo=t("td",{style:{"text-align":"center"}},"🔴",-1),Wo={style:{"text-align":"center"}},Xo={href:"https://leetcode.cn/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},"1408",-1),$o=t("td",{style:{"text-align":"left"}},"数组中的字符串匹配",-1),tn={style:{"text-align":"center"}},en={style:{"text-align":"left"}},on=t("code",null,"数组",-1),nn=t("code",null,"字符串",-1),ln=t("code",null,"字符串匹配",-1),sn=t("td",{style:{"text-align":"center"}},"🟢",-1),dn={style:{"text-align":"center"}},_n={href:"https://leetcode.cn/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},"1455",-1),an=t("td",{style:{"text-align":"left"}},"检查单词是否为句中其他单词的前缀",-1),hn={style:{"text-align":"center"}},gn={style:{"text-align":"left"}},un=t("code",null,"双指针",-1),fn=t("code",null,"字符串",-1),mn=t("code",null,"字符串匹配",-1),pn=t("td",{style:{"text-align":"center"}},"🟢",-1),yn={style:{"text-align":"center"}},xn={href:"https://leetcode.cn/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"1668",-1),wn=t("td",{style:{"text-align":"left"}},"最大重复子字符串",-1),vn={style:{"text-align":"center"}},In={style:{"text-align":"left"}},qn=t("code",null,"字符串",-1),Ln=t("code",null,"动态规划",-1),Nn=t("code",null,"字符串匹配",-1),Vn=t("td",{style:{"text-align":"center"}},"🟢",-1),Bn={style:{"text-align":"center"}},Cn={href:"https://leetcode.cn/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},En={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},zn=t("td",{style:{"text-align":"center"}},"1764",-1),Rn=t("td",{style:{"text-align":"left"}},"通过连接另一个数组的子数组得到一个数组",-1),jn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},Tn=t("code",null,"贪心",-1),An=t("code",null,"数组",-1),Dn=t("code",null,"双指针",-1),Fn=t("code",null,"1+",-1),Gn=t("td",{style:{"text-align":"center"}},"🟠",-1),Hn={style:{"text-align":"center"}},Jn={href:"https://leetcode.cn/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},"2185",-1),Pn=t("td",{style:{"text-align":"left"}},"统计包含给定前缀的字符串",-1),Qn={style:{"text-align":"center"}},Sn={style:{"text-align":"left"}},Un=t("code",null,"数组",-1),Wn=t("code",null,"字符串",-1),Xn=t("code",null,"字符串匹配",-1),Yn=t("td",{style:{"text-align":"center"}},"🟢",-1),Zn={style:{"text-align":"center"}},$n={href:"https://leetcode.cn/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},"2223",-1),ol=t("td",{style:{"text-align":"left"}},"构造字符串的总得分和",-1),nl=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},sl=t("code",null,"字符串",-1),dl=t("code",null,"二分查找",-1),_l=t("code",null,"字符串匹配",-1),rl=t("code",null,"3+",-1),cl=t("td",{style:{"text-align":"center"}},"🔴",-1),il={style:{"text-align":"center"}},al={href:"https://leetcode.cn/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},"2301",-1),ul=t("td",{style:{"text-align":"left"}},"替换字符后匹配",-1),fl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},pl=t("code",null,"数组",-1),yl=t("code",null,"哈希表",-1),xl=t("code",null,"字符串",-1),bl=t("code",null,"1+",-1),kl=t("td",{style:{"text-align":"center"}},"🔴",-1),wl={style:{"text-align":"center"}},vl={href:"https://leetcode.cn/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},"2430",-1),Ll=t("td",{style:{"text-align":"left"}},"对字母串可执行的最大删除数",-1),Nl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Bl=t("code",null,"字符串",-1),Cl=t("code",null,"动态规划",-1),El=t("code",null,"字符串匹配",-1),zl=t("code",null,"2+",-1),Rl=t("td",{style:{"text-align":"center"}},"🔴",-1),jl={style:{"text-align":"center"}},Ml={href:"https://leetcode.cn/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},"2851",-1),Dl=t("td",{style:{"text-align":"left"}},"字符串转换",-1),Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Hl=t("code",null,"数学",-1),Jl=t("code",null,"字符串",-1),Kl=t("code",null,"动态规划",-1),Ol=t("code",null,"1+",-1),Pl=t("td",{style:{"text-align":"center"}},"🔴",-1),Ql={style:{"text-align":"center"}},Sl={href:"https://leetcode.cn/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},"3006",-1),Xl=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 I",-1),Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"双指针",-1),ts=t("code",null,"字符串",-1),es=t("code",null,"二分查找",-1),os=t("code",null,"3+",-1),ns=t("td",{style:{"text-align":"center"}},"🟠",-1),ls={style:{"text-align":"center"}},ss={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},"3008",-1),rs=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 II",-1),cs=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},as=t("code",null,"双指针",-1),hs=t("code",null,"字符串",-1),gs=t("code",null,"二分查找",-1),us=t("code",null,"3+",-1),fs=t("td",{style:{"text-align":"center"}},"🔴",-1),ms={style:{"text-align":"center"}},ps={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},"3023",-1),bs=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 I 🔒",-1),ks=t("td",{style:{"text-align":"center"}},null,-1),ws={style:{"text-align":"left"}},vs=t("code",null,"数组",-1),Is=t("code",null,"字符串匹配",-1),qs=t("code",null,"滑动窗口",-1),Ls=t("code",null,"2+",-1),Ns=t("td",{style:{"text-align":"center"}},"🟠",-1),Vs={style:{"text-align":"center"}},Bs={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Cs={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},"3029",-1),zs=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 I",-1),Rs=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Ms=t("code",null,"字符串",-1),Ts=t("code",null,"字符串匹配",-1),As=t("code",null,"哈希函数",-1),Ds=t("code",null,"1+",-1),Fs=t("td",{style:{"text-align":"center"}},"🟠",-1),Gs={style:{"text-align":"center"}},Hs={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Js={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},"3031",-1),Os=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 II",-1),Ps=t("td",{style:{"text-align":"center"}},null,-1),Qs={style:{"text-align":"left"}},Ss=t("code",null,"字符串",-1),Us=t("code",null,"字符串匹配",-1),Ws=t("code",null,"哈希函数",-1),Xs=t("code",null,"1+",-1),Ys=t("td",{style:{"text-align":"center"}},"🔴",-1),Zs={style:{"text-align":"center"}},$s={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"3034",-1),od=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 I",-1),nd=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},sd=t("code",null,"数组",-1),dd=t("code",null,"字符串匹配",-1),_d=t("code",null,"哈希函数",-1),rd=t("code",null,"1+",-1),cd=t("td",{style:{"text-align":"center"}},"🟠",-1),id={style:{"text-align":"center"}},ad={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},"3036",-1),ud=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 II",-1),fd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},pd=t("code",null,"数组",-1),yd=t("code",null,"字符串匹配",-1),xd=t("code",null,"哈希函数",-1),bd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"center"}},"🔴",-1),wd={style:{"text-align":"center"}},vd={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},Id={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},"3037",-1),Ld=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 II 🔒",-1),Nd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"数组",-1),Cd=t("code",null,"字符串匹配",-1),Ed=t("code",null,"滑动窗口",-1),zd=t("code",null,"2+",-1),Rd=t("td",{style:{"text-align":"center"}},"🔴",-1),jd={style:{"text-align":"center"}},Md={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Td={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},"3042",-1),Dd=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 I",-1),Fd={style:{"text-align":"center"}},Gd={style:{"text-align":"left"}},Hd=t("code",null,"字典树",-1),Jd=t("code",null,"数组",-1),Kd=t("code",null,"字符串",-1),Od=t("code",null,"3+",-1),Pd=t("td",{style:{"text-align":"center"}},"🟢",-1),Qd={style:{"text-align":"center"}},Sd={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ud={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Wd=t("td",{style:{"text-align":"center"}},"3045",-1),Xd=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 II",-1),Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字典树",-1),t_=t("code",null,"数组",-1),e_=t("code",null,"字符串",-1),o_=t("code",null,"3+",-1),n_=t("td",{style:{"text-align":"center"}},"🔴",-1),l_={style:{"text-align":"center"}},s_={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},d_={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"3291",-1),r_=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"字典树",-1),h_=t("code",null,"线段树",-1),g_=t("code",null,"数组",-1),u_=t("code",null,"6+",-1),f_=t("td",{style:{"text-align":"center"}},"🟠",-1),m_={style:{"text-align":"center"}},p_={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},y_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},"3292",-1),b_=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),k_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},v_=t("code",null,"线段树",-1),I_=t("code",null,"数组",-1),q_=t("code",null,"字符串",-1),L_=t("code",null,"5+",-1),N_=t("td",{style:{"text-align":"center"}},"🔴",-1),V_={style:{"text-align":"center"}},B_={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},C_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},"3303",-1),z_=t("td",{style:{"text-align":"left"}},"第一个几乎相等子字符串的下标",-1),R_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},M_=t("code",null,"字符串",-1),T_=t("code",null,"字符串匹配",-1),A_=t("td",{style:{"text-align":"center"}},"🔴",-1),D_={style:{"text-align":"center"}},F_={href:"https://leetcode.cn/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},G_={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"3407",-1),J_=t("td",{style:{"text-align":"left"}},"子字符串匹配模式",-1),K_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},P_=t("code",null,"字符串",-1),Q_=t("code",null,"字符串匹配",-1),S_=t("td",{style:{"text-align":"center"}},"🟢",-1),U_={style:{"text-align":"center"}},W_={href:"https://leetcode.cn/problems/substring-matching-pattern",target:"_blank",rel:"noopener noreferrer"},X_={href:"https://leetcode.com/problems/substring-matching-pattern",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},"3455",-1),Z_=t("td",{style:{"text-align":"left"}},"最短匹配子字符串",-1),$_=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"双指针",-1),or=t("code",null,"字符串",-1),nr=t("code",null,"二分查找",-1),lr=t("code",null,"1+",-1),sr=t("td",{style:{"text-align":"center"}},"🔴",-1),dr={style:{"text-align":"center"}},_r={href:"https://leetcode.cn/problems/shortest-matching-substring",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://leetcode.com/problems/shortest-matching-substring",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"3474",-1),ir=t("td",{style:{"text-align":"left"}},"字典序最小的生成字符串",-1),ar=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},gr=t("code",null,"贪心",-1),ur=t("code",null,"字符串",-1),fr=t("code",null,"字符串匹配",-1),mr=t("td",{style:{"text-align":"center"}},"🔴",-1),pr={style:{"text-align":"center"}},yr={href:"https://leetcode.cn/problems/lexicographically-smallest-generated-string",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://leetcode.com/problems/lexicographically-smallest-generated-string",target:"_blank",rel:"noopener noreferrer"},br=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),kr=t("td",{style:{"text-align":"left"}},"字符串轮转",-1),wr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},Ir=t("code",null,"字符串",-1),qr=t("code",null,"字符串匹配",-1),Lr=t("td",{style:{"text-align":"center"}},"🟢",-1),Nr={style:{"text-align":"center"}},Vr={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},Br=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Cr=t("td",{style:{"text-align":"left"}},"检查子树",-1),Er=t("td",{style:{"text-align":"center"}},null,-1),zr={style:{"text-align":"left"}},Rr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),Mr=t("code",null,"二叉树",-1),Tr=t("code",null,"2+",-1),Ar=t("td",{style:{"text-align":"center"}},"🟠",-1),Dr={style:{"text-align":"center"}},Fr={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Gr=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),Hr=t("td",{style:{"text-align":"left"}},"多次搜索",-1),Jr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Or=t("code",null,"字典树",-1),Pr=t("code",null,"数组",-1),Qr=t("code",null,"哈希表",-1),Sr=t("code",null,"3+",-1),Ur=t("td",{style:{"text-align":"center"}},"🟠",-1),Wr={style:{"text-align":"center"}},Xr={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"};function Yr(Zr,$r){const n=d("RouterLink"),s=d("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[g,u,t("p",null,[o(n,{to:"/tag/array.html"},{default:l(()=>[f]),_:1}),e(),o(n,{to:"/tag/matrix.html"},{default:l(()=>[m]),_:1}),e(),o(n,{to:"/tag/linked-list.html"},{default:l(()=>[p]),_:1}),e(),o(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[y]),_:1}),e(),o(n,{to:"/tag/stack.html"},{default:l(()=>[x]),_:1}),e(),o(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[b]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[k]),_:1}),e(),o(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[w]),_:1}),e(),o(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[I]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[q]),_:1}),e(),L,e(),o(n,{to:"/tag/tree.html"},{default:l(()=>[N]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[V]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[B]),_:1}),e(),o(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[C]),_:1}),e(),o(n,{to:"/tag/graph.html"},{default:l(()=>[E]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[z]),_:1}),e(),o(n,{to:"/tag/topological-sort.html"},{default:l(()=>[R]),_:1}),e(),o(n,{to:"/tag/shortest-path.html"},{default:l(()=>[j]),_:1}),e(),o(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[M]),_:1}),e(),o(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),e(),o(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[D]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[F]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[G]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[H]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[J]),_:1})]),K,t("p",null,[o(n,{to:"/tag/enumeration.html"},{default:l(()=>[O]),_:1}),e(),o(n,{to:"/tag/recursion.html"},{default:l(()=>[P]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[Q]),_:1}),e(),o(n,{to:"/tag/backtracking.html"},{default:l(()=>[S]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[U]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[X]),_:1}),e(),o(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[Y]),_:1}),e(),o(n,{to:"/tag/counting-sort.html"},{default:l(()=>[Z]),_:1}),e(),o(n,{to:"/tag/radix-sort.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/merge-sort.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/quickselect.html"},{default:l(()=>[et]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[ot]),_:1}),e(),o(n,{to:"/tag/memoization.html"},{default:l(()=>[nt]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[lt]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[st]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[dt]),_:1}),e(),o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[_t]),_:1}),e(),o(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),e(),o(n,{to:"/tag/counting.html"},{default:l(()=>[ct]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/bitmask.html"},{default:l(()=>[at]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[ht]),_:1}),e(),o(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),e(),o(n,{to:"/tag/line-sweep.html"},{default:l(()=>[ut]),_:1})]),ft,t("p",null,[o(n,{to:"/tag/math.html"},{default:l(()=>[mt]),_:1}),e(),o(n,{to:"/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[yt]),_:1}),e(),o(n,{to:"/tag/game-theory.html"},{default:l(()=>[xt]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[bt]),_:1}),e(),o(n,{to:"/tag/combinatorics.html"},{default:l(()=>[kt]),_:1}),e(),o(n,{to:"/tag/randomized.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),e(),o(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),e(),o(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),e(),o(n,{to:"/tag/database.html"},{default:l(()=>[Lt]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Nt]),_:1}),e(),o(n,{to:"/tag/data-stream.html"},{default:l(()=>[Vt]),_:1}),e(),o(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Bt]),_:1}),e(),o(n,{to:"/tag/interactive.html"},{default:l(()=>[Ct]),_:1}),e(),o(n,{to:"/tag/iterator.html"},{default:l(()=>[Et]),_:1}),e(),o(n,{to:"/tag/concurrency.html"},{default:l(()=>[zt]),_:1})])]),Rt,i(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Mt,Tt,t("td",At,[o(n,{to:"/problem/0028.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Dt,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[Ft]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Gt]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ht]),_:1})]),Jt,t("td",Kt,[t("a",Ot,[e("🀄️"),o(s)]),e(),t("a",Pt,[e("🔗"),o(s)])])]),t("tr",null,[Qt,St,Ut,t("td",Wt,[o(n,{to:"/tag/string.html"},{default:l(()=>[Xt]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Yt]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[Zt]),_:1}),e(),$t]),te,t("td",ee,[t("a",oe,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[le,se,t("td",de,[o(n,{to:"/problem/0459.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(n,{to:"/tag/string.html"},{default:l(()=>[re]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[ce]),_:1})]),ie,t("td",ae,[t("a",he,[e("🀄️"),o(s)]),e(),t("a",ge,[e("🔗"),o(s)])])]),t("tr",null,[ue,fe,t("td",me,[o(n,{to:"/problem/0572.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",pe,[o(n,{to:"/tag/tree.html"},{default:l(()=>[ye]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[xe]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[be]),_:1}),e(),ke]),we,t("td",ve,[t("a",Ie,[e("🀄️"),o(s)]),e(),t("a",qe,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ne,Ve,t("td",Be,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Ce]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ee]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[ze]),_:1}),e(),Re]),je,t("td",Me,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[De,Fe,Ge,t("td",He,[o(n,{to:"/tag/string.html"},{default:l(()=>[Je]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ke]),_:1})]),Oe,t("td",Pe,[t("a",Qe,[e("🀄️"),o(s)]),e(),t("a",Se,[e("🔗"),o(s)])])]),t("tr",null,[Ue,We,Xe,t("td",Ye,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Ze]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[$e]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[to]),_:1}),e(),eo]),oo,t("td",no,[t("a",lo,[e("🀄️"),o(s)]),e(),t("a",so,[e("🔗"),o(s)])])]),t("tr",null,[_o,ro,t("td",co,[o(n,{to:"/problem/0796.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",io,[o(n,{to:"/tag/string.html"},{default:l(()=>[ao]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[ho]),_:1})]),go,t("td",uo,[t("a",fo,[e("🀄️"),o(s)]),e(),t("a",mo,[e("🔗"),o(s)])])]),t("tr",null,[po,yo,xo,t("td",bo,[o(n,{to:"/tag/trie.html"},{default:l(()=>[ko]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[wo]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[vo]),_:1}),e(),Io]),qo,t("td",Lo,[t("a",No,[e("🀄️"),o(s)]),e(),t("a",Vo,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Co,Eo,t("td",zo,[o(n,{to:"/tag/string.html"},{default:l(()=>[Ro]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[jo]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[Mo]),_:1}),e(),To]),Ao,t("td",Do,[t("a",Fo,[e("🀄️"),o(s)]),e(),t("a",Go,[e("🔗"),o(s)])])]),t("tr",null,[Ho,Jo,Ko,t("td",Oo,[o(n,{to:"/tag/string.html"},{default:l(()=>[Po]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Qo]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[So]),_:1})]),Uo,t("td",Wo,[t("a",Xo,[e("🀄️"),o(s)]),e(),t("a",Yo,[e("🔗"),o(s)])])]),t("tr",null,[Zo,$o,t("td",tn,[o(n,{to:"/problem/1408.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",en,[o(n,{to:"/tag/array.html"},{default:l(()=>[on]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[nn]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[ln]),_:1})]),sn,t("td",dn,[t("a",_n,[e("🀄️"),o(s)]),e(),t("a",rn,[e("🔗"),o(s)])])]),t("tr",null,[cn,an,t("td",hn,[o(n,{to:"/problem/1455.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",gn,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[un]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[fn]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[mn]),_:1})]),pn,t("td",yn,[t("a",xn,[e("🀄️"),o(s)]),e(),t("a",bn,[e("🔗"),o(s)])])]),t("tr",null,[kn,wn,t("td",vn,[o(n,{to:"/problem/1668.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",In,[o(n,{to:"/tag/string.html"},{default:l(()=>[qn]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Ln]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Nn]),_:1})]),Vn,t("td",Bn,[t("a",Cn,[e("🀄️"),o(s)]),e(),t("a",En,[e("🔗"),o(s)])])]),t("tr",null,[zn,Rn,jn,t("td",Mn,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Tn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[An]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[Dn]),_:1}),e(),Fn]),Gn,t("td",Hn,[t("a",Jn,[e("🀄️"),o(s)]),e(),t("a",Kn,[e("🔗"),o(s)])])]),t("tr",null,[On,Pn,t("td",Qn,[o(n,{to:"/problem/2185.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Sn,[o(n,{to:"/tag/array.html"},{default:l(()=>[Un]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Wn]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Xn]),_:1})]),Yn,t("td",Zn,[t("a",$n,[e("🀄️"),o(s)]),e(),t("a",tl,[e("🔗"),o(s)])])]),t("tr",null,[el,ol,nl,t("td",ll,[o(n,{to:"/tag/string.html"},{default:l(()=>[sl]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[dl]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[_l]),_:1}),e(),rl]),cl,t("td",il,[t("a",al,[e("🀄️"),o(s)]),e(),t("a",hl,[e("🔗"),o(s)])])]),t("tr",null,[gl,ul,fl,t("td",ml,[o(n,{to:"/tag/array.html"},{default:l(()=>[pl]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[yl]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[xl]),_:1}),e(),bl]),kl,t("td",wl,[t("a",vl,[e("🀄️"),o(s)]),e(),t("a",Il,[e("🔗"),o(s)])])]),t("tr",null,[ql,Ll,Nl,t("td",Vl,[o(n,{to:"/tag/string.html"},{default:l(()=>[Bl]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Cl]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[El]),_:1}),e(),zl]),Rl,t("td",jl,[t("a",Ml,[e("🀄️"),o(s)]),e(),t("a",Tl,[e("🔗"),o(s)])])]),t("tr",null,[Al,Dl,Fl,t("td",Gl,[o(n,{to:"/tag/math.html"},{default:l(()=>[Hl]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Jl]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Kl]),_:1}),e(),Ol]),Pl,t("td",Ql,[t("a",Sl,[e("🀄️"),o(s)]),e(),t("a",Ul,[e("🔗"),o(s)])])]),t("tr",null,[Wl,Xl,Yl,t("td",Zl,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[$l]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ts]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[es]),_:1}),e(),os]),ns,t("td",ls,[t("a",ss,[e("🀄️"),o(s)]),e(),t("a",ds,[e("🔗"),o(s)])])]),t("tr",null,[_s,rs,cs,t("td",is,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[as]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[hs]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[gs]),_:1}),e(),us]),fs,t("td",ms,[t("a",ps,[e("🀄️"),o(s)]),e(),t("a",ys,[e("🔗"),o(s)])])]),t("tr",null,[xs,bs,ks,t("td",ws,[o(n,{to:"/tag/array.html"},{default:l(()=>[vs]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Is]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[qs]),_:1}),e(),Ls]),Ns,t("td",Vs,[t("a",Bs,[e("🀄️"),o(s)]),e(),t("a",Cs,[e("🔗"),o(s)])])]),t("tr",null,[Es,zs,Rs,t("td",js,[o(n,{to:"/tag/string.html"},{default:l(()=>[Ms]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ts]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[As]),_:1}),e(),Ds]),Fs,t("td",Gs,[t("a",Hs,[e("🀄️"),o(s)]),e(),t("a",Js,[e("🔗"),o(s)])])]),t("tr",null,[Ks,Os,Ps,t("td",Qs,[o(n,{to:"/tag/string.html"},{default:l(()=>[Ss]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Us]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[Ws]),_:1}),e(),Xs]),Ys,t("td",Zs,[t("a",$s,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,nd,t("td",ld,[o(n,{to:"/tag/array.html"},{default:l(()=>[sd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[dd]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[_d]),_:1}),e(),rd]),cd,t("td",id,[t("a",ad,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[gd,ud,fd,t("td",md,[o(n,{to:"/tag/array.html"},{default:l(()=>[pd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[yd]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[xd]),_:1}),e(),bd]),kd,t("td",wd,[t("a",vd,[e("🀄️"),o(s)]),e(),t("a",Id,[e("🔗"),o(s)])])]),t("tr",null,[qd,Ld,Nd,t("td",Vd,[o(n,{to:"/tag/array.html"},{default:l(()=>[Bd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Cd]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Ed]),_:1}),e(),zd]),Rd,t("td",jd,[t("a",Md,[e("🀄️"),o(s)]),e(),t("a",Td,[e("🔗"),o(s)])])]),t("tr",null,[Ad,Dd,t("td",Fd,[o(n,{to:"/problem/3042.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Gd,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Hd]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Jd]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Kd]),_:1}),e(),Od]),Pd,t("td",Qd,[t("a",Sd,[e("🀄️"),o(s)]),e(),t("a",Ud,[e("🔗"),o(s)])])]),t("tr",null,[Wd,Xd,Yd,t("td",Zd,[o(n,{to:"/tag/trie.html"},{default:l(()=>[$d]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[t_]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[e_]),_:1}),e(),o_]),n_,t("td",l_,[t("a",s_,[e("🀄️"),o(s)]),e(),t("a",d_,[e("🔗"),o(s)])])]),t("tr",null,[__,r_,c_,t("td",i_,[o(n,{to:"/tag/trie.html"},{default:l(()=>[a_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[h_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[g_]),_:1}),e(),u_]),f_,t("td",m_,[t("a",p_,[e("🀄️"),o(s)]),e(),t("a",y_,[e("🔗"),o(s)])])]),t("tr",null,[x_,b_,k_,t("td",w_,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[v_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[I_]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[q_]),_:1}),e(),L_]),N_,t("td",V_,[t("a",B_,[e("🀄️"),o(s)]),e(),t("a",C_,[e("🔗"),o(s)])])]),t("tr",null,[E_,z_,R_,t("td",j_,[o(n,{to:"/tag/string.html"},{default:l(()=>[M_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[T_]),_:1})]),A_,t("td",D_,[t("a",F_,[e("🀄️"),o(s)]),e(),t("a",G_,[e("🔗"),o(s)])])]),t("tr",null,[H_,J_,K_,t("td",O_,[o(n,{to:"/tag/string.html"},{default:l(()=>[P_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Q_]),_:1})]),S_,t("td",U_,[t("a",W_,[e("🀄️"),o(s)]),e(),t("a",X_,[e("🔗"),o(s)])])]),t("tr",null,[Y_,Z_,$_,t("td",tr,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[er]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[or]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[nr]),_:1}),e(),lr]),sr,t("td",dr,[t("a",_r,[e("🀄️"),o(s)]),e(),t("a",rr,[e("🔗"),o(s)])])]),t("tr",null,[cr,ir,ar,t("td",hr,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[gr]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ur]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[fr]),_:1})]),mr,t("td",pr,[t("a",yr,[e("🀄️"),o(s)]),e(),t("a",xr,[e("🔗"),o(s)])])]),t("tr",null,[br,kr,wr,t("td",vr,[o(n,{to:"/tag/string.html"},{default:l(()=>[Ir]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[qr]),_:1})]),Lr,t("td",Nr,[t("a",Vr,[e("🀄️"),o(s)])])]),t("tr",null,[Br,Cr,Er,t("td",zr,[o(n,{to:"/tag/tree.html"},{default:l(()=>[Rr]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[jr]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[Mr]),_:1}),e(),Tr]),Ar,t("td",Dr,[t("a",Fr,[e("🀄️"),o(s)])])]),t("tr",null,[Gr,Hr,Jr,t("td",Kr,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Or]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Pr]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Qr]),_:1}),e(),Sr]),Ur,t("td",Wr,[t("a",Xr,[e("🀄️"),o(s)])])])])])])}const ec=_(a,[["render",Yr],["__file","string-matching.html.vue"]]);export{ec as default};
