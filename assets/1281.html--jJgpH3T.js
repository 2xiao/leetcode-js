import{_ as r,r as t,o as l,c as i,a as n,b as s,d as a,w as o,e as d}from"./app-B5EG-zH0.js";const u={},k=n("h1",{id:"_1281-整数的各位积和之差",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1281-整数的各位积和之差","aria-hidden":"true"},"#"),s(" 1281. 整数的各位积和之差")],-1),m=n("code",null,"数学",-1),h={href:"https://leetcode.cn/problems/subtract-the-product-and-sum-of-digits-of-an-integer",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"力扣",-1),b={href:"https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"LeetCode",-1),v=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an integer number <code>n</code>, return the difference between the product of its digits and the sum of its digits.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: n = 234</p><p>Output: 15</p><p>Explanation:</p><p>Product of digits = 2 _ 3 _ 4 = 24</p><p>Sum of digits = 2 + 3 + 4 = 9</p><p>Result = 24 - 9 = 15</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: n = 4421</p><p>Output: 21</p><p>Explanation: Product of digits = 4 _ 4 _ 2 * 1 = 32</p><p>Sum of digits = 4 + 4 + 2 + 1 = 11</p><p>Result = 32 - 11 = 21</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= n &lt;= 10^5</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个整数 <code>n</code>，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> n = 234</p><p><strong>输出：</strong> 15</p><p><strong>解释：</strong></p><p>各位数之积 = 2 _ 3 _ 4 = 24</p><p>各位数之和 = 2 + 3 + 4 = 9</p><p>结果 = 24 - 9 = 15</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> n = 4421</p><p><strong>输出：</strong> 21</p><p><strong>解释：</strong> 各位数之积 = 4 _ 4 _ 2 * 1 = 32</p><p>各位数之和 = 4 + 4 + 2 + 1 = 11</p><p>结果 = 32 - 11 = 21</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 10^5</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>初始化两个变量 <code>product</code> 和 <code>sum</code>，分别用于存储数字位的乘积和总和，初始值分别为 1 和 0；</li><li>使用一个循环逐位提取数字（通过对 10 取余获得个位）： <ul><li>将数字加入 <code>sum</code>；</li><li>将数字乘入 <code>product</code>；</li><li>更新 <code>n</code> 为去掉最低位的数（通过整除 10 实现）；</li></ul></li><li>循环结束后，返回 <code>product - sum</code> 的结果。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(log_10(n))</code>，每次迭代处理一位数字，与数字 <code>n</code> 的位数成正比。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，使用了常量级变量。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">subtractProductAndSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> product <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 初始化乘积为 1</span>
	<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 初始化和为 0</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> digit <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 提取当前最低位</span>
		product <span class="token operator">*=</span> digit<span class="token punctuation">;</span> <span class="token comment">// 乘入当前位</span>
		sum <span class="token operator">+=</span> digit<span class="token punctuation">;</span> <span class="token comment">// 加入当前位</span>
		n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 去掉最低位</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> product <span class="token operator">-</span> sum<span class="token punctuation">;</span> <span class="token comment">// 返回乘积与和的差</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function f(x,w){const p=t("font"),c=t("RouterLink"),e=t("ExternalLinkIcon");return l(),i("div",null,[k,n("p",null,[s("🟢 "),a(p,{color:"#15bd66"},{default:o(()=>[s("Easy")]),_:1}),s("  🔖  "),a(c,{to:"/tag/math.html"},{default:o(()=>[m]),_:1}),s("  🔗 "),n("a",h,[g,a(e)]),s(),n("a",b,[_,a(e)])]),v])}const q=r(u,[["render",f],["__file","1281.html.vue"]]);export{q as default};
