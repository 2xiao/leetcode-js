import{_ as d,r,o as _,c,a as t,d as o,w as n,b as e,f as a}from"./app-aQeLbVW9.js";const i={},h=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),e(" 二叉树")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),u=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),x=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),z=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),O=t("span",{class:"blue"},"二叉树",-1),L=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),K=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),E=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),Z=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),D=t("code",null,"分治",-1),F=t("code",null,"回溯",-1),H=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),M=t("code",null,"排序",-1),X=t("code",null,"桶排序",-1),Y=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ut=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),xt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),zt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Kt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Rt=t("td",{style:{"text-align":"center"}},"94",-1),Bt=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),Et={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Ut=t("code",null,"树",-1),St=t("code",null,"深度优先搜索",-1),Wt=t("code",null,"1+",-1),Qt=t("td",{style:{"text-align":"center"}},"🟢",-1),Zt={style:{"text-align":"center"}},At={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ft=t("td",{style:{"text-align":"center"}},"95",-1),Ht=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树 II",-1),Jt={style:{"text-align":"center"}},Mt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),Yt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"2+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"96",-1),re=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"二叉搜索树",-1),ie=t("code",null,"数学",-1),he=t("code",null,"2+",-1),fe=t("td",{style:{"text-align":"center"}},"🟠",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"98",-1),pe=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),be={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),we=t("code",null,"二叉搜索树",-1),ze=t("code",null,"1+",-1),Ie=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"99",-1),Ce=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),Ke={style:{"text-align":"center"}},Pe={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Ne=t("code",null,"深度优先搜索",-1),Re=t("code",null,"二叉搜索树",-1),Be=t("code",null,"1+",-1),Ee=t("td",{style:{"text-align":"center"}},"🟠",-1),Ge={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},"100",-1),We=t("td",{style:{"text-align":"left"}},"相同的树",-1),Qe={style:{"text-align":"center"}},Ze={style:{"text-align":"left"}},Ae=t("code",null,"树",-1),De=t("code",null,"深度优先搜索",-1),Fe=t("code",null,"广度优先搜索",-1),He=t("code",null,"1+",-1),Je=t("td",{style:{"text-align":"center"}},"🟢",-1),Me={style:{"text-align":"center"}},Xe={href:"https://leetcode.cn/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"101",-1),to=t("td",{style:{"text-align":"left"}},"对称二叉树",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"树",-1),no=t("code",null,"深度优先搜索",-1),so=t("code",null,"广度优先搜索",-1),ro=t("code",null,"1+",-1),_o=t("td",{style:{"text-align":"center"}},"🟢",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"102",-1),fo=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历",-1),go={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},mo=t("code",null,"树",-1),yo=t("code",null,"广度优先搜索",-1),po=t("code",null,"二叉树",-1),bo=t("td",{style:{"text-align":"center"}},"🟠",-1),xo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"103",-1),zo=t("td",{style:{"text-align":"left"}},"二叉树的锯齿形层序遍历",-1),Io={style:{"text-align":"center"}},qo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),Oo=t("code",null,"广度优先搜索",-1),Lo=t("code",null,"二叉树",-1),Co=t("td",{style:{"text-align":"center"}},"🟠",-1),Ko={style:{"text-align":"center"}},Po={href:"https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},No=t("td",{style:{"text-align":"center"}},"104",-1),Ro=t("td",{style:{"text-align":"left"}},"二叉树的最大深度",-1),Bo={style:{"text-align":"center"}},Eo={style:{"text-align":"left"}},Go=t("code",null,"树",-1),To=t("code",null,"深度优先搜索",-1),Uo=t("code",null,"广度优先搜索",-1),So=t("code",null,"1+",-1),Wo=t("td",{style:{"text-align":"center"}},"🟢",-1),Qo={style:{"text-align":"center"}},Zo={href:"https://leetcode.cn/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},"105",-1),Fo=t("td",{style:{"text-align":"left"}},"从前序与中序遍历序列构造二叉树",-1),Ho={style:{"text-align":"center"}},Jo={style:{"text-align":"left"}},Mo=t("code",null,"树",-1),Xo=t("code",null,"数组",-1),Yo=t("code",null,"哈希表",-1),$o=t("code",null,"2+",-1),tl=t("td",{style:{"text-align":"center"}},"🟠",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"106",-1),sl=t("td",{style:{"text-align":"left"}},"从中序与后序遍历序列构造二叉树",-1),rl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"树",-1),cl=t("code",null,"数组",-1),al=t("code",null,"哈希表",-1),il=t("code",null,"2+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),fl={style:{"text-align":"center"}},gl={href:"https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},"107",-1),yl=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历 II",-1),pl={style:{"text-align":"center"}},bl={style:{"text-align":"left"}},xl=t("code",null,"树",-1),kl=t("code",null,"广度优先搜索",-1),vl=t("code",null,"二叉树",-1),wl=t("td",{style:{"text-align":"center"}},"🟠",-1),zl={style:{"text-align":"center"}},Il={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},jl=t("td",{style:{"text-align":"center"}},"108",-1),Ol=t("td",{style:{"text-align":"left"}},"将有序数组转换为二叉搜索树",-1),Ll={style:{"text-align":"center"}},Cl={style:{"text-align":"left"}},Kl=t("code",null,"树",-1),Pl=t("code",null,"二叉搜索树",-1),Vl=t("code",null,"数组",-1),Nl=t("code",null,"2+",-1),Rl=t("td",{style:{"text-align":"center"}},"🟢",-1),Bl={style:{"text-align":"center"}},El={href:"https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gl={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},"109",-1),Ul=t("td",{style:{"text-align":"left"}},"有序链表转换二叉搜索树",-1),Sl={style:{"text-align":"center"}},Wl={style:{"text-align":"left"}},Ql=t("code",null,"树",-1),Zl=t("code",null,"二叉搜索树",-1),Al=t("code",null,"链表",-1),Dl=t("code",null,"2+",-1),Fl=t("td",{style:{"text-align":"center"}},"🟠",-1),Hl={style:{"text-align":"center"}},Jl={href:"https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},"110",-1),Yl=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),$l={style:{"text-align":"center"}},tn={style:{"text-align":"left"}},en=t("code",null,"树",-1),on=t("code",null,"深度优先搜索",-1),ln=t("code",null,"二叉树",-1),nn=t("td",{style:{"text-align":"center"}},"🟢",-1),sn={style:{"text-align":"center"}},rn={href:"https://leetcode.cn/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"111",-1),cn=t("td",{style:{"text-align":"left"}},"二叉树的最小深度",-1),an={style:{"text-align":"center"}},hn={style:{"text-align":"left"}},fn=t("code",null,"树",-1),gn=t("code",null,"深度优先搜索",-1),un=t("code",null,"广度优先搜索",-1),mn=t("code",null,"1+",-1),yn=t("td",{style:{"text-align":"center"}},"🟢",-1),pn={style:{"text-align":"center"}},bn={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"112",-1),vn=t("td",{style:{"text-align":"left"}},"路径总和",-1),wn={style:{"text-align":"center"}},zn={style:{"text-align":"left"}},In=t("code",null,"树",-1),qn=t("code",null,"深度优先搜索",-1),jn=t("code",null,"广度优先搜索",-1),On=t("code",null,"1+",-1),Ln=t("td",{style:{"text-align":"center"}},"🟢",-1),Cn={style:{"text-align":"center"}},Kn={href:"https://leetcode.cn/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},"113",-1),Nn=t("td",{style:{"text-align":"left"}},"路径总和 II",-1),Rn={style:{"text-align":"center"}},Bn={style:{"text-align":"left"}},En=t("code",null,"树",-1),Gn=t("code",null,"深度优先搜索",-1),Tn=t("code",null,"回溯",-1),Un=t("code",null,"1+",-1),Sn=t("td",{style:{"text-align":"center"}},"🟠",-1),Wn={style:{"text-align":"center"}},Qn={href:"https://leetcode.cn/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},An=t("td",{style:{"text-align":"center"}},"114",-1),Dn=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),Fn={style:{"text-align":"center"}},Hn={style:{"text-align":"left"}},Jn=t("code",null,"栈",-1),Mn=t("code",null,"树",-1),Xn=t("code",null,"深度优先搜索",-1),Yn=t("code",null,"2+",-1),$n=t("td",{style:{"text-align":"center"}},"🟠",-1),ts={style:{"text-align":"center"}},es={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},os={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"116",-1),ns=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针",-1),ss={style:{"text-align":"center"}},rs={style:{"text-align":"left"}},ds=t("code",null,"树",-1),_s=t("code",null,"深度优先搜索",-1),cs=t("code",null,"广度优先搜索",-1),as=t("code",null,"2+",-1),is=t("td",{style:{"text-align":"center"}},"🟠",-1),hs={style:{"text-align":"center"}},fs={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},"117",-1),ms=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针 II",-1),ys={style:{"text-align":"center"}},ps={style:{"text-align":"left"}},bs=t("code",null,"树",-1),xs=t("code",null,"深度优先搜索",-1),ks=t("code",null,"广度优先搜索",-1),vs=t("code",null,"2+",-1),ws=t("td",{style:{"text-align":"center"}},"🟠",-1),zs={style:{"text-align":"center"}},Is={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},"124",-1),Os=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),Ls={style:{"text-align":"center"}},Cs={style:{"text-align":"left"}},Ks=t("code",null,"树",-1),Ps=t("code",null,"深度优先搜索",-1),Vs=t("code",null,"动态规划",-1),Ns=t("code",null,"1+",-1),Rs=t("td",{style:{"text-align":"center"}},"🔴",-1),Bs={style:{"text-align":"center"}},Es={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Gs={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},"129",-1),Us=t("td",{style:{"text-align":"left"}},"求根节点到叶节点数字之和",-1),Ss={style:{"text-align":"center"}},Ws={style:{"text-align":"left"}},Qs=t("code",null,"树",-1),Zs=t("code",null,"深度优先搜索",-1),As=t("code",null,"二叉树",-1),Ds=t("td",{style:{"text-align":"center"}},"🟠",-1),Fs={style:{"text-align":"center"}},Hs={href:"https://leetcode.cn/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Js={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},"144",-1),Xs=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),Ys={style:{"text-align":"center"}},$s={style:{"text-align":"left"}},tr=t("code",null,"栈",-1),er=t("code",null,"树",-1),or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"1+",-1),nr=t("td",{style:{"text-align":"center"}},"🟢",-1),sr={style:{"text-align":"center"}},rr={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"145",-1),cr=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),ar={style:{"text-align":"center"}},ir={style:{"text-align":"left"}},hr=t("code",null,"栈",-1),fr=t("code",null,"树",-1),gr=t("code",null,"深度优先搜索",-1),ur=t("code",null,"1+",-1),mr=t("td",{style:{"text-align":"center"}},"🟢",-1),yr={style:{"text-align":"center"}},pr={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},br={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},xr=t("td",{style:{"text-align":"center"}},"156",-1),kr=t("td",{style:{"text-align":"left"}},"上下翻转二叉树 🔒",-1),vr={style:{"text-align":"center"}},wr={style:{"text-align":"left"}},zr=t("code",null,"树",-1),Ir=t("code",null,"深度优先搜索",-1),qr=t("code",null,"二叉树",-1),jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Or={style:{"text-align":"center"}},Lr={href:"https://leetcode.cn/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},"173",-1),Pr=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),Vr={style:{"text-align":"center"}},Nr={style:{"text-align":"left"}},Rr=t("code",null,"栈",-1),Br=t("code",null,"树",-1),Er=t("code",null,"设计",-1),Gr=t("code",null,"3+",-1),Tr=t("td",{style:{"text-align":"center"}},"🟠",-1),Ur={style:{"text-align":"center"}},Sr={href:"https://leetcode.cn/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Qr=t("td",{style:{"text-align":"center"}},"199",-1),Zr=t("td",{style:{"text-align":"left"}},"二叉树的右视图",-1),Ar={style:{"text-align":"center"}},Dr={style:{"text-align":"left"}},Fr=t("code",null,"树",-1),Hr=t("code",null,"深度优先搜索",-1),Jr=t("code",null,"广度优先搜索",-1),Mr=t("code",null,"1+",-1),Xr=t("td",{style:{"text-align":"center"}},"🟠",-1),Yr={style:{"text-align":"center"}},$r={href:"https://leetcode.cn/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"222",-1),od=t("td",{style:{"text-align":"left"}},"完全二叉树的节点个数",-1),ld={style:{"text-align":"center"}},nd={style:{"text-align":"left"}},sd=t("code",null,"位运算",-1),rd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd=t("td",{style:{"text-align":"center"}},"🟢",-1),ad={style:{"text-align":"center"}},id={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},"226",-1),gd=t("td",{style:{"text-align":"left"}},"翻转二叉树",-1),ud={style:{"text-align":"center"}},md={style:{"text-align":"left"}},yd=t("code",null,"树",-1),pd=t("code",null,"深度优先搜索",-1),bd=t("code",null,"广度优先搜索",-1),xd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"center"}},"🟢",-1),vd={style:{"text-align":"center"}},wd={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},zd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},"230",-1),qd=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),jd={style:{"text-align":"center"}},Od={style:{"text-align":"left"}},Ld=t("code",null,"树",-1),Cd=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"二叉搜索树",-1),Pd=t("code",null,"1+",-1),Vd=t("td",{style:{"text-align":"center"}},"🟠",-1),Nd={style:{"text-align":"center"}},Rd={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Bd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},"235",-1),Gd=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Td={style:{"text-align":"center"}},Ud={style:{"text-align":"left"}},Sd=t("code",null,"树",-1),Wd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉搜索树",-1),Zd=t("code",null,"1+",-1),Ad=t("td",{style:{"text-align":"center"}},"🟠",-1),Dd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Hd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},"236",-1),Md=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),Xd={style:{"text-align":"center"}},Yd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),o_=t("td",{style:{"text-align":"center"}},"🟠",-1),l_={style:{"text-align":"center"}},n_={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},"250",-1),d_=t("td",{style:{"text-align":"left"}},"统计同值子树 🔒",-1),__=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},a_=t("code",null,"树",-1),i_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"二叉树",-1),f_=t("td",{style:{"text-align":"center"}},"🟠",-1),g_={style:{"text-align":"center"}},u_={href:"https://leetcode.cn/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},m_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},"255",-1),p_=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),b_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),v_=t("code",null,"树",-1),w_=t("code",null,"二叉搜索树",-1),z_=t("code",null,"4+",-1),I_=t("td",{style:{"text-align":"center"}},"🟠",-1),q_={style:{"text-align":"center"}},j_={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},O_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},"257",-1),C_=t("td",{style:{"text-align":"left"}},"二叉树的所有路径",-1),K_={style:{"text-align":"center"}},P_={style:{"text-align":"left"}},V_=t("code",null,"树",-1),N_=t("code",null,"深度优先搜索",-1),R_=t("code",null,"字符串",-1),B_=t("code",null,"2+",-1),E_=t("td",{style:{"text-align":"center"}},"🟢",-1),G_={style:{"text-align":"center"}},T_={href:"https://leetcode.cn/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},U_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},"270",-1),W_=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Q_=t("td",{style:{"text-align":"center"}},null,-1),Z_={style:{"text-align":"left"}},A_=t("code",null,"树",-1),D_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"二叉搜索树",-1),H_=t("code",null,"2+",-1),J_=t("td",{style:{"text-align":"center"}},"🟢",-1),M_={style:{"text-align":"center"}},X_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},Y_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},"272",-1),tc=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),ec=t("td",{style:{"text-align":"center"}},null,-1),oc={style:{"text-align":"left"}},lc=t("code",null,"栈",-1),nc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),rc=t("code",null,"4+",-1),dc=t("td",{style:{"text-align":"center"}},"🔴",-1),_c={style:{"text-align":"center"}},cc={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ac={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},"285",-1),hc=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},uc=t("code",null,"树",-1),mc=t("code",null,"深度优先搜索",-1),yc=t("code",null,"二叉搜索树",-1),pc=t("code",null,"1+",-1),bc=t("td",{style:{"text-align":"center"}},"🟠",-1),xc={style:{"text-align":"center"}},kc={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},vc={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},"297",-1),zc=t("td",{style:{"text-align":"left"}},"二叉树的序列化与反序列化",-1),Ic={style:{"text-align":"center"}},qc={style:{"text-align":"left"}},jc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),Lc=t("code",null,"广度优先搜索",-1),Cc=t("code",null,"3+",-1),Kc=t("td",{style:{"text-align":"center"}},"🔴",-1),Pc={style:{"text-align":"center"}},Vc={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},"298",-1),Bc=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 🔒",-1),Ec=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Tc=t("code",null,"树",-1),Uc=t("code",null,"深度优先搜索",-1),Sc=t("code",null,"二叉树",-1),Wc=t("td",{style:{"text-align":"center"}},"🟠",-1),Qc={style:{"text-align":"center"}},Zc={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Dc=t("td",{style:{"text-align":"center"}},"314",-1),Fc=t("td",{style:{"text-align":"left"}},"二叉树的垂直遍历 🔒",-1),Hc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),Xc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"广度优先搜索",-1),$c=t("code",null,"3+",-1),ta=t("td",{style:{"text-align":"center"}},"🟠",-1),ea={style:{"text-align":"center"}},oa={href:"https://leetcode.cn/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},la={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},"331",-1),sa=t("td",{style:{"text-align":"left"}},"验证二叉树的前序序列化",-1),ra={style:{"text-align":"center"}},da={style:{"text-align":"left"}},_a=t("code",null,"栈",-1),ca=t("code",null,"树",-1),aa=t("code",null,"字符串",-1),ia=t("code",null,"1+",-1),ha=t("td",{style:{"text-align":"center"}},"🟠",-1),fa={style:{"text-align":"center"}},ga={href:"https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"333",-1),ya=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),pa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},xa=t("code",null,"树",-1),ka=t("code",null,"深度优先搜索",-1),va=t("code",null,"二叉搜索树",-1),wa=t("code",null,"2+",-1),za=t("td",{style:{"text-align":"center"}},"🟠",-1),Ia={style:{"text-align":"center"}},qa={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},ja={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},"337",-1),La=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),Ca={style:{"text-align":"center"}},Ka={style:{"text-align":"left"}},Pa=t("code",null,"树",-1),Va=t("code",null,"深度优先搜索",-1),Na=t("code",null,"动态规划",-1),Ra=t("code",null,"1+",-1),Ba=t("td",{style:{"text-align":"center"}},"🟠",-1),Ea={style:{"text-align":"center"}},Ga={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ta={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},"366",-1),Sa=t("td",{style:{"text-align":"left"}},"寻找二叉树的叶子节点 🔒",-1),Wa={style:{"text-align":"center"}},Qa={style:{"text-align":"left"}},Za=t("code",null,"树",-1),Aa=t("code",null,"深度优先搜索",-1),Da=t("code",null,"二叉树",-1),Fa=t("td",{style:{"text-align":"center"}},"🟠",-1),Ha={style:{"text-align":"center"}},Ja={href:"https://leetcode.cn/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ma={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},"404",-1),Ya=t("td",{style:{"text-align":"left"}},"左叶子之和",-1),$a={style:{"text-align":"center"}},ti={style:{"text-align":"left"}},ei=t("code",null,"树",-1),oi=t("code",null,"深度优先搜索",-1),li=t("code",null,"广度优先搜索",-1),ni=t("code",null,"1+",-1),si=t("td",{style:{"text-align":"center"}},"🟢",-1),ri={style:{"text-align":"center"}},di={href:"https://leetcode.cn/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},_i={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},"426",-1),ai=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),ii={style:{"text-align":"center"}},hi={style:{"text-align":"left"}},fi=t("code",null,"栈",-1),gi=t("code",null,"树",-1),ui=t("code",null,"深度优先搜索",-1),mi=t("code",null,"4+",-1),yi=t("td",{style:{"text-align":"center"}},"🟠",-1),pi={style:{"text-align":"center"}},bi={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},xi={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"431",-1),vi=t("td",{style:{"text-align":"left"}},"将 N 叉树编码为二叉树 🔒",-1),wi=t("td",{style:{"text-align":"center"}},null,-1),zi={style:{"text-align":"left"}},Ii=t("code",null,"树",-1),qi=t("code",null,"深度优先搜索",-1),ji=t("code",null,"广度优先搜索",-1),Oi=t("code",null,"2+",-1),Li=t("td",{style:{"text-align":"center"}},"🔴",-1),Ci={style:{"text-align":"center"}},Ki={href:"https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vi=t("td",{style:{"text-align":"center"}},"437",-1),Ni=t("td",{style:{"text-align":"left"}},"路径总和 III",-1),Ri={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Ei=t("code",null,"树",-1),Gi=t("code",null,"深度优先搜索",-1),Ti=t("code",null,"二叉树",-1),Ui=t("td",{style:{"text-align":"center"}},"🟠",-1),Si={style:{"text-align":"center"}},Wi={href:"https://leetcode.cn/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Qi={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},"449",-1),Ai=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),Di={style:{"text-align":"center"}},Fi={style:{"text-align":"left"}},Hi=t("code",null,"树",-1),Ji=t("code",null,"深度优先搜索",-1),Mi=t("code",null,"广度优先搜索",-1),Xi=t("code",null,"4+",-1),Yi=t("td",{style:{"text-align":"center"}},"🟠",-1),$i={style:{"text-align":"center"}},th={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},eh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},"450",-1),lh=t("td",{style:{"text-align":"left"}},"删除二叉搜索树中的节点",-1),nh={style:{"text-align":"center"}},sh={style:{"text-align":"left"}},rh=t("code",null,"树",-1),dh=t("code",null,"二叉搜索树",-1),_h=t("code",null,"二叉树",-1),ch=t("td",{style:{"text-align":"center"}},"🟠",-1),ah={style:{"text-align":"center"}},ih={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},hh={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},"501",-1),gh=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),uh={style:{"text-align":"center"}},mh={style:{"text-align":"left"}},yh=t("code",null,"树",-1),ph=t("code",null,"深度优先搜索",-1),bh=t("code",null,"二叉搜索树",-1),xh=t("code",null,"1+",-1),kh=t("td",{style:{"text-align":"center"}},"🟢",-1),vh={style:{"text-align":"center"}},wh={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},zh={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ih=t("td",{style:{"text-align":"center"}},"508",-1),qh=t("td",{style:{"text-align":"left"}},"出现次数最多的子树元素和",-1),jh=t("td",{style:{"text-align":"center"}},null,-1),Oh={style:{"text-align":"left"}},Lh=t("code",null,"树",-1),Ch=t("code",null,"深度优先搜索",-1),Kh=t("code",null,"哈希表",-1),Ph=t("code",null,"1+",-1),Vh=t("td",{style:{"text-align":"center"}},"🟠",-1),Nh={style:{"text-align":"center"}},Rh={href:"https://leetcode.cn/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},Bh={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},Eh=t("td",{style:{"text-align":"center"}},"510",-1),Gh=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 II 🔒",-1),Th=t("td",{style:{"text-align":"center"}},null,-1),Uh={style:{"text-align":"left"}},Sh=t("code",null,"树",-1),Wh=t("code",null,"二叉搜索树",-1),Qh=t("code",null,"二叉树",-1),Zh=t("td",{style:{"text-align":"center"}},"🟠",-1),Ah={style:{"text-align":"center"}},Dh={href:"https://leetcode.cn/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Fh={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},"513",-1),Jh=t("td",{style:{"text-align":"left"}},"找树左下角的值",-1),Mh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},Yh=t("code",null,"树",-1),$h=t("code",null,"深度优先搜索",-1),t1=t("code",null,"广度优先搜索",-1),e1=t("code",null,"1+",-1),o1=t("td",{style:{"text-align":"center"}},"🟠",-1),l1={style:{"text-align":"center"}},n1={href:"https://leetcode.cn/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},s1={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},r1=t("td",{style:{"text-align":"center"}},"515",-1),d1=t("td",{style:{"text-align":"left"}},"在每个树行中找最大值",-1),_1={style:{"text-align":"center"}},c1={style:{"text-align":"left"}},a1=t("code",null,"树",-1),i1=t("code",null,"深度优先搜索",-1),h1=t("code",null,"广度优先搜索",-1),f1=t("code",null,"1+",-1),g1=t("td",{style:{"text-align":"center"}},"🟠",-1),u1={style:{"text-align":"center"}},m1={href:"https://leetcode.cn/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},y1={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},p1=t("td",{style:{"text-align":"center"}},"530",-1),b1=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),x1={style:{"text-align":"center"}},k1={style:{"text-align":"left"}},v1=t("code",null,"树",-1),w1=t("code",null,"深度优先搜索",-1),z1=t("code",null,"广度优先搜索",-1),I1=t("code",null,"2+",-1),q1=t("td",{style:{"text-align":"center"}},"🟢",-1),j1={style:{"text-align":"center"}},O1={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},L1={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},"536",-1),K1=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),P1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},N1=t("code",null,"栈",-1),R1=t("code",null,"树",-1),B1=t("code",null,"深度优先搜索",-1),E1=t("code",null,"2+",-1),G1=t("td",{style:{"text-align":"center"}},"🟠",-1),T1={style:{"text-align":"center"}},U1={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},S1={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},W1=t("td",{style:{"text-align":"center"}},"538",-1),Q1=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),Z1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},D1=t("code",null,"树",-1),F1=t("code",null,"深度优先搜索",-1),H1=t("code",null,"二叉搜索树",-1),J1=t("code",null,"1+",-1),M1=t("td",{style:{"text-align":"center"}},"🟠",-1),X1={style:{"text-align":"center"}},Y1={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},$1={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},tf=t("td",{style:{"text-align":"center"}},"543",-1),ef=t("td",{style:{"text-align":"left"}},"二叉树的直径",-1),of={style:{"text-align":"center"}},lf={style:{"text-align":"left"}},nf=t("code",null,"树",-1),sf=t("code",null,"深度优先搜索",-1),rf=t("code",null,"二叉树",-1),df=t("td",{style:{"text-align":"center"}},"🟢",-1),_f={style:{"text-align":"center"}},cf={href:"https://leetcode.cn/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},af={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},"545",-1),ff=t("td",{style:{"text-align":"left"}},"二叉树的边界 🔒",-1),gf=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},mf=t("code",null,"树",-1),yf=t("code",null,"深度优先搜索",-1),pf=t("code",null,"二叉树",-1),bf=t("td",{style:{"text-align":"center"}},"🟠",-1),xf={style:{"text-align":"center"}},kf={href:"https://leetcode.cn/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},vf={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},wf=t("td",{style:{"text-align":"center"}},"549",-1),zf=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 II 🔒",-1),If=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},jf=t("code",null,"树",-1),Of=t("code",null,"深度优先搜索",-1),Lf=t("code",null,"二叉树",-1),Cf=t("td",{style:{"text-align":"center"}},"🟠",-1),Kf={style:{"text-align":"center"}},Pf={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Vf={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Nf=t("td",{style:{"text-align":"center"}},"563",-1),Rf=t("td",{style:{"text-align":"left"}},"二叉树的坡度",-1),Bf={style:{"text-align":"center"}},Ef={style:{"text-align":"left"}},Gf=t("code",null,"树",-1),Tf=t("code",null,"深度优先搜索",-1),Uf=t("code",null,"二叉树",-1),Sf=t("td",{style:{"text-align":"center"}},"🟢",-1),Wf={style:{"text-align":"center"}},Qf={href:"https://leetcode.cn/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Zf={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Af=t("td",{style:{"text-align":"center"}},"572",-1),Df=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),Ff={style:{"text-align":"center"}},Hf={style:{"text-align":"left"}},Jf=t("code",null,"树",-1),Mf=t("code",null,"深度优先搜索",-1),Xf=t("code",null,"二叉树",-1),Yf=t("code",null,"2+",-1),$f=t("td",{style:{"text-align":"center"}},"🟢",-1),tg={style:{"text-align":"center"}},eg={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},og={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},lg=t("td",{style:{"text-align":"center"}},"606",-1),ng=t("td",{style:{"text-align":"left"}},"根据二叉树创建字符串",-1),sg=t("td",{style:{"text-align":"center"}},null,-1),rg={style:{"text-align":"left"}},dg=t("code",null,"树",-1),_g=t("code",null,"深度优先搜索",-1),cg=t("code",null,"字符串",-1),ag=t("code",null,"1+",-1),ig=t("td",{style:{"text-align":"center"}},"🟠",-1),hg={style:{"text-align":"center"}},fg={href:"https://leetcode.cn/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},gg={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},"617",-1),mg=t("td",{style:{"text-align":"left"}},"合并二叉树",-1),yg={style:{"text-align":"center"}},pg={style:{"text-align":"left"}},bg=t("code",null,"树",-1),xg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"广度优先搜索",-1),vg=t("code",null,"1+",-1),wg=t("td",{style:{"text-align":"center"}},"🟢",-1),zg={style:{"text-align":"center"}},Ig={href:"https://leetcode.cn/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},qg={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},jg=t("td",{style:{"text-align":"center"}},"623",-1),Og=t("td",{style:{"text-align":"left"}},"在二叉树中增加一行",-1),Lg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Kg=t("code",null,"树",-1),Pg=t("code",null,"深度优先搜索",-1),Vg=t("code",null,"广度优先搜索",-1),Ng=t("code",null,"1+",-1),Rg=t("td",{style:{"text-align":"center"}},"🟠",-1),Bg={style:{"text-align":"center"}},Eg={href:"https://leetcode.cn/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Gg={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Tg=t("td",{style:{"text-align":"center"}},"637",-1),Ug=t("td",{style:{"text-align":"left"}},"二叉树的层平均值",-1),Sg={style:{"text-align":"center"}},Wg={style:{"text-align":"left"}},Qg=t("code",null,"树",-1),Zg=t("code",null,"深度优先搜索",-1),Ag=t("code",null,"广度优先搜索",-1),Dg=t("code",null,"1+",-1),Fg=t("td",{style:{"text-align":"center"}},"🟢",-1),Hg={style:{"text-align":"center"}},Jg={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mg={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xg=t("td",{style:{"text-align":"center"}},"652",-1),Yg=t("td",{style:{"text-align":"left"}},"寻找重复的子树",-1),$g=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"树",-1),ou=t("code",null,"深度优先搜索",-1),lu=t("code",null,"哈希表",-1),nu=t("code",null,"1+",-1),su=t("td",{style:{"text-align":"center"}},"🟠",-1),ru={style:{"text-align":"center"}},du={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},_u={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},"653",-1),au=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),iu={style:{"text-align":"center"}},hu={style:{"text-align":"left"}},fu=t("code",null,"树",-1),gu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"广度优先搜索",-1),mu=t("code",null,"4+",-1),yu=t("td",{style:{"text-align":"center"}},"🟢",-1),pu={style:{"text-align":"center"}},bu={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},xu={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},ku=t("td",{style:{"text-align":"center"}},"654",-1),vu=t("td",{style:{"text-align":"left"}},"最大二叉树",-1),wu={style:{"text-align":"center"}},zu={style:{"text-align":"left"}},Iu=t("code",null,"栈",-1),qu=t("code",null,"树",-1),ju=t("code",null,"数组",-1),Ou=t("code",null,"3+",-1),Lu=t("td",{style:{"text-align":"center"}},"🟠",-1),Cu={style:{"text-align":"center"}},Ku={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pu={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},"655",-1),Nu=t("td",{style:{"text-align":"left"}},"输出二叉树",-1),Ru=t("td",{style:{"text-align":"center"}},null,-1),Bu={style:{"text-align":"left"}},Eu=t("code",null,"树",-1),Gu=t("code",null,"深度优先搜索",-1),Tu=t("code",null,"广度优先搜索",-1),Uu=t("code",null,"1+",-1),Su=t("td",{style:{"text-align":"center"}},"🟠",-1),Wu={style:{"text-align":"center"}},Qu={href:"https://leetcode.cn/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zu={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Au=t("td",{style:{"text-align":"center"}},"662",-1),Du=t("td",{style:{"text-align":"left"}},"二叉树最大宽度",-1),Fu={style:{"text-align":"center"}},Hu={style:{"text-align":"left"}},Ju=t("code",null,"树",-1),Mu=t("code",null,"深度优先搜索",-1),Xu=t("code",null,"广度优先搜索",-1),Yu=t("code",null,"1+",-1),$u=t("td",{style:{"text-align":"center"}},"🟠",-1),tm={style:{"text-align":"center"}},em={href:"https://leetcode.cn/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},om={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},lm=t("td",{style:{"text-align":"center"}},"663",-1),nm=t("td",{style:{"text-align":"left"}},"均匀树划分 🔒",-1),sm=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},dm=t("code",null,"树",-1),_m=t("code",null,"深度优先搜索",-1),cm=t("code",null,"二叉树",-1),am=t("td",{style:{"text-align":"center"}},"🟠",-1),im={style:{"text-align":"center"}},hm={href:"https://leetcode.cn/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},fm={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},gm=t("td",{style:{"text-align":"center"}},"666",-1),um=t("td",{style:{"text-align":"left"}},"路径总和 IV 🔒",-1),mm=t("td",{style:{"text-align":"center"}},null,-1),ym={style:{"text-align":"left"}},pm=t("code",null,"树",-1),bm=t("code",null,"深度优先搜索",-1),xm=t("code",null,"数组",-1),km=t("code",null,"2+",-1),vm=t("td",{style:{"text-align":"center"}},"🟠",-1),wm={style:{"text-align":"center"}},zm={href:"https://leetcode.cn/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},Im={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},qm=t("td",{style:{"text-align":"center"}},"669",-1),jm=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),Om=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},Cm=t("code",null,"树",-1),Km=t("code",null,"深度优先搜索",-1),Pm=t("code",null,"二叉搜索树",-1),Vm=t("code",null,"1+",-1),Nm=t("td",{style:{"text-align":"center"}},"🟠",-1),Rm={style:{"text-align":"center"}},Bm={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Em={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},"671",-1),Tm=t("td",{style:{"text-align":"left"}},"二叉树中第二小的节点",-1),Um={style:{"text-align":"center"}},Sm={style:{"text-align":"left"}},Wm=t("code",null,"树",-1),Qm=t("code",null,"深度优先搜索",-1),Zm=t("code",null,"二叉树",-1),Am=t("td",{style:{"text-align":"center"}},"🟢",-1),Dm={style:{"text-align":"center"}},Fm={href:"https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hm={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jm=t("td",{style:{"text-align":"center"}},"687",-1),Mm=t("td",{style:{"text-align":"left"}},"最长同值路径",-1),Xm=t("td",{style:{"text-align":"center"}},null,-1),Ym={style:{"text-align":"left"}},$m=t("code",null,"树",-1),ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"二叉树",-1),oy=t("td",{style:{"text-align":"center"}},"🟠",-1),ly={style:{"text-align":"center"}},ny={href:"https://leetcode.cn/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},sy={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},ry=t("td",{style:{"text-align":"center"}},"700",-1),dy=t("td",{style:{"text-align":"left"}},"二叉搜索树中的搜索",-1),_y={style:{"text-align":"center"}},cy={style:{"text-align":"left"}},ay=t("code",null,"树",-1),iy=t("code",null,"二叉搜索树",-1),hy=t("code",null,"二叉树",-1),fy=t("td",{style:{"text-align":"center"}},"🟢",-1),gy={style:{"text-align":"center"}},uy={href:"https://leetcode.cn/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},my={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},yy=t("td",{style:{"text-align":"center"}},"701",-1),py=t("td",{style:{"text-align":"left"}},"二叉搜索树中的插入操作",-1),by={style:{"text-align":"center"}},xy={style:{"text-align":"left"}},ky=t("code",null,"树",-1),vy=t("code",null,"二叉搜索树",-1),wy=t("code",null,"二叉树",-1),zy=t("td",{style:{"text-align":"center"}},"🟠",-1),Iy={style:{"text-align":"center"}},qy={href:"https://leetcode.cn/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jy={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},"703",-1),Ly=t("td",{style:{"text-align":"left"}},"数据流中的第 K 大元素",-1),Cy={style:{"text-align":"center"}},Ky={style:{"text-align":"left"}},Py=t("code",null,"树",-1),Vy=t("code",null,"设计",-1),Ny=t("code",null,"二叉搜索树",-1),Ry=t("code",null,"3+",-1),By=t("td",{style:{"text-align":"center"}},"🟢",-1),Ey={style:{"text-align":"center"}},Gy={href:"https://leetcode.cn/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Ty={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Uy=t("td",{style:{"text-align":"center"}},"742",-1),Sy=t("td",{style:{"text-align":"left"}},"二叉树最近的叶节点 🔒",-1),Wy=t("td",{style:{"text-align":"center"}},null,-1),Qy={style:{"text-align":"left"}},Zy=t("code",null,"树",-1),Ay=t("code",null,"深度优先搜索",-1),Dy=t("code",null,"广度优先搜索",-1),Fy=t("code",null,"1+",-1),Hy=t("td",{style:{"text-align":"center"}},"🟠",-1),Jy={style:{"text-align":"center"}},My={href:"https://leetcode.cn/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xy={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},"776",-1),$y=t("td",{style:{"text-align":"left"}},"拆分二叉搜索树 🔒",-1),tp=t("td",{style:{"text-align":"center"}},null,-1),ep={style:{"text-align":"left"}},op=t("code",null,"树",-1),lp=t("code",null,"二叉搜索树",-1),np=t("code",null,"递归",-1),sp=t("code",null,"1+",-1),rp=t("td",{style:{"text-align":"center"}},"🟠",-1),dp={style:{"text-align":"center"}},_p={href:"https://leetcode.cn/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},cp={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},ap=t("td",{style:{"text-align":"center"}},"783",-1),ip=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),hp={style:{"text-align":"center"}},fp={style:{"text-align":"left"}},gp=t("code",null,"树",-1),up=t("code",null,"深度优先搜索",-1),mp=t("code",null,"广度优先搜索",-1),yp=t("code",null,"2+",-1),pp=t("td",{style:{"text-align":"center"}},"🟢",-1),bp={style:{"text-align":"center"}},xp={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},kp={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},vp=t("td",{style:{"text-align":"center"}},"814",-1),wp=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),zp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},qp=t("code",null,"树",-1),jp=t("code",null,"深度优先搜索",-1),Op=t("code",null,"二叉树",-1),Lp=t("td",{style:{"text-align":"center"}},"🟠",-1),Cp={style:{"text-align":"center"}},Kp={href:"https://leetcode.cn/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},Pp={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},Vp=t("td",{style:{"text-align":"center"}},"863",-1),Np=t("td",{style:{"text-align":"left"}},"二叉树中所有距离为 K 的结点",-1),Rp=t("td",{style:{"text-align":"center"}},null,-1),Bp={style:{"text-align":"left"}},Ep=t("code",null,"树",-1),Gp=t("code",null,"深度优先搜索",-1),Tp=t("code",null,"广度优先搜索",-1),Up=t("code",null,"2+",-1),Sp=t("td",{style:{"text-align":"center"}},"🟠",-1),Wp={style:{"text-align":"center"}},Qp={href:"https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zp={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},"865",-1),Dp=t("td",{style:{"text-align":"left"}},"具有所有最深节点的最小子树",-1),Fp=t("td",{style:{"text-align":"center"}},null,-1),Hp={style:{"text-align":"left"}},Jp=t("code",null,"树",-1),Mp=t("code",null,"深度优先搜索",-1),Xp=t("code",null,"广度优先搜索",-1),Yp=t("code",null,"2+",-1),$p=t("td",{style:{"text-align":"center"}},"🟠",-1),tb={style:{"text-align":"center"}},eb={href:"https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},ob={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},"872",-1),nb=t("td",{style:{"text-align":"left"}},"叶子相似的树",-1),sb={style:{"text-align":"center"}},rb={style:{"text-align":"left"}},db=t("code",null,"树",-1),_b=t("code",null,"深度优先搜索",-1),cb=t("code",null,"二叉树",-1),ab=t("td",{style:{"text-align":"center"}},"🟢",-1),ib={style:{"text-align":"center"}},hb={href:"https://leetcode.cn/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},fb={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},"889",-1),ub=t("td",{style:{"text-align":"left"}},"根据前序和后序遍历构造二叉树",-1),mb={style:{"text-align":"center"}},yb={style:{"text-align":"left"}},pb=t("code",null,"树",-1),bb=t("code",null,"数组",-1),xb=t("code",null,"哈希表",-1),kb=t("code",null,"2+",-1),vb=t("td",{style:{"text-align":"center"}},"🟠",-1),wb={style:{"text-align":"center"}},zb={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ib={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},qb=t("td",{style:{"text-align":"center"}},"894",-1),jb=t("td",{style:{"text-align":"left"}},"所有可能的真二叉树",-1),Ob=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Cb=t("code",null,"树",-1),Kb=t("code",null,"递归",-1),Pb=t("code",null,"记忆化搜索",-1),Vb=t("code",null,"2+",-1),Nb=t("td",{style:{"text-align":"center"}},"🟠",-1),Rb={style:{"text-align":"center"}},Bb={href:"https://leetcode.cn/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Eb={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Gb=t("td",{style:{"text-align":"center"}},"897",-1),Tb=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),Ub={style:{"text-align":"center"}},Sb={style:{"text-align":"left"}},Wb=t("code",null,"栈",-1),Qb=t("code",null,"树",-1),Zb=t("code",null,"深度优先搜索",-1),Ab=t("code",null,"2+",-1),Db=t("td",{style:{"text-align":"center"}},"🟢",-1),Fb={style:{"text-align":"center"}},Hb={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Jb={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Mb=t("td",{style:{"text-align":"center"}},"919",-1),Xb=t("td",{style:{"text-align":"left"}},"完全二叉树插入器",-1),Yb=t("td",{style:{"text-align":"center"}},null,-1),$b={style:{"text-align":"left"}},t2=t("code",null,"树",-1),e2=t("code",null,"广度优先搜索",-1),o2=t("code",null,"设计",-1),l2=t("code",null,"1+",-1),n2=t("td",{style:{"text-align":"center"}},"🟠",-1),s2={style:{"text-align":"center"}},r2={href:"https://leetcode.cn/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},d2={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},"938",-1),c2=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),a2={style:{"text-align":"center"}},i2={style:{"text-align":"left"}},h2=t("code",null,"树",-1),f2=t("code",null,"深度优先搜索",-1),g2=t("code",null,"二叉搜索树",-1),u2=t("code",null,"1+",-1),m2=t("td",{style:{"text-align":"center"}},"🟢",-1),y2={style:{"text-align":"center"}},p2={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},b2={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},x2=t("td",{style:{"text-align":"center"}},"951",-1),k2=t("td",{style:{"text-align":"left"}},"翻转等价二叉树",-1),v2={style:{"text-align":"center"}},w2={style:{"text-align":"left"}},z2=t("code",null,"树",-1),I2=t("code",null,"深度优先搜索",-1),q2=t("code",null,"二叉树",-1),j2=t("td",{style:{"text-align":"center"}},"🟠",-1),O2={style:{"text-align":"center"}},L2={href:"https://leetcode.cn/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},C2={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},"958",-1),P2=t("td",{style:{"text-align":"left"}},"二叉树的完全性检验",-1),V2={style:{"text-align":"center"}},N2={style:{"text-align":"left"}},R2=t("code",null,"树",-1),B2=t("code",null,"广度优先搜索",-1),E2=t("code",null,"二叉树",-1),G2=t("td",{style:{"text-align":"center"}},"🟠",-1),T2={style:{"text-align":"center"}},U2={href:"https://leetcode.cn/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},S2={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},W2=t("td",{style:{"text-align":"center"}},"965",-1),Q2=t("td",{style:{"text-align":"left"}},"单值二叉树",-1),Z2={style:{"text-align":"center"}},A2={style:{"text-align":"left"}},D2=t("code",null,"树",-1),F2=t("code",null,"深度优先搜索",-1),H2=t("code",null,"广度优先搜索",-1),J2=t("code",null,"1+",-1),M2=t("td",{style:{"text-align":"center"}},"🟢",-1),X2={style:{"text-align":"center"}},Y2={href:"https://leetcode.cn/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},$2={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},tx=t("td",{style:{"text-align":"center"}},"968",-1),ex=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),ox=t("td",{style:{"text-align":"center"}},null,-1),lx={style:{"text-align":"left"}},nx=t("code",null,"树",-1),sx=t("code",null,"深度优先搜索",-1),rx=t("code",null,"动态规划",-1),dx=t("code",null,"1+",-1),_x=t("td",{style:{"text-align":"center"}},"🔴",-1),cx={style:{"text-align":"center"}},ax={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},ix={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},"971",-1),fx=t("td",{style:{"text-align":"left"}},"翻转二叉树以匹配先序遍历",-1),gx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},mx=t("code",null,"树",-1),yx=t("code",null,"深度优先搜索",-1),px=t("code",null,"二叉树",-1),bx=t("td",{style:{"text-align":"center"}},"🟠",-1),xx={style:{"text-align":"center"}},kx={href:"https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},vx={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},wx=t("td",{style:{"text-align":"center"}},"979",-1),zx=t("td",{style:{"text-align":"left"}},"在二叉树中分配硬币",-1),Ix=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},jx=t("code",null,"树",-1),Ox=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"二叉树",-1),Cx=t("td",{style:{"text-align":"center"}},"🟠",-1),Kx={style:{"text-align":"center"}},Px={href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vx={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nx=t("td",{style:{"text-align":"center"}},"987",-1),Rx=t("td",{style:{"text-align":"left"}},"二叉树的垂序遍历",-1),Bx=t("td",{style:{"text-align":"center"}},null,-1),Ex={style:{"text-align":"left"}},Gx=t("code",null,"树",-1),Tx=t("code",null,"深度优先搜索",-1),Ux=t("code",null,"广度优先搜索",-1),Sx=t("code",null,"3+",-1),Wx=t("td",{style:{"text-align":"center"}},"🔴",-1),Qx={style:{"text-align":"center"}},Zx={href:"https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ax={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},"988",-1),Fx=t("td",{style:{"text-align":"left"}},"从叶结点开始的最小字符串",-1),Hx=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Mx=t("code",null,"树",-1),Xx=t("code",null,"深度优先搜索",-1),Yx=t("code",null,"字符串",-1),$x=t("code",null,"2+",-1),t3=t("td",{style:{"text-align":"center"}},"🟠",-1),e3={style:{"text-align":"center"}},o3={href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},l3={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},"993",-1),s3=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点",-1),r3={style:{"text-align":"center"}},d3={style:{"text-align":"left"}},_3=t("code",null,"树",-1),c3=t("code",null,"深度优先搜索",-1),a3=t("code",null,"广度优先搜索",-1),i3=t("code",null,"1+",-1),h3=t("td",{style:{"text-align":"center"}},"🟢",-1),f3={style:{"text-align":"center"}},g3={href:"https://leetcode.cn/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},u3={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},m3=t("td",{style:{"text-align":"center"}},"998",-1),y3=t("td",{style:{"text-align":"left"}},"最大二叉树 II",-1),p3=t("td",{style:{"text-align":"center"}},null,-1),b3={style:{"text-align":"left"}},x3=t("code",null,"树",-1),k3=t("code",null,"二叉树",-1),v3=t("td",{style:{"text-align":"center"}},"🟠",-1),w3={style:{"text-align":"center"}},z3={href:"https://leetcode.cn/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},I3={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},"1008",-1),j3=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),O3={style:{"text-align":"center"}},L3={style:{"text-align":"left"}},C3=t("code",null,"栈",-1),K3=t("code",null,"树",-1),P3=t("code",null,"二叉搜索树",-1),V3=t("code",null,"3+",-1),N3=t("td",{style:{"text-align":"center"}},"🟠",-1),R3={style:{"text-align":"center"}},B3={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},E3={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},"1022",-1),T3=t("td",{style:{"text-align":"left"}},"从根到叶的二进制数之和",-1),U3={style:{"text-align":"center"}},S3={style:{"text-align":"left"}},W3=t("code",null,"树",-1),Q3=t("code",null,"深度优先搜索",-1),Z3=t("code",null,"二叉树",-1),A3=t("td",{style:{"text-align":"center"}},"🟢",-1),D3={style:{"text-align":"center"}},F3={href:"https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},H3={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},J3=t("td",{style:{"text-align":"center"}},"1026",-1),M3=t("td",{style:{"text-align":"left"}},"节点与其祖先之间的最大差值",-1),X3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},$3=t("code",null,"树",-1),t0=t("code",null,"深度优先搜索",-1),e0=t("code",null,"二叉树",-1),o0=t("td",{style:{"text-align":"center"}},"🟠",-1),l0={style:{"text-align":"center"}},n0={href:"https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},s0={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},r0=t("td",{style:{"text-align":"center"}},"1028",-1),d0=t("td",{style:{"text-align":"left"}},"从先序遍历还原二叉树",-1),_0={style:{"text-align":"center"}},c0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),i0=t("code",null,"深度优先搜索",-1),h0=t("code",null,"字符串",-1),f0=t("code",null,"1+",-1),g0=t("td",{style:{"text-align":"center"}},"🔴",-1),u0={style:{"text-align":"center"}},m0={href:"https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},y0={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},"1038",-1),b0=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),x0=t("td",{style:{"text-align":"center"}},null,-1),k0={style:{"text-align":"left"}},v0=t("code",null,"树",-1),w0=t("code",null,"深度优先搜索",-1),z0=t("code",null,"二叉搜索树",-1),I0=t("code",null,"1+",-1),q0=t("td",{style:{"text-align":"center"}},"🟠",-1),j0={style:{"text-align":"center"}},O0={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},L0={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},"1080",-1),K0=t("td",{style:{"text-align":"left"}},"根到叶路径上的不足节点",-1),P0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},N0=t("code",null,"树",-1),R0=t("code",null,"深度优先搜索",-1),B0=t("code",null,"二叉树",-1),E0=t("td",{style:{"text-align":"center"}},"🟠",-1),G0={style:{"text-align":"center"}},T0={href:"https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},U0={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},S0=t("td",{style:{"text-align":"center"}},"1104",-1),W0=t("td",{style:{"text-align":"left"}},"二叉树寻路",-1),Q0=t("td",{style:{"text-align":"center"}},null,-1),Z0={style:{"text-align":"left"}},A0=t("code",null,"树",-1),D0=t("code",null,"数学",-1),F0=t("code",null,"二叉树",-1),H0=t("td",{style:{"text-align":"center"}},"🟠",-1),J0={style:{"text-align":"center"}},M0={href:"https://leetcode.cn/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},X0={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y0=t("td",{style:{"text-align":"center"}},"1110",-1),$0=t("td",{style:{"text-align":"left"}},"删点成林",-1),t6=t("td",{style:{"text-align":"center"}},null,-1),e6={style:{"text-align":"left"}},o6=t("code",null,"树",-1),l6=t("code",null,"深度优先搜索",-1),n6=t("code",null,"数组",-1),s6=t("code",null,"2+",-1),r6=t("td",{style:{"text-align":"center"}},"🟠",-1),d6={style:{"text-align":"center"}},_6={href:"https://leetcode.cn/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},c6={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},a6=t("td",{style:{"text-align":"center"}},"1120",-1),i6=t("td",{style:{"text-align":"left"}},"子树的最大平均值 🔒",-1),h6=t("td",{style:{"text-align":"center"}},null,-1),f6={style:{"text-align":"left"}},g6=t("code",null,"树",-1),u6=t("code",null,"深度优先搜索",-1),m6=t("code",null,"二叉树",-1),y6=t("td",{style:{"text-align":"center"}},"🟠",-1),p6={style:{"text-align":"center"}},b6={href:"https://leetcode.cn/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},x6={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},k6=t("td",{style:{"text-align":"center"}},"1123",-1),v6=t("td",{style:{"text-align":"left"}},"最深叶节点的最近公共祖先",-1),w6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},I6=t("code",null,"树",-1),q6=t("code",null,"深度优先搜索",-1),j6=t("code",null,"广度优先搜索",-1),O6=t("code",null,"2+",-1),L6=t("td",{style:{"text-align":"center"}},"🟠",-1),C6={style:{"text-align":"center"}},K6={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},P6={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},"1145",-1),N6=t("td",{style:{"text-align":"left"}},"二叉树着色游戏",-1),R6=t("td",{style:{"text-align":"center"}},null,-1),B6={style:{"text-align":"left"}},E6=t("code",null,"树",-1),G6=t("code",null,"深度优先搜索",-1),T6=t("code",null,"二叉树",-1),U6=t("td",{style:{"text-align":"center"}},"🟠",-1),S6={style:{"text-align":"center"}},W6={href:"https://leetcode.cn/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Q6={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Z6=t("td",{style:{"text-align":"center"}},"1161",-1),A6=t("td",{style:{"text-align":"left"}},"最大层内元素和",-1),D6={style:{"text-align":"center"}},F6={style:{"text-align":"left"}},H6=t("code",null,"树",-1),J6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"广度优先搜索",-1),X6=t("code",null,"1+",-1),Y6=t("td",{style:{"text-align":"center"}},"🟠",-1),$6={style:{"text-align":"center"}},t5={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},e5={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},o5=t("td",{style:{"text-align":"center"}},"1214",-1),l5=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),n5=t("td",{style:{"text-align":"center"}},null,-1),s5={style:{"text-align":"left"}},r5=t("code",null,"栈",-1),d5=t("code",null,"树",-1),_5=t("code",null,"深度优先搜索",-1),c5=t("code",null,"4+",-1),a5=t("td",{style:{"text-align":"center"}},"🟠",-1),i5={style:{"text-align":"center"}},h5={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},f5={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},g5=t("td",{style:{"text-align":"center"}},"1261",-1),u5=t("td",{style:{"text-align":"left"}},"在受污染的二叉树中查找元素",-1),m5={style:{"text-align":"center"}},y5={style:{"text-align":"left"}},p5=t("code",null,"树",-1),b5=t("code",null,"深度优先搜索",-1),x5=t("code",null,"广度优先搜索",-1),k5=t("code",null,"3+",-1),v5=t("td",{style:{"text-align":"center"}},"🟠",-1),w5={style:{"text-align":"center"}},z5={href:"https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},I5={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},q5=t("td",{style:{"text-align":"center"}},"1302",-1),j5=t("td",{style:{"text-align":"left"}},"层数最深叶子节点的和",-1),O5=t("td",{style:{"text-align":"center"}},null,-1),L5={style:{"text-align":"left"}},C5=t("code",null,"树",-1),K5=t("code",null,"深度优先搜索",-1),P5=t("code",null,"广度优先搜索",-1),V5=t("code",null,"1+",-1),N5=t("td",{style:{"text-align":"center"}},"🟠",-1),R5={style:{"text-align":"center"}},B5={href:"https://leetcode.cn/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},E5={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},"1305",-1),T5=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),U5=t("td",{style:{"text-align":"center"}},null,-1),S5={style:{"text-align":"left"}},W5=t("code",null,"树",-1),Q5=t("code",null,"深度优先搜索",-1),Z5=t("code",null,"二叉搜索树",-1),A5=t("code",null,"2+",-1),D5=t("td",{style:{"text-align":"center"}},"🟠",-1),F5={style:{"text-align":"center"}},H5={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},J5={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},"1315",-1),X5=t("td",{style:{"text-align":"left"}},"祖父节点值为偶数的节点和",-1),Y5=t("td",{style:{"text-align":"center"}},null,-1),$5={style:{"text-align":"left"}},t4=t("code",null,"树",-1),e4=t("code",null,"深度优先搜索",-1),o4=t("code",null,"广度优先搜索",-1),l4=t("code",null,"1+",-1),n4=t("td",{style:{"text-align":"center"}},"🟠",-1),s4={style:{"text-align":"center"}},r4={href:"https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},d4={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},"1325",-1),c4=t("td",{style:{"text-align":"left"}},"删除给定值的叶子节点",-1),a4=t("td",{style:{"text-align":"center"}},null,-1),i4={style:{"text-align":"left"}},h4=t("code",null,"树",-1),f4=t("code",null,"深度优先搜索",-1),g4=t("code",null,"二叉树",-1),u4=t("td",{style:{"text-align":"center"}},"🟠",-1),m4={style:{"text-align":"center"}},y4={href:"https://leetcode.cn/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},p4={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},b4=t("td",{style:{"text-align":"center"}},"1339",-1),x4=t("td",{style:{"text-align":"left"}},"分裂二叉树的最大乘积",-1),k4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},w4=t("code",null,"树",-1),z4=t("code",null,"深度优先搜索",-1),I4=t("code",null,"二叉树",-1),q4=t("td",{style:{"text-align":"center"}},"🟠",-1),j4={style:{"text-align":"center"}},O4={href:"https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},L4={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},C4=t("td",{style:{"text-align":"center"}},"1361",-1),K4=t("td",{style:{"text-align":"left"}},"验证二叉树",-1),P4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},N4=t("code",null,"树",-1),R4=t("code",null,"深度优先搜索",-1),B4=t("code",null,"广度优先搜索",-1),E4=t("code",null,"3+",-1),G4=t("td",{style:{"text-align":"center"}},"🟠",-1),T4={style:{"text-align":"center"}},U4={href:"https://leetcode.cn/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},S4={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},"1367",-1),Q4=t("td",{style:{"text-align":"left"}},"二叉树中的链表",-1),Z4=t("td",{style:{"text-align":"center"}},null,-1),A4={style:{"text-align":"left"}},D4=t("code",null,"树",-1),F4=t("code",null,"深度优先搜索",-1),H4=t("code",null,"链表",-1),J4=t("code",null,"1+",-1),M4=t("td",{style:{"text-align":"center"}},"🟠",-1),X4={style:{"text-align":"center"}},Y4={href:"https://leetcode.cn/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$4={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},t7=t("td",{style:{"text-align":"center"}},"1372",-1),e7=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),o7={style:{"text-align":"center"}},l7={style:{"text-align":"left"}},n7=t("code",null,"树",-1),s7=t("code",null,"深度优先搜索",-1),r7=t("code",null,"动态规划",-1),d7=t("code",null,"1+",-1),_7=t("td",{style:{"text-align":"center"}},"🟠",-1),c7={style:{"text-align":"center"}},a7={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i7={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},h7=t("td",{style:{"text-align":"center"}},"1373",-1),f7=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),g7=t("td",{style:{"text-align":"center"}},null,-1),u7={style:{"text-align":"left"}},m7=t("code",null,"树",-1),y7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"二叉搜索树",-1),b7=t("code",null,"2+",-1),x7=t("td",{style:{"text-align":"center"}},"🔴",-1),k7={style:{"text-align":"center"}},v7={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},w7={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},"1379",-1),I7=t("td",{style:{"text-align":"left"}},"找出克隆二叉树中的相同节点",-1),q7={style:{"text-align":"center"}},j7={style:{"text-align":"left"}},O7=t("code",null,"树",-1),L7=t("code",null,"深度优先搜索",-1),C7=t("code",null,"广度优先搜索",-1),K7=t("code",null,"1+",-1),P7=t("td",{style:{"text-align":"center"}},"🟢",-1),V7={style:{"text-align":"center"}},N7={href:"https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},R7={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},B7=t("td",{style:{"text-align":"center"}},"1382",-1),E7=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),G7=t("td",{style:{"text-align":"center"}},null,-1),T7={style:{"text-align":"left"}},U7=t("code",null,"贪心",-1),S7=t("code",null,"树",-1),W7=t("code",null,"深度优先搜索",-1),Q7=t("code",null,"3+",-1),Z7=t("td",{style:{"text-align":"center"}},"🟠",-1),A7={style:{"text-align":"center"}},D7={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},F7={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},H7=t("td",{style:{"text-align":"center"}},"1430",-1),J7=t("td",{style:{"text-align":"left"}},"判断给定的序列是否是二叉树从根到叶的路径 🔒",-1),M7=t("td",{style:{"text-align":"center"}},null,-1),X7={style:{"text-align":"left"}},Y7=t("code",null,"树",-1),$7=t("code",null,"深度优先搜索",-1),t9=t("code",null,"广度优先搜索",-1),e9=t("code",null,"1+",-1),o9=t("td",{style:{"text-align":"center"}},"🟠",-1),l9={style:{"text-align":"center"}},n9={href:"https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s9={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},"1448",-1),d9=t("td",{style:{"text-align":"left"}},"统计二叉树中好节点的数目",-1),_9={style:{"text-align":"center"}},c9={style:{"text-align":"left"}},a9=t("code",null,"树",-1),i9=t("code",null,"深度优先搜索",-1),h9=t("code",null,"广度优先搜索",-1),f9=t("code",null,"1+",-1),g9=t("td",{style:{"text-align":"center"}},"🟠",-1),u9={style:{"text-align":"center"}},m9={href:"https://leetcode.cn/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},y9={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},"1457",-1),b9=t("td",{style:{"text-align":"left"}},"二叉树中的伪回文路径",-1),x9=t("td",{style:{"text-align":"center"}},null,-1),k9={style:{"text-align":"left"}},v9=t("code",null,"位运算",-1),w9=t("code",null,"树",-1),z9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"2+",-1),q9=t("td",{style:{"text-align":"center"}},"🟠",-1),j9={style:{"text-align":"center"}},O9={href:"https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},L9={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},"1469",-1),K9=t("td",{style:{"text-align":"left"}},"寻找所有的独生节点 🔒",-1),P9=t("td",{style:{"text-align":"center"}},null,-1),V9={style:{"text-align":"left"}},N9=t("code",null,"树",-1),R9=t("code",null,"深度优先搜索",-1),B9=t("code",null,"广度优先搜索",-1),E9=t("code",null,"1+",-1),G9=t("td",{style:{"text-align":"center"}},"🟢",-1),T9={style:{"text-align":"center"}},U9={href:"https://leetcode.cn/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},S9={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},W9=t("td",{style:{"text-align":"center"}},"1485",-1),Q9=t("td",{style:{"text-align":"left"}},"克隆含随机指针的二叉树 🔒",-1),Z9=t("td",{style:{"text-align":"center"}},null,-1),A9={style:{"text-align":"left"}},D9=t("code",null,"树",-1),F9=t("code",null,"深度优先搜索",-1),H9=t("code",null,"广度优先搜索",-1),J9=t("code",null,"2+",-1),M9=t("td",{style:{"text-align":"center"}},"🟠",-1),X9={style:{"text-align":"center"}},Y9={href:"https://leetcode.cn/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},$9={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},"1530",-1),e8=t("td",{style:{"text-align":"left"}},"好叶子节点对的数量",-1),o8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},n8=t("code",null,"树",-1),s8=t("code",null,"深度优先搜索",-1),r8=t("code",null,"二叉树",-1),d8=t("td",{style:{"text-align":"center"}},"🟠",-1),_8={style:{"text-align":"center"}},c8={href:"https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},a8={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},"1569",-1),h8=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},u8=t("code",null,"树",-1),m8=t("code",null,"并查集",-1),y8=t("code",null,"二叉搜索树",-1),p8=t("code",null,"7+",-1),b8=t("td",{style:{"text-align":"center"}},"🔴",-1),x8={style:{"text-align":"center"}},k8={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},v8={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},w8=t("td",{style:{"text-align":"center"}},"1586",-1),z8=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器 II 🔒",-1),I8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},j8=t("code",null,"栈",-1),O8=t("code",null,"树",-1),L8=t("code",null,"设计",-1),C8=t("code",null,"3+",-1),K8=t("td",{style:{"text-align":"center"}},"🟠",-1),P8={style:{"text-align":"center"}},V8={href:"https://leetcode.cn/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},N8={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},R8=t("td",{style:{"text-align":"center"}},"1597",-1),B8=t("td",{style:{"text-align":"left"}},"根据中缀表达式构造二叉表达式树 🔒",-1),E8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},T8=t("code",null,"栈",-1),U8=t("code",null,"树",-1),S8=t("code",null,"字符串",-1),W8=t("code",null,"1+",-1),Q8=t("td",{style:{"text-align":"center"}},"🔴",-1),Z8={style:{"text-align":"center"}},A8={href:"https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},D8={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},F8=t("td",{style:{"text-align":"center"}},"1602",-1),H8=t("td",{style:{"text-align":"left"}},"找到二叉树中最近的右侧节点 🔒",-1),J8=t("td",{style:{"text-align":"center"}},null,-1),M8={style:{"text-align":"left"}},X8=t("code",null,"树",-1),Y8=t("code",null,"广度优先搜索",-1),$8=t("code",null,"二叉树",-1),tk=t("td",{style:{"text-align":"center"}},"🟠",-1),ek={style:{"text-align":"center"}},ok={href:"https://leetcode.cn/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},lk={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},nk=t("td",{style:{"text-align":"center"}},"1609",-1),sk=t("td",{style:{"text-align":"left"}},"奇偶树",-1),rk=t("td",{style:{"text-align":"center"}},null,-1),dk={style:{"text-align":"left"}},_k=t("code",null,"树",-1),ck=t("code",null,"广度优先搜索",-1),ak=t("code",null,"二叉树",-1),ik=t("td",{style:{"text-align":"center"}},"🟠",-1),hk={style:{"text-align":"center"}},fk={href:"https://leetcode.cn/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},gk={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},"1612",-1),mk=t("td",{style:{"text-align":"left"}},"检查两棵二叉表达式树是否等价 🔒",-1),yk=t("td",{style:{"text-align":"center"}},null,-1),pk={style:{"text-align":"left"}},bk=t("code",null,"树",-1),xk=t("code",null,"深度优先搜索",-1),kk=t("code",null,"哈希表",-1),vk=t("code",null,"2+",-1),wk=t("td",{style:{"text-align":"center"}},"🟠",-1),zk={style:{"text-align":"center"}},Ik={href:"https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},qk={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},jk=t("td",{style:{"text-align":"center"}},"1628",-1),Ok=t("td",{style:{"text-align":"left"}},"设计带解析函数的表达式树 🔒",-1),Lk=t("td",{style:{"text-align":"center"}},null,-1),Ck={style:{"text-align":"left"}},Kk=t("code",null,"栈",-1),Pk=t("code",null,"树",-1),Vk=t("code",null,"设计",-1),Nk=t("code",null,"3+",-1),Rk=t("td",{style:{"text-align":"center"}},"🟠",-1),Bk={style:{"text-align":"center"}},Ek={href:"https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},Gk={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},Tk=t("td",{style:{"text-align":"center"}},"1644",-1),Uk=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 II 🔒",-1),Sk=t("td",{style:{"text-align":"center"}},null,-1),Wk={style:{"text-align":"left"}},Qk=t("code",null,"树",-1),Zk=t("code",null,"深度优先搜索",-1),Ak=t("code",null,"二叉树",-1),Dk=t("td",{style:{"text-align":"center"}},"🟠",-1),Fk={style:{"text-align":"center"}},Hk={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Jk={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Mk=t("td",{style:{"text-align":"center"}},"1650",-1),Xk=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 III 🔒",-1),Yk=t("td",{style:{"text-align":"center"}},null,-1),$k={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"哈希表",-1),ov=t("code",null,"双指针",-1),lv=t("code",null,"1+",-1),nv=t("td",{style:{"text-align":"center"}},"🟠",-1),sv={style:{"text-align":"center"}},rv={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},dv={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},"1660",-1),cv=t("td",{style:{"text-align":"left"}},"纠正二叉树 🔒",-1),av=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},hv=t("code",null,"树",-1),fv=t("code",null,"深度优先搜索",-1),gv=t("code",null,"广度优先搜索",-1),uv=t("code",null,"2+",-1),mv=t("td",{style:{"text-align":"center"}},"🟠",-1),yv={style:{"text-align":"center"}},pv={href:"https://leetcode.cn/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},bv={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},"1666",-1),kv=t("td",{style:{"text-align":"left"}},"改变二叉树的根节点 🔒",-1),vv=t("td",{style:{"text-align":"center"}},null,-1),wv={style:{"text-align":"left"}},zv=t("code",null,"树",-1),Iv=t("code",null,"深度优先搜索",-1),qv=t("code",null,"二叉树",-1),jv=t("td",{style:{"text-align":"center"}},"🟠",-1),Ov={style:{"text-align":"center"}},Lv={href:"https://leetcode.cn/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cv={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kv=t("td",{style:{"text-align":"center"}},"1676",-1),Pv=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 IV 🔒",-1),Vv=t("td",{style:{"text-align":"center"}},null,-1),Nv={style:{"text-align":"left"}},Rv=t("code",null,"树",-1),Bv=t("code",null,"深度优先搜索",-1),Ev=t("code",null,"哈希表",-1),Gv=t("code",null,"1+",-1),Tv=t("td",{style:{"text-align":"center"}},"🟠",-1),Uv={style:{"text-align":"center"}},Sv={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},Wv={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},"1740",-1),Zv=t("td",{style:{"text-align":"left"}},"找到二叉树中的距离 🔒",-1),Av=t("td",{style:{"text-align":"center"}},null,-1),Dv={style:{"text-align":"left"}},Fv=t("code",null,"树",-1),Hv=t("code",null,"深度优先搜索",-1),Jv=t("code",null,"广度优先搜索",-1),Mv=t("code",null,"2+",-1),Xv=t("td",{style:{"text-align":"center"}},"🟠",-1),Yv={style:{"text-align":"center"}},$v={href:"https://leetcode.cn/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},tw={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ew=t("td",{style:{"text-align":"center"}},"1902",-1),ow=t("td",{style:{"text-align":"left"}},"给定二叉搜索树的插入顺序求深度 🔒",-1),lw=t("td",{style:{"text-align":"center"}},null,-1),nw={style:{"text-align":"left"}},sw=t("code",null,"树",-1),rw=t("code",null,"二叉搜索树",-1),dw=t("code",null,"数组",-1),_w=t("code",null,"2+",-1),cw=t("td",{style:{"text-align":"center"}},"🟠",-1),aw={style:{"text-align":"center"}},iw={href:"https://leetcode.cn/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},hw={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},fw=t("td",{style:{"text-align":"center"}},"1932",-1),gw=t("td",{style:{"text-align":"left"}},"合并多棵二叉搜索树",-1),uw=t("td",{style:{"text-align":"center"}},null,-1),mw={style:{"text-align":"left"}},yw=t("code",null,"树",-1),pw=t("code",null,"深度优先搜索",-1),bw=t("code",null,"哈希表",-1),xw=t("code",null,"2+",-1),kw=t("td",{style:{"text-align":"center"}},"🔴",-1),vw={style:{"text-align":"center"}},ww={href:"https://leetcode.cn/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},zw={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},Iw=t("td",{style:{"text-align":"center"}},"1973",-1),qw=t("td",{style:{"text-align":"left"}},"值等于子节点值之和的节点数量 🔒",-1),jw=t("td",{style:{"text-align":"center"}},null,-1),Ow={style:{"text-align":"left"}},Lw=t("code",null,"树",-1),Cw=t("code",null,"深度优先搜索",-1),Kw=t("code",null,"二叉树",-1),Pw=t("td",{style:{"text-align":"center"}},"🟠",-1),Vw={style:{"text-align":"center"}},Nw={href:"https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},Rw={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},Bw=t("td",{style:{"text-align":"center"}},"2005",-1),Ew=t("td",{style:{"text-align":"left"}},"斐波那契树的移除子树游戏 🔒",-1),Gw=t("td",{style:{"text-align":"center"}},null,-1),Tw={style:{"text-align":"left"}},Uw=t("code",null,"树",-1),Sw=t("code",null,"数学",-1),Ww=t("code",null,"动态规划",-1),Qw=t("code",null,"2+",-1),Zw=t("td",{style:{"text-align":"center"}},"🔴",-1),Aw={style:{"text-align":"center"}},Dw={href:"https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Fw={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Hw=t("td",{style:{"text-align":"center"}},"2049",-1),Jw=t("td",{style:{"text-align":"left"}},"统计最高分的节点数目",-1),Mw=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},Yw=t("code",null,"树",-1),$w=t("code",null,"深度优先搜索",-1),tz=t("code",null,"数组",-1),ez=t("code",null,"1+",-1),oz=t("td",{style:{"text-align":"center"}},"🟠",-1),lz={style:{"text-align":"center"}},nz={href:"https://leetcode.cn/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},sz={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},rz=t("td",{style:{"text-align":"center"}},"2096",-1),dz=t("td",{style:{"text-align":"left"}},"从二叉树一个节点到另一个节点每一步的方向",-1),_z=t("td",{style:{"text-align":"center"}},null,-1),cz={style:{"text-align":"left"}},az=t("code",null,"树",-1),iz=t("code",null,"深度优先搜索",-1),hz=t("code",null,"字符串",-1),fz=t("code",null,"1+",-1),gz=t("td",{style:{"text-align":"center"}},"🟠",-1),uz={style:{"text-align":"center"}},mz={href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},yz={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},pz=t("td",{style:{"text-align":"center"}},"2196",-1),bz=t("td",{style:{"text-align":"left"}},"根据描述创建二叉树",-1),xz={style:{"text-align":"center"}},kz={style:{"text-align":"left"}},vz=t("code",null,"树",-1),wz=t("code",null,"数组",-1),zz=t("code",null,"哈希表",-1),Iz=t("code",null,"1+",-1),qz=t("td",{style:{"text-align":"center"}},"🟠",-1),jz={style:{"text-align":"center"}},Oz={href:"https://leetcode.cn/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},Lz={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},Cz=t("td",{style:{"text-align":"center"}},"2236",-1),Kz=t("td",{style:{"text-align":"left"}},"判断根结点是否等于子结点之和",-1),Pz={style:{"text-align":"center"}},Vz={style:{"text-align":"left"}},Nz=t("code",null,"树",-1),Rz=t("code",null,"二叉树",-1),Bz=t("td",{style:{"text-align":"center"}},"🟢",-1),Ez={style:{"text-align":"center"}},Gz={href:"https://leetcode.cn/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Tz={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Uz=t("td",{style:{"text-align":"center"}},"2265",-1),Sz=t("td",{style:{"text-align":"left"}},"统计值等于子树平均值的节点数",-1),Wz=t("td",{style:{"text-align":"center"}},null,-1),Qz={style:{"text-align":"left"}},Zz=t("code",null,"树",-1),Az=t("code",null,"深度优先搜索",-1),Dz=t("code",null,"二叉树",-1),Fz=t("td",{style:{"text-align":"center"}},"🟠",-1),Hz={style:{"text-align":"center"}},Jz={href:"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},Mz={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},Xz=t("td",{style:{"text-align":"center"}},"2313",-1),Yz=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),$z=t("td",{style:{"text-align":"center"}},null,-1),tI={style:{"text-align":"left"}},eI=t("code",null,"树",-1),oI=t("code",null,"深度优先搜索",-1),lI=t("code",null,"动态规划",-1),nI=t("code",null,"1+",-1),sI=t("td",{style:{"text-align":"center"}},"🔴",-1),rI={style:{"text-align":"center"}},dI={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},_I={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},cI=t("td",{style:{"text-align":"center"}},"2331",-1),aI=t("td",{style:{"text-align":"left"}},"计算布尔二叉树的值",-1),iI={style:{"text-align":"center"}},hI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),uI=t("code",null,"二叉树",-1),mI=t("td",{style:{"text-align":"center"}},"🟢",-1),yI={style:{"text-align":"center"}},pI={href:"https://leetcode.cn/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},bI={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},xI=t("td",{style:{"text-align":"center"}},"2385",-1),kI=t("td",{style:{"text-align":"left"}},"感染二叉树需要的总时间",-1),vI=t("td",{style:{"text-align":"center"}},null,-1),wI={style:{"text-align":"left"}},zI=t("code",null,"树",-1),II=t("code",null,"深度优先搜索",-1),qI=t("code",null,"广度优先搜索",-1),jI=t("code",null,"2+",-1),OI=t("td",{style:{"text-align":"center"}},"🟠",-1),LI={style:{"text-align":"center"}},CI={href:"https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},KI={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},PI=t("td",{style:{"text-align":"center"}},"2415",-1),VI=t("td",{style:{"text-align":"left"}},"反转二叉树的奇数层",-1),NI={style:{"text-align":"center"}},RI={style:{"text-align":"left"}},BI=t("code",null,"树",-1),EI=t("code",null,"深度优先搜索",-1),GI=t("code",null,"广度优先搜索",-1),TI=t("code",null,"1+",-1),UI=t("td",{style:{"text-align":"center"}},"🟠",-1),SI={style:{"text-align":"center"}},WI={href:"https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},QI={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZI=t("td",{style:{"text-align":"center"}},"2445",-1),AI=t("td",{style:{"text-align":"left"}},"值为 1 的节点数 🔒",-1),DI=t("td",{style:{"text-align":"center"}},null,-1),FI={style:{"text-align":"left"}},HI=t("code",null,"树",-1),JI=t("code",null,"深度优先搜索",-1),MI=t("code",null,"广度优先搜索",-1),XI=t("code",null,"1+",-1),YI=t("td",{style:{"text-align":"center"}},"🟠",-1),$I={style:{"text-align":"center"}},tq={href:"https://leetcode.cn/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},eq={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},"2458",-1),lq=t("td",{style:{"text-align":"left"}},"移除子树后的二叉树高度",-1),nq={style:{"text-align":"center"}},sq={style:{"text-align":"left"}},rq=t("code",null,"树",-1),dq=t("code",null,"深度优先搜索",-1),_q=t("code",null,"广度优先搜索",-1),cq=t("code",null,"2+",-1),aq=t("td",{style:{"text-align":"center"}},"🔴",-1),iq={style:{"text-align":"center"}},hq={href:"https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},fq={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},gq=t("td",{style:{"text-align":"center"}},"2471",-1),uq=t("td",{style:{"text-align":"left"}},"逐层排序二叉树所需的最少操作数目",-1),mq={style:{"text-align":"center"}},yq={style:{"text-align":"left"}},pq=t("code",null,"树",-1),bq=t("code",null,"广度优先搜索",-1),xq=t("code",null,"二叉树",-1),kq=t("td",{style:{"text-align":"center"}},"🟠",-1),vq={style:{"text-align":"center"}},wq={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},zq={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},"2476",-1),qq=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),jq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},Lq=t("code",null,"树",-1),Cq=t("code",null,"深度优先搜索",-1),Kq=t("code",null,"二叉搜索树",-1),Pq=t("code",null,"3+",-1),Vq=t("td",{style:{"text-align":"center"}},"🟠",-1),Nq={style:{"text-align":"center"}},Rq={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Bq={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Eq=t("td",{style:{"text-align":"center"}},"2509",-1),Gq=t("td",{style:{"text-align":"left"}},"查询树中环的长度",-1),Tq=t("td",{style:{"text-align":"center"}},null,-1),Uq={style:{"text-align":"left"}},Sq=t("code",null,"树",-1),Wq=t("code",null,"数组",-1),Qq=t("code",null,"二叉树",-1),Zq=t("td",{style:{"text-align":"center"}},"🔴",-1),Aq={style:{"text-align":"center"}},Dq={href:"https://leetcode.cn/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Fq={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Hq=t("td",{style:{"text-align":"center"}},"2583",-1),Jq=t("td",{style:{"text-align":"left"}},"二叉树中的第 K 大层和",-1),Mq={style:{"text-align":"center"}},Xq={style:{"text-align":"left"}},Yq=t("code",null,"树",-1),$q=t("code",null,"广度优先搜索",-1),tj=t("code",null,"二叉树",-1),ej=t("code",null,"1+",-1),oj=t("td",{style:{"text-align":"center"}},"🟠",-1),lj={style:{"text-align":"center"}},nj={href:"https://leetcode.cn/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sj={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},rj=t("td",{style:{"text-align":"center"}},"2641",-1),dj=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点 II",-1),_j={style:{"text-align":"center"}},cj={style:{"text-align":"left"}},aj=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),hj=t("code",null,"广度优先搜索",-1),fj=t("code",null,"2+",-1),gj=t("td",{style:{"text-align":"center"}},"🟠",-1),uj={style:{"text-align":"center"}},mj={href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},yj={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},pj=t("td",{style:{"text-align":"center"}},"2673",-1),bj=t("td",{style:{"text-align":"left"}},"使二叉树所有路径值相等的最小代价",-1),xj=t("td",{style:{"text-align":"center"}},null,-1),kj={style:{"text-align":"left"}},vj=t("code",null,"贪心",-1),wj=t("code",null,"树",-1),zj=t("code",null,"数组",-1),Ij=t("code",null,"2+",-1),qj=t("td",{style:{"text-align":"center"}},"🟠",-1),jj={style:{"text-align":"center"}},Oj={href:"https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lj={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cj=t("td",{style:{"text-align":"center"}},"2689",-1),Kj=t("td",{style:{"text-align":"left"}},"从 Rope 树中提取第 K 个字符 🔒",-1),Pj=t("td",{style:{"text-align":"center"}},null,-1),Vj={style:{"text-align":"left"}},Nj=t("code",null,"树",-1),Rj=t("code",null,"深度优先搜索",-1),Bj=t("code",null,"二叉树",-1),Ej=t("td",{style:{"text-align":"center"}},"🟢",-1),Gj={style:{"text-align":"center"}},Tj={href:"https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},Uj={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},Sj=t("td",{style:{"text-align":"center"}},"2764",-1),Wj=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),Qj=t("td",{style:{"text-align":"center"}},null,-1),Zj={style:{"text-align":"left"}},Aj=t("code",null,"栈",-1),Dj=t("code",null,"树",-1),Fj=t("code",null,"深度优先搜索",-1),Hj=t("code",null,"1+",-1),Jj=t("td",{style:{"text-align":"center"}},"🟠",-1),Mj={style:{"text-align":"center"}},Xj={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yj={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},$j=t("td",{style:{"text-align":"center"}},"2773",-1),tO=t("td",{style:{"text-align":"left"}},"特殊二叉树的高度 🔒",-1),eO=t("td",{style:{"text-align":"center"}},null,-1),oO={style:{"text-align":"left"}},lO=t("code",null,"树",-1),nO=t("code",null,"深度优先搜索",-1),sO=t("code",null,"广度优先搜索",-1),rO=t("code",null,"1+",-1),dO=t("td",{style:{"text-align":"center"}},"🟠",-1),_O={style:{"text-align":"center"}},cO={href:"https://leetcode.cn/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},aO={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},iO=t("td",{style:{"text-align":"center"}},"2792",-1),hO=t("td",{style:{"text-align":"left"}},"计算足够大的节点数 🔒",-1),fO=t("td",{style:{"text-align":"center"}},null,-1),gO={style:{"text-align":"left"}},uO=t("code",null,"树",-1),mO=t("code",null,"深度优先搜索",-1),yO=t("code",null,"分治",-1),pO=t("code",null,"1+",-1),bO=t("td",{style:{"text-align":"center"}},"🔴",-1),xO={style:{"text-align":"center"}},kO={href:"https://leetcode.cn/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},vO={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},wO=t("td",{style:{"text-align":"center"}},"3157",-1),zO=t("td",{style:{"text-align":"left"}},"找到具有最小和的树的层数 🔒",-1),IO=t("td",{style:{"text-align":"center"}},null,-1),qO={style:{"text-align":"left"}},jO=t("code",null,"树",-1),OO=t("code",null,"深度优先搜索",-1),LO=t("code",null,"广度优先搜索",-1),CO=t("code",null,"1+",-1),KO=t("td",{style:{"text-align":"center"}},"🟠",-1),PO={style:{"text-align":"center"}},VO={href:"https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},NO={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},RO=t("td",{style:{"text-align":"center"}},"3319",-1),BO=t("td",{style:{"text-align":"left"}},"第 K 大的完美二叉子树的大小",-1),EO={style:{"text-align":"center"}},GO={style:{"text-align":"left"}},TO=t("code",null,"树",-1),UO=t("code",null,"深度优先搜索",-1),SO=t("code",null,"二叉树",-1),WO=t("code",null,"1+",-1),QO=t("td",{style:{"text-align":"center"}},"🟠",-1),ZO={style:{"text-align":"center"}},AO={href:"https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},DO={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},FO=t("td",{style:{"text-align":"center"}},"LCP 10",-1),HO=t("td",{style:{"text-align":"left"}},"二叉树任务调度",-1),JO=t("td",{style:{"text-align":"center"}},null,-1),MO={style:{"text-align":"left"}},XO=t("code",null,"树",-1),YO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"动态规划",-1),tL=t("code",null,"1+",-1),eL=t("td",{style:{"text-align":"center"}},"🔴",-1),oL={style:{"text-align":"center"}},lL={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},nL=t("td",{style:{"text-align":"center"}},"LCP 26",-1),sL=t("td",{style:{"text-align":"left"}},"导航装置",-1),rL=t("td",{style:{"text-align":"center"}},null,-1),dL={style:{"text-align":"left"}},_L=t("code",null,"树",-1),cL=t("code",null,"动态规划",-1),aL=t("code",null,"二叉树",-1),iL=t("td",{style:{"text-align":"center"}},"🔴",-1),hL={style:{"text-align":"center"}},fL={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},gL=t("td",{style:{"text-align":"center"}},"LCP 34",-1),uL=t("td",{style:{"text-align":"left"}},"二叉树染色",-1),mL=t("td",{style:{"text-align":"center"}},null,-1),yL={style:{"text-align":"left"}},pL=t("code",null,"树",-1),bL=t("code",null,"动态规划",-1),xL=t("code",null,"二叉树",-1),kL=t("td",{style:{"text-align":"center"}},"🟠",-1),vL={style:{"text-align":"center"}},wL={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},zL=t("td",{style:{"text-align":"center"}},"LCP 44",-1),IL=t("td",{style:{"text-align":"left"}},"开幕式焰火",-1),qL=t("td",{style:{"text-align":"center"}},null,-1),jL={style:{"text-align":"left"}},OL=t("code",null,"树",-1),LL=t("code",null,"深度优先搜索",-1),CL=t("code",null,"广度优先搜索",-1),KL=t("code",null,"2+",-1),PL=t("td",{style:{"text-align":"center"}},"🟢",-1),VL={style:{"text-align":"center"}},NL={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},RL=t("td",{style:{"text-align":"center"}},"LCP 52",-1),BL=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),EL=t("td",{style:{"text-align":"center"}},null,-1),GL={style:{"text-align":"left"}},TL=t("code",null,"树",-1),UL=t("code",null,"线段树",-1),SL=t("code",null,"二叉搜索树",-1),WL=t("code",null,"4+",-1),QL=t("td",{style:{"text-align":"center"}},"🟠",-1),ZL={style:{"text-align":"center"}},AL={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},DL=t("td",{style:{"text-align":"center"}},"LCP 60",-1),FL=t("td",{style:{"text-align":"left"}},"力扣泡泡龙",-1),HL=t("td",{style:{"text-align":"center"}},null,-1),JL={style:{"text-align":"left"}},ML=t("code",null,"树",-1),XL=t("code",null,"动态规划",-1),YL=t("code",null,"二叉树",-1),$L=t("td",{style:{"text-align":"center"}},"🔴",-1),tC={style:{"text-align":"center"}},eC={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},oC=t("td",{style:{"text-align":"center"}},"LCP 64",-1),lC=t("td",{style:{"text-align":"left"}},"二叉树灯饰",-1),nC=t("td",{style:{"text-align":"center"}},null,-1),sC={style:{"text-align":"left"}},rC=t("code",null,"树",-1),dC=t("code",null,"深度优先搜索",-1),_C=t("code",null,"动态规划",-1),cC=t("code",null,"1+",-1),aC=t("td",{style:{"text-align":"center"}},"🟠",-1),iC={style:{"text-align":"center"}},hC={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},fC=t("td",{style:{"text-align":"center"}},"LCP 67",-1),gC=t("td",{style:{"text-align":"left"}},"装饰树",-1),uC=t("td",{style:{"text-align":"center"}},null,-1),mC={style:{"text-align":"left"}},yC=t("code",null,"树",-1),pC=t("code",null,"深度优先搜索",-1),bC=t("code",null,"广度优先搜索",-1),xC=t("code",null,"1+",-1),kC=t("td",{style:{"text-align":"center"}},"🟠",-1),vC={style:{"text-align":"center"}},wC={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},zC=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),IC=t("td",{style:{"text-align":"left"}},"树的子结构",-1),qC={style:{"text-align":"center"}},jC={style:{"text-align":"left"}},OC=t("code",null,"树",-1),LC=t("code",null,"深度优先搜索",-1),CC=t("code",null,"二叉树",-1),KC=t("td",{style:{"text-align":"center"}},"🟠",-1),PC={style:{"text-align":"center"}},VC={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},NC=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),RC=t("td",{style:{"text-align":"left"}},"二叉树的镜像",-1),BC={style:{"text-align":"center"}},EC={style:{"text-align":"left"}},GC=t("code",null,"树",-1),TC=t("code",null,"深度优先搜索",-1),UC=t("code",null,"广度优先搜索",-1),SC=t("code",null,"1+",-1),WC=t("td",{style:{"text-align":"center"}},"🟢",-1),QC={style:{"text-align":"center"}},ZC={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},AC=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),DC=t("td",{style:{"text-align":"left"}},"对称的二叉树",-1),FC={style:{"text-align":"center"}},HC={style:{"text-align":"left"}},JC=t("code",null,"树",-1),MC=t("code",null,"深度优先搜索",-1),XC=t("code",null,"广度优先搜索",-1),YC=t("code",null,"1+",-1),$C=t("td",{style:{"text-align":"center"}},"🟢",-1),tK={style:{"text-align":"center"}},eK={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},oK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32",-1),lK=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树",-1),nK={style:{"text-align":"center"}},sK={style:{"text-align":"left"}},rK=t("code",null,"树",-1),dK=t("code",null,"广度优先搜索",-1),_K=t("code",null,"二叉树",-1),cK=t("td",{style:{"text-align":"center"}},"🟠",-1),aK={style:{"text-align":"center"}},iK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},hK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-II",-1),fK=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 II",-1),gK={style:{"text-align":"center"}},uK={style:{"text-align":"left"}},mK=t("code",null,"树",-1),yK=t("code",null,"广度优先搜索",-1),pK=t("code",null,"二叉树",-1),bK=t("td",{style:{"text-align":"center"}},"🟢",-1),xK={style:{"text-align":"center"}},kK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},vK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-III",-1),wK=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 III",-1),zK={style:{"text-align":"center"}},IK={style:{"text-align":"left"}},qK=t("code",null,"树",-1),jK=t("code",null,"广度优先搜索",-1),OK=t("code",null,"二叉树",-1),LK=t("td",{style:{"text-align":"center"}},"🟠",-1),CK={style:{"text-align":"center"}},KK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},PK=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),VK=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),NK={style:{"text-align":"center"}},RK={style:{"text-align":"left"}},BK=t("code",null,"栈",-1),EK=t("code",null,"树",-1),GK=t("code",null,"二叉搜索树",-1),TK=t("code",null,"4+",-1),UK=t("td",{style:{"text-align":"center"}},"🟠",-1),SK={style:{"text-align":"center"}},WK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},QK=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),ZK=t("td",{style:{"text-align":"left"}},"二叉树中和为某一值的路径",-1),AK={style:{"text-align":"center"}},DK={style:{"text-align":"left"}},FK=t("code",null,"树",-1),HK=t("code",null,"深度优先搜索",-1),JK=t("code",null,"回溯",-1),MK=t("code",null,"1+",-1),XK=t("td",{style:{"text-align":"center"}},"🟠",-1),YK={style:{"text-align":"center"}},$K={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},tP=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),eP=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),oP={style:{"text-align":"center"}},lP={style:{"text-align":"left"}},nP=t("code",null,"栈",-1),sP=t("code",null,"树",-1),rP=t("code",null,"深度优先搜索",-1),dP=t("code",null,"4+",-1),_P=t("td",{style:{"text-align":"center"}},"🟠",-1),cP={style:{"text-align":"center"}},aP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},iP=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),hP=t("td",{style:{"text-align":"left"}},"序列化二叉树",-1),fP={style:{"text-align":"center"}},gP={style:{"text-align":"left"}},uP=t("code",null,"树",-1),mP=t("code",null,"深度优先搜索",-1),yP=t("code",null,"广度优先搜索",-1),pP=t("code",null,"3+",-1),bP=t("td",{style:{"text-align":"center"}},"🔴",-1),xP={style:{"text-align":"center"}},kP={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},vP=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),wP=t("td",{style:{"text-align":"left"}},"二叉搜索树的第k大节点",-1),zP={style:{"text-align":"center"}},IP={style:{"text-align":"left"}},qP=t("code",null,"树",-1),jP=t("code",null,"深度优先搜索",-1),OP=t("code",null,"二叉搜索树",-1),LP=t("code",null,"1+",-1),CP=t("td",{style:{"text-align":"center"}},"🟢",-1),KP={style:{"text-align":"center"}},PP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},VP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55",-1),NP=t("td",{style:{"text-align":"left"}},"二叉树的深度",-1),RP={style:{"text-align":"center"}},BP={style:{"text-align":"left"}},EP=t("code",null,"树",-1),GP=t("code",null,"深度优先搜索",-1),TP=t("code",null,"广度优先搜索",-1),UP=t("code",null,"1+",-1),SP=t("td",{style:{"text-align":"center"}},"🟢",-1),WP={style:{"text-align":"center"}},QP={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},ZP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55-II",-1),AP=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),DP={style:{"text-align":"center"}},FP={style:{"text-align":"left"}},HP=t("code",null,"树",-1),JP=t("code",null,"深度优先搜索",-1),MP=t("code",null,"二叉树",-1),XP=t("td",{style:{"text-align":"center"}},"🟢",-1),YP={style:{"text-align":"center"}},$P={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},tV=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),eV=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),oV={style:{"text-align":"center"}},lV={style:{"text-align":"left"}},nV=t("code",null,"树",-1),sV=t("code",null,"深度优先搜索",-1),rV=t("code",null,"二叉搜索树",-1),dV=t("code",null,"1+",-1),_V=t("td",{style:{"text-align":"center"}},"🟢",-1),cV={style:{"text-align":"center"}},aV={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},iV=t("td",{style:{"text-align":"center"}},"剑指 Offer 68-II",-1),hV=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),fV={style:{"text-align":"center"}},gV={style:{"text-align":"left"}},uV=t("code",null,"树",-1),mV=t("code",null,"深度优先搜索",-1),yV=t("code",null,"二叉树",-1),pV=t("td",{style:{"text-align":"center"}},"🟢",-1),bV={style:{"text-align":"center"}},xV={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},kV=t("td",{style:{"text-align":"center"}},"剑指 Offer 7",-1),vV=t("td",{style:{"text-align":"left"}},"重建二叉树",-1),wV={style:{"text-align":"center"}},zV={style:{"text-align":"left"}},IV=t("code",null,"树",-1),qV=t("code",null,"数组",-1),jV=t("code",null,"哈希表",-1),OV=t("code",null,"2+",-1),LV=t("td",{style:{"text-align":"center"}},"🟠",-1),CV={style:{"text-align":"center"}},KV={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"};function PV(VV,NV){const l=r("RouterLink"),s=r("ExternalLinkIcon");return _(),c("div",null,[h,t("details",null,[f,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[u]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),O,e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[W]),_:1})]),Q,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ut,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Kt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Pt]),_:1})])]),Vt,a(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Rt,Bt,t("td",Et,[o(l,{to:"/problem/0094.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Tt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Ut]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[St]),_:1}),e(),Wt]),Qt,t("td",Zt,[t("a",At,[e("🀄️"),o(s)]),e(),t("a",Dt,[e("🔗"),o(s)])])]),t("tr",null,[Ft,Ht,t("td",Jt,[o(l,{to:"/problem/0095.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,re,t("td",de,[o(l,{to:"/problem/0096.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ie]),_:1}),e(),he]),fe,t("td",ge,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,t("td",be,[o(l,{to:"/problem/0098.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ve]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[we]),_:1}),e(),ze]),Ie,t("td",qe,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Oe,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ce,t("td",Ke,[o(l,{to:"/problem/0099.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Pe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ve]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ne]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Re]),_:1}),e(),Be]),Ee,t("td",Ge,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Ue,[e("🔗"),o(s)])])]),t("tr",null,[Se,We,t("td",Qe,[o(l,{to:"/problem/0100.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ze,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ae]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[De]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Fe]),_:1}),e(),He]),Je,t("td",Me,[t("a",Xe,[e("🀄️"),o(s)]),e(),t("a",Ye,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0101.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[so]),_:1}),e(),ro]),_o,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,fo,t("td",go,[o(l,{to:"/problem/0102.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yo]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[po]),_:1})]),bo,t("td",xo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[wo,zo,t("td",Io,[o(l,{to:"/problem/0103.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lo]),_:1})]),Co,t("td",Ko,[t("a",Po,[e("🀄️"),o(s)]),e(),t("a",Vo,[e("🔗"),o(s)])])]),t("tr",null,[No,Ro,t("td",Bo,[o(l,{to:"/problem/0104.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Eo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Go]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[To]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Uo]),_:1}),e(),So]),Wo,t("td",Qo,[t("a",Zo,[e("🀄️"),o(s)]),e(),t("a",Ao,[e("🔗"),o(s)])])]),t("tr",null,[Do,Fo,t("td",Ho,[o(l,{to:"/problem/0105.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Xo]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Yo]),_:1}),e(),$o]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",rl,[o(l,{to:"/problem/0106.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_l]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[al]),_:1}),e(),il]),hl,t("td",fl,[t("a",gl,[e("🀄️"),o(s)]),e(),t("a",ul,[e("🔗"),o(s)])])]),t("tr",null,[ml,yl,t("td",pl,[o(l,{to:"/problem/0107.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[vl]),_:1})]),wl,t("td",zl,[t("a",Il,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[jl,Ol,t("td",Ll,[o(l,{to:"/problem/0108.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Cl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Kl]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Vl]),_:1}),e(),Nl]),Rl,t("td",Bl,[t("a",El,[e("🀄️"),o(s)]),e(),t("a",Gl,[e("🔗"),o(s)])])]),t("tr",null,[Tl,Ul,t("td",Sl,[o(l,{to:"/problem/0109.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ql]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Zl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Al]),_:1}),e(),Dl]),Fl,t("td",Hl,[t("a",Jl,[e("🀄️"),o(s)]),e(),t("a",Ml,[e("🔗"),o(s)])])]),t("tr",null,[Xl,Yl,t("td",$l,[o(l,{to:"/problem/0110.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[en]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ln]),_:1})]),nn,t("td",sn,[t("a",rn,[e("🀄️"),o(s)]),e(),t("a",dn,[e("🔗"),o(s)])])]),t("tr",null,[_n,cn,t("td",an,[o(l,{to:"/problem/0111.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[un]),_:1}),e(),mn]),yn,t("td",pn,[t("a",bn,[e("🀄️"),o(s)]),e(),t("a",xn,[e("🔗"),o(s)])])]),t("tr",null,[kn,vn,t("td",wn,[o(l,{to:"/problem/0112.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[In]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jn]),_:1}),e(),On]),Ln,t("td",Cn,[t("a",Kn,[e("🀄️"),o(s)]),e(),t("a",Pn,[e("🔗"),o(s)])])]),t("tr",null,[Vn,Nn,t("td",Rn,[o(l,{to:"/problem/0113.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[En]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gn]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Tn]),_:1}),e(),Un]),Sn,t("td",Wn,[t("a",Qn,[e("🀄️"),o(s)]),e(),t("a",Zn,[e("🔗"),o(s)])])]),t("tr",null,[An,Dn,t("td",Fn,[o(l,{to:"/problem/0114.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Jn]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Mn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xn]),_:1}),e(),Yn]),$n,t("td",ts,[t("a",es,[e("🀄️"),o(s)]),e(),t("a",os,[e("🔗"),o(s)])])]),t("tr",null,[ls,ns,t("td",ss,[o(l,{to:"/problem/0116.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rs,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_s]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[cs]),_:1}),e(),as]),is,t("td",hs,[t("a",fs,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[us,ms,t("td",ys,[o(l,{to:"/problem/0117.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ps,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ks]),_:1}),e(),vs]),ws,t("td",zs,[t("a",Is,[e("🀄️"),o(s)]),e(),t("a",qs,[e("🔗"),o(s)])])]),t("tr",null,[js,Os,t("td",Ls,[o(l,{to:"/problem/0124.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Cs,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ks]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ps]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vs]),_:1}),e(),Ns]),Rs,t("td",Bs,[t("a",Es,[e("🀄️"),o(s)]),e(),t("a",Gs,[e("🔗"),o(s)])])]),t("tr",null,[Ts,Us,t("td",Ss,[o(l,{to:"/problem/0129.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ws,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zs]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[As]),_:1})]),Ds,t("td",Fs,[t("a",Hs,[e("🀄️"),o(s)]),e(),t("a",Js,[e("🔗"),o(s)])])]),t("tr",null,[Ms,Xs,t("td",Ys,[o(l,{to:"/problem/0144.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$s,[o(l,{to:"/tag/stack.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[er]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[or]),_:1}),e(),lr]),nr,t("td",sr,[t("a",rr,[e("🀄️"),o(s)]),e(),t("a",dr,[e("🔗"),o(s)])])]),t("tr",null,[_r,cr,t("td",ar,[o(l,{to:"/problem/0145.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ir,[o(l,{to:"/tag/stack.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[fr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gr]),_:1}),e(),ur]),mr,t("td",yr,[t("a",pr,[e("🀄️"),o(s)]),e(),t("a",br,[e("🔗"),o(s)])])]),t("tr",null,[xr,kr,t("td",vr,[o(l,{to:"/problem/0156.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ir]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qr]),_:1})]),jr,t("td",Or,[t("a",Lr,[e("🀄️"),o(s)]),e(),t("a",Cr,[e("🔗"),o(s)])])]),t("tr",null,[Kr,Pr,t("td",Vr,[o(l,{to:"/problem/0173.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Nr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Br]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Er]),_:1}),e(),Gr]),Tr,t("td",Ur,[t("a",Sr,[e("🀄️"),o(s)]),e(),t("a",Wr,[e("🔗"),o(s)])])]),t("tr",null,[Qr,Zr,t("td",Ar,[o(l,{to:"/problem/0199.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Jr]),_:1}),e(),Mr]),Xr,t("td",Yr,[t("a",$r,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,t("td",ld,[o(l,{to:"/problem/0222.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nd,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[sd]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rd]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[dd]),_:1}),e(),_d]),cd,t("td",ad,[t("a",id,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[fd,gd,t("td",ud,[o(l,{to:"/problem/0226.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",md,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bd]),_:1}),e(),xd]),kd,t("td",vd,[t("a",wd,[e("🀄️"),o(s)]),e(),t("a",zd,[e("🔗"),o(s)])])]),t("tr",null,[Id,qd,t("td",jd,[o(l,{to:"/problem/0230.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Od,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Kd]),_:1}),e(),Pd]),Vd,t("td",Nd,[t("a",Rd,[e("🀄️"),o(s)]),e(),t("a",Bd,[e("🔗"),o(s)])])]),t("tr",null,[Ed,Gd,t("td",Td,[o(l,{to:"/problem/0235.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ud,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Qd]),_:1}),e(),Zd]),Ad,t("td",Dd,[t("a",Fd,[e("🀄️"),o(s)]),e(),t("a",Hd,[e("🔗"),o(s)])])]),t("tr",null,[Jd,Md,t("td",Xd,[o(l,{to:"/problem/0236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[e_]),_:1})]),o_,t("td",l_,[t("a",n_,[e("🀄️"),o(s)]),e(),t("a",s_,[e("🔗"),o(s)])])]),t("tr",null,[r_,d_,__,t("td",c_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[h_]),_:1})]),f_,t("td",g_,[t("a",u_,[e("🀄️"),o(s)]),e(),t("a",m_,[e("🔗"),o(s)])])]),t("tr",null,[y_,p_,b_,t("td",x_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[k_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[v_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[w_]),_:1}),e(),z_]),I_,t("td",q_,[t("a",j_,[e("🀄️"),o(s)]),e(),t("a",O_,[e("🔗"),o(s)])])]),t("tr",null,[L_,C_,t("td",K_,[o(l,{to:"/problem/0257.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",P_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[V_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[N_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[R_]),_:1}),e(),B_]),E_,t("td",G_,[t("a",T_,[e("🀄️"),o(s)]),e(),t("a",U_,[e("🔗"),o(s)])])]),t("tr",null,[S_,W_,Q_,t("td",Z_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[A_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[D_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[F_]),_:1}),e(),H_]),J_,t("td",M_,[t("a",X_,[e("🀄️"),o(s)]),e(),t("a",Y_,[e("🔗"),o(s)])])]),t("tr",null,[$_,tc,ec,t("td",oc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[nc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sc]),_:1}),e(),rc]),dc,t("td",_c,[t("a",cc,[e("🀄️"),o(s)]),e(),t("a",ac,[e("🔗"),o(s)])])]),t("tr",null,[ic,hc,fc,t("td",gc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[yc]),_:1}),e(),pc]),bc,t("td",xc,[t("a",kc,[e("🀄️"),o(s)]),e(),t("a",vc,[e("🔗"),o(s)])])]),t("tr",null,[wc,zc,t("td",Ic,[o(l,{to:"/problem/0297.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Oc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Lc]),_:1}),e(),Cc]),Kc,t("td",Pc,[t("a",Vc,[e("🀄️"),o(s)]),e(),t("a",Nc,[e("🔗"),o(s)])])]),t("tr",null,[Rc,Bc,Ec,t("td",Gc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Tc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Uc]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Sc]),_:1})]),Wc,t("td",Qc,[t("a",Zc,[e("🀄️"),o(s)]),e(),t("a",Ac,[e("🔗"),o(s)])])]),t("tr",null,[Dc,Fc,Hc,t("td",Jc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Yc]),_:1}),e(),$c]),ta,t("td",ea,[t("a",oa,[e("🀄️"),o(s)]),e(),t("a",la,[e("🔗"),o(s)])])]),t("tr",null,[na,sa,t("td",ra,[o(l,{to:"/problem/0331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",da,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_a]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ca]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[aa]),_:1}),e(),ia]),ha,t("td",fa,[t("a",ga,[e("🀄️"),o(s)]),e(),t("a",ua,[e("🔗"),o(s)])])]),t("tr",null,[ma,ya,pa,t("td",ba,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ka]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[va]),_:1}),e(),wa]),za,t("td",Ia,[t("a",qa,[e("🀄️"),o(s)]),e(),t("a",ja,[e("🔗"),o(s)])])]),t("tr",null,[Oa,La,t("td",Ca,[o(l,{to:"/problem/0337.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ka,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Pa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Va]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Na]),_:1}),e(),Ra]),Ba,t("td",Ea,[t("a",Ga,[e("🀄️"),o(s)]),e(),t("a",Ta,[e("🔗"),o(s)])])]),t("tr",null,[Ua,Sa,t("td",Wa,[o(l,{to:"/problem/0366.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Qa,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Za]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Aa]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Da]),_:1})]),Fa,t("td",Ha,[t("a",Ja,[e("🀄️"),o(s)]),e(),t("a",Ma,[e("🔗"),o(s)])])]),t("tr",null,[Xa,Ya,t("td",$a,[o(l,{to:"/problem/0404.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ti,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ei]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[li]),_:1}),e(),ni]),si,t("td",ri,[t("a",di,[e("🀄️"),o(s)]),e(),t("a",_i,[e("🔗"),o(s)])])]),t("tr",null,[ci,ai,t("td",ii,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fi]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ui]),_:1}),e(),mi]),yi,t("td",pi,[t("a",bi,[e("🀄️"),o(s)]),e(),t("a",xi,[e("🔗"),o(s)])])]),t("tr",null,[ki,vi,wi,t("td",zi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ii]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ji]),_:1}),e(),Oi]),Li,t("td",Ci,[t("a",Ki,[e("🀄️"),o(s)]),e(),t("a",Pi,[e("🔗"),o(s)])])]),t("tr",null,[Vi,Ni,t("td",Ri,[o(l,{to:"/problem/0437.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ei]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gi]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ti]),_:1})]),Ui,t("td",Si,[t("a",Wi,[e("🀄️"),o(s)]),e(),t("a",Qi,[e("🔗"),o(s)])])]),t("tr",null,[Zi,Ai,t("td",Di,[o(l,{to:"/problem/0449.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ji]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Mi]),_:1}),e(),Xi]),Yi,t("td",$i,[t("a",th,[e("🀄️"),o(s)]),e(),t("a",eh,[e("🔗"),o(s)])])]),t("tr",null,[oh,lh,t("td",nh,[o(l,{to:"/problem/0450.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[_h]),_:1})]),ch,t("td",ah,[t("a",ih,[e("🀄️"),o(s)]),e(),t("a",hh,[e("🔗"),o(s)])])]),t("tr",null,[fh,gh,t("td",uh,[o(l,{to:"/problem/0501.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ph]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[bh]),_:1}),e(),xh]),kh,t("td",vh,[t("a",wh,[e("🀄️"),o(s)]),e(),t("a",zh,[e("🔗"),o(s)])])]),t("tr",null,[Ih,qh,jh,t("td",Oh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ch]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Kh]),_:1}),e(),Ph]),Vh,t("td",Nh,[t("a",Rh,[e("🀄️"),o(s)]),e(),t("a",Bh,[e("🔗"),o(s)])])]),t("tr",null,[Eh,Gh,Th,t("td",Uh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Wh]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qh]),_:1})]),Zh,t("td",Ah,[t("a",Dh,[e("🀄️"),o(s)]),e(),t("a",Fh,[e("🔗"),o(s)])])]),t("tr",null,[Hh,Jh,Mh,t("td",Xh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$h]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[t1]),_:1}),e(),e1]),o1,t("td",l1,[t("a",n1,[e("🀄️"),o(s)]),e(),t("a",s1,[e("🔗"),o(s)])])]),t("tr",null,[r1,d1,t("td",_1,[o(l,{to:"/problem/0515.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[h1]),_:1}),e(),f1]),g1,t("td",u1,[t("a",m1,[e("🀄️"),o(s)]),e(),t("a",y1,[e("🔗"),o(s)])])]),t("tr",null,[p1,b1,t("td",x1,[o(l,{to:"/problem/0530.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",k1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[z1]),_:1}),e(),I1]),q1,t("td",j1,[t("a",O1,[e("🀄️"),o(s)]),e(),t("a",L1,[e("🔗"),o(s)])])]),t("tr",null,[C1,K1,P1,t("td",V1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[N1]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[R1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B1]),_:1}),e(),E1]),G1,t("td",T1,[t("a",U1,[e("🀄️"),o(s)]),e(),t("a",S1,[e("🔗"),o(s)])])]),t("tr",null,[W1,Q1,Z1,t("td",A1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F1]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[H1]),_:1}),e(),J1]),M1,t("td",X1,[t("a",Y1,[e("🀄️"),o(s)]),e(),t("a",$1,[e("🔗"),o(s)])])]),t("tr",null,[tf,ef,t("td",of,[o(l,{to:"/problem/0543.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[rf]),_:1})]),df,t("td",_f,[t("a",cf,[e("🀄️"),o(s)]),e(),t("a",af,[e("🔗"),o(s)])])]),t("tr",null,[hf,ff,gf,t("td",uf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[pf]),_:1})]),bf,t("td",xf,[t("a",kf,[e("🀄️"),o(s)]),e(),t("a",vf,[e("🔗"),o(s)])])]),t("tr",null,[wf,zf,If,t("td",qf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Of]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lf]),_:1})]),Cf,t("td",Kf,[t("a",Pf,[e("🀄️"),o(s)]),e(),t("a",Vf,[e("🔗"),o(s)])])]),t("tr",null,[Nf,Rf,t("td",Bf,[o(l,{to:"/problem/0563.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ef,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Uf]),_:1})]),Sf,t("td",Wf,[t("a",Qf,[e("🀄️"),o(s)]),e(),t("a",Zf,[e("🔗"),o(s)])])]),t("tr",null,[Af,Df,t("td",Ff,[o(l,{to:"/problem/0572.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Xf]),_:1}),e(),Yf]),$f,t("td",tg,[t("a",eg,[e("🀄️"),o(s)]),e(),t("a",og,[e("🔗"),o(s)])])]),t("tr",null,[lg,ng,sg,t("td",rg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_g]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[cg]),_:1}),e(),ag]),ig,t("td",hg,[t("a",fg,[e("🀄️"),o(s)]),e(),t("a",gg,[e("🔗"),o(s)])])]),t("tr",null,[ug,mg,t("td",yg,[o(l,{to:"/problem/0617.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kg]),_:1}),e(),vg]),wg,t("td",zg,[t("a",Ig,[e("🀄️"),o(s)]),e(),t("a",qg,[e("🔗"),o(s)])])]),t("tr",null,[jg,Og,Lg,t("td",Cg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Kg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Vg]),_:1}),e(),Ng]),Rg,t("td",Bg,[t("a",Eg,[e("🀄️"),o(s)]),e(),t("a",Gg,[e("🔗"),o(s)])])]),t("tr",null,[Tg,Ug,t("td",Sg,[o(l,{to:"/problem/0637.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ag]),_:1}),e(),Dg]),Fg,t("td",Hg,[t("a",Jg,[e("🀄️"),o(s)]),e(),t("a",Mg,[e("🔗"),o(s)])])]),t("tr",null,[Xg,Yg,$g,t("td",tu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[eu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ou]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[lu]),_:1}),e(),nu]),su,t("td",ru,[t("a",du,[e("🀄️"),o(s)]),e(),t("a",_u,[e("🔗"),o(s)])])]),t("tr",null,[cu,au,t("td",iu,[o(l,{to:"/problem/0653.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[uu]),_:1}),e(),mu]),yu,t("td",pu,[t("a",bu,[e("🀄️"),o(s)]),e(),t("a",xu,[e("🔗"),o(s)])])]),t("tr",null,[ku,vu,t("td",wu,[o(l,{to:"/problem/0654.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Iu]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[qu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ju]),_:1}),e(),Ou]),Lu,t("td",Cu,[t("a",Ku,[e("🀄️"),o(s)]),e(),t("a",Pu,[e("🔗"),o(s)])])]),t("tr",null,[Vu,Nu,Ru,t("td",Bu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Eu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Tu]),_:1}),e(),Uu]),Su,t("td",Wu,[t("a",Qu,[e("🀄️"),o(s)]),e(),t("a",Zu,[e("🔗"),o(s)])])]),t("tr",null,[Au,Du,t("td",Fu,[o(l,{to:"/problem/0662.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ju]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xu]),_:1}),e(),Yu]),$u,t("td",tm,[t("a",em,[e("🀄️"),o(s)]),e(),t("a",om,[e("🔗"),o(s)])])]),t("tr",null,[lm,nm,sm,t("td",rm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_m]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cm]),_:1})]),am,t("td",im,[t("a",hm,[e("🀄️"),o(s)]),e(),t("a",fm,[e("🔗"),o(s)])])]),t("tr",null,[gm,um,mm,t("td",ym,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bm]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xm]),_:1}),e(),km]),vm,t("td",wm,[t("a",zm,[e("🀄️"),o(s)]),e(),t("a",Im,[e("🔗"),o(s)])])]),t("tr",null,[qm,jm,Om,t("td",Lm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Km]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Pm]),_:1}),e(),Vm]),Nm,t("td",Rm,[t("a",Bm,[e("🀄️"),o(s)]),e(),t("a",Em,[e("🔗"),o(s)])])]),t("tr",null,[Gm,Tm,t("td",Um,[o(l,{to:"/problem/0671.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Wm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qm]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Zm]),_:1})]),Am,t("td",Dm,[t("a",Fm,[e("🀄️"),o(s)]),e(),t("a",Hm,[e("🔗"),o(s)])])]),t("tr",null,[Jm,Mm,Xm,t("td",Ym,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$m]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ty]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ey]),_:1})]),oy,t("td",ly,[t("a",ny,[e("🀄️"),o(s)]),e(),t("a",sy,[e("🔗"),o(s)])])]),t("tr",null,[ry,dy,t("td",_y,[o(l,{to:"/problem/0700.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ay]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[iy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[hy]),_:1})]),fy,t("td",gy,[t("a",uy,[e("🀄️"),o(s)]),e(),t("a",my,[e("🔗"),o(s)])])]),t("tr",null,[yy,py,t("td",by,[o(l,{to:"/problem/0701.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ky]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[vy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[wy]),_:1})]),zy,t("td",Iy,[t("a",qy,[e("🀄️"),o(s)]),e(),t("a",jy,[e("🔗"),o(s)])])]),t("tr",null,[Oy,Ly,t("td",Cy,[o(l,{to:"/problem/0703.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ky,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Py]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Vy]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ny]),_:1}),e(),Ry]),By,t("td",Ey,[t("a",Gy,[e("🀄️"),o(s)]),e(),t("a",Ty,[e("🔗"),o(s)])])]),t("tr",null,[Uy,Sy,Wy,t("td",Qy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ay]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Dy]),_:1}),e(),Fy]),Hy,t("td",Jy,[t("a",My,[e("🀄️"),o(s)]),e(),t("a",Xy,[e("🔗"),o(s)])])]),t("tr",null,[Yy,$y,tp,t("td",ep,[o(l,{to:"/tag/tree.html"},{default:n(()=>[op]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[lp]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[np]),_:1}),e(),sp]),rp,t("td",dp,[t("a",_p,[e("🀄️"),o(s)]),e(),t("a",cp,[e("🔗"),o(s)])])]),t("tr",null,[ap,ip,t("td",hp,[o(l,{to:"/problem/0783.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[up]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mp]),_:1}),e(),yp]),pp,t("td",bp,[t("a",xp,[e("🀄️"),o(s)]),e(),t("a",kp,[e("🔗"),o(s)])])]),t("tr",null,[vp,wp,zp,t("td",Ip,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Op]),_:1})]),Lp,t("td",Cp,[t("a",Kp,[e("🀄️"),o(s)]),e(),t("a",Pp,[e("🔗"),o(s)])])]),t("tr",null,[Vp,Np,Rp,t("td",Bp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ep]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Tp]),_:1}),e(),Up]),Sp,t("td",Wp,[t("a",Qp,[e("🀄️"),o(s)]),e(),t("a",Zp,[e("🔗"),o(s)])])]),t("tr",null,[Ap,Dp,Fp,t("td",Hp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xp]),_:1}),e(),Yp]),$p,t("td",tb,[t("a",eb,[e("🀄️"),o(s)]),e(),t("a",ob,[e("🔗"),o(s)])])]),t("tr",null,[lb,nb,t("td",sb,[o(l,{to:"/problem/0872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[db]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_b]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cb]),_:1})]),ab,t("td",ib,[t("a",hb,[e("🀄️"),o(s)]),e(),t("a",fb,[e("🔗"),o(s)])])]),t("tr",null,[gb,ub,t("td",mb,[o(l,{to:"/problem/0889.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pb]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bb]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[xb]),_:1}),e(),kb]),vb,t("td",wb,[t("a",zb,[e("🀄️"),o(s)]),e(),t("a",Ib,[e("🔗"),o(s)])])]),t("tr",null,[qb,jb,Ob,t("td",Lb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cb]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Kb]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Pb]),_:1}),e(),Vb]),Nb,t("td",Rb,[t("a",Bb,[e("🀄️"),o(s)]),e(),t("a",Eb,[e("🔗"),o(s)])])]),t("tr",null,[Gb,Tb,t("td",Ub,[o(l,{to:"/problem/0897.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Wb]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Qb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zb]),_:1}),e(),Ab]),Db,t("td",Fb,[t("a",Hb,[e("🀄️"),o(s)]),e(),t("a",Jb,[e("🔗"),o(s)])])]),t("tr",null,[Mb,Xb,Yb,t("td",$b,[o(l,{to:"/tag/tree.html"},{default:n(()=>[t2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[e2]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[o2]),_:1}),e(),l2]),n2,t("td",s2,[t("a",r2,[e("🀄️"),o(s)]),e(),t("a",d2,[e("🔗"),o(s)])])]),t("tr",null,[_2,c2,t("td",a2,[o(l,{to:"/problem/0938.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",i2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[h2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[f2]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[g2]),_:1}),e(),u2]),m2,t("td",y2,[t("a",p2,[e("🀄️"),o(s)]),e(),t("a",b2,[e("🔗"),o(s)])])]),t("tr",null,[x2,k2,t("td",v2,[o(l,{to:"/problem/0951.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",w2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[z2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[I2]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[q2]),_:1})]),j2,t("td",O2,[t("a",L2,[e("🀄️"),o(s)]),e(),t("a",C2,[e("🔗"),o(s)])])]),t("tr",null,[K2,P2,t("td",V2,[o(l,{to:"/problem/0958.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",N2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[R2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[B2]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[E2]),_:1})]),G2,t("td",T2,[t("a",U2,[e("🀄️"),o(s)]),e(),t("a",S2,[e("🔗"),o(s)])])]),t("tr",null,[W2,Q2,t("td",Z2,[o(l,{to:"/problem/0965.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",A2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[H2]),_:1}),e(),J2]),M2,t("td",X2,[t("a",Y2,[e("🀄️"),o(s)]),e(),t("a",$2,[e("🔗"),o(s)])])]),t("tr",null,[tx,ex,ox,t("td",lx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rx]),_:1}),e(),dx]),_x,t("td",cx,[t("a",ax,[e("🀄️"),o(s)]),e(),t("a",ix,[e("🔗"),o(s)])])]),t("tr",null,[hx,fx,gx,t("td",ux,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yx]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[px]),_:1})]),bx,t("td",xx,[t("a",kx,[e("🀄️"),o(s)]),e(),t("a",vx,[e("🔗"),o(s)])])]),t("tr",null,[wx,zx,Ix,t("td",qx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ox]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lx]),_:1})]),Cx,t("td",Kx,[t("a",Px,[e("🀄️"),o(s)]),e(),t("a",Vx,[e("🔗"),o(s)])])]),t("tr",null,[Nx,Rx,Bx,t("td",Ex,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ux]),_:1}),e(),Sx]),Wx,t("td",Qx,[t("a",Zx,[e("🀄️"),o(s)]),e(),t("a",Ax,[e("🔗"),o(s)])])]),t("tr",null,[Dx,Fx,Hx,t("td",Jx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xx]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Yx]),_:1}),e(),$x]),t3,t("td",e3,[t("a",o3,[e("🀄️"),o(s)]),e(),t("a",l3,[e("🔗"),o(s)])])]),t("tr",null,[n3,s3,t("td",r3,[o(l,{to:"/problem/0993.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",d3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[c3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[a3]),_:1}),e(),i3]),h3,t("td",f3,[t("a",g3,[e("🀄️"),o(s)]),e(),t("a",u3,[e("🔗"),o(s)])])]),t("tr",null,[m3,y3,p3,t("td",b3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[x3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[k3]),_:1})]),v3,t("td",w3,[t("a",z3,[e("🀄️"),o(s)]),e(),t("a",I3,[e("🔗"),o(s)])])]),t("tr",null,[q3,j3,t("td",O3,[o(l,{to:"/problem/1008.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",L3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[C3]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[K3]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[P3]),_:1}),e(),V3]),N3,t("td",R3,[t("a",B3,[e("🀄️"),o(s)]),e(),t("a",E3,[e("🔗"),o(s)])])]),t("tr",null,[G3,T3,t("td",U3,[o(l,{to:"/problem/1022.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",S3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[W3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Z3]),_:1})]),A3,t("td",D3,[t("a",F3,[e("🀄️"),o(s)]),e(),t("a",H3,[e("🔗"),o(s)])])]),t("tr",null,[J3,M3,X3,t("td",Y3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t0]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[e0]),_:1})]),o0,t("td",l0,[t("a",n0,[e("🀄️"),o(s)]),e(),t("a",s0,[e("🔗"),o(s)])])]),t("tr",null,[r0,d0,t("td",_0,[o(l,{to:"/problem/1028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i0]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[h0]),_:1}),e(),f0]),g0,t("td",u0,[t("a",m0,[e("🀄️"),o(s)]),e(),t("a",y0,[e("🔗"),o(s)])])]),t("tr",null,[p0,b0,x0,t("td",k0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w0]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[z0]),_:1}),e(),I0]),q0,t("td",j0,[t("a",O0,[e("🀄️"),o(s)]),e(),t("a",L0,[e("🔗"),o(s)])])]),t("tr",null,[C0,K0,P0,t("td",V0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[N0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[R0]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[B0]),_:1})]),E0,t("td",G0,[t("a",T0,[e("🀄️"),o(s)]),e(),t("a",U0,[e("🔗"),o(s)])])]),t("tr",null,[S0,W0,Q0,t("td",Z0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[A0]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[D0]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[F0]),_:1})]),H0,t("td",J0,[t("a",M0,[e("🀄️"),o(s)]),e(),t("a",X0,[e("🔗"),o(s)])])]),t("tr",null,[Y0,$0,t6,t("td",e6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[o6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[l6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[n6]),_:1}),e(),s6]),r6,t("td",d6,[t("a",_6,[e("🀄️"),o(s)]),e(),t("a",c6,[e("🔗"),o(s)])])]),t("tr",null,[a6,i6,h6,t("td",f6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[g6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[u6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[m6]),_:1})]),y6,t("td",p6,[t("a",b6,[e("🀄️"),o(s)]),e(),t("a",x6,[e("🔗"),o(s)])])]),t("tr",null,[k6,v6,w6,t("td",z6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[I6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[q6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[j6]),_:1}),e(),O6]),L6,t("td",C6,[t("a",K6,[e("🀄️"),o(s)]),e(),t("a",P6,[e("🔗"),o(s)])])]),t("tr",null,[V6,N6,R6,t("td",B6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[E6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[G6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[T6]),_:1})]),U6,t("td",S6,[t("a",W6,[e("🀄️"),o(s)]),e(),t("a",Q6,[e("🔗"),o(s)])])]),t("tr",null,[Z6,A6,t("td",D6,[o(l,{to:"/problem/1161.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",F6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[H6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[J6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[M6]),_:1}),e(),X6]),Y6,t("td",$6,[t("a",t5,[e("🀄️"),o(s)]),e(),t("a",e5,[e("🔗"),o(s)])])]),t("tr",null,[o5,l5,n5,t("td",s5,[o(l,{to:"/tag/stack.html"},{default:n(()=>[r5]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[d5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_5]),_:1}),e(),c5]),a5,t("td",i5,[t("a",h5,[e("🀄️"),o(s)]),e(),t("a",f5,[e("🔗"),o(s)])])]),t("tr",null,[g5,u5,t("td",m5,[o(l,{to:"/problem/1261.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",y5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[p5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[b5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[x5]),_:1}),e(),k5]),v5,t("td",w5,[t("a",z5,[e("🀄️"),o(s)]),e(),t("a",I5,[e("🔗"),o(s)])])]),t("tr",null,[q5,j5,O5,t("td",L5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[C5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[K5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[P5]),_:1}),e(),V5]),N5,t("td",R5,[t("a",B5,[e("🀄️"),o(s)]),e(),t("a",E5,[e("🔗"),o(s)])])]),t("tr",null,[G5,T5,U5,t("td",S5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[W5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q5]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Z5]),_:1}),e(),A5]),D5,t("td",F5,[t("a",H5,[e("🀄️"),o(s)]),e(),t("a",J5,[e("🔗"),o(s)])])]),t("tr",null,[M5,X5,Y5,t("td",$5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[t4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[e4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[o4]),_:1}),e(),l4]),n4,t("td",s4,[t("a",r4,[e("🀄️"),o(s)]),e(),t("a",d4,[e("🔗"),o(s)])])]),t("tr",null,[_4,c4,a4,t("td",i4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[h4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[f4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[g4]),_:1})]),u4,t("td",m4,[t("a",y4,[e("🀄️"),o(s)]),e(),t("a",p4,[e("🔗"),o(s)])])]),t("tr",null,[b4,x4,k4,t("td",v4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[w4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[z4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[I4]),_:1})]),q4,t("td",j4,[t("a",O4,[e("🀄️"),o(s)]),e(),t("a",L4,[e("🔗"),o(s)])])]),t("tr",null,[C4,K4,P4,t("td",V4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[N4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[R4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[B4]),_:1}),e(),E4]),G4,t("td",T4,[t("a",U4,[e("🀄️"),o(s)]),e(),t("a",S4,[e("🔗"),o(s)])])]),t("tr",null,[W4,Q4,Z4,t("td",A4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F4]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[H4]),_:1}),e(),J4]),M4,t("td",X4,[t("a",Y4,[e("🀄️"),o(s)]),e(),t("a",$4,[e("🔗"),o(s)])])]),t("tr",null,[t7,e7,t("td",o7,[o(l,{to:"/problem/1372.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",l7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[n7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s7]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[r7]),_:1}),e(),d7]),_7,t("td",c7,[t("a",a7,[e("🀄️"),o(s)]),e(),t("a",i7,[e("🔗"),o(s)])])]),t("tr",null,[h7,f7,g7,t("td",u7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[m7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[y7]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[p7]),_:1}),e(),b7]),x7,t("td",k7,[t("a",v7,[e("🀄️"),o(s)]),e(),t("a",w7,[e("🔗"),o(s)])])]),t("tr",null,[z7,I7,t("td",q7,[o(l,{to:"/problem/1379.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",j7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[O7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[L7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[C7]),_:1}),e(),K7]),P7,t("td",V7,[t("a",N7,[e("🀄️"),o(s)]),e(),t("a",R7,[e("🔗"),o(s)])])]),t("tr",null,[B7,E7,G7,t("td",T7,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[U7]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[S7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[W7]),_:1}),e(),Q7]),Z7,t("td",A7,[t("a",D7,[e("🀄️"),o(s)]),e(),t("a",F7,[e("🔗"),o(s)])])]),t("tr",null,[H7,J7,M7,t("td",X7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Y7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[t9]),_:1}),e(),e9]),o9,t("td",l9,[t("a",n9,[e("🀄️"),o(s)]),e(),t("a",s9,[e("🔗"),o(s)])])]),t("tr",null,[r9,d9,t("td",_9,[o(l,{to:"/problem/1448.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[h9]),_:1}),e(),f9]),g9,t("td",u9,[t("a",m9,[e("🀄️"),o(s)]),e(),t("a",y9,[e("🔗"),o(s)])])]),t("tr",null,[p9,b9,x9,t("td",k9,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[v9]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[w9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[z9]),_:1}),e(),I9]),q9,t("td",j9,[t("a",O9,[e("🀄️"),o(s)]),e(),t("a",L9,[e("🔗"),o(s)])])]),t("tr",null,[C9,K9,P9,t("td",V9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[N9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[R9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[B9]),_:1}),e(),E9]),G9,t("td",T9,[t("a",U9,[e("🀄️"),o(s)]),e(),t("a",S9,[e("🔗"),o(s)])])]),t("tr",null,[W9,Q9,Z9,t("td",A9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[H9]),_:1}),e(),J9]),M9,t("td",X9,[t("a",Y9,[e("🀄️"),o(s)]),e(),t("a",$9,[e("🔗"),o(s)])])]),t("tr",null,[t8,e8,o8,t("td",l8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[n8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[r8]),_:1})]),d8,t("td",_8,[t("a",c8,[e("🀄️"),o(s)]),e(),t("a",a8,[e("🔗"),o(s)])])]),t("tr",null,[i8,h8,f8,t("td",g8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[u8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[m8]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[y8]),_:1}),e(),p8]),b8,t("td",x8,[t("a",k8,[e("🀄️"),o(s)]),e(),t("a",v8,[e("🔗"),o(s)])])]),t("tr",null,[w8,z8,I8,t("td",q8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[j8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[O8]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[L8]),_:1}),e(),C8]),K8,t("td",P8,[t("a",V8,[e("🀄️"),o(s)]),e(),t("a",N8,[e("🔗"),o(s)])])]),t("tr",null,[R8,B8,E8,t("td",G8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[T8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[U8]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[S8]),_:1}),e(),W8]),Q8,t("td",Z8,[t("a",A8,[e("🀄️"),o(s)]),e(),t("a",D8,[e("🔗"),o(s)])])]),t("tr",null,[F8,H8,J8,t("td",M8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[X8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Y8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$8]),_:1})]),tk,t("td",ek,[t("a",ok,[e("🀄️"),o(s)]),e(),t("a",lk,[e("🔗"),o(s)])])]),t("tr",null,[nk,sk,rk,t("td",dk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_k]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ck]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ak]),_:1})]),ik,t("td",hk,[t("a",fk,[e("🀄️"),o(s)]),e(),t("a",gk,[e("🔗"),o(s)])])]),t("tr",null,[uk,mk,yk,t("td",pk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xk]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[kk]),_:1}),e(),vk]),wk,t("td",zk,[t("a",Ik,[e("🀄️"),o(s)]),e(),t("a",qk,[e("🔗"),o(s)])])]),t("tr",null,[jk,Ok,Lk,t("td",Ck,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Kk]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Pk]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Vk]),_:1}),e(),Nk]),Rk,t("td",Bk,[t("a",Ek,[e("🀄️"),o(s)]),e(),t("a",Gk,[e("🔗"),o(s)])])]),t("tr",null,[Tk,Uk,Sk,t("td",Wk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zk]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ak]),_:1})]),Dk,t("td",Fk,[t("a",Hk,[e("🀄️"),o(s)]),e(),t("a",Jk,[e("🔗"),o(s)])])]),t("tr",null,[Mk,Xk,Yk,t("td",$k,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tv]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ev]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[ov]),_:1}),e(),lv]),nv,t("td",sv,[t("a",rv,[e("🀄️"),o(s)]),e(),t("a",dv,[e("🔗"),o(s)])])]),t("tr",null,[_v,cv,av,t("td",iv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gv]),_:1}),e(),uv]),mv,t("td",yv,[t("a",pv,[e("🀄️"),o(s)]),e(),t("a",bv,[e("🔗"),o(s)])])]),t("tr",null,[xv,kv,vv,t("td",wv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Iv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qv]),_:1})]),jv,t("td",Ov,[t("a",Lv,[e("🀄️"),o(s)]),e(),t("a",Cv,[e("🔗"),o(s)])])]),t("tr",null,[Kv,Pv,Vv,t("td",Nv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Rv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Bv]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Ev]),_:1}),e(),Gv]),Tv,t("td",Uv,[t("a",Sv,[e("🀄️"),o(s)]),e(),t("a",Wv,[e("🔗"),o(s)])])]),t("tr",null,[Qv,Zv,Av,t("td",Dv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Jv]),_:1}),e(),Mv]),Xv,t("td",Yv,[t("a",$v,[e("🀄️"),o(s)]),e(),t("a",tw,[e("🔗"),o(s)])])]),t("tr",null,[ew,ow,lw,t("td",nw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[sw]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[rw]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dw]),_:1}),e(),_w]),cw,t("td",aw,[t("a",iw,[e("🀄️"),o(s)]),e(),t("a",hw,[e("🔗"),o(s)])])]),t("tr",null,[fw,gw,uw,t("td",mw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pw]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[bw]),_:1}),e(),xw]),kw,t("td",vw,[t("a",ww,[e("🀄️"),o(s)]),e(),t("a",zw,[e("🔗"),o(s)])])]),t("tr",null,[Iw,qw,jw,t("td",Ow,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cw]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Kw]),_:1})]),Pw,t("td",Vw,[t("a",Nw,[e("🀄️"),o(s)]),e(),t("a",Rw,[e("🔗"),o(s)])])]),t("tr",null,[Bw,Ew,Gw,t("td",Tw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Uw]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Sw]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ww]),_:1}),e(),Qw]),Zw,t("td",Aw,[t("a",Dw,[e("🀄️"),o(s)]),e(),t("a",Fw,[e("🔗"),o(s)])])]),t("tr",null,[Hw,Jw,Mw,t("td",Xw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$w]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tz]),_:1}),e(),ez]),oz,t("td",lz,[t("a",nz,[e("🀄️"),o(s)]),e(),t("a",sz,[e("🔗"),o(s)])])]),t("tr",null,[rz,dz,_z,t("td",cz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[az]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iz]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[hz]),_:1}),e(),fz]),gz,t("td",uz,[t("a",mz,[e("🀄️"),o(s)]),e(),t("a",yz,[e("🔗"),o(s)])])]),t("tr",null,[pz,bz,t("td",xz,[o(l,{to:"/problem/2196.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",kz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vz]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wz]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[zz]),_:1}),e(),Iz]),qz,t("td",jz,[t("a",Oz,[e("🀄️"),o(s)]),e(),t("a",Lz,[e("🔗"),o(s)])])]),t("tr",null,[Cz,Kz,t("td",Pz,[o(l,{to:"/problem/2236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Nz]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Rz]),_:1})]),Bz,t("td",Ez,[t("a",Gz,[e("🀄️"),o(s)]),e(),t("a",Tz,[e("🔗"),o(s)])])]),t("tr",null,[Uz,Sz,Wz,t("td",Qz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Az]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Dz]),_:1})]),Fz,t("td",Hz,[t("a",Jz,[e("🀄️"),o(s)]),e(),t("a",Mz,[e("🔗"),o(s)])])]),t("tr",null,[Xz,Yz,$z,t("td",tI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[eI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oI]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lI]),_:1}),e(),nI]),sI,t("td",rI,[t("a",dI,[e("🀄️"),o(s)]),e(),t("a",_I,[e("🔗"),o(s)])])]),t("tr",null,[cI,aI,t("td",iI,[o(l,{to:"/problem/2331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gI]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[uI]),_:1})]),mI,t("td",yI,[t("a",pI,[e("🀄️"),o(s)]),e(),t("a",bI,[e("🔗"),o(s)])])]),t("tr",null,[xI,kI,vI,t("td",wI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[II]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qI]),_:1}),e(),jI]),OI,t("td",LI,[t("a",CI,[e("🀄️"),o(s)]),e(),t("a",KI,[e("🔗"),o(s)])])]),t("tr",null,[PI,VI,t("td",NI,[o(l,{to:"/problem/2415.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[BI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[EI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[GI]),_:1}),e(),TI]),UI,t("td",SI,[t("a",WI,[e("🀄️"),o(s)]),e(),t("a",QI,[e("🔗"),o(s)])])]),t("tr",null,[ZI,AI,DI,t("td",FI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MI]),_:1}),e(),XI]),YI,t("td",$I,[t("a",tq,[e("🀄️"),o(s)]),e(),t("a",eq,[e("🔗"),o(s)])])]),t("tr",null,[oq,lq,t("td",nq,[o(l,{to:"/problem/2458.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_q]),_:1}),e(),cq]),aq,t("td",iq,[t("a",hq,[e("🀄️"),o(s)]),e(),t("a",fq,[e("🔗"),o(s)])])]),t("tr",null,[gq,uq,t("td",mq,[o(l,{to:"/problem/2471.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xq]),_:1})]),kq,t("td",vq,[t("a",wq,[e("🀄️"),o(s)]),e(),t("a",zq,[e("🔗"),o(s)])])]),t("tr",null,[Iq,qq,jq,t("td",Oq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cq]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Kq]),_:1}),e(),Pq]),Vq,t("td",Nq,[t("a",Rq,[e("🀄️"),o(s)]),e(),t("a",Bq,[e("🔗"),o(s)])])]),t("tr",null,[Eq,Gq,Tq,t("td",Uq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qq]),_:1})]),Zq,t("td",Aq,[t("a",Dq,[e("🀄️"),o(s)]),e(),t("a",Fq,[e("🔗"),o(s)])])]),t("tr",null,[Hq,Jq,t("td",Mq,[o(l,{to:"/problem/2583.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$q]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[tj]),_:1}),e(),ej]),oj,t("td",lj,[t("a",nj,[e("🀄️"),o(s)]),e(),t("a",sj,[e("🔗"),o(s)])])]),t("tr",null,[rj,dj,t("td",_j,[o(l,{to:"/problem/2641.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ij]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hj]),_:1}),e(),fj]),gj,t("td",uj,[t("a",mj,[e("🀄️"),o(s)]),e(),t("a",yj,[e("🔗"),o(s)])])]),t("tr",null,[pj,bj,xj,t("td",kj,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[vj]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[wj]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zj]),_:1}),e(),Ij]),qj,t("td",jj,[t("a",Oj,[e("🀄️"),o(s)]),e(),t("a",Lj,[e("🔗"),o(s)])])]),t("tr",null,[Cj,Kj,Pj,t("td",Vj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Nj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rj]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Bj]),_:1})]),Ej,t("td",Gj,[t("a",Tj,[e("🀄️"),o(s)]),e(),t("a",Uj,[e("🔗"),o(s)])])]),t("tr",null,[Sj,Wj,Qj,t("td",Zj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Aj]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Dj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fj]),_:1}),e(),Hj]),Jj,t("td",Mj,[t("a",Xj,[e("🀄️"),o(s)]),e(),t("a",Yj,[e("🔗"),o(s)])])]),t("tr",null,[$j,tO,eO,t("td",oO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sO]),_:1}),e(),rO]),dO,t("td",_O,[t("a",cO,[e("🀄️"),o(s)]),e(),t("a",aO,[e("🔗"),o(s)])])]),t("tr",null,[iO,hO,fO,t("td",gO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mO]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[yO]),_:1}),e(),pO]),bO,t("td",xO,[t("a",kO,[e("🀄️"),o(s)]),e(),t("a",vO,[e("🔗"),o(s)])])]),t("tr",null,[wO,zO,IO,t("td",qO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[OO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LO]),_:1}),e(),CO]),KO,t("td",PO,[t("a",VO,[e("🀄️"),o(s)]),e(),t("a",NO,[e("🔗"),o(s)])])]),t("tr",null,[RO,BO,t("td",EO,[o(l,{to:"/problem/3319.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",GO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[UO]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[SO]),_:1}),e(),WO]),QO,t("td",ZO,[t("a",AO,[e("🀄️"),o(s)]),e(),t("a",DO,[e("🔗"),o(s)])])]),t("tr",null,[FO,HO,JO,t("td",MO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$O]),_:1}),e(),tL]),eL,t("td",oL,[t("a",lL,[e("🀄️"),o(s)])])]),t("tr",null,[nL,sL,rL,t("td",dL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_L]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[aL]),_:1})]),iL,t("td",hL,[t("a",fL,[e("🀄️"),o(s)])])]),t("tr",null,[gL,uL,mL,t("td",yL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xL]),_:1})]),kL,t("td",vL,[t("a",wL,[e("🀄️"),o(s)])])]),t("tr",null,[zL,IL,qL,t("td",jL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[CL]),_:1}),e(),KL]),PL,t("td",VL,[t("a",NL,[e("🀄️"),o(s)])])]),t("tr",null,[RL,BL,EL,t("td",GL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TL]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[UL]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[SL]),_:1}),e(),WL]),QL,t("td",ZL,[t("a",AL,[e("🀄️"),o(s)])])]),t("tr",null,[DL,FL,HL,t("td",JL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ML]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[XL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[YL]),_:1})]),$L,t("td",tC,[t("a",eC,[e("🀄️"),o(s)])])]),t("tr",null,[oC,lC,nC,t("td",sC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_C]),_:1}),e(),cC]),aC,t("td",iC,[t("a",hC,[e("🀄️"),o(s)])])]),t("tr",null,[fC,gC,uC,t("td",mC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bC]),_:1}),e(),xC]),kC,t("td",vC,[t("a",wC,[e("🀄️"),o(s)])])]),t("tr",null,[zC,IC,t("td",qC,[o(l,{to:"/offer/jz_offer_26_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",jC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LC]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[CC]),_:1})]),KC,t("td",PC,[t("a",VC,[e("🀄️"),o(s)])])]),t("tr",null,[NC,RC,t("td",BC,[o(l,{to:"/offer/jz_offer_27_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",EC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[GC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[TC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[UC]),_:1}),e(),SC]),WC,t("td",QC,[t("a",ZC,[e("🀄️"),o(s)])])]),t("tr",null,[AC,DC,t("td",FC,[o(l,{to:"/offer/jz_offer_28_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",HC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[JC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[MC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XC]),_:1}),e(),YC]),$C,t("td",tK,[t("a",eK,[e("🀄️"),o(s)])])]),t("tr",null,[oK,lK,t("td",nK,[o(l,{to:"/offer/jz_offer_32_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[dK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[_K]),_:1})]),cK,t("td",aK,[t("a",iK,[e("🀄️"),o(s)])])]),t("tr",null,[hK,fK,t("td",gK,[o(l,{to:"/offer/jz_offer_32_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[pK]),_:1})]),bK,t("td",xK,[t("a",kK,[e("🀄️"),o(s)])])]),t("tr",null,[vK,wK,t("td",zK,[o(l,{to:"/offer/jz_offer_32_3.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",IK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[OK]),_:1})]),LK,t("td",CK,[t("a",KK,[e("🀄️"),o(s)])])]),t("tr",null,[PK,VK,t("td",NK,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RK,[o(l,{to:"/tag/stack.html"},{default:n(()=>[BK]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[EK]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[GK]),_:1}),e(),TK]),UK,t("td",SK,[t("a",WK,[e("🀄️"),o(s)])])]),t("tr",null,[QK,ZK,t("td",AK,[o(l,{to:"/offer/jz_offer_34_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",DK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[FK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HK]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[JK]),_:1}),e(),MK]),XK,t("td",YK,[t("a",$K,[e("🀄️"),o(s)])])]),t("tr",null,[tP,eP,t("td",oP,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lP,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nP]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[sP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rP]),_:1}),e(),dP]),_P,t("td",cP,[t("a",aP,[e("🀄️"),o(s)])])]),t("tr",null,[iP,hP,t("td",fP,[o(l,{to:"/offer/jz_offer_37_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yP]),_:1}),e(),pP]),bP,t("td",xP,[t("a",kP,[e("🀄️"),o(s)])])]),t("tr",null,[vP,wP,t("td",zP,[o(l,{to:"/offer/jz_offer_54_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",IP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jP]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[OP]),_:1}),e(),LP]),CP,t("td",KP,[t("a",PP,[e("🀄️"),o(s)])])]),t("tr",null,[VP,NP,t("td",RP,[o(l,{to:"/offer/jz_offer_55_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",BP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[GP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[TP]),_:1}),e(),UP]),SP,t("td",WP,[t("a",QP,[e("🀄️"),o(s)])])]),t("tr",null,[ZP,AP,t("td",DP,[o(l,{to:"/offer/jz_offer_55_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",FP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JP]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[MP]),_:1})]),XP,t("td",YP,[t("a",$P,[e("🀄️"),o(s)])])]),t("tr",null,[tV,eV,t("td",oV,[o(l,{to:"/offer/jz_offer_68_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sV]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[rV]),_:1}),e(),dV]),_V,t("td",cV,[t("a",aV,[e("🀄️"),o(s)])])]),t("tr",null,[iV,hV,t("td",fV,[o(l,{to:"/offer/jz_offer_68_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mV]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[yV]),_:1})]),pV,t("td",bV,[t("a",xV,[e("🀄️"),o(s)])])]),t("tr",null,[kV,vV,t("td",wV,[o(l,{to:"/offer/jz_offer_07_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IV]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qV]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[jV]),_:1}),e(),OV]),LV,t("td",CV,[t("a",KV,[e("🀄️"),o(s)])])])])])])}const BV=d(i,[["render",PV],["__file","binary-tree.html.vue"]]);export{BV as default};
