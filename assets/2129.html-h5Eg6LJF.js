import{_ as c,r as l,o as i,c as r,a as t,b as n,d as e,w as a,f as u,e as d}from"./app-fBVbqwGY.js";const h={},g=t("h1",{id:"_2129-将标题首字母大写",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_2129-将标题首字母大写","aria-hidden":"true"},"#"),n(" 2129. 将标题首字母大写")],-1),k=t("code",null,"字符串",-1),m={href:"https://leetcode.cn/problems/capitalize-the-title",target:"_blank",rel:"noopener noreferrer"},_=t("code",null,"力扣",-1),f={href:"https://leetcode.com/problems/capitalize-the-title",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"LeetCode",-1),v=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given a string <code>title</code> consisting of one or more words separated by a single space, where each word consists of English letters. <strong>Capitalize</strong> the string by changing the capitalization of each word such that:</p><ul><li>If the length of the word is <code>1</code> or <code>2</code> letters, change all letters to lowercase.</li><li>Otherwise, change the first letter to uppercase and the remaining letters to lowercase.</li></ul><p>Return <em>the <strong>capitalized</strong></em> <code>title</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: title = &quot;capiTalIze tHe titLe&quot;</p><p>Output: &quot;Capitalize The Title&quot;</p><p>Explanation:</p><p>Since all the words have a length of at least 3, the first letter of each word is uppercase, and the remaining letters are lowercase.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: title = &quot;First leTTeR of EACH Word&quot;</p><p>Output: &quot;First Letter of Each Word&quot;</p><p>Explanation:</p><p>The word &quot;of&quot; has length 2, so it is all lowercase.</p><p>The remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: title = &quot;i lOve leetcode&quot;</p><p>Output: &quot;i Love Leetcode&quot;</p><p>Explanation:</p><p>The word &quot;i&quot; has length 1, so it is lowercase.</p><p>The remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= title.length &lt;= 100</code></li><li><code>title</code> consists of words separated by a single space without any leading or trailing spaces.</li><li>Each word consists of uppercase and lowercase English letters and is <strong>non-empty</strong>.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个字符串 <code>title</code> ，它由单个空格连接一个或多个单词组成，每个单词都只包含英文字母。请你按以下规则将每个单词的首字母 <strong>大写</strong> ：</p><ul><li>如果单词的长度为 <code>1</code> 或者 <code>2</code> ，所有字母变成小写。</li><li>否则，将单词首字母大写，剩余字母变成小写。</li></ul><p>请你返回 <strong>大写后</strong> 的 <code>title</code> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> title = &quot;capiTalIze tHe titLe&quot;</p><p><strong>输出：</strong> &quot;Capitalize The Title&quot;</p><p><strong>解释：</strong></p><p>由于所有单词的长度都至少为 3 ，将每个单词首字母大写，剩余字母变为小写。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> title = &quot;First leTTeR of EACH Word&quot;</p><p><strong>输出：</strong> &quot;First Letter of Each Word&quot;</p><p><strong>解释：</strong></p><p>单词 &quot;of&quot; 长度为 2 ，所以它保持完全小写。</p><p>其他单词长度都至少为 3 ，所以其他单词首字母大写，剩余字母小写。</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> title = &quot;i lOve leetcode&quot;</p><p><strong>输出：</strong> &quot;i Love Leetcode&quot;</p><p><strong>解释：</strong></p><p>单词 &quot;i&quot; 长度为 1 ，所以它保留小写。</p><p>其他单词长度都至少为 3 ，所以其他单词首字母大写，剩余字母小写。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= title.length &lt;= 100</code></li><li><code>title</code> 由单个空格隔开的单词组成，且不含有任何前导或后缀空格。</li><li>每个单词由大写和小写英文字母组成，且都是 <strong>非空</strong> 的。</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p><strong>分割字符串</strong>:</p><ul><li>使用 <code>split(&#39; &#39;)</code> 将字符串拆分为单词数组。</li></ul></li><li><p><strong>遍历单词数组</strong>:</p><ul><li>对每个单词： <ul><li>如果单词长度小于 3，使用 <code>toLowerCase()</code> 转换为小写。</li><li>如果单词长度为 3 或以上，使用 <code>toUpperCase()</code> 将首字母大写，同时将其余部分使用 <code>toLowerCase()</code> 转换为小写。</li></ul></li></ul></li><li><p><strong>合并字符串</strong>:</p><ul><li>使用 <code>join(&#39; &#39;)</code> 将格式化后的单词数组重新组合为一个字符串。</li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是字符串的长度，分割字符串、遍历单词数组、以及最终拼接字符串，时间复杂度均为 <code>O(n)</code>。</li><li><strong>空间复杂度</strong>：<code>O(n)</code>，存储单词数组和修改后的字符串，需要额外的 <code>O(n)</code> 空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">title</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">capitalizeTitle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">title</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 分割字符串为单词数组</span>
	<span class="token keyword">const</span> arr <span class="token operator">=</span> title<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 长度小于 3 转换为小写</span>
			arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// 首字母大写，剩余部分小写</span>
			arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 合并单词为结果字符串</span>
	<span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,31),q=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),w=t("td",{style:{"text-align":"center"}},"520",-1),x=t("td",{style:{"text-align":"left"}},"检测大写字母",-1),y={style:{"text-align":"center"}},E={style:{"text-align":"left"}},L=t("code",null,"字符串",-1),C=t("td",{style:{"text-align":"center"}},"🟢",-1),T={style:{"text-align":"center"}},z={href:"https://leetcode.cn/problems/detect-capital",target:"_blank",rel:"noopener noreferrer"},O={href:"https://leetcode.com/problems/detect-capital",target:"_blank",rel:"noopener noreferrer"},I=t("td",{style:{"text-align":"center"}},"709",-1),j=t("td",{style:{"text-align":"left"}},"转换成小写字母",-1),N={style:{"text-align":"center"}},R={style:{"text-align":"left"}},V=t("code",null,"字符串",-1),F=t("td",{style:{"text-align":"center"}},"🟢",-1),H={style:{"text-align":"center"}},W={href:"https://leetcode.cn/problems/to-lower-case",target:"_blank",rel:"noopener noreferrer"},B={href:"https://leetcode.com/problems/to-lower-case",target:"_blank",rel:"noopener noreferrer"};function A(S,U){const p=l("font"),o=l("RouterLink"),s=l("ExternalLinkIcon");return i(),r("div",null,[g,t("p",null,[n("🟢 "),e(p,{color:"#15bd66"},{default:a(()=>[n("Easy")]),_:1}),n("  🔖  "),e(o,{to:"/tag/string.html"},{default:a(()=>[k]),_:1}),n("  🔗 "),t("a",m,[_,e(s)]),n(),t("a",f,[b,e(s)])]),v,u(" prettier-ignore "),t("table",null,[q,t("tbody",null,[t("tr",null,[w,x,t("td",y,[e(o,{to:"/problem/0520.html"},{default:a(()=>[n("[✓]")]),_:1})]),t("td",E,[e(o,{to:"/tag/string.html"},{default:a(()=>[L]),_:1})]),C,t("td",T,[t("a",z,[n("🀄️"),e(s)]),n(),t("a",O,[n("🔗"),e(s)])])]),t("tr",null,[I,j,t("td",N,[e(o,{to:"/problem/0709.html"},{default:a(()=>[n("[✓]")]),_:1})]),t("td",R,[e(o,{to:"/tag/string.html"},{default:a(()=>[V]),_:1})]),F,t("td",H,[t("a",W,[n("🀄️"),e(s)]),n(),t("a",B,[n("🔗"),e(s)])])])])])])}const D=c(h,[["render",A],["__file","2129.html.vue"]]);export{D as default};
