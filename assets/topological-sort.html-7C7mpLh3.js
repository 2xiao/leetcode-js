import{_,r as d,o as c,c as r,a as t,d as o,w as n,b as e,f as a}from"./app-fBVbqwGY.js";const i={},h=t("h1",{id:"拓扑排序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#拓扑排序","aria-hidden":"true"},"#"),e(" 拓扑排序")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("span",{class:"blue"},"拓扑排序",-1),P=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),J=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),H=t("code",null,"贪心",-1),K=t("code",null,"动态规划",-1),M=t("code",null,"排序",-1),U=t("code",null,"桶排序",-1),Y=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Bt=t("td",{style:{"text-align":"center"}},"207",-1),Tt=t("td",{style:{"text-align":"left"}},"课程表",-1),At={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Rt=t("code",null,"深度优先搜索",-1),Dt=t("code",null,"广度优先搜索",-1),Ft=t("code",null,"图",-1),Gt=t("code",null,"1+",-1),Qt=t("td",{style:{"text-align":"center"}},"🟠",-1),St={style:{"text-align":"center"}},Wt={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Zt=t("td",{style:{"text-align":"center"}},"210",-1),Ht=t("td",{style:{"text-align":"left"}},"课程表 II",-1),Kt={style:{"text-align":"center"}},Mt={style:{"text-align":"left"}},Ut=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"广度优先搜索",-1),$t=t("code",null,"图",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"269",-1),de=t("td",{style:{"text-align":"left"}},"火星词典 🔒",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},re=t("code",null,"深度优先搜索",-1),ae=t("code",null,"广度优先搜索",-1),ie=t("code",null,"图",-1),he=t("code",null,"3+",-1),ge=t("td",{style:{"text-align":"center"}},"🔴",-1),ue={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"310",-1),ye=t("td",{style:{"text-align":"left"}},"最小高度树",-1),xe={style:{"text-align":"center"}},be={style:{"text-align":"left"}},ke=t("code",null,"深度优先搜索",-1),Ie=t("code",null,"广度优先搜索",-1),ve=t("code",null,"图",-1),we=t("code",null,"1+",-1),qe=t("td",{style:{"text-align":"center"}},"🟠",-1),ze={style:{"text-align":"center"}},Le={href:"https://leetcode.cn/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},"329",-1),Ve=t("td",{style:{"text-align":"left"}},"矩阵中的最长递增路径",-1),je={style:{"text-align":"center"}},Ne={style:{"text-align":"left"}},Oe=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"广度优先搜索",-1),Be=t("code",null,"图",-1),Te=t("code",null,"5+",-1),Ae=t("td",{style:{"text-align":"center"}},"🔴",-1),Je={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},De={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},"444",-1),Ge=t("td",{style:{"text-align":"left"}},"序列重建 🔒",-1),Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},We=t("code",null,"图",-1),Xe=t("code",null,"拓扑排序",-1),Ze=t("code",null,"数组",-1),He=t("td",{style:{"text-align":"center"}},"🟠",-1),Ke={style:{"text-align":"center"}},Me={href:"https://leetcode.cn/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Ye=t("td",{style:{"text-align":"center"}},"631",-1),$e=t("td",{style:{"text-align":"left"}},"设计 Excel 求和公式 🔒",-1),to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"图",-1),lo=t("code",null,"设计",-1),no=t("code",null,"拓扑排序",-1),so=t("code",null,"2+",-1),_o=t("td",{style:{"text-align":"center"}},"🔴",-1),co={style:{"text-align":"center"}},ro={href:"https://leetcode.cn/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},"802",-1),ho=t("td",{style:{"text-align":"left"}},"找到最终的安全状态",-1),go={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},fo=t("code",null,"深度优先搜索",-1),mo=t("code",null,"广度优先搜索",-1),po=t("code",null,"图",-1),yo=t("code",null,"1+",-1),xo=t("td",{style:{"text-align":"center"}},"🟠",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},"851",-1),wo=t("td",{style:{"text-align":"left"}},"喧闹和富有",-1),qo=t("td",{style:{"text-align":"center"}},null,-1),zo={style:{"text-align":"left"}},Lo=t("code",null,"深度优先搜索",-1),Co=t("code",null,"图",-1),Eo=t("code",null,"拓扑排序",-1),Vo=t("code",null,"1+",-1),jo=t("td",{style:{"text-align":"center"}},"🟠",-1),No={style:{"text-align":"center"}},Oo={href:"https://leetcode.cn/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"913",-1),To=t("td",{style:{"text-align":"left"}},"猫和老鼠",-1),Ao=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Ro=t("code",null,"图",-1),Do=t("code",null,"拓扑排序",-1),Fo=t("code",null,"记忆化搜索",-1),Go=t("code",null,"3+",-1),Qo=t("td",{style:{"text-align":"center"}},"🔴",-1),So={style:{"text-align":"center"}},Wo={href:"https://leetcode.cn/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Xo={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},"1059",-1),Ho=t("td",{style:{"text-align":"left"}},"从始点到终点的所有路径 🔒",-1),Ko=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},Uo=t("code",null,"图",-1),Yo=t("code",null,"拓扑排序",-1),$o=t("td",{style:{"text-align":"center"}},"🟠",-1),tl={style:{"text-align":"center"}},el={href:"https://leetcode.cn/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},ol={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},"1136",-1),nl=t("td",{style:{"text-align":"left"}},"并行课程 🔒",-1),sl=t("td",{style:{"text-align":"center"}},null,-1),dl={style:{"text-align":"left"}},_l=t("code",null,"图",-1),cl=t("code",null,"拓扑排序",-1),rl=t("td",{style:{"text-align":"center"}},"🟠",-1),al={style:{"text-align":"center"}},il={href:"https://leetcode.cn/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},"1203",-1),ul=t("td",{style:{"text-align":"left"}},"项目管理",-1),fl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},pl=t("code",null,"深度优先搜索",-1),yl=t("code",null,"广度优先搜索",-1),xl=t("code",null,"图",-1),bl=t("code",null,"1+",-1),kl=t("td",{style:{"text-align":"center"}},"🔴",-1),Il={style:{"text-align":"center"}},vl={href:"https://leetcode.cn/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},"1245",-1),zl=t("td",{style:{"text-align":"left"}},"树的直径 🔒",-1),Ll=t("td",{style:{"text-align":"center"}},null,-1),Cl={style:{"text-align":"left"}},El=t("code",null,"树",-1),Vl=t("code",null,"深度优先搜索",-1),jl=t("code",null,"广度优先搜索",-1),Nl=t("code",null,"2+",-1),Ol=t("td",{style:{"text-align":"center"}},"🟠",-1),Pl={style:{"text-align":"center"}},Bl={href:"https://leetcode.cn/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},"1462",-1),Jl=t("td",{style:{"text-align":"left"}},"课程表 IV",-1),Rl={style:{"text-align":"center"}},Dl={style:{"text-align":"left"}},Fl=t("code",null,"深度优先搜索",-1),Gl=t("code",null,"广度优先搜索",-1),Ql=t("code",null,"图",-1),Sl=t("code",null,"1+",-1),Wl=t("td",{style:{"text-align":"center"}},"🟠",-1),Xl={style:{"text-align":"center"}},Zl={href:"https://leetcode.cn/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},"1591",-1),Ml=t("td",{style:{"text-align":"left"}},"奇怪的打印机 II",-1),Ul=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},$l=t("code",null,"图",-1),tn=t("code",null,"拓扑排序",-1),en=t("code",null,"数组",-1),on=t("code",null,"1+",-1),ln=t("td",{style:{"text-align":"center"}},"🔴",-1),nn={style:{"text-align":"center"}},sn={href:"https://leetcode.cn/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"1632",-1),cn=t("td",{style:{"text-align":"left"}},"矩阵转换后的秩",-1),rn=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},hn=t("code",null,"并查集",-1),gn=t("code",null,"图",-1),un=t("code",null,"拓扑排序",-1),fn=t("code",null,"3+",-1),mn=t("td",{style:{"text-align":"center"}},"🔴",-1),pn={style:{"text-align":"center"}},yn={href:"https://leetcode.cn/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},"1728",-1),kn=t("td",{style:{"text-align":"left"}},"猫和老鼠 II",-1),In=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},wn=t("code",null,"图",-1),qn=t("code",null,"拓扑排序",-1),zn=t("code",null,"记忆化搜索",-1),Ln=t("code",null,"5+",-1),Cn=t("td",{style:{"text-align":"center"}},"🔴",-1),En={style:{"text-align":"center"}},Vn={href:"https://leetcode.cn/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Nn=t("td",{style:{"text-align":"center"}},"1786",-1),On=t("td",{style:{"text-align":"left"}},"从第一个节点出发到最后一个节点的受限路径数",-1),Pn=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Tn=t("code",null,"图",-1),An=t("code",null,"拓扑排序",-1),Jn=t("code",null,"动态规划",-1),Rn=t("code",null,"2+",-1),Dn=t("td",{style:{"text-align":"center"}},"🟠",-1),Fn={style:{"text-align":"center"}},Gn={href:"https://leetcode.cn/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},"1857",-1),Wn=t("td",{style:{"text-align":"left"}},"有向图中最大颜色值",-1),Xn=t("td",{style:{"text-align":"center"}},null,-1),Zn={style:{"text-align":"left"}},Hn=t("code",null,"图",-1),Kn=t("code",null,"拓扑排序",-1),Mn=t("code",null,"记忆化搜索",-1),Un=t("code",null,"3+",-1),Yn=t("td",{style:{"text-align":"center"}},"🔴",-1),$n={style:{"text-align":"center"}},ts={href:"https://leetcode.cn/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},es={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},"1916",-1),ls=t("td",{style:{"text-align":"left"}},"统计为蚁群构筑房间的不同顺序",-1),ns=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ds=t("code",null,"树",-1),_s=t("code",null,"图",-1),cs=t("code",null,"拓扑排序",-1),rs=t("code",null,"3+",-1),as=t("td",{style:{"text-align":"center"}},"🔴",-1),is={style:{"text-align":"center"}},hs={href:"https://leetcode.cn/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},"1976",-1),fs=t("td",{style:{"text-align":"left"}},"到达目的地的方案数",-1),ms={style:{"text-align":"center"}},ps={style:{"text-align":"left"}},ys=t("code",null,"图",-1),xs=t("code",null,"拓扑排序",-1),bs=t("code",null,"动态规划",-1),ks=t("code",null,"1+",-1),Is=t("td",{style:{"text-align":"center"}},"🟠",-1),vs={style:{"text-align":"center"}},ws={href:"https://leetcode.cn/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},"2050",-1),Ls=t("td",{style:{"text-align":"left"}},"并行课程 III",-1),Cs=t("td",{style:{"text-align":"center"}},null,-1),Es={style:{"text-align":"left"}},Vs=t("code",null,"图",-1),js=t("code",null,"拓扑排序",-1),Ns=t("code",null,"数组",-1),Os=t("code",null,"1+",-1),Ps=t("td",{style:{"text-align":"center"}},"🔴",-1),Bs={style:{"text-align":"center"}},Ts={href:"https://leetcode.cn/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},As={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Js=t("td",{style:{"text-align":"center"}},"2115",-1),Rs=t("td",{style:{"text-align":"left"}},"从给定原材料中找到所有可以做出的菜",-1),Ds={style:{"text-align":"center"}},Fs={style:{"text-align":"left"}},Gs=t("code",null,"图",-1),Qs=t("code",null,"拓扑排序",-1),Ss=t("code",null,"数组",-1),Ws=t("code",null,"2+",-1),Xs=t("td",{style:{"text-align":"center"}},"🟠",-1),Zs={style:{"text-align":"center"}},Hs={href:"https://leetcode.cn/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Ks={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},"2127",-1),Us=t("td",{style:{"text-align":"left"}},"参加会议的最多员工数",-1),Ys=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},td=t("code",null,"深度优先搜索",-1),ed=t("code",null,"图",-1),od=t("code",null,"拓扑排序",-1),ld=t("td",{style:{"text-align":"center"}},"🔴",-1),nd={style:{"text-align":"center"}},sd={href:"https://leetcode.cn/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},dd={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},"2192",-1),cd=t("td",{style:{"text-align":"left"}},"有向无环图中一个节点的所有祖先",-1),rd=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},id=t("code",null,"深度优先搜索",-1),hd=t("code",null,"广度优先搜索",-1),gd=t("code",null,"图",-1),ud=t("code",null,"1+",-1),fd=t("td",{style:{"text-align":"center"}},"🟠",-1),md={style:{"text-align":"center"}},pd={href:"https://leetcode.cn/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},yd={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},"2246",-1),bd=t("td",{style:{"text-align":"left"}},"相邻字符不同的最长路径",-1),kd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},vd=t("code",null,"树",-1),wd=t("code",null,"深度优先搜索",-1),qd=t("code",null,"图",-1),zd=t("code",null,"3+",-1),Ld=t("td",{style:{"text-align":"center"}},"🔴",-1),Cd={style:{"text-align":"center"}},Ed={href:"https://leetcode.cn/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},Vd={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},jd=t("td",{style:{"text-align":"center"}},"2328",-1),Nd=t("td",{style:{"text-align":"left"}},"网格图中递增路径的数目",-1),Od=t("td",{style:{"text-align":"center"}},null,-1),Pd={style:{"text-align":"left"}},Bd=t("code",null,"深度优先搜索",-1),Td=t("code",null,"广度优先搜索",-1),Ad=t("code",null,"图",-1),Jd=t("code",null,"5+",-1),Rd=t("td",{style:{"text-align":"center"}},"🔴",-1),Dd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Gd={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"2360",-1),Sd=t("td",{style:{"text-align":"left"}},"图中的最长环",-1),Wd=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Zd=t("code",null,"深度优先搜索",-1),Hd=t("code",null,"图",-1),Kd=t("code",null,"拓扑排序",-1),Md=t("td",{style:{"text-align":"center"}},"🔴",-1),Ud={style:{"text-align":"center"}},Yd={href:"https://leetcode.cn/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},$d={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},t_=t("td",{style:{"text-align":"center"}},"2371",-1),e_=t("td",{style:{"text-align":"left"}},"最小化网格中的最大值 🔒",-1),o_=t("td",{style:{"text-align":"center"}},null,-1),l_={style:{"text-align":"left"}},n_=t("code",null,"并查集",-1),s_=t("code",null,"图",-1),d_=t("code",null,"拓扑排序",-1),__=t("code",null,"3+",-1),c_=t("td",{style:{"text-align":"center"}},"🔴",-1),r_={style:{"text-align":"center"}},a_={href:"https://leetcode.cn/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},i_={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},"2392",-1),g_=t("td",{style:{"text-align":"left"}},"给定条件下构造矩阵",-1),u_=t("td",{style:{"text-align":"center"}},null,-1),f_={style:{"text-align":"left"}},m_=t("code",null,"图",-1),p_=t("code",null,"拓扑排序",-1),y_=t("code",null,"数组",-1),x_=t("code",null,"1+",-1),b_=t("td",{style:{"text-align":"center"}},"🔴",-1),k_={style:{"text-align":"center"}},I_={href:"https://leetcode.cn/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},v_={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},w_=t("td",{style:{"text-align":"center"}},"2603",-1),q_=t("td",{style:{"text-align":"left"}},"收集树中金币",-1),z_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},C_=t("code",null,"树",-1),E_=t("code",null,"图",-1),V_=t("code",null,"拓扑排序",-1),j_=t("code",null,"1+",-1),N_=t("td",{style:{"text-align":"center"}},"🔴",-1),O_={style:{"text-align":"center"}},P_={href:"https://leetcode.cn/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},B_={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},"3383",-1),A_=t("td",{style:{"text-align":"left"}},"施法所需最低符文数量 🔒",-1),J_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},D_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"广度优先搜索",-1),G_=t("code",null,"并查集",-1),Q_=t("code",null,"3+",-1),S_=t("td",{style:{"text-align":"center"}},"🔴",-1),W_={style:{"text-align":"center"}},X_={href:"https://leetcode.cn/problems/minimum-runes-to-add-to-cast-spell",target:"_blank",rel:"noopener noreferrer"},Z_={href:"https://leetcode.com/problems/minimum-runes-to-add-to-cast-spell",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"3435",-1),K_=t("td",{style:{"text-align":"left"}},"最短公共超序列的字母出现频率",-1),M_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},Y_=t("code",null,"位运算",-1),$_=t("code",null,"图",-1),tc=t("code",null,"拓扑排序",-1),ec=t("code",null,"3+",-1),oc=t("td",{style:{"text-align":"center"}},"🔴",-1),lc={style:{"text-align":"center"}},nc={href:"https://leetcode.cn/problems/frequencies-of-shortest-supersequences",target:"_blank",rel:"noopener noreferrer"},sc={href:"https://leetcode.com/problems/frequencies-of-shortest-supersequences",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},"LCP 21",-1),_c=t("td",{style:{"text-align":"left"}},"追逐游戏",-1),cc=t("td",{style:{"text-align":"center"}},null,-1),rc={style:{"text-align":"left"}},ac=t("code",null,"深度优先搜索",-1),ic=t("code",null,"广度优先搜索",-1),hc=t("code",null,"图",-1),gc=t("code",null,"1+",-1),uc=t("td",{style:{"text-align":"center"}},"🔴",-1),fc={style:{"text-align":"center"}},mc={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},"LCP 63",-1),yc=t("td",{style:{"text-align":"left"}},"弹珠游戏",-1),xc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},kc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),vc=t("code",null,"图",-1),wc=t("code",null,"5+",-1),qc=t("td",{style:{"text-align":"center"}},"🟠",-1),zc={style:{"text-align":"center"}},Lc={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Cc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),Ec=t("td",{style:{"text-align":"left"}},"最长递增路径",-1),Vc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},Nc=t("code",null,"深度优先搜索",-1),Oc=t("code",null,"广度优先搜索",-1),Pc=t("code",null,"图",-1),Bc=t("code",null,"5+",-1),Tc=t("td",{style:{"text-align":"center"}},"🔴",-1),Ac={style:{"text-align":"center"}},Jc={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),Dc=t("td",{style:{"text-align":"left"}},"课程顺序",-1),Fc={style:{"text-align":"center"}},Gc={style:{"text-align":"left"}},Qc=t("code",null,"深度优先搜索",-1),Sc=t("code",null,"广度优先搜索",-1),Wc=t("code",null,"图",-1),Xc=t("code",null,"1+",-1),Zc=t("td",{style:{"text-align":"center"}},"🟠",-1),Hc={style:{"text-align":"center"}},Kc={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),Uc=t("td",{style:{"text-align":"left"}},"外星文字典",-1),Yc=t("td",{style:{"text-align":"center"}},null,-1),$c={style:{"text-align":"left"}},tr=t("code",null,"深度优先搜索",-1),er=t("code",null,"广度优先搜索",-1),or=t("code",null,"图",-1),lr=t("code",null,"3+",-1),nr=t("td",{style:{"text-align":"center"}},"🔴",-1),sr={style:{"text-align":"center"}},dr={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),cr=t("td",{style:{"text-align":"left"}},"重建序列",-1),rr=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},ir=t("code",null,"图",-1),hr=t("code",null,"拓扑排序",-1),gr=t("code",null,"数组",-1),ur=t("td",{style:{"text-align":"center"}},"🟠",-1),fr={style:{"text-align":"center"}},mr={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"};function pr(yr,xr){const l=d("RouterLink"),s=d("ExternalLinkIcon");return c(),r("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[N]),_:1}),e(),O,e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[G]),_:1})]),Q,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Et]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Nt]),_:1})])]),Ot,a(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Bt,Tt,t("td",At,[o(l,{to:"/problem/0207.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Dt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ft]),_:1}),e(),Gt]),Qt,t("td",St,[t("a",Wt,[e("🀄️"),o(s)]),e(),t("a",Xt,[e("🔗"),o(s)])])]),t("tr",null,[Zt,Ht,t("td",Kt,[o(l,{to:"/problem/0210.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ut]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",ce,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[re]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ie]),_:1}),e(),he]),ge,t("td",ue,[t("a",fe,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[pe,ye,t("td",xe,[o(l,{to:"/problem/0310.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",be,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ie]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ve]),_:1}),e(),we]),qe,t("td",ze,[t("a",Le,[e("🀄️"),o(s)]),e(),t("a",Ce,[e("🔗"),o(s)])])]),t("tr",null,[Ee,Ve,t("td",je,[o(l,{to:"/problem/0329.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ne,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Oe]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Be]),_:1}),e(),Te]),Ae,t("td",Je,[t("a",Re,[e("🀄️"),o(s)]),e(),t("a",De,[e("🔗"),o(s)])])]),t("tr",null,[Fe,Ge,Qe,t("td",Se,[o(l,{to:"/tag/graph.html"},{default:n(()=>[We]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Xe]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ze]),_:1})]),He,t("td",Ke,[t("a",Me,[e("🀄️"),o(s)]),e(),t("a",Ue,[e("🔗"),o(s)])])]),t("tr",null,[Ye,$e,to,t("td",eo,[o(l,{to:"/tag/graph.html"},{default:n(()=>[oo]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[no]),_:1}),e(),so]),_o,t("td",co,[t("a",ro,[e("🀄️"),o(s)]),e(),t("a",ao,[e("🔗"),o(s)])])]),t("tr",null,[io,ho,t("td",go,[o(l,{to:"/problem/0802.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[po]),_:1}),e(),yo]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",Io,[e("🔗"),o(s)])])]),t("tr",null,[vo,wo,qo,t("td",zo,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Lo]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Co]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Eo]),_:1}),e(),Vo]),jo,t("td",No,[t("a",Oo,[e("🀄️"),o(s)]),e(),t("a",Po,[e("🔗"),o(s)])])]),t("tr",null,[Bo,To,Ao,t("td",Jo,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Ro]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Do]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Fo]),_:1}),e(),Go]),Qo,t("td",So,[t("a",Wo,[e("🀄️"),o(s)]),e(),t("a",Xo,[e("🔗"),o(s)])])]),t("tr",null,[Zo,Ho,Ko,t("td",Mo,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Uo]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Yo]),_:1})]),$o,t("td",tl,[t("a",el,[e("🀄️"),o(s)]),e(),t("a",ol,[e("🔗"),o(s)])])]),t("tr",null,[ll,nl,sl,t("td",dl,[o(l,{to:"/tag/graph.html"},{default:n(()=>[_l]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[cl]),_:1})]),rl,t("td",al,[t("a",il,[e("🀄️"),o(s)]),e(),t("a",hl,[e("🔗"),o(s)])])]),t("tr",null,[gl,ul,fl,t("td",ml,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yl]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[xl]),_:1}),e(),bl]),kl,t("td",Il,[t("a",vl,[e("🀄️"),o(s)]),e(),t("a",wl,[e("🔗"),o(s)])])]),t("tr",null,[ql,zl,Ll,t("td",Cl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[El]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Vl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jl]),_:1}),e(),Nl]),Ol,t("td",Pl,[t("a",Bl,[e("🀄️"),o(s)]),e(),t("a",Tl,[e("🔗"),o(s)])])]),t("tr",null,[Al,Jl,t("td",Rl,[o(l,{to:"/problem/1462.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dl,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Gl]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ql]),_:1}),e(),Sl]),Wl,t("td",Xl,[t("a",Zl,[e("🀄️"),o(s)]),e(),t("a",Hl,[e("🔗"),o(s)])])]),t("tr",null,[Kl,Ml,Ul,t("td",Yl,[o(l,{to:"/tag/graph.html"},{default:n(()=>[$l]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[tn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[en]),_:1}),e(),on]),ln,t("td",nn,[t("a",sn,[e("🀄️"),o(s)]),e(),t("a",dn,[e("🔗"),o(s)])])]),t("tr",null,[_n,cn,rn,t("td",an,[o(l,{to:"/tag/union-find.html"},{default:n(()=>[hn]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[un]),_:1}),e(),fn]),mn,t("td",pn,[t("a",yn,[e("🀄️"),o(s)]),e(),t("a",xn,[e("🔗"),o(s)])])]),t("tr",null,[bn,kn,In,t("td",vn,[o(l,{to:"/tag/graph.html"},{default:n(()=>[wn]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[zn]),_:1}),e(),Ln]),Cn,t("td",En,[t("a",Vn,[e("🀄️"),o(s)]),e(),t("a",jn,[e("🔗"),o(s)])])]),t("tr",null,[Nn,On,Pn,t("td",Bn,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Tn]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[An]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Jn]),_:1}),e(),Rn]),Dn,t("td",Fn,[t("a",Gn,[e("🀄️"),o(s)]),e(),t("a",Qn,[e("🔗"),o(s)])])]),t("tr",null,[Sn,Wn,Xn,t("td",Zn,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Kn]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Mn]),_:1}),e(),Un]),Yn,t("td",$n,[t("a",ts,[e("🀄️"),o(s)]),e(),t("a",es,[e("🔗"),o(s)])])]),t("tr",null,[os,ls,ns,t("td",ss,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[_s]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[cs]),_:1}),e(),rs]),as,t("td",is,[t("a",hs,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[us,fs,t("td",ms,[o(l,{to:"/problem/1976.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ps,[o(l,{to:"/tag/graph.html"},{default:n(()=>[ys]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bs]),_:1}),e(),ks]),Is,t("td",vs,[t("a",ws,[e("🀄️"),o(s)]),e(),t("a",qs,[e("🔗"),o(s)])])]),t("tr",null,[zs,Ls,Cs,t("td",Es,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Vs]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[js]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ns]),_:1}),e(),Os]),Ps,t("td",Bs,[t("a",Ts,[e("🀄️"),o(s)]),e(),t("a",As,[e("🔗"),o(s)])])]),t("tr",null,[Js,Rs,t("td",Ds,[o(l,{to:"/problem/2115.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fs,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Gs]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Qs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ss]),_:1}),e(),Ws]),Xs,t("td",Zs,[t("a",Hs,[e("🀄️"),o(s)]),e(),t("a",Ks,[e("🔗"),o(s)])])]),t("tr",null,[Ms,Us,Ys,t("td",$s,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[td]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ed]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[od]),_:1})]),ld,t("td",nd,[t("a",sd,[e("🀄️"),o(s)]),e(),t("a",dd,[e("🔗"),o(s)])])]),t("tr",null,[_d,cd,rd,t("td",ad,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[id]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hd]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[gd]),_:1}),e(),ud]),fd,t("td",md,[t("a",pd,[e("🀄️"),o(s)]),e(),t("a",yd,[e("🔗"),o(s)])])]),t("tr",null,[xd,bd,kd,t("td",Id,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wd]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[qd]),_:1}),e(),zd]),Ld,t("td",Cd,[t("a",Ed,[e("🀄️"),o(s)]),e(),t("a",Vd,[e("🔗"),o(s)])])]),t("tr",null,[jd,Nd,Od,t("td",Pd,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Bd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Td]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ad]),_:1}),e(),Jd]),Rd,t("td",Dd,[t("a",Fd,[e("🀄️"),o(s)]),e(),t("a",Gd,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Sd,Wd,t("td",Xd,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zd]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Hd]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Kd]),_:1})]),Md,t("td",Ud,[t("a",Yd,[e("🀄️"),o(s)]),e(),t("a",$d,[e("🔗"),o(s)])])]),t("tr",null,[t_,e_,o_,t("td",l_,[o(l,{to:"/tag/union-find.html"},{default:n(()=>[n_]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[s_]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[d_]),_:1}),e(),__]),c_,t("td",r_,[t("a",a_,[e("🀄️"),o(s)]),e(),t("a",i_,[e("🔗"),o(s)])])]),t("tr",null,[h_,g_,u_,t("td",f_,[o(l,{to:"/tag/graph.html"},{default:n(()=>[m_]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[p_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[y_]),_:1}),e(),x_]),b_,t("td",k_,[t("a",I_,[e("🀄️"),o(s)]),e(),t("a",v_,[e("🔗"),o(s)])])]),t("tr",null,[w_,q_,z_,t("td",L_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[C_]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[E_]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[V_]),_:1}),e(),j_]),N_,t("td",O_,[t("a",P_,[e("🀄️"),o(s)]),e(),t("a",B_,[e("🔗"),o(s)])])]),t("tr",null,[T_,A_,J_,t("td",R_,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[D_]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[F_]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[G_]),_:1}),e(),Q_]),S_,t("td",W_,[t("a",X_,[e("🀄️"),o(s)]),e(),t("a",Z_,[e("🔗"),o(s)])])]),t("tr",null,[H_,K_,M_,t("td",U_,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Y_]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$_]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[tc]),_:1}),e(),ec]),oc,t("td",lc,[t("a",nc,[e("🀄️"),o(s)]),e(),t("a",sc,[e("🔗"),o(s)])])]),t("tr",null,[dc,_c,cc,t("td",rc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ac]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ic]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[hc]),_:1}),e(),gc]),uc,t("td",fc,[t("a",mc,[e("🀄️"),o(s)])])]),t("tr",null,[pc,yc,xc,t("td",bc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ic]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[vc]),_:1}),e(),wc]),qc,t("td",zc,[t("a",Lc,[e("🀄️"),o(s)])])]),t("tr",null,[Cc,Ec,Vc,t("td",jc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Nc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Oc]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Pc]),_:1}),e(),Bc]),Tc,t("td",Ac,[t("a",Jc,[e("🀄️"),o(s)])])]),t("tr",null,[Rc,Dc,t("td",Fc,[o(l,{to:"/offer2/jz_offer_II_113.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Sc]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Wc]),_:1}),e(),Xc]),Zc,t("td",Hc,[t("a",Kc,[e("🀄️"),o(s)])])]),t("tr",null,[Mc,Uc,Yc,t("td",$c,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[er]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[or]),_:1}),e(),lr]),nr,t("td",sr,[t("a",dr,[e("🀄️"),o(s)])])]),t("tr",null,[_r,cr,rr,t("td",ar,[o(l,{to:"/tag/graph.html"},{default:n(()=>[ir]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gr]),_:1})]),ur,t("td",fr,[t("a",mr,[e("🀄️"),o(s)])])])])])])}const kr=_(i,[["render",pr],["__file","topological-sort.html.vue"]]);export{kr as default};
