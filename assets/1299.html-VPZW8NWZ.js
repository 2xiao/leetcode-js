import{_ as c,r as l,o as i,c as p,a as e,b as t,d as n,w as s,f as d,e as u}from"./app-aQeLbVW9.js";const h={},g=e("h1",{id:"_1299-将每个元素替换为右侧最大元素",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1299-将每个元素替换为右侧最大元素","aria-hidden":"true"},"#"),t(" 1299. 将每个元素替换为右侧最大元素")],-1),k=e("code",null,"数组",-1),_={href:"https://leetcode.cn/problems/replace-elements-with-greatest-element-on-right-side",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"力扣",-1),x={href:"https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"LeetCode",-1),b=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an array <code>arr</code>, replace every element in that array with the greatest element among the elements to its right, and replace the last element with <code>-1</code>.</p><p>After doing so, return the array.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: arr = [17,18,5,4,6,1]</p><p>Output: [18,6,6,6,1,-1]</p><p>Explanation:</p><ul><li>index 0 --&gt; the greatest element to the right of index 0 is index 1 (18).</li><li>index 1 --&gt; the greatest element to the right of index 1 is index 4 (6).</li><li>index 2 --&gt; the greatest element to the right of index 2 is index 4 (6).</li><li>index 3 --&gt; the greatest element to the right of index 3 is index 4 (6).</li><li>index 4 --&gt; the greatest element to the right of index 4 is index 5 (1).</li><li>index 5 --&gt; there are no elements to the right of index 5, so we put -1.</li></ul></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: arr = [400]</p><p>Output: [-1]</p><p>Explanation: There are no elements to the right of index 0.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= arr.length &lt;= 10^4</code></li><li><code>1 &lt;= arr[i] &lt;= 10^5</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个数组 <code>arr</code> ，请你将每个元素用它右边最大的元素替换，如果是最后一个元素，用 <code>-1</code> 替换。</p><p>完成所有替换操作后，请你返回这个数组。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> arr = [17,18,5,4,6,1]</p><p><strong>输出：</strong>[18,6,6,6,1,-1]</p><p><strong>解释：</strong></p><ul><li>下标 0 的元素 --&gt; 右侧最大元素是下标 1 的元素 (18)</li><li>下标 1 的元素 --&gt; 右侧最大元素是下标 4 的元素 (6)</li><li>下标 2 的元素 --&gt; 右侧最大元素是下标 4 的元素 (6)</li><li>下标 3 的元素 --&gt; 右侧最大元素是下标 4 的元素 (6)</li><li>下标 4 的元素 --&gt; 右侧最大元素是下标 5 的元素 (1)</li><li>下标 5 的元素 --&gt; 右侧没有其他元素，替换为 -1</li></ul></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> arr = [400]</p><p><strong>输出：</strong>[-1]</p><p><strong>解释：</strong> 下标 0 的元素右侧没有其他元素。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= arr.length &lt;= 10^4</code></li><li><code>1 &lt;= arr[i] &lt;= 10^5</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>定义变量 <code>max</code> 记录右侧的最大值，初始化为 <code>-1</code>。</li><li>定义变量 <code>cur</code> 记录右侧相邻元素的值，以免从右往左更新数组时被覆盖无法得到原始值，初始化为 <code>-1</code>。</li><li>从数组的末尾向前遍历： <ul><li>更新 <code>max</code> 为 <code>Math.max(max, cur)</code>，此时 <code>cur</code> 是右侧相邻元素的值。</li><li>临时存储当前元素到 <code>cur</code>。</li><li>更新当前元素为 <code>max</code>。</li></ul></li><li>遍历结束，返回修改后的数组。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，只需从右向左遍历数组一次。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，只使用了常量额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">arr</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">replaceElements</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> n <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
		cur <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
		cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> max<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,25),v=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"题号"),e("th",{style:{"text-align":"left"}},"标题"),e("th",{style:{"text-align":"center"}},"题解"),e("th",{style:{"text-align":"left"}},"标签"),e("th",{style:{"text-align":"center"}},"难度"),e("th",{style:{"text-align":"center"}},"力扣")])],-1),y=e("td",{style:{"text-align":"center"}},"2078",-1),w=e("td",{style:{"text-align":"left"}},"两栋颜色不同且距离最远的房子",-1),E={style:{"text-align":"center"}},q={style:{"text-align":"left"}},V=e("code",null,"贪心",-1),C=e("code",null,"数组",-1),I=e("td",{style:{"text-align":"center"}},"🟢",-1),L={style:{"text-align":"center"}},N={href:"https://leetcode.cn/problems/two-furthest-houses-with-different-colors",target:"_blank",rel:"noopener noreferrer"},O={href:"https://leetcode.com/problems/two-furthest-houses-with-different-colors",target:"_blank",rel:"noopener noreferrer"},j=e("td",{style:{"text-align":"center"}},"2454",-1),B=e("td",{style:{"text-align":"left"}},"下一个更大元素 IV",-1),M=e("td",{style:{"text-align":"center"}},null,-1),R={style:{"text-align":"left"}},T=e("code",null,"栈",-1),A=e("code",null,"数组",-1),G=e("code",null,"二分查找",-1),S=e("code",null,"3+",-1),z=e("td",{style:{"text-align":"center"}},"🔴",-1),D={style:{"text-align":"center"}},F={href:"https://leetcode.cn/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},H={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"};function J(K,P){const r=l("font"),a=l("RouterLink"),o=l("ExternalLinkIcon");return i(),p("div",null,[g,e("p",null,[t("🟢 "),n(r,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1}),t("  🔖  "),n(a,{to:"/tag/array.html"},{default:s(()=>[k]),_:1}),t("  🔗 "),e("a",_,[m,n(o)]),t(),e("a",x,[f,n(o)])]),b,d(" prettier-ignore "),e("table",null,[v,e("tbody",null,[e("tr",null,[y,w,e("td",E,[n(a,{to:"/problem/2078.html"},{default:s(()=>[t("[✓]")]),_:1})]),e("td",q,[n(a,{to:"/tag/greedy.html"},{default:s(()=>[V]),_:1}),t(),n(a,{to:"/tag/array.html"},{default:s(()=>[C]),_:1})]),I,e("td",L,[e("a",N,[t("🀄️"),n(o)]),t(),e("a",O,[t("🔗"),n(o)])])]),e("tr",null,[j,B,M,e("td",R,[n(a,{to:"/tag/stack.html"},{default:s(()=>[T]),_:1}),t(),n(a,{to:"/tag/array.html"},{default:s(()=>[A]),_:1}),t(),n(a,{to:"/tag/binary-search.html"},{default:s(()=>[G]),_:1}),t(),S]),z,e("td",D,[e("a",F,[t("🀄️"),n(o)]),t(),e("a",H,[t("🔗"),n(o)])])])])])])}const U=c(h,[["render",J],["__file","1299.html.vue"]]);export{U as default};
