import{_ as d,r,o as _,c,a as t,d as o,w as n,b as e,f as a}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树","aria-hidden":"true"},"#"),e(" 树")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),u=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),j=t("span",{class:"blue"},"树",-1),O=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),K=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),U=t("code",null,"双连通分量",-1),E=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),F=t("code",null,"分治",-1),M=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),A=t("code",null,"动态规划",-1),H=t("code",null,"排序",-1),J=t("code",null,"桶排序",-1),X=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ut=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Kt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Vt=t("td",{style:{"text-align":"center"}},"94",-1),Tt=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),Ut={style:{"text-align":"center"}},Et={style:{"text-align":"left"}},Rt=t("code",null,"栈",-1),Wt=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),St=t("code",null,"1+",-1),Yt=t("td",{style:{"text-align":"center"}},"🟢",-1),Dt={style:{"text-align":"center"}},Qt={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mt=t("td",{style:{"text-align":"center"}},"95",-1),Zt=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树 II",-1),At={style:{"text-align":"center"}},Ht={style:{"text-align":"left"}},Jt=t("code",null,"树",-1),Xt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"2+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"96",-1),re=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"二叉搜索树",-1),ie=t("code",null,"数学",-1),he=t("code",null,"2+",-1),fe=t("td",{style:{"text-align":"center"}},"🟠",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"98",-1),ye=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),xe={style:{"text-align":"center"}},be={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),we=t("code",null,"二叉搜索树",-1),Ie=t("code",null,"1+",-1),ze=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",{style:{"text-align":"center"}},"99",-1),Le=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),Ce={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Pe=t("code",null,"树",-1),Be=t("code",null,"深度优先搜索",-1),Ve=t("code",null,"二叉搜索树",-1),Te=t("code",null,"1+",-1),Ue=t("td",{style:{"text-align":"center"}},"🟠",-1),Ee={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},We={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"100",-1),Se=t("td",{style:{"text-align":"left"}},"相同的树",-1),Ye={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Qe=t("code",null,"树",-1),Fe=t("code",null,"深度优先搜索",-1),Me=t("code",null,"广度优先搜索",-1),Ze=t("code",null,"1+",-1),Ae=t("td",{style:{"text-align":"center"}},"🟢",-1),He={style:{"text-align":"center"}},Je={href:"https://leetcode.cn/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"101",-1),to=t("td",{style:{"text-align":"left"}},"对称二叉树",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"树",-1),no=t("code",null,"深度优先搜索",-1),so=t("code",null,"广度优先搜索",-1),ro=t("code",null,"1+",-1),_o=t("td",{style:{"text-align":"center"}},"🟢",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"102",-1),fo=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历",-1),go={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},mo=t("code",null,"树",-1),po=t("code",null,"广度优先搜索",-1),yo=t("code",null,"二叉树",-1),xo=t("td",{style:{"text-align":"center"}},"🟠",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"103",-1),Io=t("td",{style:{"text-align":"left"}},"二叉树的锯齿形层序遍历",-1),zo={style:{"text-align":"center"}},qo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),Oo=t("code",null,"广度优先搜索",-1),No=t("code",null,"二叉树",-1),Lo=t("td",{style:{"text-align":"center"}},"🟠",-1),Co={style:{"text-align":"center"}},Ko={href:"https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"104",-1),Vo=t("td",{style:{"text-align":"left"}},"二叉树的最大深度",-1),To={style:{"text-align":"center"}},Uo={style:{"text-align":"left"}},Eo=t("code",null,"树",-1),Ro=t("code",null,"深度优先搜索",-1),Wo=t("code",null,"广度优先搜索",-1),Go=t("code",null,"1+",-1),So=t("td",{style:{"text-align":"center"}},"🟢",-1),Yo={style:{"text-align":"center"}},Do={href:"https://leetcode.cn/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qo={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},"105",-1),Mo=t("td",{style:{"text-align":"left"}},"从前序与中序遍历序列构造二叉树",-1),Zo={style:{"text-align":"center"}},Ao={style:{"text-align":"left"}},Ho=t("code",null,"树",-1),Jo=t("code",null,"数组",-1),Xo=t("code",null,"哈希表",-1),$o=t("code",null,"2+",-1),tl=t("td",{style:{"text-align":"center"}},"🟠",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"106",-1),sl=t("td",{style:{"text-align":"left"}},"从中序与后序遍历序列构造二叉树",-1),rl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"树",-1),cl=t("code",null,"数组",-1),al=t("code",null,"哈希表",-1),il=t("code",null,"2+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),fl={style:{"text-align":"center"}},gl={href:"https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},"107",-1),pl=t("td",{style:{"text-align":"left"}},"二叉树的层序遍历 II",-1),yl={style:{"text-align":"center"}},xl={style:{"text-align":"left"}},bl=t("code",null,"树",-1),kl=t("code",null,"广度优先搜索",-1),vl=t("code",null,"二叉树",-1),wl=t("td",{style:{"text-align":"center"}},"🟠",-1),Il={style:{"text-align":"center"}},zl={href:"https://leetcode.cn/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},jl=t("td",{style:{"text-align":"center"}},"108",-1),Ol=t("td",{style:{"text-align":"left"}},"将有序数组转换为二叉搜索树",-1),Nl={style:{"text-align":"center"}},Ll={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),Kl=t("code",null,"二叉搜索树",-1),Pl=t("code",null,"数组",-1),Bl=t("code",null,"2+",-1),Vl=t("td",{style:{"text-align":"center"}},"🟢",-1),Tl={style:{"text-align":"center"}},Ul={href:"https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},El={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},"109",-1),Wl=t("td",{style:{"text-align":"left"}},"有序链表转换二叉搜索树",-1),Gl={style:{"text-align":"center"}},Sl={style:{"text-align":"left"}},Yl=t("code",null,"树",-1),Dl=t("code",null,"二叉搜索树",-1),Ql=t("code",null,"链表",-1),Fl=t("code",null,"2+",-1),Ml=t("td",{style:{"text-align":"center"}},"🟠",-1),Zl={style:{"text-align":"center"}},Al={href:"https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",{style:{"text-align":"center"}},"110",-1),Xl=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),$l={style:{"text-align":"center"}},tn={style:{"text-align":"left"}},en=t("code",null,"树",-1),on=t("code",null,"深度优先搜索",-1),ln=t("code",null,"二叉树",-1),nn=t("td",{style:{"text-align":"center"}},"🟢",-1),sn={style:{"text-align":"center"}},rn={href:"https://leetcode.cn/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"111",-1),cn=t("td",{style:{"text-align":"left"}},"二叉树的最小深度",-1),an={style:{"text-align":"center"}},hn={style:{"text-align":"left"}},fn=t("code",null,"树",-1),gn=t("code",null,"深度优先搜索",-1),un=t("code",null,"广度优先搜索",-1),mn=t("code",null,"1+",-1),pn=t("td",{style:{"text-align":"center"}},"🟢",-1),yn={style:{"text-align":"center"}},xn={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"112",-1),vn=t("td",{style:{"text-align":"left"}},"路径总和",-1),wn={style:{"text-align":"center"}},In={style:{"text-align":"left"}},zn=t("code",null,"树",-1),qn=t("code",null,"深度优先搜索",-1),jn=t("code",null,"广度优先搜索",-1),On=t("code",null,"1+",-1),Nn=t("td",{style:{"text-align":"center"}},"🟢",-1),Ln={style:{"text-align":"center"}},Cn={href:"https://leetcode.cn/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Pn=t("td",{style:{"text-align":"center"}},"113",-1),Bn=t("td",{style:{"text-align":"left"}},"路径总和 II",-1),Vn={style:{"text-align":"center"}},Tn={style:{"text-align":"left"}},Un=t("code",null,"树",-1),En=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"回溯",-1),Wn=t("code",null,"1+",-1),Gn=t("td",{style:{"text-align":"center"}},"🟠",-1),Sn={style:{"text-align":"center"}},Yn={href:"https://leetcode.cn/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},"114",-1),Fn=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),Mn={style:{"text-align":"center"}},Zn={style:{"text-align":"left"}},An=t("code",null,"栈",-1),Hn=t("code",null,"树",-1),Jn=t("code",null,"深度优先搜索",-1),Xn=t("code",null,"2+",-1),$n=t("td",{style:{"text-align":"center"}},"🟠",-1),ts={style:{"text-align":"center"}},es={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},os={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"116",-1),ns=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针",-1),ss={style:{"text-align":"center"}},rs={style:{"text-align":"left"}},ds=t("code",null,"树",-1),_s=t("code",null,"深度优先搜索",-1),cs=t("code",null,"广度优先搜索",-1),as=t("code",null,"2+",-1),is=t("td",{style:{"text-align":"center"}},"🟠",-1),hs={style:{"text-align":"center"}},fs={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},"117",-1),ms=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针 II",-1),ps={style:{"text-align":"center"}},ys={style:{"text-align":"left"}},xs=t("code",null,"树",-1),bs=t("code",null,"深度优先搜索",-1),ks=t("code",null,"广度优先搜索",-1),vs=t("code",null,"2+",-1),ws=t("td",{style:{"text-align":"center"}},"🟠",-1),Is={style:{"text-align":"center"}},zs={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},"124",-1),Os=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),Ns={style:{"text-align":"center"}},Ls={style:{"text-align":"left"}},Cs=t("code",null,"树",-1),Ks=t("code",null,"深度优先搜索",-1),Ps=t("code",null,"动态规划",-1),Bs=t("code",null,"1+",-1),Vs=t("td",{style:{"text-align":"center"}},"🔴",-1),Ts={style:{"text-align":"center"}},Us={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Es={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Rs=t("td",{style:{"text-align":"center"}},"129",-1),Ws=t("td",{style:{"text-align":"left"}},"求根节点到叶节点数字之和",-1),Gs={style:{"text-align":"center"}},Ss={style:{"text-align":"left"}},Ys=t("code",null,"树",-1),Ds=t("code",null,"深度优先搜索",-1),Qs=t("code",null,"二叉树",-1),Fs=t("td",{style:{"text-align":"center"}},"🟠",-1),Ms={style:{"text-align":"center"}},Zs={href:"https://leetcode.cn/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},As={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},"144",-1),Js=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),Xs={style:{"text-align":"center"}},$s={style:{"text-align":"left"}},tr=t("code",null,"栈",-1),er=t("code",null,"树",-1),or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"1+",-1),nr=t("td",{style:{"text-align":"center"}},"🟢",-1),sr={style:{"text-align":"center"}},rr={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"145",-1),cr=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),ar={style:{"text-align":"center"}},ir={style:{"text-align":"left"}},hr=t("code",null,"栈",-1),fr=t("code",null,"树",-1),gr=t("code",null,"深度优先搜索",-1),ur=t("code",null,"1+",-1),mr=t("td",{style:{"text-align":"center"}},"🟢",-1),pr={style:{"text-align":"center"}},yr={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},br=t("td",{style:{"text-align":"center"}},"156",-1),kr=t("td",{style:{"text-align":"left"}},"上下翻转二叉树 🔒",-1),vr={style:{"text-align":"center"}},wr={style:{"text-align":"left"}},Ir=t("code",null,"树",-1),zr=t("code",null,"深度优先搜索",-1),qr=t("code",null,"二叉树",-1),jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Or={style:{"text-align":"center"}},Nr={href:"https://leetcode.cn/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},"173",-1),Kr=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),Pr={style:{"text-align":"center"}},Br={style:{"text-align":"left"}},Vr=t("code",null,"栈",-1),Tr=t("code",null,"树",-1),Ur=t("code",null,"设计",-1),Er=t("code",null,"3+",-1),Rr=t("td",{style:{"text-align":"center"}},"🟠",-1),Wr={style:{"text-align":"center"}},Gr={href:"https://leetcode.cn/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Sr={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Yr=t("td",{style:{"text-align":"center"}},"199",-1),Dr=t("td",{style:{"text-align":"left"}},"二叉树的右视图",-1),Qr={style:{"text-align":"center"}},Fr={style:{"text-align":"left"}},Mr=t("code",null,"树",-1),Zr=t("code",null,"深度优先搜索",-1),Ar=t("code",null,"广度优先搜索",-1),Hr=t("code",null,"1+",-1),Jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Xr={style:{"text-align":"center"}},$r={href:"https://leetcode.cn/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"222",-1),od=t("td",{style:{"text-align":"left"}},"完全二叉树的节点个数",-1),ld={style:{"text-align":"center"}},nd={style:{"text-align":"left"}},sd=t("code",null,"位运算",-1),rd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd=t("td",{style:{"text-align":"center"}},"🟢",-1),ad={style:{"text-align":"center"}},id={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},"226",-1),gd=t("td",{style:{"text-align":"left"}},"翻转二叉树",-1),ud={style:{"text-align":"center"}},md={style:{"text-align":"left"}},pd=t("code",null,"树",-1),yd=t("code",null,"深度优先搜索",-1),xd=t("code",null,"广度优先搜索",-1),bd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"center"}},"🟢",-1),vd={style:{"text-align":"center"}},wd={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Id={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},"230",-1),qd=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),jd={style:{"text-align":"center"}},Od={style:{"text-align":"left"}},Nd=t("code",null,"树",-1),Ld=t("code",null,"深度优先搜索",-1),Cd=t("code",null,"二叉搜索树",-1),Kd=t("code",null,"1+",-1),Pd=t("td",{style:{"text-align":"center"}},"🟠",-1),Bd={style:{"text-align":"center"}},Vd={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Td={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},"235",-1),Ed=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Rd={style:{"text-align":"center"}},Wd={style:{"text-align":"left"}},Gd=t("code",null,"树",-1),Sd=t("code",null,"深度优先搜索",-1),Yd=t("code",null,"二叉搜索树",-1),Dd=t("code",null,"1+",-1),Qd=t("td",{style:{"text-align":"center"}},"🟠",-1),Fd={style:{"text-align":"center"}},Md={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Zd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},"236",-1),Hd=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),Jd={style:{"text-align":"center"}},Xd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),o_=t("td",{style:{"text-align":"center"}},"🟠",-1),l_={style:{"text-align":"center"}},n_={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},"250",-1),d_=t("td",{style:{"text-align":"left"}},"统计同值子树 🔒",-1),__=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},a_=t("code",null,"树",-1),i_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"二叉树",-1),f_=t("td",{style:{"text-align":"center"}},"🟠",-1),g_={style:{"text-align":"center"}},u_={href:"https://leetcode.cn/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},m_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},"255",-1),y_=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),x_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),v_=t("code",null,"树",-1),w_=t("code",null,"二叉搜索树",-1),I_=t("code",null,"4+",-1),z_=t("td",{style:{"text-align":"center"}},"🟠",-1),q_={style:{"text-align":"center"}},j_={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},O_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},N_=t("td",{style:{"text-align":"center"}},"257",-1),L_=t("td",{style:{"text-align":"left"}},"二叉树的所有路径",-1),C_={style:{"text-align":"center"}},K_={style:{"text-align":"left"}},P_=t("code",null,"树",-1),B_=t("code",null,"深度优先搜索",-1),V_=t("code",null,"字符串",-1),T_=t("code",null,"2+",-1),U_=t("td",{style:{"text-align":"center"}},"🟢",-1),E_={style:{"text-align":"center"}},R_={href:"https://leetcode.cn/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},W_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},"270",-1),S_=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Y_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},Q_=t("code",null,"树",-1),F_=t("code",null,"深度优先搜索",-1),M_=t("code",null,"二叉搜索树",-1),Z_=t("code",null,"2+",-1),A_=t("td",{style:{"text-align":"center"}},"🟢",-1),H_={style:{"text-align":"center"}},J_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},X_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},"272",-1),tc=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),ec=t("td",{style:{"text-align":"center"}},null,-1),oc={style:{"text-align":"left"}},lc=t("code",null,"栈",-1),nc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),rc=t("code",null,"4+",-1),dc=t("td",{style:{"text-align":"center"}},"🔴",-1),_c={style:{"text-align":"center"}},cc={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ac={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},"285",-1),hc=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},uc=t("code",null,"树",-1),mc=t("code",null,"深度优先搜索",-1),pc=t("code",null,"二叉搜索树",-1),yc=t("code",null,"1+",-1),xc=t("td",{style:{"text-align":"center"}},"🟠",-1),bc={style:{"text-align":"center"}},kc={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},vc={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},"297",-1),Ic=t("td",{style:{"text-align":"left"}},"二叉树的序列化与反序列化",-1),zc={style:{"text-align":"center"}},qc={style:{"text-align":"left"}},jc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),Nc=t("code",null,"广度优先搜索",-1),Lc=t("code",null,"3+",-1),Cc=t("td",{style:{"text-align":"center"}},"🔴",-1),Kc={style:{"text-align":"center"}},Pc={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},"298",-1),Tc=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 🔒",-1),Uc=t("td",{style:{"text-align":"center"}},null,-1),Ec={style:{"text-align":"left"}},Rc=t("code",null,"树",-1),Wc=t("code",null,"深度优先搜索",-1),Gc=t("code",null,"二叉树",-1),Sc=t("td",{style:{"text-align":"center"}},"🟠",-1),Yc={style:{"text-align":"center"}},Dc={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Qc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},"314",-1),Mc=t("td",{style:{"text-align":"left"}},"二叉树的垂直遍历 🔒",-1),Zc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Hc=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Xc=t("code",null,"广度优先搜索",-1),$c=t("code",null,"3+",-1),ta=t("td",{style:{"text-align":"center"}},"🟠",-1),ea={style:{"text-align":"center"}},oa={href:"https://leetcode.cn/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},la={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},"331",-1),sa=t("td",{style:{"text-align":"left"}},"验证二叉树的前序序列化",-1),ra={style:{"text-align":"center"}},da={style:{"text-align":"left"}},_a=t("code",null,"栈",-1),ca=t("code",null,"树",-1),aa=t("code",null,"字符串",-1),ia=t("code",null,"1+",-1),ha=t("td",{style:{"text-align":"center"}},"🟠",-1),fa={style:{"text-align":"center"}},ga={href:"https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"333",-1),pa=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),ya=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},ba=t("code",null,"树",-1),ka=t("code",null,"深度优先搜索",-1),va=t("code",null,"二叉搜索树",-1),wa=t("code",null,"2+",-1),Ia=t("td",{style:{"text-align":"center"}},"🟠",-1),za={style:{"text-align":"center"}},qa={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},ja={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},"337",-1),Na=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),La={style:{"text-align":"center"}},Ca={style:{"text-align":"left"}},Ka=t("code",null,"树",-1),Pa=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"动态规划",-1),Va=t("code",null,"1+",-1),Ta=t("td",{style:{"text-align":"center"}},"🟠",-1),Ua={style:{"text-align":"center"}},Ea={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ra={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},"341",-1),Ga=t("td",{style:{"text-align":"left"}},"扁平化嵌套列表迭代器",-1),Sa={style:{"text-align":"center"}},Ya={style:{"text-align":"left"}},Da=t("code",null,"栈",-1),Qa=t("code",null,"树",-1),Fa=t("code",null,"深度优先搜索",-1),Ma=t("code",null,"3+",-1),Za=t("td",{style:{"text-align":"center"}},"🟠",-1),Aa={style:{"text-align":"center"}},Ha={href:"https://leetcode.cn/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Ja={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},"366",-1),$a=t("td",{style:{"text-align":"left"}},"寻找二叉树的叶子节点 🔒",-1),ti={style:{"text-align":"center"}},ei={style:{"text-align":"left"}},oi=t("code",null,"树",-1),li=t("code",null,"深度优先搜索",-1),ni=t("code",null,"二叉树",-1),si=t("td",{style:{"text-align":"center"}},"🟠",-1),ri={style:{"text-align":"center"}},di={href:"https://leetcode.cn/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},_i={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},"404",-1),ai=t("td",{style:{"text-align":"left"}},"左叶子之和",-1),ii={style:{"text-align":"center"}},hi={style:{"text-align":"left"}},fi=t("code",null,"树",-1),gi=t("code",null,"深度优先搜索",-1),ui=t("code",null,"广度优先搜索",-1),mi=t("code",null,"1+",-1),pi=t("td",{style:{"text-align":"center"}},"🟢",-1),yi={style:{"text-align":"center"}},xi={href:"https://leetcode.cn/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},bi={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"426",-1),vi=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),wi={style:{"text-align":"center"}},Ii={style:{"text-align":"left"}},zi=t("code",null,"栈",-1),qi=t("code",null,"树",-1),ji=t("code",null,"深度优先搜索",-1),Oi=t("code",null,"4+",-1),Ni=t("td",{style:{"text-align":"center"}},"🟠",-1),Li={style:{"text-align":"center"}},Ci={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Ki={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},"427",-1),Bi=t("td",{style:{"text-align":"left"}},"建立四叉树",-1),Vi={style:{"text-align":"center"}},Ti={style:{"text-align":"left"}},Ui=t("code",null,"树",-1),Ei=t("code",null,"数组",-1),Ri=t("code",null,"分治",-1),Wi=t("code",null,"1+",-1),Gi=t("td",{style:{"text-align":"center"}},"🟠",-1),Si={style:{"text-align":"center"}},Yi={href:"https://leetcode.cn/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},Di={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},Qi=t("td",{style:{"text-align":"center"}},"428",-1),Fi=t("td",{style:{"text-align":"left"}},"序列化和反序列化 N 叉树 🔒",-1),Mi=t("td",{style:{"text-align":"center"}},null,-1),Zi={style:{"text-align":"left"}},Ai=t("code",null,"树",-1),Hi=t("code",null,"深度优先搜索",-1),Ji=t("code",null,"广度优先搜索",-1),Xi=t("code",null,"1+",-1),$i=t("td",{style:{"text-align":"center"}},"🔴",-1),th={style:{"text-align":"center"}},eh={href:"https://leetcode.cn/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},oh={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},"429",-1),nh=t("td",{style:{"text-align":"left"}},"N 叉树的层序遍历",-1),sh={style:{"text-align":"center"}},rh={style:{"text-align":"left"}},dh=t("code",null,"树",-1),_h=t("code",null,"广度优先搜索",-1),ch=t("td",{style:{"text-align":"center"}},"🟠",-1),ah={style:{"text-align":"center"}},ih={href:"https://leetcode.cn/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},hh={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},"431",-1),gh=t("td",{style:{"text-align":"left"}},"将 N 叉树编码为二叉树 🔒",-1),uh=t("td",{style:{"text-align":"center"}},null,-1),mh={style:{"text-align":"left"}},ph=t("code",null,"树",-1),yh=t("code",null,"深度优先搜索",-1),xh=t("code",null,"广度优先搜索",-1),bh=t("code",null,"2+",-1),kh=t("td",{style:{"text-align":"center"}},"🔴",-1),vh={style:{"text-align":"center"}},wh={href:"https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ih={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},zh=t("td",{style:{"text-align":"center"}},"437",-1),qh=t("td",{style:{"text-align":"left"}},"路径总和 III",-1),jh={style:{"text-align":"center"}},Oh={style:{"text-align":"left"}},Nh=t("code",null,"树",-1),Lh=t("code",null,"深度优先搜索",-1),Ch=t("code",null,"二叉树",-1),Kh=t("td",{style:{"text-align":"center"}},"🟠",-1),Ph={style:{"text-align":"center"}},Bh={href:"https://leetcode.cn/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Vh={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Th=t("td",{style:{"text-align":"center"}},"449",-1),Uh=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),Eh={style:{"text-align":"center"}},Rh={style:{"text-align":"left"}},Wh=t("code",null,"树",-1),Gh=t("code",null,"深度优先搜索",-1),Sh=t("code",null,"广度优先搜索",-1),Yh=t("code",null,"4+",-1),Dh=t("td",{style:{"text-align":"center"}},"🟠",-1),Qh={style:{"text-align":"center"}},Fh={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Mh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Zh=t("td",{style:{"text-align":"center"}},"450",-1),Ah=t("td",{style:{"text-align":"left"}},"删除二叉搜索树中的节点",-1),Hh={style:{"text-align":"center"}},Jh={style:{"text-align":"left"}},Xh=t("code",null,"树",-1),$h=t("code",null,"二叉搜索树",-1),t1=t("code",null,"二叉树",-1),e1=t("td",{style:{"text-align":"center"}},"🟠",-1),o1={style:{"text-align":"center"}},l1={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},n1={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},s1=t("td",{style:{"text-align":"center"}},"501",-1),r1=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),d1={style:{"text-align":"center"}},_1={style:{"text-align":"left"}},c1=t("code",null,"树",-1),a1=t("code",null,"深度优先搜索",-1),i1=t("code",null,"二叉搜索树",-1),h1=t("code",null,"1+",-1),f1=t("td",{style:{"text-align":"center"}},"🟢",-1),g1={style:{"text-align":"center"}},u1={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},m1={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},p1=t("td",{style:{"text-align":"center"}},"508",-1),y1=t("td",{style:{"text-align":"left"}},"出现次数最多的子树元素和",-1),x1=t("td",{style:{"text-align":"center"}},null,-1),b1={style:{"text-align":"left"}},k1=t("code",null,"树",-1),v1=t("code",null,"深度优先搜索",-1),w1=t("code",null,"哈希表",-1),I1=t("code",null,"1+",-1),z1=t("td",{style:{"text-align":"center"}},"🟠",-1),q1={style:{"text-align":"center"}},j1={href:"https://leetcode.cn/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},O1={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},N1=t("td",{style:{"text-align":"center"}},"510",-1),L1=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 II 🔒",-1),C1=t("td",{style:{"text-align":"center"}},null,-1),K1={style:{"text-align":"left"}},P1=t("code",null,"树",-1),B1=t("code",null,"二叉搜索树",-1),V1=t("code",null,"二叉树",-1),T1=t("td",{style:{"text-align":"center"}},"🟠",-1),U1={style:{"text-align":"center"}},E1={href:"https://leetcode.cn/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},R1={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},W1=t("td",{style:{"text-align":"center"}},"513",-1),G1=t("td",{style:{"text-align":"left"}},"找树左下角的值",-1),S1=t("td",{style:{"text-align":"center"}},null,-1),Y1={style:{"text-align":"left"}},D1=t("code",null,"树",-1),Q1=t("code",null,"深度优先搜索",-1),F1=t("code",null,"广度优先搜索",-1),M1=t("code",null,"1+",-1),Z1=t("td",{style:{"text-align":"center"}},"🟠",-1),A1={style:{"text-align":"center"}},H1={href:"https://leetcode.cn/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},J1={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},X1=t("td",{style:{"text-align":"center"}},"515",-1),$1=t("td",{style:{"text-align":"left"}},"在每个树行中找最大值",-1),tf={style:{"text-align":"center"}},ef={style:{"text-align":"left"}},of=t("code",null,"树",-1),lf=t("code",null,"深度优先搜索",-1),nf=t("code",null,"广度优先搜索",-1),sf=t("code",null,"1+",-1),rf=t("td",{style:{"text-align":"center"}},"🟠",-1),df={style:{"text-align":"center"}},_f={href:"https://leetcode.cn/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},cf={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},af=t("td",{style:{"text-align":"center"}},"530",-1),hf=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),ff={style:{"text-align":"center"}},gf={style:{"text-align":"left"}},uf=t("code",null,"树",-1),mf=t("code",null,"深度优先搜索",-1),pf=t("code",null,"广度优先搜索",-1),yf=t("code",null,"2+",-1),xf=t("td",{style:{"text-align":"center"}},"🟢",-1),bf={style:{"text-align":"center"}},kf={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},vf={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},wf=t("td",{style:{"text-align":"center"}},"536",-1),If=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),zf=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},jf=t("code",null,"栈",-1),Of=t("code",null,"树",-1),Nf=t("code",null,"深度优先搜索",-1),Lf=t("code",null,"2+",-1),Cf=t("td",{style:{"text-align":"center"}},"🟠",-1),Kf={style:{"text-align":"center"}},Pf={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Bf={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},"538",-1),Tf=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),Uf=t("td",{style:{"text-align":"center"}},null,-1),Ef={style:{"text-align":"left"}},Rf=t("code",null,"树",-1),Wf=t("code",null,"深度优先搜索",-1),Gf=t("code",null,"二叉搜索树",-1),Sf=t("code",null,"1+",-1),Yf=t("td",{style:{"text-align":"center"}},"🟠",-1),Df={style:{"text-align":"center"}},Qf={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Ff={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},"543",-1),Zf=t("td",{style:{"text-align":"left"}},"二叉树的直径",-1),Af={style:{"text-align":"center"}},Hf={style:{"text-align":"left"}},Jf=t("code",null,"树",-1),Xf=t("code",null,"深度优先搜索",-1),$f=t("code",null,"二叉树",-1),tg=t("td",{style:{"text-align":"center"}},"🟢",-1),eg={style:{"text-align":"center"}},og={href:"https://leetcode.cn/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},lg={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ng=t("td",{style:{"text-align":"center"}},"545",-1),sg=t("td",{style:{"text-align":"left"}},"二叉树的边界 🔒",-1),rg=t("td",{style:{"text-align":"center"}},null,-1),dg={style:{"text-align":"left"}},_g=t("code",null,"树",-1),cg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"二叉树",-1),ig=t("td",{style:{"text-align":"center"}},"🟠",-1),hg={style:{"text-align":"center"}},fg={href:"https://leetcode.cn/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},gg={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},"549",-1),mg=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 II 🔒",-1),pg=t("td",{style:{"text-align":"center"}},null,-1),yg={style:{"text-align":"left"}},xg=t("code",null,"树",-1),bg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"二叉树",-1),vg=t("td",{style:{"text-align":"center"}},"🟠",-1),wg={style:{"text-align":"center"}},Ig={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},zg={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},qg=t("td",{style:{"text-align":"center"}},"558",-1),jg=t("td",{style:{"text-align":"left"}},"四叉树交集",-1),Og=t("td",{style:{"text-align":"center"}},null,-1),Ng={style:{"text-align":"left"}},Lg=t("code",null,"树",-1),Cg=t("code",null,"分治",-1),Kg=t("td",{style:{"text-align":"center"}},"🟠",-1),Pg={style:{"text-align":"center"}},Bg={href:"https://leetcode.cn/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},Vg={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},Tg=t("td",{style:{"text-align":"center"}},"559",-1),Ug=t("td",{style:{"text-align":"left"}},"N 叉树的最大深度",-1),Eg={style:{"text-align":"center"}},Rg={style:{"text-align":"left"}},Wg=t("code",null,"树",-1),Gg=t("code",null,"深度优先搜索",-1),Sg=t("code",null,"广度优先搜索",-1),Yg=t("td",{style:{"text-align":"center"}},"🟢",-1),Dg={style:{"text-align":"center"}},Qg={href:"https://leetcode.cn/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Fg={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Mg=t("td",{style:{"text-align":"center"}},"563",-1),Zg=t("td",{style:{"text-align":"left"}},"二叉树的坡度",-1),Ag={style:{"text-align":"center"}},Hg={style:{"text-align":"left"}},Jg=t("code",null,"树",-1),Xg=t("code",null,"深度优先搜索",-1),$g=t("code",null,"二叉树",-1),tu=t("td",{style:{"text-align":"center"}},"🟢",-1),eu={style:{"text-align":"center"}},ou={href:"https://leetcode.cn/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},lu={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},nu=t("td",{style:{"text-align":"center"}},"572",-1),su=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),ru={style:{"text-align":"center"}},du={style:{"text-align":"left"}},_u=t("code",null,"树",-1),cu=t("code",null,"深度优先搜索",-1),au=t("code",null,"二叉树",-1),iu=t("code",null,"2+",-1),hu=t("td",{style:{"text-align":"center"}},"🟢",-1),fu={style:{"text-align":"center"}},gu={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},uu={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},mu=t("td",{style:{"text-align":"center"}},"582",-1),pu=t("td",{style:{"text-align":"left"}},"杀掉进程 🔒",-1),yu=t("td",{style:{"text-align":"center"}},null,-1),xu={style:{"text-align":"left"}},bu=t("code",null,"树",-1),ku=t("code",null,"深度优先搜索",-1),vu=t("code",null,"广度优先搜索",-1),wu=t("code",null,"2+",-1),Iu=t("td",{style:{"text-align":"center"}},"🟠",-1),zu={style:{"text-align":"center"}},qu={href:"https://leetcode.cn/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},ju={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},Ou=t("td",{style:{"text-align":"center"}},"589",-1),Nu=t("td",{style:{"text-align":"left"}},"N 叉树的前序遍历",-1),Lu={style:{"text-align":"center"}},Cu={style:{"text-align":"left"}},Ku=t("code",null,"栈",-1),Pu=t("code",null,"树",-1),Bu=t("code",null,"深度优先搜索",-1),Vu=t("td",{style:{"text-align":"center"}},"🟢",-1),Tu={style:{"text-align":"center"}},Uu={href:"https://leetcode.cn/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Eu={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ru=t("td",{style:{"text-align":"center"}},"590",-1),Wu=t("td",{style:{"text-align":"left"}},"N 叉树的后序遍历",-1),Gu={style:{"text-align":"center"}},Su={style:{"text-align":"left"}},Yu=t("code",null,"栈",-1),Du=t("code",null,"树",-1),Qu=t("code",null,"深度优先搜索",-1),Fu=t("td",{style:{"text-align":"center"}},"🟢",-1),Mu={style:{"text-align":"center"}},Zu={href:"https://leetcode.cn/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Au={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},"606",-1),Ju=t("td",{style:{"text-align":"left"}},"根据二叉树创建字符串",-1),Xu=t("td",{style:{"text-align":"center"}},null,-1),$u={style:{"text-align":"left"}},tm=t("code",null,"树",-1),em=t("code",null,"深度优先搜索",-1),om=t("code",null,"字符串",-1),lm=t("code",null,"1+",-1),nm=t("td",{style:{"text-align":"center"}},"🟠",-1),sm={style:{"text-align":"center"}},rm={href:"https://leetcode.cn/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},dm={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},_m=t("td",{style:{"text-align":"center"}},"617",-1),cm=t("td",{style:{"text-align":"left"}},"合并二叉树",-1),am={style:{"text-align":"center"}},im={style:{"text-align":"left"}},hm=t("code",null,"树",-1),fm=t("code",null,"深度优先搜索",-1),gm=t("code",null,"广度优先搜索",-1),um=t("code",null,"1+",-1),mm=t("td",{style:{"text-align":"center"}},"🟢",-1),pm={style:{"text-align":"center"}},ym={href:"https://leetcode.cn/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},xm={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},bm=t("td",{style:{"text-align":"center"}},"623",-1),km=t("td",{style:{"text-align":"left"}},"在二叉树中增加一行",-1),vm=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},Im=t("code",null,"树",-1),zm=t("code",null,"深度优先搜索",-1),qm=t("code",null,"广度优先搜索",-1),jm=t("code",null,"1+",-1),Om=t("td",{style:{"text-align":"center"}},"🟠",-1),Nm={style:{"text-align":"center"}},Lm={href:"https://leetcode.cn/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Cm={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Km=t("td",{style:{"text-align":"center"}},"637",-1),Pm=t("td",{style:{"text-align":"left"}},"二叉树的层平均值",-1),Bm={style:{"text-align":"center"}},Vm={style:{"text-align":"left"}},Tm=t("code",null,"树",-1),Um=t("code",null,"深度优先搜索",-1),Em=t("code",null,"广度优先搜索",-1),Rm=t("code",null,"1+",-1),Wm=t("td",{style:{"text-align":"center"}},"🟢",-1),Gm={style:{"text-align":"center"}},Sm={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ym={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dm=t("td",{style:{"text-align":"center"}},"652",-1),Qm=t("td",{style:{"text-align":"left"}},"寻找重复的子树",-1),Fm=t("td",{style:{"text-align":"center"}},null,-1),Mm={style:{"text-align":"left"}},Zm=t("code",null,"树",-1),Am=t("code",null,"深度优先搜索",-1),Hm=t("code",null,"哈希表",-1),Jm=t("code",null,"1+",-1),Xm=t("td",{style:{"text-align":"center"}},"🟠",-1),$m={style:{"text-align":"center"}},t2={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},e2={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},o2=t("td",{style:{"text-align":"center"}},"653",-1),l2=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),n2={style:{"text-align":"center"}},s2={style:{"text-align":"left"}},r2=t("code",null,"树",-1),d2=t("code",null,"深度优先搜索",-1),_2=t("code",null,"广度优先搜索",-1),c2=t("code",null,"4+",-1),a2=t("td",{style:{"text-align":"center"}},"🟢",-1),i2={style:{"text-align":"center"}},h2={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},f2={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},g2=t("td",{style:{"text-align":"center"}},"654",-1),u2=t("td",{style:{"text-align":"left"}},"最大二叉树",-1),m2={style:{"text-align":"center"}},p2={style:{"text-align":"left"}},y2=t("code",null,"栈",-1),x2=t("code",null,"树",-1),b2=t("code",null,"数组",-1),k2=t("code",null,"3+",-1),v2=t("td",{style:{"text-align":"center"}},"🟠",-1),w2={style:{"text-align":"center"}},I2={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},z2={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},"655",-1),j2=t("td",{style:{"text-align":"left"}},"输出二叉树",-1),O2=t("td",{style:{"text-align":"center"}},null,-1),N2={style:{"text-align":"left"}},L2=t("code",null,"树",-1),C2=t("code",null,"深度优先搜索",-1),K2=t("code",null,"广度优先搜索",-1),P2=t("code",null,"1+",-1),B2=t("td",{style:{"text-align":"center"}},"🟠",-1),V2={style:{"text-align":"center"}},T2={href:"https://leetcode.cn/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},U2={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},"662",-1),R2=t("td",{style:{"text-align":"left"}},"二叉树最大宽度",-1),W2={style:{"text-align":"center"}},G2={style:{"text-align":"left"}},S2=t("code",null,"树",-1),Y2=t("code",null,"深度优先搜索",-1),D2=t("code",null,"广度优先搜索",-1),Q2=t("code",null,"1+",-1),F2=t("td",{style:{"text-align":"center"}},"🟠",-1),M2={style:{"text-align":"center"}},Z2={href:"https://leetcode.cn/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},A2={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},H2=t("td",{style:{"text-align":"center"}},"663",-1),J2=t("td",{style:{"text-align":"left"}},"均匀树划分 🔒",-1),X2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},tp=t("code",null,"树",-1),ep=t("code",null,"深度优先搜索",-1),op=t("code",null,"二叉树",-1),lp=t("td",{style:{"text-align":"center"}},"🟠",-1),np={style:{"text-align":"center"}},sp={href:"https://leetcode.cn/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},rp={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},"666",-1),_p=t("td",{style:{"text-align":"left"}},"路径总和 IV 🔒",-1),cp=t("td",{style:{"text-align":"center"}},null,-1),ap={style:{"text-align":"left"}},ip=t("code",null,"树",-1),hp=t("code",null,"深度优先搜索",-1),fp=t("code",null,"数组",-1),gp=t("code",null,"2+",-1),up=t("td",{style:{"text-align":"center"}},"🟠",-1),mp={style:{"text-align":"center"}},pp={href:"https://leetcode.cn/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},yp={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},xp=t("td",{style:{"text-align":"center"}},"669",-1),bp=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),kp=t("td",{style:{"text-align":"center"}},null,-1),vp={style:{"text-align":"left"}},wp=t("code",null,"树",-1),Ip=t("code",null,"深度优先搜索",-1),zp=t("code",null,"二叉搜索树",-1),qp=t("code",null,"1+",-1),jp=t("td",{style:{"text-align":"center"}},"🟠",-1),Op={style:{"text-align":"center"}},Np={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Lp={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},"671",-1),Kp=t("td",{style:{"text-align":"left"}},"二叉树中第二小的节点",-1),Pp={style:{"text-align":"center"}},Bp={style:{"text-align":"left"}},Vp=t("code",null,"树",-1),Tp=t("code",null,"深度优先搜索",-1),Up=t("code",null,"二叉树",-1),Ep=t("td",{style:{"text-align":"center"}},"🟢",-1),Rp={style:{"text-align":"center"}},Wp={href:"https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gp={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Sp=t("td",{style:{"text-align":"center"}},"687",-1),Yp=t("td",{style:{"text-align":"left"}},"最长同值路径",-1),Dp=t("td",{style:{"text-align":"center"}},null,-1),Qp={style:{"text-align":"left"}},Fp=t("code",null,"树",-1),Mp=t("code",null,"深度优先搜索",-1),Zp=t("code",null,"二叉树",-1),Ap=t("td",{style:{"text-align":"center"}},"🟠",-1),Hp={style:{"text-align":"center"}},Jp={href:"https://leetcode.cn/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Xp={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},"690",-1),ty=t("td",{style:{"text-align":"left"}},"员工的重要性",-1),ey=t("td",{style:{"text-align":"center"}},null,-1),oy={style:{"text-align":"left"}},ly=t("code",null,"树",-1),ny=t("code",null,"深度优先搜索",-1),sy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"2+",-1),dy=t("td",{style:{"text-align":"center"}},"🟠",-1),_y={style:{"text-align":"center"}},cy={href:"https://leetcode.cn/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},ay={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},"700",-1),hy=t("td",{style:{"text-align":"left"}},"二叉搜索树中的搜索",-1),fy={style:{"text-align":"center"}},gy={style:{"text-align":"left"}},uy=t("code",null,"树",-1),my=t("code",null,"二叉搜索树",-1),py=t("code",null,"二叉树",-1),yy=t("td",{style:{"text-align":"center"}},"🟢",-1),xy={style:{"text-align":"center"}},by={href:"https://leetcode.cn/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ky={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},"701",-1),wy=t("td",{style:{"text-align":"left"}},"二叉搜索树中的插入操作",-1),Iy={style:{"text-align":"center"}},zy={style:{"text-align":"left"}},qy=t("code",null,"树",-1),jy=t("code",null,"二叉搜索树",-1),Oy=t("code",null,"二叉树",-1),Ny=t("td",{style:{"text-align":"center"}},"🟠",-1),Ly={style:{"text-align":"center"}},Cy={href:"https://leetcode.cn/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ky={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},"703",-1),By=t("td",{style:{"text-align":"left"}},"数据流中的第 K 大元素",-1),Vy={style:{"text-align":"center"}},Ty={style:{"text-align":"left"}},Uy=t("code",null,"树",-1),Ey=t("code",null,"设计",-1),Ry=t("code",null,"二叉搜索树",-1),Wy=t("code",null,"3+",-1),Gy=t("td",{style:{"text-align":"center"}},"🟢",-1),Sy={style:{"text-align":"center"}},Yy={href:"https://leetcode.cn/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Dy={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Qy=t("td",{style:{"text-align":"center"}},"742",-1),Fy=t("td",{style:{"text-align":"left"}},"二叉树最近的叶节点 🔒",-1),My=t("td",{style:{"text-align":"center"}},null,-1),Zy={style:{"text-align":"left"}},Ay=t("code",null,"树",-1),Hy=t("code",null,"深度优先搜索",-1),Jy=t("code",null,"广度优先搜索",-1),Xy=t("code",null,"1+",-1),$y=t("td",{style:{"text-align":"center"}},"🟠",-1),tx={style:{"text-align":"center"}},ex={href:"https://leetcode.cn/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ox={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lx=t("td",{style:{"text-align":"center"}},"776",-1),nx=t("td",{style:{"text-align":"left"}},"拆分二叉搜索树 🔒",-1),sx=t("td",{style:{"text-align":"center"}},null,-1),rx={style:{"text-align":"left"}},dx=t("code",null,"树",-1),_x=t("code",null,"二叉搜索树",-1),cx=t("code",null,"递归",-1),ax=t("code",null,"1+",-1),ix=t("td",{style:{"text-align":"center"}},"🟠",-1),hx={style:{"text-align":"center"}},fx={href:"https://leetcode.cn/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},gx={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},ux=t("td",{style:{"text-align":"center"}},"783",-1),mx=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),px={style:{"text-align":"center"}},yx={style:{"text-align":"left"}},xx=t("code",null,"树",-1),bx=t("code",null,"深度优先搜索",-1),kx=t("code",null,"广度优先搜索",-1),vx=t("code",null,"2+",-1),wx=t("td",{style:{"text-align":"center"}},"🟢",-1),Ix={style:{"text-align":"center"}},zx={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},qx={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},jx=t("td",{style:{"text-align":"center"}},"814",-1),Ox=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),Nx=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Cx=t("code",null,"树",-1),Kx=t("code",null,"深度优先搜索",-1),Px=t("code",null,"二叉树",-1),Bx=t("td",{style:{"text-align":"center"}},"🟠",-1),Vx={style:{"text-align":"center"}},Tx={href:"https://leetcode.cn/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},Ux={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},Ex=t("td",{style:{"text-align":"center"}},"834",-1),Rx=t("td",{style:{"text-align":"left"}},"树中距离之和",-1),Wx=t("td",{style:{"text-align":"center"}},null,-1),Gx={style:{"text-align":"left"}},Sx=t("code",null,"树",-1),Yx=t("code",null,"深度优先搜索",-1),Dx=t("code",null,"图",-1),Qx=t("code",null,"1+",-1),Fx=t("td",{style:{"text-align":"center"}},"🔴",-1),Mx={style:{"text-align":"center"}},Zx={href:"https://leetcode.cn/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Ax={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},"863",-1),Jx=t("td",{style:{"text-align":"left"}},"二叉树中所有距离为 K 的结点",-1),Xx=t("td",{style:{"text-align":"center"}},null,-1),$x={style:{"text-align":"left"}},tb=t("code",null,"树",-1),eb=t("code",null,"深度优先搜索",-1),ob=t("code",null,"广度优先搜索",-1),lb=t("code",null,"2+",-1),nb=t("td",{style:{"text-align":"center"}},"🟠",-1),sb={style:{"text-align":"center"}},rb={href:"https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},db={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},"865",-1),cb=t("td",{style:{"text-align":"left"}},"具有所有最深节点的最小子树",-1),ab=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},hb=t("code",null,"树",-1),fb=t("code",null,"深度优先搜索",-1),gb=t("code",null,"广度优先搜索",-1),ub=t("code",null,"2+",-1),mb=t("td",{style:{"text-align":"center"}},"🟠",-1),pb={style:{"text-align":"center"}},yb={href:"https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},xb={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},"872",-1),kb=t("td",{style:{"text-align":"left"}},"叶子相似的树",-1),vb={style:{"text-align":"center"}},wb={style:{"text-align":"left"}},Ib=t("code",null,"树",-1),zb=t("code",null,"深度优先搜索",-1),qb=t("code",null,"二叉树",-1),jb=t("td",{style:{"text-align":"center"}},"🟢",-1),Ob={style:{"text-align":"center"}},Nb={href:"https://leetcode.cn/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Lb={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Cb=t("td",{style:{"text-align":"center"}},"889",-1),Kb=t("td",{style:{"text-align":"left"}},"根据前序和后序遍历构造二叉树",-1),Pb={style:{"text-align":"center"}},Bb={style:{"text-align":"left"}},Vb=t("code",null,"树",-1),Tb=t("code",null,"数组",-1),Ub=t("code",null,"哈希表",-1),Eb=t("code",null,"2+",-1),Rb=t("td",{style:{"text-align":"center"}},"🟠",-1),Wb={style:{"text-align":"center"}},Gb={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Sb={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Yb=t("td",{style:{"text-align":"center"}},"894",-1),Db=t("td",{style:{"text-align":"left"}},"所有可能的真二叉树",-1),Qb=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Mb=t("code",null,"树",-1),Zb=t("code",null,"递归",-1),Ab=t("code",null,"记忆化搜索",-1),Hb=t("code",null,"2+",-1),Jb=t("td",{style:{"text-align":"center"}},"🟠",-1),Xb={style:{"text-align":"center"}},$b={href:"https://leetcode.cn/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},t3={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},e3=t("td",{style:{"text-align":"center"}},"897",-1),o3=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),l3={style:{"text-align":"center"}},n3={style:{"text-align":"left"}},s3=t("code",null,"栈",-1),r3=t("code",null,"树",-1),d3=t("code",null,"深度优先搜索",-1),_3=t("code",null,"2+",-1),c3=t("td",{style:{"text-align":"center"}},"🟢",-1),a3={style:{"text-align":"center"}},i3={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},h3={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},"919",-1),g3=t("td",{style:{"text-align":"left"}},"完全二叉树插入器",-1),u3=t("td",{style:{"text-align":"center"}},null,-1),m3={style:{"text-align":"left"}},p3=t("code",null,"树",-1),y3=t("code",null,"广度优先搜索",-1),x3=t("code",null,"设计",-1),b3=t("code",null,"1+",-1),k3=t("td",{style:{"text-align":"center"}},"🟠",-1),v3={style:{"text-align":"center"}},w3={href:"https://leetcode.cn/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},I3={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},"938",-1),q3=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),j3={style:{"text-align":"center"}},O3={style:{"text-align":"left"}},N3=t("code",null,"树",-1),L3=t("code",null,"深度优先搜索",-1),C3=t("code",null,"二叉搜索树",-1),K3=t("code",null,"1+",-1),P3=t("td",{style:{"text-align":"center"}},"🟢",-1),B3={style:{"text-align":"center"}},V3={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},T3={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},U3=t("td",{style:{"text-align":"center"}},"951",-1),E3=t("td",{style:{"text-align":"left"}},"翻转等价二叉树",-1),R3={style:{"text-align":"center"}},W3={style:{"text-align":"left"}},G3=t("code",null,"树",-1),S3=t("code",null,"深度优先搜索",-1),Y3=t("code",null,"二叉树",-1),D3=t("td",{style:{"text-align":"center"}},"🟠",-1),Q3={style:{"text-align":"center"}},F3={href:"https://leetcode.cn/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},M3={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Z3=t("td",{style:{"text-align":"center"}},"958",-1),A3=t("td",{style:{"text-align":"left"}},"二叉树的完全性检验",-1),H3={style:{"text-align":"center"}},J3={style:{"text-align":"left"}},X3=t("code",null,"树",-1),$3=t("code",null,"广度优先搜索",-1),t0=t("code",null,"二叉树",-1),e0=t("td",{style:{"text-align":"center"}},"🟠",-1),o0={style:{"text-align":"center"}},l0={href:"https://leetcode.cn/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},n0={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},"965",-1),r0=t("td",{style:{"text-align":"left"}},"单值二叉树",-1),d0={style:{"text-align":"center"}},_0={style:{"text-align":"left"}},c0=t("code",null,"树",-1),a0=t("code",null,"深度优先搜索",-1),i0=t("code",null,"广度优先搜索",-1),h0=t("code",null,"1+",-1),f0=t("td",{style:{"text-align":"center"}},"🟢",-1),g0={style:{"text-align":"center"}},u0={href:"https://leetcode.cn/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},m0={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},"968",-1),y0=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),x0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},k0=t("code",null,"树",-1),v0=t("code",null,"深度优先搜索",-1),w0=t("code",null,"动态规划",-1),I0=t("code",null,"1+",-1),z0=t("td",{style:{"text-align":"center"}},"🔴",-1),q0={style:{"text-align":"center"}},j0={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},O0={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},N0=t("td",{style:{"text-align":"center"}},"971",-1),L0=t("td",{style:{"text-align":"left"}},"翻转二叉树以匹配先序遍历",-1),C0=t("td",{style:{"text-align":"center"}},null,-1),K0={style:{"text-align":"left"}},P0=t("code",null,"树",-1),B0=t("code",null,"深度优先搜索",-1),V0=t("code",null,"二叉树",-1),T0=t("td",{style:{"text-align":"center"}},"🟠",-1),U0={style:{"text-align":"center"}},E0={href:"https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},R0={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},"979",-1),G0=t("td",{style:{"text-align":"left"}},"在二叉树中分配硬币",-1),S0=t("td",{style:{"text-align":"center"}},null,-1),Y0={style:{"text-align":"left"}},D0=t("code",null,"树",-1),Q0=t("code",null,"深度优先搜索",-1),F0=t("code",null,"二叉树",-1),M0=t("td",{style:{"text-align":"center"}},"🟠",-1),Z0={style:{"text-align":"center"}},A0={href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},H0={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},J0=t("td",{style:{"text-align":"center"}},"987",-1),X0=t("td",{style:{"text-align":"left"}},"二叉树的垂序遍历",-1),$0=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"树",-1),o4=t("code",null,"深度优先搜索",-1),l4=t("code",null,"广度优先搜索",-1),n4=t("code",null,"3+",-1),s4=t("td",{style:{"text-align":"center"}},"🔴",-1),r4={style:{"text-align":"center"}},d4={href:"https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},_4={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},c4=t("td",{style:{"text-align":"center"}},"988",-1),a4=t("td",{style:{"text-align":"left"}},"从叶结点开始的最小字符串",-1),i4=t("td",{style:{"text-align":"center"}},null,-1),h4={style:{"text-align":"left"}},f4=t("code",null,"树",-1),g4=t("code",null,"深度优先搜索",-1),u4=t("code",null,"字符串",-1),m4=t("code",null,"2+",-1),p4=t("td",{style:{"text-align":"center"}},"🟠",-1),y4={style:{"text-align":"center"}},x4={href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},b4={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},k4=t("td",{style:{"text-align":"center"}},"993",-1),v4=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点",-1),w4={style:{"text-align":"center"}},I4={style:{"text-align":"left"}},z4=t("code",null,"树",-1),q4=t("code",null,"深度优先搜索",-1),j4=t("code",null,"广度优先搜索",-1),O4=t("code",null,"1+",-1),N4=t("td",{style:{"text-align":"center"}},"🟢",-1),L4={style:{"text-align":"center"}},C4={href:"https://leetcode.cn/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},K4={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},P4=t("td",{style:{"text-align":"center"}},"998",-1),B4=t("td",{style:{"text-align":"left"}},"最大二叉树 II",-1),V4=t("td",{style:{"text-align":"center"}},null,-1),T4={style:{"text-align":"left"}},U4=t("code",null,"树",-1),E4=t("code",null,"二叉树",-1),R4=t("td",{style:{"text-align":"center"}},"🟠",-1),W4={style:{"text-align":"center"}},G4={href:"https://leetcode.cn/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},S4={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Y4=t("td",{style:{"text-align":"center"}},"1008",-1),D4=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),Q4={style:{"text-align":"center"}},F4={style:{"text-align":"left"}},M4=t("code",null,"栈",-1),Z4=t("code",null,"树",-1),A4=t("code",null,"二叉搜索树",-1),H4=t("code",null,"3+",-1),J4=t("td",{style:{"text-align":"center"}},"🟠",-1),X4={style:{"text-align":"center"}},$4={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},t5={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},"1022",-1),o5=t("td",{style:{"text-align":"left"}},"从根到叶的二进制数之和",-1),l5={style:{"text-align":"center"}},n5={style:{"text-align":"left"}},s5=t("code",null,"树",-1),r5=t("code",null,"深度优先搜索",-1),d5=t("code",null,"二叉树",-1),_5=t("td",{style:{"text-align":"center"}},"🟢",-1),c5={style:{"text-align":"center"}},a5={href:"https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},i5={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},"1026",-1),f5=t("td",{style:{"text-align":"left"}},"节点与其祖先之间的最大差值",-1),g5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},m5=t("code",null,"树",-1),p5=t("code",null,"深度优先搜索",-1),y5=t("code",null,"二叉树",-1),x5=t("td",{style:{"text-align":"center"}},"🟠",-1),b5={style:{"text-align":"center"}},k5={href:"https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},v5={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},w5=t("td",{style:{"text-align":"center"}},"1028",-1),I5=t("td",{style:{"text-align":"left"}},"从先序遍历还原二叉树",-1),z5={style:{"text-align":"center"}},q5={style:{"text-align":"left"}},j5=t("code",null,"树",-1),O5=t("code",null,"深度优先搜索",-1),N5=t("code",null,"字符串",-1),L5=t("code",null,"1+",-1),C5=t("td",{style:{"text-align":"center"}},"🔴",-1),K5={style:{"text-align":"center"}},P5={href:"https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},B5={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},"1038",-1),T5=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),U5=t("td",{style:{"text-align":"center"}},null,-1),E5={style:{"text-align":"left"}},R5=t("code",null,"树",-1),W5=t("code",null,"深度优先搜索",-1),G5=t("code",null,"二叉搜索树",-1),S5=t("code",null,"1+",-1),Y5=t("td",{style:{"text-align":"center"}},"🟠",-1),D5={style:{"text-align":"center"}},Q5={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},F5={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},"1080",-1),Z5=t("td",{style:{"text-align":"left"}},"根到叶路径上的不足节点",-1),A5=t("td",{style:{"text-align":"center"}},null,-1),H5={style:{"text-align":"left"}},J5=t("code",null,"树",-1),X5=t("code",null,"深度优先搜索",-1),$5=t("code",null,"二叉树",-1),t6=t("td",{style:{"text-align":"center"}},"🟠",-1),e6={style:{"text-align":"center"}},o6={href:"https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},l6={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},"1104",-1),s6=t("td",{style:{"text-align":"left"}},"二叉树寻路",-1),r6=t("td",{style:{"text-align":"center"}},null,-1),d6={style:{"text-align":"left"}},_6=t("code",null,"树",-1),c6=t("code",null,"数学",-1),a6=t("code",null,"二叉树",-1),i6=t("td",{style:{"text-align":"center"}},"🟠",-1),h6={style:{"text-align":"center"}},f6={href:"https://leetcode.cn/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},g6={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},u6=t("td",{style:{"text-align":"center"}},"1110",-1),m6=t("td",{style:{"text-align":"left"}},"删点成林",-1),p6=t("td",{style:{"text-align":"center"}},null,-1),y6={style:{"text-align":"left"}},x6=t("code",null,"树",-1),b6=t("code",null,"深度优先搜索",-1),k6=t("code",null,"数组",-1),v6=t("code",null,"2+",-1),w6=t("td",{style:{"text-align":"center"}},"🟠",-1),I6={style:{"text-align":"center"}},z6={href:"https://leetcode.cn/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},q6={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},j6=t("td",{style:{"text-align":"center"}},"1120",-1),O6=t("td",{style:{"text-align":"left"}},"子树的最大平均值 🔒",-1),N6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},C6=t("code",null,"树",-1),K6=t("code",null,"深度优先搜索",-1),P6=t("code",null,"二叉树",-1),B6=t("td",{style:{"text-align":"center"}},"🟠",-1),V6={style:{"text-align":"center"}},T6={href:"https://leetcode.cn/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},U6={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},E6=t("td",{style:{"text-align":"center"}},"1123",-1),R6=t("td",{style:{"text-align":"left"}},"最深叶节点的最近公共祖先",-1),W6=t("td",{style:{"text-align":"center"}},null,-1),G6={style:{"text-align":"left"}},S6=t("code",null,"树",-1),Y6=t("code",null,"深度优先搜索",-1),D6=t("code",null,"广度优先搜索",-1),Q6=t("code",null,"2+",-1),F6=t("td",{style:{"text-align":"center"}},"🟠",-1),M6={style:{"text-align":"center"}},Z6={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},A6={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},H6=t("td",{style:{"text-align":"center"}},"1145",-1),J6=t("td",{style:{"text-align":"left"}},"二叉树着色游戏",-1),X6=t("td",{style:{"text-align":"center"}},null,-1),$6={style:{"text-align":"left"}},t7=t("code",null,"树",-1),e7=t("code",null,"深度优先搜索",-1),o7=t("code",null,"二叉树",-1),l7=t("td",{style:{"text-align":"center"}},"🟠",-1),n7={style:{"text-align":"center"}},s7={href:"https://leetcode.cn/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},r7={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},"1161",-1),_7=t("td",{style:{"text-align":"left"}},"最大层内元素和",-1),c7={style:{"text-align":"center"}},a7={style:{"text-align":"left"}},i7=t("code",null,"树",-1),h7=t("code",null,"深度优先搜索",-1),f7=t("code",null,"广度优先搜索",-1),g7=t("code",null,"1+",-1),u7=t("td",{style:{"text-align":"center"}},"🟠",-1),m7={style:{"text-align":"center"}},p7={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},y7={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},x7=t("td",{style:{"text-align":"center"}},"1214",-1),b7=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),k7=t("td",{style:{"text-align":"center"}},null,-1),v7={style:{"text-align":"left"}},w7=t("code",null,"栈",-1),I7=t("code",null,"树",-1),z7=t("code",null,"深度优先搜索",-1),q7=t("code",null,"4+",-1),j7=t("td",{style:{"text-align":"center"}},"🟠",-1),O7={style:{"text-align":"center"}},N7={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},L7={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},"1245",-1),K7=t("td",{style:{"text-align":"left"}},"树的直径 🔒",-1),P7=t("td",{style:{"text-align":"center"}},null,-1),B7={style:{"text-align":"left"}},V7=t("code",null,"树",-1),T7=t("code",null,"深度优先搜索",-1),U7=t("code",null,"广度优先搜索",-1),E7=t("code",null,"2+",-1),R7=t("td",{style:{"text-align":"center"}},"🟠",-1),W7={style:{"text-align":"center"}},G7={href:"https://leetcode.cn/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},S7={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},"1257",-1),D7=t("td",{style:{"text-align":"left"}},"最小公共区域 🔒",-1),Q7=t("td",{style:{"text-align":"center"}},null,-1),F7={style:{"text-align":"left"}},M7=t("code",null,"树",-1),Z7=t("code",null,"深度优先搜索",-1),A7=t("code",null,"广度优先搜索",-1),H7=t("code",null,"3+",-1),J7=t("td",{style:{"text-align":"center"}},"🟠",-1),X7={style:{"text-align":"center"}},$7={href:"https://leetcode.cn/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},t9={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},"1261",-1),o9=t("td",{style:{"text-align":"left"}},"在受污染的二叉树中查找元素",-1),l9={style:{"text-align":"center"}},n9={style:{"text-align":"left"}},s9=t("code",null,"树",-1),r9=t("code",null,"深度优先搜索",-1),d9=t("code",null,"广度优先搜索",-1),_9=t("code",null,"3+",-1),c9=t("td",{style:{"text-align":"center"}},"🟠",-1),a9={style:{"text-align":"center"}},i9={href:"https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},h9={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},f9=t("td",{style:{"text-align":"center"}},"1273",-1),g9=t("td",{style:{"text-align":"left"}},"删除树节点 🔒",-1),u9=t("td",{style:{"text-align":"center"}},null,-1),m9={style:{"text-align":"left"}},p9=t("code",null,"树",-1),y9=t("code",null,"深度优先搜索",-1),x9=t("code",null,"广度优先搜索",-1),b9=t("code",null,"1+",-1),k9=t("td",{style:{"text-align":"center"}},"🟠",-1),v9={style:{"text-align":"center"}},w9={href:"https://leetcode.cn/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},I9={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},"1302",-1),q9=t("td",{style:{"text-align":"left"}},"层数最深叶子节点的和",-1),j9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},N9=t("code",null,"树",-1),L9=t("code",null,"深度优先搜索",-1),C9=t("code",null,"广度优先搜索",-1),K9=t("code",null,"1+",-1),P9=t("td",{style:{"text-align":"center"}},"🟠",-1),B9={style:{"text-align":"center"}},V9={href:"https://leetcode.cn/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},T9={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},U9=t("td",{style:{"text-align":"center"}},"1305",-1),E9=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),R9=t("td",{style:{"text-align":"center"}},null,-1),W9={style:{"text-align":"left"}},G9=t("code",null,"树",-1),S9=t("code",null,"深度优先搜索",-1),Y9=t("code",null,"二叉搜索树",-1),D9=t("code",null,"2+",-1),Q9=t("td",{style:{"text-align":"center"}},"🟠",-1),F9={style:{"text-align":"center"}},M9={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Z9={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},"1315",-1),H9=t("td",{style:{"text-align":"left"}},"祖父节点值为偶数的节点和",-1),J9=t("td",{style:{"text-align":"center"}},null,-1),X9={style:{"text-align":"left"}},$9=t("code",null,"树",-1),t8=t("code",null,"深度优先搜索",-1),e8=t("code",null,"广度优先搜索",-1),o8=t("code",null,"1+",-1),l8=t("td",{style:{"text-align":"center"}},"🟠",-1),n8={style:{"text-align":"center"}},s8={href:"https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},r8={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},d8=t("td",{style:{"text-align":"center"}},"1325",-1),_8=t("td",{style:{"text-align":"left"}},"删除给定值的叶子节点",-1),c8=t("td",{style:{"text-align":"center"}},null,-1),a8={style:{"text-align":"left"}},i8=t("code",null,"树",-1),h8=t("code",null,"深度优先搜索",-1),f8=t("code",null,"二叉树",-1),g8=t("td",{style:{"text-align":"center"}},"🟠",-1),u8={style:{"text-align":"center"}},m8={href:"https://leetcode.cn/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},p8={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},y8=t("td",{style:{"text-align":"center"}},"1339",-1),x8=t("td",{style:{"text-align":"left"}},"分裂二叉树的最大乘积",-1),b8=t("td",{style:{"text-align":"center"}},null,-1),k8={style:{"text-align":"left"}},v8=t("code",null,"树",-1),w8=t("code",null,"深度优先搜索",-1),I8=t("code",null,"二叉树",-1),z8=t("td",{style:{"text-align":"center"}},"🟠",-1),q8={style:{"text-align":"center"}},j8={href:"https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},O8={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},"1361",-1),L8=t("td",{style:{"text-align":"left"}},"验证二叉树",-1),C8=t("td",{style:{"text-align":"center"}},null,-1),K8={style:{"text-align":"left"}},P8=t("code",null,"树",-1),B8=t("code",null,"深度优先搜索",-1),V8=t("code",null,"广度优先搜索",-1),T8=t("code",null,"3+",-1),U8=t("td",{style:{"text-align":"center"}},"🟠",-1),E8={style:{"text-align":"center"}},R8={href:"https://leetcode.cn/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},W8={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},"1367",-1),S8=t("td",{style:{"text-align":"left"}},"二叉树中的链表",-1),Y8=t("td",{style:{"text-align":"center"}},null,-1),D8={style:{"text-align":"left"}},Q8=t("code",null,"树",-1),F8=t("code",null,"深度优先搜索",-1),M8=t("code",null,"链表",-1),Z8=t("code",null,"1+",-1),A8=t("td",{style:{"text-align":"center"}},"🟠",-1),H8={style:{"text-align":"center"}},J8={href:"https://leetcode.cn/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},X8={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$8=t("td",{style:{"text-align":"center"}},"1372",-1),tk=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),ek={style:{"text-align":"center"}},ok={style:{"text-align":"left"}},lk=t("code",null,"树",-1),nk=t("code",null,"深度优先搜索",-1),sk=t("code",null,"动态规划",-1),rk=t("code",null,"1+",-1),dk=t("td",{style:{"text-align":"center"}},"🟠",-1),_k={style:{"text-align":"center"}},ck={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ak={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ik=t("td",{style:{"text-align":"center"}},"1373",-1),hk=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),fk=t("td",{style:{"text-align":"center"}},null,-1),gk={style:{"text-align":"left"}},uk=t("code",null,"树",-1),mk=t("code",null,"深度优先搜索",-1),pk=t("code",null,"二叉搜索树",-1),yk=t("code",null,"2+",-1),xk=t("td",{style:{"text-align":"center"}},"🔴",-1),bk={style:{"text-align":"center"}},kk={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},vk={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},wk=t("td",{style:{"text-align":"center"}},"1376",-1),Ik=t("td",{style:{"text-align":"left"}},"通知所有员工所需的时间",-1),zk=t("td",{style:{"text-align":"center"}},null,-1),qk={style:{"text-align":"left"}},jk=t("code",null,"树",-1),Ok=t("code",null,"深度优先搜索",-1),Nk=t("code",null,"广度优先搜索",-1),Lk=t("td",{style:{"text-align":"center"}},"🟠",-1),Ck={style:{"text-align":"center"}},Kk={href:"https://leetcode.cn/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},Pk={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},Bk=t("td",{style:{"text-align":"center"}},"1377",-1),Vk=t("td",{style:{"text-align":"left"}},"T 秒后青蛙的位置",-1),Tk=t("td",{style:{"text-align":"center"}},null,-1),Uk={style:{"text-align":"left"}},Ek=t("code",null,"树",-1),Rk=t("code",null,"深度优先搜索",-1),Wk=t("code",null,"广度优先搜索",-1),Gk=t("code",null,"1+",-1),Sk=t("td",{style:{"text-align":"center"}},"🔴",-1),Yk={style:{"text-align":"center"}},Dk={href:"https://leetcode.cn/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},Qk={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},Fk=t("td",{style:{"text-align":"center"}},"1379",-1),Mk=t("td",{style:{"text-align":"left"}},"找出克隆二叉树中的相同节点",-1),Zk={style:{"text-align":"center"}},Ak={style:{"text-align":"left"}},Hk=t("code",null,"树",-1),Jk=t("code",null,"深度优先搜索",-1),Xk=t("code",null,"广度优先搜索",-1),$k=t("code",null,"1+",-1),tv=t("td",{style:{"text-align":"center"}},"🟢",-1),ev={style:{"text-align":"center"}},ov={href:"https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},lv={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},nv=t("td",{style:{"text-align":"center"}},"1382",-1),sv=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),rv=t("td",{style:{"text-align":"center"}},null,-1),dv={style:{"text-align":"left"}},_v=t("code",null,"贪心",-1),cv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),iv=t("code",null,"3+",-1),hv=t("td",{style:{"text-align":"center"}},"🟠",-1),fv={style:{"text-align":"center"}},gv={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},uv={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mv=t("td",{style:{"text-align":"center"}},"1430",-1),pv=t("td",{style:{"text-align":"left"}},"判断给定的序列是否是二叉树从根到叶的路径 🔒",-1),yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},bv=t("code",null,"树",-1),kv=t("code",null,"深度优先搜索",-1),vv=t("code",null,"广度优先搜索",-1),wv=t("code",null,"1+",-1),Iv=t("td",{style:{"text-align":"center"}},"🟠",-1),zv={style:{"text-align":"center"}},qv={href:"https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},jv={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ov=t("td",{style:{"text-align":"center"}},"1443",-1),Nv=t("td",{style:{"text-align":"left"}},"收集树上所有苹果的最少时间",-1),Lv=t("td",{style:{"text-align":"center"}},null,-1),Cv={style:{"text-align":"left"}},Kv=t("code",null,"树",-1),Pv=t("code",null,"深度优先搜索",-1),Bv=t("code",null,"广度优先搜索",-1),Vv=t("code",null,"1+",-1),Tv=t("td",{style:{"text-align":"center"}},"🟠",-1),Uv={style:{"text-align":"center"}},Ev={href:"https://leetcode.cn/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Rv={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Wv=t("td",{style:{"text-align":"center"}},"1448",-1),Gv=t("td",{style:{"text-align":"left"}},"统计二叉树中好节点的数目",-1),Sv={style:{"text-align":"center"}},Yv={style:{"text-align":"left"}},Dv=t("code",null,"树",-1),Qv=t("code",null,"深度优先搜索",-1),Fv=t("code",null,"广度优先搜索",-1),Mv=t("code",null,"1+",-1),Zv=t("td",{style:{"text-align":"center"}},"🟠",-1),Av={style:{"text-align":"center"}},Hv={href:"https://leetcode.cn/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jv={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xv=t("td",{style:{"text-align":"center"}},"1457",-1),$v=t("td",{style:{"text-align":"left"}},"二叉树中的伪回文路径",-1),tw=t("td",{style:{"text-align":"center"}},null,-1),ew={style:{"text-align":"left"}},ow=t("code",null,"位运算",-1),lw=t("code",null,"树",-1),nw=t("code",null,"深度优先搜索",-1),sw=t("code",null,"2+",-1),rw=t("td",{style:{"text-align":"center"}},"🟠",-1),dw={style:{"text-align":"center"}},_w={href:"https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},cw={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},"1469",-1),iw=t("td",{style:{"text-align":"left"}},"寻找所有的独生节点 🔒",-1),hw=t("td",{style:{"text-align":"center"}},null,-1),fw={style:{"text-align":"left"}},gw=t("code",null,"树",-1),uw=t("code",null,"深度优先搜索",-1),mw=t("code",null,"广度优先搜索",-1),pw=t("code",null,"1+",-1),yw=t("td",{style:{"text-align":"center"}},"🟢",-1),xw={style:{"text-align":"center"}},bw={href:"https://leetcode.cn/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},kw={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},vw=t("td",{style:{"text-align":"center"}},"1483",-1),ww=t("td",{style:{"text-align":"left"}},"树节点的第 K 个祖先",-1),Iw=t("td",{style:{"text-align":"center"}},null,-1),zw={style:{"text-align":"left"}},qw=t("code",null,"树",-1),jw=t("code",null,"深度优先搜索",-1),Ow=t("code",null,"广度优先搜索",-1),Nw=t("code",null,"3+",-1),Lw=t("td",{style:{"text-align":"center"}},"🔴",-1),Cw={style:{"text-align":"center"}},Kw={href:"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},Pw={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},Bw=t("td",{style:{"text-align":"center"}},"1485",-1),Vw=t("td",{style:{"text-align":"left"}},"克隆含随机指针的二叉树 🔒",-1),Tw=t("td",{style:{"text-align":"center"}},null,-1),Uw={style:{"text-align":"left"}},Ew=t("code",null,"树",-1),Rw=t("code",null,"深度优先搜索",-1),Ww=t("code",null,"广度优先搜索",-1),Gw=t("code",null,"2+",-1),Sw=t("td",{style:{"text-align":"center"}},"🟠",-1),Yw={style:{"text-align":"center"}},Dw={href:"https://leetcode.cn/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},Qw={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},Fw=t("td",{style:{"text-align":"center"}},"1490",-1),Mw=t("td",{style:{"text-align":"left"}},"克隆 N 叉树 🔒",-1),Zw=t("td",{style:{"text-align":"center"}},null,-1),Aw={style:{"text-align":"left"}},Hw=t("code",null,"树",-1),Jw=t("code",null,"深度优先搜索",-1),Xw=t("code",null,"广度优先搜索",-1),$w=t("code",null,"1+",-1),tI=t("td",{style:{"text-align":"center"}},"🟠",-1),eI={style:{"text-align":"center"}},oI={href:"https://leetcode.cn/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},lI={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},nI=t("td",{style:{"text-align":"center"}},"1506",-1),sI=t("td",{style:{"text-align":"left"}},"找到 N 叉树的根节点 🔒",-1),rI=t("td",{style:{"text-align":"center"}},null,-1),dI={style:{"text-align":"left"}},_I=t("code",null,"位运算",-1),cI=t("code",null,"树",-1),aI=t("code",null,"深度优先搜索",-1),iI=t("code",null,"1+",-1),hI=t("td",{style:{"text-align":"center"}},"🟠",-1),fI={style:{"text-align":"center"}},gI={href:"https://leetcode.cn/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},uI={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mI=t("td",{style:{"text-align":"center"}},"1516",-1),pI=t("td",{style:{"text-align":"left"}},"移动 N 叉树的子树 🔒",-1),yI=t("td",{style:{"text-align":"center"}},null,-1),xI={style:{"text-align":"left"}},bI=t("code",null,"树",-1),kI=t("code",null,"深度优先搜索",-1),vI=t("td",{style:{"text-align":"center"}},"🔴",-1),wI={style:{"text-align":"center"}},II={href:"https://leetcode.cn/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},zI={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},"1519",-1),jI=t("td",{style:{"text-align":"left"}},"子树中标签相同的节点数",-1),OI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},LI=t("code",null,"树",-1),CI=t("code",null,"深度优先搜索",-1),KI=t("code",null,"广度优先搜索",-1),PI=t("code",null,"2+",-1),BI=t("td",{style:{"text-align":"center"}},"🟠",-1),VI={style:{"text-align":"center"}},TI={href:"https://leetcode.cn/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},UI={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},EI=t("td",{style:{"text-align":"center"}},"1522",-1),RI=t("td",{style:{"text-align":"left"}},"N 叉树的直径 🔒",-1),WI={style:{"text-align":"center"}},GI={style:{"text-align":"left"}},SI=t("code",null,"树",-1),YI=t("code",null,"深度优先搜索",-1),DI=t("td",{style:{"text-align":"center"}},"🟠",-1),QI={style:{"text-align":"center"}},FI={href:"https://leetcode.cn/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},MI={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},ZI=t("td",{style:{"text-align":"center"}},"1530",-1),AI=t("td",{style:{"text-align":"left"}},"好叶子节点对的数量",-1),HI=t("td",{style:{"text-align":"center"}},null,-1),JI={style:{"text-align":"left"}},XI=t("code",null,"树",-1),$I=t("code",null,"深度优先搜索",-1),tz=t("code",null,"二叉树",-1),ez=t("td",{style:{"text-align":"center"}},"🟠",-1),oz={style:{"text-align":"center"}},lz={href:"https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},nz={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},sz=t("td",{style:{"text-align":"center"}},"1569",-1),rz=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),dz=t("td",{style:{"text-align":"center"}},null,-1),_z={style:{"text-align":"left"}},cz=t("code",null,"树",-1),az=t("code",null,"并查集",-1),iz=t("code",null,"二叉搜索树",-1),hz=t("code",null,"7+",-1),fz=t("td",{style:{"text-align":"center"}},"🔴",-1),gz={style:{"text-align":"center"}},uz={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},mz={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},pz=t("td",{style:{"text-align":"center"}},"1586",-1),yz=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器 II 🔒",-1),xz=t("td",{style:{"text-align":"center"}},null,-1),bz={style:{"text-align":"left"}},kz=t("code",null,"栈",-1),vz=t("code",null,"树",-1),wz=t("code",null,"设计",-1),Iz=t("code",null,"3+",-1),zz=t("td",{style:{"text-align":"center"}},"🟠",-1),qz={style:{"text-align":"center"}},jz={href:"https://leetcode.cn/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Oz={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Nz=t("td",{style:{"text-align":"center"}},"1597",-1),Lz=t("td",{style:{"text-align":"left"}},"根据中缀表达式构造二叉表达式树 🔒",-1),Cz=t("td",{style:{"text-align":"center"}},null,-1),Kz={style:{"text-align":"left"}},Pz=t("code",null,"栈",-1),Bz=t("code",null,"树",-1),Vz=t("code",null,"字符串",-1),Tz=t("code",null,"1+",-1),Uz=t("td",{style:{"text-align":"center"}},"🔴",-1),Ez={style:{"text-align":"center"}},Rz={href:"https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Wz={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Gz=t("td",{style:{"text-align":"center"}},"1600",-1),Sz=t("td",{style:{"text-align":"left"}},"王位继承顺序",-1),Yz=t("td",{style:{"text-align":"center"}},null,-1),Dz={style:{"text-align":"left"}},Qz=t("code",null,"树",-1),Fz=t("code",null,"深度优先搜索",-1),Mz=t("code",null,"设计",-1),Zz=t("code",null,"1+",-1),Az=t("td",{style:{"text-align":"center"}},"🟠",-1),Hz={style:{"text-align":"center"}},Jz={href:"https://leetcode.cn/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},Xz={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},$z=t("td",{style:{"text-align":"center"}},"1602",-1),tq=t("td",{style:{"text-align":"left"}},"找到二叉树中最近的右侧节点 🔒",-1),eq=t("td",{style:{"text-align":"center"}},null,-1),oq={style:{"text-align":"left"}},lq=t("code",null,"树",-1),nq=t("code",null,"广度优先搜索",-1),sq=t("code",null,"二叉树",-1),rq=t("td",{style:{"text-align":"center"}},"🟠",-1),dq={style:{"text-align":"center"}},_q={href:"https://leetcode.cn/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},cq={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},aq=t("td",{style:{"text-align":"center"}},"1609",-1),iq=t("td",{style:{"text-align":"left"}},"奇偶树",-1),hq=t("td",{style:{"text-align":"center"}},null,-1),fq={style:{"text-align":"left"}},gq=t("code",null,"树",-1),uq=t("code",null,"广度优先搜索",-1),mq=t("code",null,"二叉树",-1),pq=t("td",{style:{"text-align":"center"}},"🟠",-1),yq={style:{"text-align":"center"}},xq={href:"https://leetcode.cn/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},bq={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},kq=t("td",{style:{"text-align":"center"}},"1612",-1),vq=t("td",{style:{"text-align":"left"}},"检查两棵二叉表达式树是否等价 🔒",-1),wq=t("td",{style:{"text-align":"center"}},null,-1),Iq={style:{"text-align":"left"}},zq=t("code",null,"树",-1),qq=t("code",null,"深度优先搜索",-1),jq=t("code",null,"哈希表",-1),Oq=t("code",null,"2+",-1),Nq=t("td",{style:{"text-align":"center"}},"🟠",-1),Lq={style:{"text-align":"center"}},Cq={href:"https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},Kq={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},Pq=t("td",{style:{"text-align":"center"}},"1617",-1),Bq=t("td",{style:{"text-align":"left"}},"统计子树中城市之间最大距离",-1),Vq=t("td",{style:{"text-align":"center"}},null,-1),Tq={style:{"text-align":"left"}},Uq=t("code",null,"位运算",-1),Eq=t("code",null,"树",-1),Rq=t("code",null,"动态规划",-1),Wq=t("code",null,"2+",-1),Gq=t("td",{style:{"text-align":"center"}},"🔴",-1),Sq={style:{"text-align":"center"}},Yq={href:"https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},Dq={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},Qq=t("td",{style:{"text-align":"center"}},"1628",-1),Fq=t("td",{style:{"text-align":"left"}},"设计带解析函数的表达式树 🔒",-1),Mq=t("td",{style:{"text-align":"center"}},null,-1),Zq={style:{"text-align":"left"}},Aq=t("code",null,"栈",-1),Hq=t("code",null,"树",-1),Jq=t("code",null,"设计",-1),Xq=t("code",null,"3+",-1),$q=t("td",{style:{"text-align":"center"}},"🟠",-1),tj={style:{"text-align":"center"}},ej={href:"https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},oj={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},lj=t("td",{style:{"text-align":"center"}},"1644",-1),nj=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 II 🔒",-1),sj=t("td",{style:{"text-align":"center"}},null,-1),rj={style:{"text-align":"left"}},dj=t("code",null,"树",-1),_j=t("code",null,"深度优先搜索",-1),cj=t("code",null,"二叉树",-1),aj=t("td",{style:{"text-align":"center"}},"🟠",-1),ij={style:{"text-align":"center"}},hj={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},fj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},gj=t("td",{style:{"text-align":"center"}},"1650",-1),uj=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 III 🔒",-1),mj=t("td",{style:{"text-align":"center"}},null,-1),pj={style:{"text-align":"left"}},yj=t("code",null,"树",-1),xj=t("code",null,"哈希表",-1),bj=t("code",null,"双指针",-1),kj=t("code",null,"1+",-1),vj=t("td",{style:{"text-align":"center"}},"🟠",-1),wj={style:{"text-align":"center"}},Ij={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},zj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},qj=t("td",{style:{"text-align":"center"}},"1660",-1),jj=t("td",{style:{"text-align":"left"}},"纠正二叉树 🔒",-1),Oj=t("td",{style:{"text-align":"center"}},null,-1),Nj={style:{"text-align":"left"}},Lj=t("code",null,"树",-1),Cj=t("code",null,"深度优先搜索",-1),Kj=t("code",null,"广度优先搜索",-1),Pj=t("code",null,"2+",-1),Bj=t("td",{style:{"text-align":"center"}},"🟠",-1),Vj={style:{"text-align":"center"}},Tj={href:"https://leetcode.cn/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Uj={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},"1666",-1),Rj=t("td",{style:{"text-align":"left"}},"改变二叉树的根节点 🔒",-1),Wj=t("td",{style:{"text-align":"center"}},null,-1),Gj={style:{"text-align":"left"}},Sj=t("code",null,"树",-1),Yj=t("code",null,"深度优先搜索",-1),Dj=t("code",null,"二叉树",-1),Qj=t("td",{style:{"text-align":"center"}},"🟠",-1),Fj={style:{"text-align":"center"}},Mj={href:"https://leetcode.cn/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zj={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Aj=t("td",{style:{"text-align":"center"}},"1676",-1),Hj=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 IV 🔒",-1),Jj=t("td",{style:{"text-align":"center"}},null,-1),Xj={style:{"text-align":"left"}},$j=t("code",null,"树",-1),tO=t("code",null,"深度优先搜索",-1),eO=t("code",null,"哈希表",-1),oO=t("code",null,"1+",-1),lO=t("td",{style:{"text-align":"center"}},"🟠",-1),nO={style:{"text-align":"center"}},sO={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},rO={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},dO=t("td",{style:{"text-align":"center"}},"1719",-1),_O=t("td",{style:{"text-align":"left"}},"重构一棵树的方案数",-1),cO=t("td",{style:{"text-align":"center"}},null,-1),aO={style:{"text-align":"left"}},iO=t("code",null,"树",-1),hO=t("code",null,"图",-1),fO=t("td",{style:{"text-align":"center"}},"🔴",-1),gO={style:{"text-align":"center"}},uO={href:"https://leetcode.cn/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},mO={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},pO=t("td",{style:{"text-align":"center"}},"1740",-1),yO=t("td",{style:{"text-align":"left"}},"找到二叉树中的距离 🔒",-1),xO=t("td",{style:{"text-align":"center"}},null,-1),bO={style:{"text-align":"left"}},kO=t("code",null,"树",-1),vO=t("code",null,"深度优先搜索",-1),wO=t("code",null,"广度优先搜索",-1),IO=t("code",null,"2+",-1),zO=t("td",{style:{"text-align":"center"}},"🟠",-1),qO={style:{"text-align":"center"}},jO={href:"https://leetcode.cn/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},OO={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},"1766",-1),LO=t("td",{style:{"text-align":"left"}},"互质树",-1),CO=t("td",{style:{"text-align":"center"}},null,-1),KO={style:{"text-align":"left"}},PO=t("code",null,"树",-1),BO=t("code",null,"深度优先搜索",-1),VO=t("code",null,"数组",-1),TO=t("code",null,"2+",-1),UO=t("td",{style:{"text-align":"center"}},"🔴",-1),EO={style:{"text-align":"center"}},RO={href:"https://leetcode.cn/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},WO={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},GO=t("td",{style:{"text-align":"center"}},"1902",-1),SO=t("td",{style:{"text-align":"left"}},"给定二叉搜索树的插入顺序求深度 🔒",-1),YO=t("td",{style:{"text-align":"center"}},null,-1),DO={style:{"text-align":"left"}},QO=t("code",null,"树",-1),FO=t("code",null,"二叉搜索树",-1),MO=t("code",null,"数组",-1),ZO=t("code",null,"2+",-1),AO=t("td",{style:{"text-align":"center"}},"🟠",-1),HO={style:{"text-align":"center"}},JO={href:"https://leetcode.cn/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},XO={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},$O=t("td",{style:{"text-align":"center"}},"1916",-1),tN=t("td",{style:{"text-align":"left"}},"统计为蚁群构筑房间的不同顺序",-1),eN=t("td",{style:{"text-align":"center"}},null,-1),oN={style:{"text-align":"left"}},lN=t("code",null,"树",-1),nN=t("code",null,"图",-1),sN=t("code",null,"拓扑排序",-1),rN=t("code",null,"3+",-1),dN=t("td",{style:{"text-align":"center"}},"🔴",-1),_N={style:{"text-align":"center"}},cN={href:"https://leetcode.cn/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},aN={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},iN=t("td",{style:{"text-align":"center"}},"1932",-1),hN=t("td",{style:{"text-align":"left"}},"合并多棵二叉搜索树",-1),fN=t("td",{style:{"text-align":"center"}},null,-1),gN={style:{"text-align":"left"}},uN=t("code",null,"树",-1),mN=t("code",null,"深度优先搜索",-1),pN=t("code",null,"哈希表",-1),yN=t("code",null,"2+",-1),xN=t("td",{style:{"text-align":"center"}},"🔴",-1),bN={style:{"text-align":"center"}},kN={href:"https://leetcode.cn/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},vN={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},wN=t("td",{style:{"text-align":"center"}},"1973",-1),IN=t("td",{style:{"text-align":"left"}},"值等于子节点值之和的节点数量 🔒",-1),zN=t("td",{style:{"text-align":"center"}},null,-1),qN={style:{"text-align":"left"}},jN=t("code",null,"树",-1),ON=t("code",null,"深度优先搜索",-1),NN=t("code",null,"二叉树",-1),LN=t("td",{style:{"text-align":"center"}},"🟠",-1),CN={style:{"text-align":"center"}},KN={href:"https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},PN={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},BN=t("td",{style:{"text-align":"center"}},"1993",-1),VN=t("td",{style:{"text-align":"left"}},"树上的操作",-1),TN=t("td",{style:{"text-align":"center"}},null,-1),UN={style:{"text-align":"left"}},EN=t("code",null,"树",-1),RN=t("code",null,"深度优先搜索",-1),WN=t("code",null,"广度优先搜索",-1),GN=t("code",null,"3+",-1),SN=t("td",{style:{"text-align":"center"}},"🟠",-1),YN={style:{"text-align":"center"}},DN={href:"https://leetcode.cn/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},QN={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},FN=t("td",{style:{"text-align":"center"}},"2003",-1),MN=t("td",{style:{"text-align":"left"}},"每棵子树内缺失的最小基因值",-1),ZN=t("td",{style:{"text-align":"center"}},null,-1),AN={style:{"text-align":"left"}},HN=t("code",null,"树",-1),JN=t("code",null,"深度优先搜索",-1),XN=t("code",null,"并查集",-1),$N=t("code",null,"1+",-1),tL=t("td",{style:{"text-align":"center"}},"🔴",-1),eL={style:{"text-align":"center"}},oL={href:"https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},lL={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},nL=t("td",{style:{"text-align":"center"}},"2005",-1),sL=t("td",{style:{"text-align":"left"}},"斐波那契树的移除子树游戏 🔒",-1),rL=t("td",{style:{"text-align":"center"}},null,-1),dL={style:{"text-align":"left"}},_L=t("code",null,"树",-1),cL=t("code",null,"数学",-1),aL=t("code",null,"动态规划",-1),iL=t("code",null,"2+",-1),hL=t("td",{style:{"text-align":"center"}},"🔴",-1),fL={style:{"text-align":"center"}},gL={href:"https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},uL={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},mL=t("td",{style:{"text-align":"center"}},"2049",-1),pL=t("td",{style:{"text-align":"left"}},"统计最高分的节点数目",-1),yL=t("td",{style:{"text-align":"center"}},null,-1),xL={style:{"text-align":"left"}},bL=t("code",null,"树",-1),kL=t("code",null,"深度优先搜索",-1),vL=t("code",null,"数组",-1),wL=t("code",null,"1+",-1),IL=t("td",{style:{"text-align":"center"}},"🟠",-1),zL={style:{"text-align":"center"}},qL={href:"https://leetcode.cn/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},jL={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},OL=t("td",{style:{"text-align":"center"}},"2096",-1),NL=t("td",{style:{"text-align":"left"}},"从二叉树一个节点到另一个节点每一步的方向",-1),LL=t("td",{style:{"text-align":"center"}},null,-1),CL={style:{"text-align":"left"}},KL=t("code",null,"树",-1),PL=t("code",null,"深度优先搜索",-1),BL=t("code",null,"字符串",-1),VL=t("code",null,"1+",-1),TL=t("td",{style:{"text-align":"center"}},"🟠",-1),UL={style:{"text-align":"center"}},EL={href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},RL={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},WL=t("td",{style:{"text-align":"center"}},"2196",-1),GL=t("td",{style:{"text-align":"left"}},"根据描述创建二叉树",-1),SL={style:{"text-align":"center"}},YL={style:{"text-align":"left"}},DL=t("code",null,"树",-1),QL=t("code",null,"数组",-1),FL=t("code",null,"哈希表",-1),ML=t("code",null,"1+",-1),ZL=t("td",{style:{"text-align":"center"}},"🟠",-1),AL={style:{"text-align":"center"}},HL={href:"https://leetcode.cn/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},JL={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},XL=t("td",{style:{"text-align":"center"}},"2236",-1),$L=t("td",{style:{"text-align":"left"}},"判断根结点是否等于子结点之和",-1),tC={style:{"text-align":"center"}},eC={style:{"text-align":"left"}},oC=t("code",null,"树",-1),lC=t("code",null,"二叉树",-1),nC=t("td",{style:{"text-align":"center"}},"🟢",-1),sC={style:{"text-align":"center"}},rC={href:"https://leetcode.cn/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},dC={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},_C=t("td",{style:{"text-align":"center"}},"2246",-1),cC=t("td",{style:{"text-align":"left"}},"相邻字符不同的最长路径",-1),aC=t("td",{style:{"text-align":"center"}},null,-1),iC={style:{"text-align":"left"}},hC=t("code",null,"树",-1),fC=t("code",null,"深度优先搜索",-1),gC=t("code",null,"图",-1),uC=t("code",null,"3+",-1),mC=t("td",{style:{"text-align":"center"}},"🔴",-1),pC={style:{"text-align":"center"}},yC={href:"https://leetcode.cn/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},xC={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},bC=t("td",{style:{"text-align":"center"}},"2265",-1),kC=t("td",{style:{"text-align":"left"}},"统计值等于子树平均值的节点数",-1),vC=t("td",{style:{"text-align":"center"}},null,-1),wC={style:{"text-align":"left"}},IC=t("code",null,"树",-1),zC=t("code",null,"深度优先搜索",-1),qC=t("code",null,"二叉树",-1),jC=t("td",{style:{"text-align":"center"}},"🟠",-1),OC={style:{"text-align":"center"}},NC={href:"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},LC={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},CC=t("td",{style:{"text-align":"center"}},"2277",-1),KC=t("td",{style:{"text-align":"left"}},"树中最接近路径的节点 🔒",-1),PC=t("td",{style:{"text-align":"center"}},null,-1),BC={style:{"text-align":"left"}},VC=t("code",null,"树",-1),TC=t("code",null,"深度优先搜索",-1),UC=t("code",null,"广度优先搜索",-1),EC=t("code",null,"1+",-1),RC=t("td",{style:{"text-align":"center"}},"🔴",-1),WC={style:{"text-align":"center"}},GC={href:"https://leetcode.cn/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},SC={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},YC=t("td",{style:{"text-align":"center"}},"2313",-1),DC=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),QC=t("td",{style:{"text-align":"center"}},null,-1),FC={style:{"text-align":"left"}},MC=t("code",null,"树",-1),ZC=t("code",null,"深度优先搜索",-1),AC=t("code",null,"动态规划",-1),HC=t("code",null,"1+",-1),JC=t("td",{style:{"text-align":"center"}},"🔴",-1),XC={style:{"text-align":"center"}},$C={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},tK={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},eK=t("td",{style:{"text-align":"center"}},"2322",-1),oK=t("td",{style:{"text-align":"left"}},"从树中删除边的最小分数",-1),lK=t("td",{style:{"text-align":"center"}},null,-1),nK={style:{"text-align":"left"}},sK=t("code",null,"位运算",-1),rK=t("code",null,"树",-1),dK=t("code",null,"深度优先搜索",-1),_K=t("code",null,"1+",-1),cK=t("td",{style:{"text-align":"center"}},"🔴",-1),aK={style:{"text-align":"center"}},iK={href:"https://leetcode.cn/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},hK={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},fK=t("td",{style:{"text-align":"center"}},"2331",-1),gK=t("td",{style:{"text-align":"left"}},"计算布尔二叉树的值",-1),uK={style:{"text-align":"center"}},mK={style:{"text-align":"left"}},pK=t("code",null,"树",-1),yK=t("code",null,"深度优先搜索",-1),xK=t("code",null,"二叉树",-1),bK=t("td",{style:{"text-align":"center"}},"🟢",-1),kK={style:{"text-align":"center"}},vK={href:"https://leetcode.cn/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},wK={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},IK=t("td",{style:{"text-align":"center"}},"2368",-1),zK=t("td",{style:{"text-align":"left"}},"受限条件下可到达节点的数目",-1),qK=t("td",{style:{"text-align":"center"}},null,-1),jK={style:{"text-align":"left"}},OK=t("code",null,"树",-1),NK=t("code",null,"深度优先搜索",-1),LK=t("code",null,"广度优先搜索",-1),CK=t("code",null,"4+",-1),KK=t("td",{style:{"text-align":"center"}},"🟠",-1),PK={style:{"text-align":"center"}},BK={href:"https://leetcode.cn/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},VK={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},TK=t("td",{style:{"text-align":"center"}},"2378",-1),UK=t("td",{style:{"text-align":"left"}},"选择边来最大化树的得分 🔒",-1),EK=t("td",{style:{"text-align":"center"}},null,-1),RK={style:{"text-align":"left"}},WK=t("code",null,"树",-1),GK=t("code",null,"深度优先搜索",-1),SK=t("code",null,"动态规划",-1),YK=t("td",{style:{"text-align":"center"}},"🟠",-1),DK={style:{"text-align":"center"}},QK={href:"https://leetcode.cn/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},FK={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},MK=t("td",{style:{"text-align":"center"}},"2385",-1),ZK=t("td",{style:{"text-align":"left"}},"感染二叉树需要的总时间",-1),AK=t("td",{style:{"text-align":"center"}},null,-1),HK={style:{"text-align":"left"}},JK=t("code",null,"树",-1),XK=t("code",null,"深度优先搜索",-1),$K=t("code",null,"广度优先搜索",-1),tP=t("code",null,"2+",-1),eP=t("td",{style:{"text-align":"center"}},"🟠",-1),oP={style:{"text-align":"center"}},lP={href:"https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},nP={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},sP=t("td",{style:{"text-align":"center"}},"2415",-1),rP=t("td",{style:{"text-align":"left"}},"反转二叉树的奇数层",-1),dP={style:{"text-align":"center"}},_P={style:{"text-align":"left"}},cP=t("code",null,"树",-1),aP=t("code",null,"深度优先搜索",-1),iP=t("code",null,"广度优先搜索",-1),hP=t("code",null,"1+",-1),fP=t("td",{style:{"text-align":"center"}},"🟠",-1),gP={style:{"text-align":"center"}},uP={href:"https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},mP={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},pP=t("td",{style:{"text-align":"center"}},"2421",-1),yP=t("td",{style:{"text-align":"left"}},"好路径的数目",-1),xP=t("td",{style:{"text-align":"center"}},null,-1),bP={style:{"text-align":"left"}},kP=t("code",null,"树",-1),vP=t("code",null,"并查集",-1),wP=t("code",null,"图",-1),IP=t("code",null,"3+",-1),zP=t("td",{style:{"text-align":"center"}},"🔴",-1),qP={style:{"text-align":"center"}},jP={href:"https://leetcode.cn/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},OP={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},NP=t("td",{style:{"text-align":"center"}},"2440",-1),LP=t("td",{style:{"text-align":"left"}},"创建价值相同的连通块",-1),CP=t("td",{style:{"text-align":"center"}},null,-1),KP={style:{"text-align":"left"}},PP=t("code",null,"树",-1),BP=t("code",null,"深度优先搜索",-1),VP=t("code",null,"数组",-1),TP=t("code",null,"2+",-1),UP=t("td",{style:{"text-align":"center"}},"🔴",-1),EP={style:{"text-align":"center"}},RP={href:"https://leetcode.cn/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},WP={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},GP=t("td",{style:{"text-align":"center"}},"2445",-1),SP=t("td",{style:{"text-align":"left"}},"值为 1 的节点数 🔒",-1),YP=t("td",{style:{"text-align":"center"}},null,-1),DP={style:{"text-align":"left"}},QP=t("code",null,"树",-1),FP=t("code",null,"深度优先搜索",-1),MP=t("code",null,"广度优先搜索",-1),ZP=t("code",null,"1+",-1),AP=t("td",{style:{"text-align":"center"}},"🟠",-1),HP={style:{"text-align":"center"}},JP={href:"https://leetcode.cn/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},XP={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},$P=t("td",{style:{"text-align":"center"}},"2458",-1),tB=t("td",{style:{"text-align":"left"}},"移除子树后的二叉树高度",-1),eB={style:{"text-align":"center"}},oB={style:{"text-align":"left"}},lB=t("code",null,"树",-1),nB=t("code",null,"深度优先搜索",-1),sB=t("code",null,"广度优先搜索",-1),rB=t("code",null,"2+",-1),dB=t("td",{style:{"text-align":"center"}},"🔴",-1),_B={style:{"text-align":"center"}},cB={href:"https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},aB={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},"2467",-1),hB=t("td",{style:{"text-align":"left"}},"树上最大得分和路径",-1),fB={style:{"text-align":"center"}},gB={style:{"text-align":"left"}},uB=t("code",null,"树",-1),mB=t("code",null,"深度优先搜索",-1),pB=t("code",null,"广度优先搜索",-1),yB=t("code",null,"2+",-1),xB=t("td",{style:{"text-align":"center"}},"🟠",-1),bB={style:{"text-align":"center"}},kB={href:"https://leetcode.cn/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},vB={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},wB=t("td",{style:{"text-align":"center"}},"2471",-1),IB=t("td",{style:{"text-align":"left"}},"逐层排序二叉树所需的最少操作数目",-1),zB={style:{"text-align":"center"}},qB={style:{"text-align":"left"}},jB=t("code",null,"树",-1),OB=t("code",null,"广度优先搜索",-1),NB=t("code",null,"二叉树",-1),LB=t("td",{style:{"text-align":"center"}},"🟠",-1),CB={style:{"text-align":"center"}},KB={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},PB={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},BB=t("td",{style:{"text-align":"center"}},"2476",-1),VB=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),TB=t("td",{style:{"text-align":"center"}},null,-1),UB={style:{"text-align":"left"}},EB=t("code",null,"树",-1),RB=t("code",null,"深度优先搜索",-1),WB=t("code",null,"二叉搜索树",-1),GB=t("code",null,"3+",-1),SB=t("td",{style:{"text-align":"center"}},"🟠",-1),YB={style:{"text-align":"center"}},DB={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},QB={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},FB=t("td",{style:{"text-align":"center"}},"2477",-1),MB=t("td",{style:{"text-align":"left"}},"到达首都的最少油耗",-1),ZB=t("td",{style:{"text-align":"center"}},null,-1),AB={style:{"text-align":"left"}},HB=t("code",null,"树",-1),JB=t("code",null,"深度优先搜索",-1),XB=t("code",null,"广度优先搜索",-1),$B=t("code",null,"1+",-1),tV=t("td",{style:{"text-align":"center"}},"🟠",-1),eV={style:{"text-align":"center"}},oV={href:"https://leetcode.cn/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},lV={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},nV=t("td",{style:{"text-align":"center"}},"2479",-1),sV=t("td",{style:{"text-align":"left"}},"两个不重叠子树的最大异或值 🔒",-1),rV=t("td",{style:{"text-align":"center"}},null,-1),dV={style:{"text-align":"left"}},_V=t("code",null,"树",-1),cV=t("code",null,"深度优先搜索",-1),aV=t("code",null,"图",-1),iV=t("code",null,"1+",-1),hV=t("td",{style:{"text-align":"center"}},"🔴",-1),fV={style:{"text-align":"center"}},gV={href:"https://leetcode.cn/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},uV={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},mV=t("td",{style:{"text-align":"center"}},"2509",-1),pV=t("td",{style:{"text-align":"left"}},"查询树中环的长度",-1),yV=t("td",{style:{"text-align":"center"}},null,-1),xV={style:{"text-align":"left"}},bV=t("code",null,"树",-1),kV=t("code",null,"数组",-1),vV=t("code",null,"二叉树",-1),wV=t("td",{style:{"text-align":"center"}},"🔴",-1),IV={style:{"text-align":"center"}},zV={href:"https://leetcode.cn/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},qV={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},jV=t("td",{style:{"text-align":"center"}},"2538",-1),OV=t("td",{style:{"text-align":"left"}},"最大价值和与最小价值和的差值",-1),NV=t("td",{style:{"text-align":"center"}},null,-1),LV={style:{"text-align":"left"}},CV=t("code",null,"树",-1),KV=t("code",null,"深度优先搜索",-1),PV=t("code",null,"数组",-1),BV=t("code",null,"1+",-1),VV=t("td",{style:{"text-align":"center"}},"🔴",-1),TV={style:{"text-align":"center"}},UV={href:"https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},EV={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},RV=t("td",{style:{"text-align":"center"}},"2581",-1),WV=t("td",{style:{"text-align":"left"}},"统计可能的树根数目",-1),GV=t("td",{style:{"text-align":"center"}},null,-1),SV={style:{"text-align":"left"}},YV=t("code",null,"树",-1),DV=t("code",null,"深度优先搜索",-1),QV=t("code",null,"数组",-1),FV=t("code",null,"2+",-1),MV=t("td",{style:{"text-align":"center"}},"🔴",-1),ZV={style:{"text-align":"center"}},AV={href:"https://leetcode.cn/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},HV={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},JV=t("td",{style:{"text-align":"center"}},"2583",-1),XV=t("td",{style:{"text-align":"left"}},"二叉树中的第 K 大层和",-1),$V={style:{"text-align":"center"}},tT={style:{"text-align":"left"}},eT=t("code",null,"树",-1),oT=t("code",null,"广度优先搜索",-1),lT=t("code",null,"二叉树",-1),nT=t("code",null,"1+",-1),sT=t("td",{style:{"text-align":"center"}},"🟠",-1),rT={style:{"text-align":"center"}},dT={href:"https://leetcode.cn/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},_T={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},cT=t("td",{style:{"text-align":"center"}},"2603",-1),aT=t("td",{style:{"text-align":"left"}},"收集树中金币",-1),iT=t("td",{style:{"text-align":"center"}},null,-1),hT={style:{"text-align":"left"}},fT=t("code",null,"树",-1),gT=t("code",null,"图",-1),uT=t("code",null,"拓扑排序",-1),mT=t("code",null,"1+",-1),pT=t("td",{style:{"text-align":"center"}},"🔴",-1),yT={style:{"text-align":"center"}},xT={href:"https://leetcode.cn/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},bT={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},kT=t("td",{style:{"text-align":"center"}},"2641",-1),vT=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点 II",-1),wT={style:{"text-align":"center"}},IT={style:{"text-align":"left"}},zT=t("code",null,"树",-1),qT=t("code",null,"深度优先搜索",-1),jT=t("code",null,"广度优先搜索",-1),OT=t("code",null,"2+",-1),NT=t("td",{style:{"text-align":"center"}},"🟠",-1),LT={style:{"text-align":"center"}},CT={href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},KT={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},PT=t("td",{style:{"text-align":"center"}},"2646",-1),BT=t("td",{style:{"text-align":"left"}},"最小化旅行的价格总和",-1),VT=t("td",{style:{"text-align":"center"}},null,-1),TT={style:{"text-align":"left"}},UT=t("code",null,"树",-1),ET=t("code",null,"深度优先搜索",-1),RT=t("code",null,"图",-1),WT=t("code",null,"2+",-1),GT=t("td",{style:{"text-align":"center"}},"🔴",-1),ST={style:{"text-align":"center"}},YT={href:"https://leetcode.cn/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},DT={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},QT=t("td",{style:{"text-align":"center"}},"2673",-1),FT=t("td",{style:{"text-align":"left"}},"使二叉树所有路径值相等的最小代价",-1),MT=t("td",{style:{"text-align":"center"}},null,-1),ZT={style:{"text-align":"left"}},AT=t("code",null,"贪心",-1),HT=t("code",null,"树",-1),JT=t("code",null,"数组",-1),XT=t("code",null,"2+",-1),$T=t("td",{style:{"text-align":"center"}},"🟠",-1),tU={style:{"text-align":"center"}},eU={href:"https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},oU={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lU=t("td",{style:{"text-align":"center"}},"2689",-1),nU=t("td",{style:{"text-align":"left"}},"从 Rope 树中提取第 K 个字符 🔒",-1),sU=t("td",{style:{"text-align":"center"}},null,-1),rU={style:{"text-align":"left"}},dU=t("code",null,"树",-1),_U=t("code",null,"深度优先搜索",-1),cU=t("code",null,"二叉树",-1),aU=t("td",{style:{"text-align":"center"}},"🟢",-1),iU={style:{"text-align":"center"}},hU={href:"https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},fU={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},gU=t("td",{style:{"text-align":"center"}},"2764",-1),uU=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),mU=t("td",{style:{"text-align":"center"}},null,-1),pU={style:{"text-align":"left"}},yU=t("code",null,"栈",-1),xU=t("code",null,"树",-1),bU=t("code",null,"深度优先搜索",-1),kU=t("code",null,"1+",-1),vU=t("td",{style:{"text-align":"center"}},"🟠",-1),wU={style:{"text-align":"center"}},IU={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},zU={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},qU=t("td",{style:{"text-align":"center"}},"2773",-1),jU=t("td",{style:{"text-align":"left"}},"特殊二叉树的高度 🔒",-1),OU=t("td",{style:{"text-align":"center"}},null,-1),NU={style:{"text-align":"left"}},LU=t("code",null,"树",-1),CU=t("code",null,"深度优先搜索",-1),KU=t("code",null,"广度优先搜索",-1),PU=t("code",null,"1+",-1),BU=t("td",{style:{"text-align":"center"}},"🟠",-1),VU={style:{"text-align":"center"}},TU={href:"https://leetcode.cn/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},UU={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},EU=t("td",{style:{"text-align":"center"}},"2791",-1),RU=t("td",{style:{"text-align":"left"}},"树中可以形成回文的路径数",-1),WU=t("td",{style:{"text-align":"center"}},null,-1),GU={style:{"text-align":"left"}},SU=t("code",null,"位运算",-1),YU=t("code",null,"树",-1),DU=t("code",null,"深度优先搜索",-1),QU=t("code",null,"2+",-1),FU=t("td",{style:{"text-align":"center"}},"🔴",-1),MU={style:{"text-align":"center"}},ZU={href:"https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},AU={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},HU=t("td",{style:{"text-align":"center"}},"2792",-1),JU=t("td",{style:{"text-align":"left"}},"计算足够大的节点数 🔒",-1),XU=t("td",{style:{"text-align":"center"}},null,-1),$U={style:{"text-align":"left"}},tE=t("code",null,"树",-1),eE=t("code",null,"深度优先搜索",-1),oE=t("code",null,"分治",-1),lE=t("code",null,"1+",-1),nE=t("td",{style:{"text-align":"center"}},"🔴",-1),sE={style:{"text-align":"center"}},rE={href:"https://leetcode.cn/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},dE={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},_E=t("td",{style:{"text-align":"center"}},"2846",-1),cE=t("td",{style:{"text-align":"left"}},"边权重均等查询",-1),aE=t("td",{style:{"text-align":"center"}},null,-1),iE={style:{"text-align":"left"}},hE=t("code",null,"树",-1),fE=t("code",null,"图",-1),gE=t("code",null,"数组",-1),uE=t("code",null,"1+",-1),mE=t("td",{style:{"text-align":"center"}},"🔴",-1),pE={style:{"text-align":"center"}},yE={href:"https://leetcode.cn/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},xE={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},bE=t("td",{style:{"text-align":"center"}},"2867",-1),kE=t("td",{style:{"text-align":"left"}},"统计树中的合法路径数目",-1),vE=t("td",{style:{"text-align":"center"}},null,-1),wE={style:{"text-align":"left"}},IE=t("code",null,"树",-1),zE=t("code",null,"深度优先搜索",-1),qE=t("code",null,"数学",-1),jE=t("code",null,"2+",-1),OE=t("td",{style:{"text-align":"center"}},"🔴",-1),NE={style:{"text-align":"center"}},LE={href:"https://leetcode.cn/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},CE={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},KE=t("td",{style:{"text-align":"center"}},"2872",-1),PE=t("td",{style:{"text-align":"left"}},"可以被 K 整除连通块的最大数目",-1),BE={style:{"text-align":"center"}},VE={style:{"text-align":"left"}},TE=t("code",null,"树",-1),UE=t("code",null,"深度优先搜索",-1),EE=t("td",{style:{"text-align":"center"}},"🔴",-1),RE={style:{"text-align":"center"}},WE={href:"https://leetcode.cn/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},GE={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},"2920",-1),YE=t("td",{style:{"text-align":"left"}},"收集所有金币可获得的最大积分",-1),DE=t("td",{style:{"text-align":"center"}},null,-1),QE={style:{"text-align":"left"}},FE=t("code",null,"位运算",-1),ME=t("code",null,"树",-1),ZE=t("code",null,"深度优先搜索",-1),AE=t("code",null,"2+",-1),HE=t("td",{style:{"text-align":"center"}},"🔴",-1),JE={style:{"text-align":"center"}},XE={href:"https://leetcode.cn/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},$E={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},tR=t("td",{style:{"text-align":"center"}},"2925",-1),eR=t("td",{style:{"text-align":"left"}},"在树上执行操作以后得到的最大分数",-1),oR=t("td",{style:{"text-align":"center"}},null,-1),lR={style:{"text-align":"left"}},nR=t("code",null,"树",-1),sR=t("code",null,"深度优先搜索",-1),rR=t("code",null,"动态规划",-1),dR=t("td",{style:{"text-align":"center"}},"🟠",-1),_R={style:{"text-align":"center"}},cR={href:"https://leetcode.cn/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},aR={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},iR=t("td",{style:{"text-align":"center"}},"2973",-1),hR=t("td",{style:{"text-align":"left"}},"树中每个节点放置的金币数目",-1),fR=t("td",{style:{"text-align":"center"}},null,-1),gR={style:{"text-align":"left"}},uR=t("code",null,"树",-1),mR=t("code",null,"深度优先搜索",-1),pR=t("code",null,"动态规划",-1),yR=t("code",null,"2+",-1),xR=t("td",{style:{"text-align":"center"}},"🔴",-1),bR={style:{"text-align":"center"}},kR={href:"https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},vR={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},wR=t("td",{style:{"text-align":"center"}},"3004",-1),IR=t("td",{style:{"text-align":"left"}},"相同颜色的最大子树 🔒",-1),zR=t("td",{style:{"text-align":"center"}},null,-1),qR={style:{"text-align":"left"}},jR=t("code",null,"树",-1),OR=t("code",null,"深度优先搜索",-1),NR=t("code",null,"数组",-1),LR=t("code",null,"1+",-1),CR=t("td",{style:{"text-align":"center"}},"🟠",-1),KR={style:{"text-align":"center"}},PR={href:"https://leetcode.cn/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},BR={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},VR=t("td",{style:{"text-align":"center"}},"3067",-1),TR=t("td",{style:{"text-align":"left"}},"在带权树网络中统计可连接服务器对数目",-1),UR=t("td",{style:{"text-align":"center"}},null,-1),ER={style:{"text-align":"left"}},RR=t("code",null,"树",-1),WR=t("code",null,"深度优先搜索",-1),GR=t("code",null,"数组",-1),SR=t("td",{style:{"text-align":"center"}},"🟠",-1),YR={style:{"text-align":"center"}},DR={href:"https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},QR={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},FR=t("td",{style:{"text-align":"center"}},"3068",-1),MR=t("td",{style:{"text-align":"left"}},"最大节点价值之和",-1),ZR=t("td",{style:{"text-align":"center"}},null,-1),AR={style:{"text-align":"left"}},HR=t("code",null,"贪心",-1),JR=t("code",null,"位运算",-1),XR=t("code",null,"树",-1),$R=t("code",null,"3+",-1),tW=t("td",{style:{"text-align":"center"}},"🔴",-1),eW={style:{"text-align":"center"}},oW={href:"https://leetcode.cn/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},lW={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},nW=t("td",{style:{"text-align":"center"}},"3157",-1),sW=t("td",{style:{"text-align":"left"}},"找到具有最小和的树的层数 🔒",-1),rW=t("td",{style:{"text-align":"center"}},null,-1),dW={style:{"text-align":"left"}},_W=t("code",null,"树",-1),cW=t("code",null,"深度优先搜索",-1),aW=t("code",null,"广度优先搜索",-1),iW=t("code",null,"1+",-1),hW=t("td",{style:{"text-align":"center"}},"🟠",-1),fW={style:{"text-align":"center"}},gW={href:"https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},uW={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},mW=t("td",{style:{"text-align":"center"}},"3203",-1),pW=t("td",{style:{"text-align":"left"}},"合并两棵树后的最小直径",-1),yW={style:{"text-align":"center"}},xW={style:{"text-align":"left"}},bW=t("code",null,"树",-1),kW=t("code",null,"深度优先搜索",-1),vW=t("code",null,"广度优先搜索",-1),wW=t("code",null,"1+",-1),IW=t("td",{style:{"text-align":"center"}},"🔴",-1),zW={style:{"text-align":"center"}},qW={href:"https://leetcode.cn/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},jW={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},OW=t("td",{style:{"text-align":"center"}},"3241",-1),NW=t("td",{style:{"text-align":"left"}},"标记所有节点需要的时间",-1),LW=t("td",{style:{"text-align":"center"}},null,-1),CW={style:{"text-align":"left"}},KW=t("code",null,"树",-1),PW=t("code",null,"深度优先搜索",-1),BW=t("code",null,"图",-1),VW=t("code",null,"1+",-1),TW=t("td",{style:{"text-align":"center"}},"🔴",-1),UW={style:{"text-align":"center"}},EW={href:"https://leetcode.cn/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},RW={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},WW=t("td",{style:{"text-align":"center"}},"3249",-1),GW=t("td",{style:{"text-align":"left"}},"统计好节点的数目",-1),SW=t("td",{style:{"text-align":"center"}},null,-1),YW={style:{"text-align":"left"}},DW=t("code",null,"树",-1),QW=t("code",null,"深度优先搜索",-1),FW=t("td",{style:{"text-align":"center"}},"🟠",-1),MW={style:{"text-align":"center"}},ZW={href:"https://leetcode.cn/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},AW={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},HW=t("td",{style:{"text-align":"center"}},"3313",-1),JW=t("td",{style:{"text-align":"left"}},"查找树中最后标记的节点 🔒",-1),XW=t("td",{style:{"text-align":"center"}},null,-1),$W={style:{"text-align":"left"}},tG=t("code",null,"树",-1),eG=t("code",null,"深度优先搜索",-1),oG=t("td",{style:{"text-align":"center"}},"🔴",-1),lG={style:{"text-align":"center"}},nG={href:"https://leetcode.cn/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},sG={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},rG=t("td",{style:{"text-align":"center"}},"3319",-1),dG=t("td",{style:{"text-align":"left"}},"第 K 大的完美二叉子树的大小",-1),_G={style:{"text-align":"center"}},cG={style:{"text-align":"left"}},aG=t("code",null,"树",-1),iG=t("code",null,"深度优先搜索",-1),hG=t("code",null,"二叉树",-1),fG=t("code",null,"1+",-1),gG=t("td",{style:{"text-align":"center"}},"🟠",-1),uG={style:{"text-align":"center"}},mG={href:"https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},pG={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},yG=t("td",{style:{"text-align":"center"}},"3327",-1),xG=t("td",{style:{"text-align":"left"}},"判断 DFS 字符串是否是回文串",-1),bG=t("td",{style:{"text-align":"center"}},null,-1),kG={style:{"text-align":"left"}},vG=t("code",null,"树",-1),wG=t("code",null,"深度优先搜索",-1),IG=t("code",null,"数组",-1),zG=t("code",null,"3+",-1),qG=t("td",{style:{"text-align":"center"}},"🔴",-1),jG={style:{"text-align":"center"}},OG={href:"https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},NG={href:"https://leetcode.com/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},LG=t("td",{style:{"text-align":"center"}},"3367",-1),CG=t("td",{style:{"text-align":"left"}},"移除边之后的权重最大和",-1),KG=t("td",{style:{"text-align":"center"}},null,-1),PG={style:{"text-align":"left"}},BG=t("code",null,"树",-1),VG=t("code",null,"深度优先搜索",-1),TG=t("code",null,"动态规划",-1),UG=t("td",{style:{"text-align":"center"}},"🔴",-1),EG={style:{"text-align":"center"}},RG={href:"https://leetcode.cn/problems/maximize-sum-of-weights-after-edge-removals",target:"_blank",rel:"noopener noreferrer"},WG={href:"https://leetcode.com/problems/maximize-sum-of-weights-after-edge-removals",target:"_blank",rel:"noopener noreferrer"},GG=t("td",{style:{"text-align":"center"}},"3372",-1),SG=t("td",{style:{"text-align":"left"}},"连接两棵树后最大目标节点数目 I",-1),YG=t("td",{style:{"text-align":"center"}},null,-1),DG={style:{"text-align":"left"}},QG=t("code",null,"树",-1),FG=t("code",null,"深度优先搜索",-1),MG=t("code",null,"广度优先搜索",-1),ZG=t("td",{style:{"text-align":"center"}},"🟠",-1),AG={style:{"text-align":"center"}},HG={href:"https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i",target:"_blank",rel:"noopener noreferrer"},JG={href:"https://leetcode.com/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i",target:"_blank",rel:"noopener noreferrer"},XG=t("td",{style:{"text-align":"center"}},"3373",-1),$G=t("td",{style:{"text-align":"left"}},"连接两棵树后最大目标节点数目 II",-1),tS=t("td",{style:{"text-align":"center"}},null,-1),eS={style:{"text-align":"left"}},oS=t("code",null,"树",-1),lS=t("code",null,"深度优先搜索",-1),nS=t("code",null,"广度优先搜索",-1),sS=t("td",{style:{"text-align":"center"}},"🔴",-1),rS={style:{"text-align":"center"}},dS={href:"https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-ii",target:"_blank",rel:"noopener noreferrer"},_S={href:"https://leetcode.com/problems/maximize-the-number-of-target-nodes-after-connecting-trees-ii",target:"_blank",rel:"noopener noreferrer"},cS=t("td",{style:{"text-align":"center"}},"3425",-1),aS=t("td",{style:{"text-align":"left"}},"最长特殊路径",-1),iS=t("td",{style:{"text-align":"center"}},null,-1),hS={style:{"text-align":"left"}},fS=t("code",null,"树",-1),gS=t("code",null,"深度优先搜索",-1),uS=t("code",null,"数组",-1),mS=t("code",null,"2+",-1),pS=t("td",{style:{"text-align":"center"}},"🔴",-1),yS={style:{"text-align":"center"}},xS={href:"https://leetcode.cn/problems/longest-special-path",target:"_blank",rel:"noopener noreferrer"},bS={href:"https://leetcode.com/problems/longest-special-path",target:"_blank",rel:"noopener noreferrer"},kS=t("td",{style:{"text-align":"center"}},"LCP 10",-1),vS=t("td",{style:{"text-align":"left"}},"二叉树任务调度",-1),wS=t("td",{style:{"text-align":"center"}},null,-1),IS={style:{"text-align":"left"}},zS=t("code",null,"树",-1),qS=t("code",null,"深度优先搜索",-1),jS=t("code",null,"动态规划",-1),OS=t("code",null,"1+",-1),NS=t("td",{style:{"text-align":"center"}},"🔴",-1),LS={style:{"text-align":"center"}},CS={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},KS=t("td",{style:{"text-align":"center"}},"LCP 26",-1),PS=t("td",{style:{"text-align":"left"}},"导航装置",-1),BS=t("td",{style:{"text-align":"center"}},null,-1),VS={style:{"text-align":"left"}},TS=t("code",null,"树",-1),US=t("code",null,"动态规划",-1),ES=t("code",null,"二叉树",-1),RS=t("td",{style:{"text-align":"center"}},"🔴",-1),WS={style:{"text-align":"center"}},GS={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},SS=t("td",{style:{"text-align":"center"}},"LCP 34",-1),YS=t("td",{style:{"text-align":"left"}},"二叉树染色",-1),DS=t("td",{style:{"text-align":"center"}},null,-1),QS={style:{"text-align":"left"}},FS=t("code",null,"树",-1),MS=t("code",null,"动态规划",-1),ZS=t("code",null,"二叉树",-1),AS=t("td",{style:{"text-align":"center"}},"🟠",-1),HS={style:{"text-align":"center"}},JS={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},XS=t("td",{style:{"text-align":"center"}},"LCP 44",-1),$S=t("td",{style:{"text-align":"left"}},"开幕式焰火",-1),tY=t("td",{style:{"text-align":"center"}},null,-1),eY={style:{"text-align":"left"}},oY=t("code",null,"树",-1),lY=t("code",null,"深度优先搜索",-1),nY=t("code",null,"广度优先搜索",-1),sY=t("code",null,"2+",-1),rY=t("td",{style:{"text-align":"center"}},"🟢",-1),dY={style:{"text-align":"center"}},_Y={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},cY=t("td",{style:{"text-align":"center"}},"LCP 52",-1),aY=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),iY=t("td",{style:{"text-align":"center"}},null,-1),hY={style:{"text-align":"left"}},fY=t("code",null,"树",-1),gY=t("code",null,"线段树",-1),uY=t("code",null,"二叉搜索树",-1),mY=t("code",null,"4+",-1),pY=t("td",{style:{"text-align":"center"}},"🟠",-1),yY={style:{"text-align":"center"}},xY={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},bY=t("td",{style:{"text-align":"center"}},"LCP 60",-1),kY=t("td",{style:{"text-align":"left"}},"力扣泡泡龙",-1),vY=t("td",{style:{"text-align":"center"}},null,-1),wY={style:{"text-align":"left"}},IY=t("code",null,"树",-1),zY=t("code",null,"动态规划",-1),qY=t("code",null,"二叉树",-1),jY=t("td",{style:{"text-align":"center"}},"🔴",-1),OY={style:{"text-align":"center"}},NY={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},LY=t("td",{style:{"text-align":"center"}},"LCP 64",-1),CY=t("td",{style:{"text-align":"left"}},"二叉树灯饰",-1),KY=t("td",{style:{"text-align":"center"}},null,-1),PY={style:{"text-align":"left"}},BY=t("code",null,"树",-1),VY=t("code",null,"深度优先搜索",-1),TY=t("code",null,"动态规划",-1),UY=t("code",null,"1+",-1),EY=t("td",{style:{"text-align":"center"}},"🟠",-1),RY={style:{"text-align":"center"}},WY={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},GY=t("td",{style:{"text-align":"center"}},"LCP 67",-1),SY=t("td",{style:{"text-align":"left"}},"装饰树",-1),YY=t("td",{style:{"text-align":"center"}},null,-1),DY={style:{"text-align":"left"}},QY=t("code",null,"树",-1),FY=t("code",null,"深度优先搜索",-1),MY=t("code",null,"广度优先搜索",-1),ZY=t("code",null,"1+",-1),AY=t("td",{style:{"text-align":"center"}},"🟠",-1),HY={style:{"text-align":"center"}},JY={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},XY=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),$Y=t("td",{style:{"text-align":"left"}},"树的子结构",-1),tD={style:{"text-align":"center"}},eD={style:{"text-align":"left"}},oD=t("code",null,"树",-1),lD=t("code",null,"深度优先搜索",-1),nD=t("code",null,"二叉树",-1),sD=t("td",{style:{"text-align":"center"}},"🟠",-1),rD={style:{"text-align":"center"}},dD={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},_D=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),cD=t("td",{style:{"text-align":"left"}},"二叉树的镜像",-1),aD={style:{"text-align":"center"}},iD={style:{"text-align":"left"}},hD=t("code",null,"树",-1),fD=t("code",null,"深度优先搜索",-1),gD=t("code",null,"广度优先搜索",-1),uD=t("code",null,"1+",-1),mD=t("td",{style:{"text-align":"center"}},"🟢",-1),pD={style:{"text-align":"center"}},yD={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},xD=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),bD=t("td",{style:{"text-align":"left"}},"对称的二叉树",-1),kD={style:{"text-align":"center"}},vD={style:{"text-align":"left"}},wD=t("code",null,"树",-1),ID=t("code",null,"深度优先搜索",-1),zD=t("code",null,"广度优先搜索",-1),qD=t("code",null,"1+",-1),jD=t("td",{style:{"text-align":"center"}},"🟢",-1),OD={style:{"text-align":"center"}},ND={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},LD=t("td",{style:{"text-align":"center"}},"剑指 Offer 32",-1),CD=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树",-1),KD={style:{"text-align":"center"}},PD={style:{"text-align":"left"}},BD=t("code",null,"树",-1),VD=t("code",null,"广度优先搜索",-1),TD=t("code",null,"二叉树",-1),UD=t("td",{style:{"text-align":"center"}},"🟠",-1),ED={style:{"text-align":"center"}},RD={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},WD=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-II",-1),GD=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 II",-1),SD={style:{"text-align":"center"}},YD={style:{"text-align":"left"}},DD=t("code",null,"树",-1),QD=t("code",null,"广度优先搜索",-1),FD=t("code",null,"二叉树",-1),MD=t("td",{style:{"text-align":"center"}},"🟢",-1),ZD={style:{"text-align":"center"}},AD={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},HD=t("td",{style:{"text-align":"center"}},"剑指 Offer 32-III",-1),JD=t("td",{style:{"text-align":"left"}},"从上到下打印二叉树 III",-1),XD={style:{"text-align":"center"}},$D={style:{"text-align":"left"}},tQ=t("code",null,"树",-1),eQ=t("code",null,"广度优先搜索",-1),oQ=t("code",null,"二叉树",-1),lQ=t("td",{style:{"text-align":"center"}},"🟠",-1),nQ={style:{"text-align":"center"}},sQ={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},rQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),dQ=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),_Q={style:{"text-align":"center"}},cQ={style:{"text-align":"left"}},aQ=t("code",null,"栈",-1),iQ=t("code",null,"树",-1),hQ=t("code",null,"二叉搜索树",-1),fQ=t("code",null,"4+",-1),gQ=t("td",{style:{"text-align":"center"}},"🟠",-1),uQ={style:{"text-align":"center"}},mQ={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},pQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),yQ=t("td",{style:{"text-align":"left"}},"二叉树中和为某一值的路径",-1),xQ={style:{"text-align":"center"}},bQ={style:{"text-align":"left"}},kQ=t("code",null,"树",-1),vQ=t("code",null,"深度优先搜索",-1),wQ=t("code",null,"回溯",-1),IQ=t("code",null,"1+",-1),zQ=t("td",{style:{"text-align":"center"}},"🟠",-1),qQ={style:{"text-align":"center"}},jQ={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},OQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),NQ=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),LQ={style:{"text-align":"center"}},CQ={style:{"text-align":"left"}},KQ=t("code",null,"栈",-1),PQ=t("code",null,"树",-1),BQ=t("code",null,"深度优先搜索",-1),VQ=t("code",null,"4+",-1),TQ=t("td",{style:{"text-align":"center"}},"🟠",-1),UQ={style:{"text-align":"center"}},EQ={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},RQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),WQ=t("td",{style:{"text-align":"left"}},"序列化二叉树",-1),GQ={style:{"text-align":"center"}},SQ={style:{"text-align":"left"}},YQ=t("code",null,"树",-1),DQ=t("code",null,"深度优先搜索",-1),QQ=t("code",null,"广度优先搜索",-1),FQ=t("code",null,"3+",-1),MQ=t("td",{style:{"text-align":"center"}},"🔴",-1),ZQ={style:{"text-align":"center"}},AQ={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},HQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),JQ=t("td",{style:{"text-align":"left"}},"二叉搜索树的第k大节点",-1),XQ={style:{"text-align":"center"}},$Q={style:{"text-align":"left"}},tF=t("code",null,"树",-1),eF=t("code",null,"深度优先搜索",-1),oF=t("code",null,"二叉搜索树",-1),lF=t("code",null,"1+",-1),nF=t("td",{style:{"text-align":"center"}},"🟢",-1),sF={style:{"text-align":"center"}},rF={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},dF=t("td",{style:{"text-align":"center"}},"剑指 Offer 55",-1),_F=t("td",{style:{"text-align":"left"}},"二叉树的深度",-1),cF={style:{"text-align":"center"}},aF={style:{"text-align":"left"}},iF=t("code",null,"树",-1),hF=t("code",null,"深度优先搜索",-1),fF=t("code",null,"广度优先搜索",-1),gF=t("code",null,"1+",-1),uF=t("td",{style:{"text-align":"center"}},"🟢",-1),mF={style:{"text-align":"center"}},pF={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},yF=t("td",{style:{"text-align":"center"}},"剑指 Offer 55-II",-1),xF=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),bF={style:{"text-align":"center"}},kF={style:{"text-align":"left"}},vF=t("code",null,"树",-1),wF=t("code",null,"深度优先搜索",-1),IF=t("code",null,"二叉树",-1),zF=t("td",{style:{"text-align":"center"}},"🟢",-1),qF={style:{"text-align":"center"}},jF={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},OF=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),NF=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),LF={style:{"text-align":"center"}},CF={style:{"text-align":"left"}},KF=t("code",null,"树",-1),PF=t("code",null,"深度优先搜索",-1),BF=t("code",null,"二叉搜索树",-1),VF=t("code",null,"1+",-1),TF=t("td",{style:{"text-align":"center"}},"🟢",-1),UF={style:{"text-align":"center"}},EF={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},RF=t("td",{style:{"text-align":"center"}},"剑指 Offer 68-II",-1),WF=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),GF={style:{"text-align":"center"}},SF={style:{"text-align":"left"}},YF=t("code",null,"树",-1),DF=t("code",null,"深度优先搜索",-1),QF=t("code",null,"二叉树",-1),FF=t("td",{style:{"text-align":"center"}},"🟢",-1),MF={style:{"text-align":"center"}},ZF={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},AF=t("td",{style:{"text-align":"center"}},"剑指 Offer 7",-1),HF=t("td",{style:{"text-align":"left"}},"重建二叉树",-1),JF={style:{"text-align":"center"}},XF={style:{"text-align":"left"}},$F=t("code",null,"树",-1),tM=t("code",null,"数组",-1),eM=t("code",null,"哈希表",-1),oM=t("code",null,"2+",-1),lM=t("td",{style:{"text-align":"center"}},"🟠",-1),nM={style:{"text-align":"center"}},sM={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},rM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),dM=t("td",{style:{"text-align":"left"}},"往完全二叉树添加节点",-1),_M=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},aM=t("code",null,"树",-1),iM=t("code",null,"广度优先搜索",-1),hM=t("code",null,"设计",-1),fM=t("code",null,"1+",-1),gM=t("td",{style:{"text-align":"center"}},"🟠",-1),uM={style:{"text-align":"center"}},mM={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),yM=t("td",{style:{"text-align":"left"}},"二叉树每层的最大值",-1),xM=t("td",{style:{"text-align":"center"}},null,-1),bM={style:{"text-align":"left"}},kM=t("code",null,"树",-1),vM=t("code",null,"深度优先搜索",-1),wM=t("code",null,"广度优先搜索",-1),IM=t("code",null,"1+",-1),zM=t("td",{style:{"text-align":"center"}},"🟠",-1),qM={style:{"text-align":"center"}},jM={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),NM=t("td",{style:{"text-align":"left"}},"二叉树最底层最左边的值",-1),LM=t("td",{style:{"text-align":"center"}},null,-1),CM={style:{"text-align":"left"}},KM=t("code",null,"树",-1),PM=t("code",null,"深度优先搜索",-1),BM=t("code",null,"广度优先搜索",-1),VM=t("code",null,"1+",-1),TM=t("td",{style:{"text-align":"center"}},"🟠",-1),UM={style:{"text-align":"center"}},EM={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},RM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),WM=t("td",{style:{"text-align":"left"}},"二叉树的右侧视图",-1),GM={style:{"text-align":"center"}},SM={style:{"text-align":"left"}},YM=t("code",null,"树",-1),DM=t("code",null,"深度优先搜索",-1),QM=t("code",null,"广度优先搜索",-1),FM=t("code",null,"1+",-1),MM=t("td",{style:{"text-align":"center"}},"🟠",-1),ZM={style:{"text-align":"center"}},AM={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},HM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),JM=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),XM=t("td",{style:{"text-align":"center"}},null,-1),$M={style:{"text-align":"left"}},tZ=t("code",null,"树",-1),eZ=t("code",null,"深度优先搜索",-1),oZ=t("code",null,"二叉树",-1),lZ=t("td",{style:{"text-align":"center"}},"🟠",-1),nZ={style:{"text-align":"center"}},sZ={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},rZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),dZ=t("td",{style:{"text-align":"left"}},"序列化与反序列化二叉树",-1),_Z={style:{"text-align":"center"}},cZ={style:{"text-align":"left"}},aZ=t("code",null,"树",-1),iZ=t("code",null,"深度优先搜索",-1),hZ=t("code",null,"广度优先搜索",-1),fZ=t("code",null,"3+",-1),gZ=t("td",{style:{"text-align":"center"}},"🔴",-1),uZ={style:{"text-align":"center"}},mZ={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},pZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),yZ=t("td",{style:{"text-align":"left"}},"从根节点到叶节点的路径数字之和",-1),xZ={style:{"text-align":"center"}},bZ={style:{"text-align":"left"}},kZ=t("code",null,"树",-1),vZ=t("code",null,"深度优先搜索",-1),wZ=t("code",null,"二叉树",-1),IZ=t("td",{style:{"text-align":"center"}},"🟠",-1),zZ={style:{"text-align":"center"}},qZ={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},jZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),OZ=t("td",{style:{"text-align":"left"}},"向下的路径节点之和",-1),NZ={style:{"text-align":"center"}},LZ={style:{"text-align":"left"}},CZ=t("code",null,"树",-1),KZ=t("code",null,"深度优先搜索",-1),PZ=t("code",null,"二叉树",-1),BZ=t("td",{style:{"text-align":"center"}},"🟠",-1),VZ={style:{"text-align":"center"}},TZ={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},UZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),EZ=t("td",{style:{"text-align":"left"}},"节点之和最大的路径",-1),RZ={style:{"text-align":"center"}},WZ={style:{"text-align":"left"}},GZ=t("code",null,"树",-1),SZ=t("code",null,"深度优先搜索",-1),YZ=t("code",null,"动态规划",-1),DZ=t("code",null,"1+",-1),QZ=t("td",{style:{"text-align":"center"}},"🔴",-1),FZ={style:{"text-align":"center"}},MZ={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},ZZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),AZ=t("td",{style:{"text-align":"left"}},"展平二叉搜索树",-1),HZ=t("td",{style:{"text-align":"center"}},null,-1),JZ={style:{"text-align":"left"}},XZ=t("code",null,"栈",-1),$Z=t("code",null,"树",-1),tA=t("code",null,"深度优先搜索",-1),eA=t("code",null,"2+",-1),oA=t("td",{style:{"text-align":"center"}},"🟢",-1),lA={style:{"text-align":"center"}},nA={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},sA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),rA=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继",-1),dA=t("td",{style:{"text-align":"center"}},null,-1),_A={style:{"text-align":"left"}},cA=t("code",null,"树",-1),aA=t("code",null,"深度优先搜索",-1),iA=t("code",null,"二叉搜索树",-1),hA=t("code",null,"1+",-1),fA=t("td",{style:{"text-align":"center"}},"🟠",-1),gA={style:{"text-align":"center"}},uA={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},mA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),pA=t("td",{style:{"text-align":"left"}},"所有大于等于节点的值之和",-1),yA=t("td",{style:{"text-align":"center"}},null,-1),xA={style:{"text-align":"left"}},bA=t("code",null,"树",-1),kA=t("code",null,"深度优先搜索",-1),vA=t("code",null,"二叉搜索树",-1),wA=t("code",null,"1+",-1),IA=t("td",{style:{"text-align":"center"}},"🟠",-1),zA={style:{"text-align":"center"}},qA={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},jA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),OA=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),NA={style:{"text-align":"center"}},LA={style:{"text-align":"left"}},CA=t("code",null,"栈",-1),KA=t("code",null,"树",-1),PA=t("code",null,"设计",-1),BA=t("code",null,"3+",-1),VA=t("td",{style:{"text-align":"center"}},"🟠",-1),TA={style:{"text-align":"center"}},UA={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},EA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),RA=t("td",{style:{"text-align":"left"}},"数据流的第 K 大数值",-1),WA={style:{"text-align":"center"}},GA={style:{"text-align":"left"}},SA=t("code",null,"树",-1),YA=t("code",null,"设计",-1),DA=t("code",null,"二叉搜索树",-1),QA=t("code",null,"3+",-1),FA=t("td",{style:{"text-align":"center"}},"🟢",-1),MA={style:{"text-align":"center"}},ZA={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},AA=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),HA=t("td",{style:{"text-align":"left"}},"最小高度树",-1),JA=t("td",{style:{"text-align":"center"}},null,-1),XA={style:{"text-align":"left"}},$A=t("code",null,"树",-1),tH=t("code",null,"二叉搜索树",-1),eH=t("code",null,"数组",-1),oH=t("code",null,"2+",-1),lH=t("td",{style:{"text-align":"center"}},"🟢",-1),nH={style:{"text-align":"center"}},sH={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},rH=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),dH=t("td",{style:{"text-align":"left"}},"特定深度节点链表",-1),_H=t("td",{style:{"text-align":"center"}},null,-1),cH={style:{"text-align":"left"}},aH=t("code",null,"树",-1),iH=t("code",null,"广度优先搜索",-1),hH=t("code",null,"链表",-1),fH=t("code",null,"1+",-1),gH=t("td",{style:{"text-align":"center"}},"🟠",-1),uH={style:{"text-align":"center"}},mH={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},pH=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),yH=t("td",{style:{"text-align":"left"}},"检查平衡性",-1),xH=t("td",{style:{"text-align":"center"}},null,-1),bH={style:{"text-align":"left"}},kH=t("code",null,"树",-1),vH=t("code",null,"深度优先搜索",-1),wH=t("code",null,"二叉树",-1),IH=t("td",{style:{"text-align":"center"}},"🟢",-1),zH={style:{"text-align":"center"}},qH={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},jH=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),OH=t("td",{style:{"text-align":"left"}},"合法二叉搜索树",-1),NH=t("td",{style:{"text-align":"center"}},null,-1),LH={style:{"text-align":"left"}},CH=t("code",null,"树",-1),KH=t("code",null,"深度优先搜索",-1),PH=t("code",null,"二叉搜索树",-1),BH=t("code",null,"1+",-1),VH=t("td",{style:{"text-align":"center"}},"🟠",-1),TH={style:{"text-align":"center"}},UH={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},EH=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),RH=t("td",{style:{"text-align":"left"}},"后继者",-1),WH=t("td",{style:{"text-align":"center"}},null,-1),GH={style:{"text-align":"left"}},SH=t("code",null,"树",-1),YH=t("code",null,"深度优先搜索",-1),DH=t("code",null,"二叉搜索树",-1),QH=t("code",null,"1+",-1),FH=t("td",{style:{"text-align":"center"}},"🟠",-1),MH={style:{"text-align":"center"}},ZH={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},AH=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),HH=t("td",{style:{"text-align":"left"}},"首个共同祖先",-1),JH=t("td",{style:{"text-align":"center"}},null,-1),XH={style:{"text-align":"left"}},$H=t("code",null,"树",-1),tJ=t("code",null,"深度优先搜索",-1),eJ=t("code",null,"二叉树",-1),oJ=t("td",{style:{"text-align":"center"}},"🟠",-1),lJ={style:{"text-align":"center"}},nJ={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},sJ=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),rJ=t("td",{style:{"text-align":"left"}},"二叉搜索树序列",-1),dJ=t("td",{style:{"text-align":"center"}},null,-1),_J={style:{"text-align":"left"}},cJ=t("code",null,"树",-1),aJ=t("code",null,"二叉搜索树",-1),iJ=t("code",null,"回溯",-1),hJ=t("code",null,"1+",-1),fJ=t("td",{style:{"text-align":"center"}},"🔴",-1),gJ={style:{"text-align":"center"}},uJ={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},mJ=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),pJ=t("td",{style:{"text-align":"left"}},"检查子树",-1),yJ=t("td",{style:{"text-align":"center"}},null,-1),xJ={style:{"text-align":"left"}},bJ=t("code",null,"树",-1),kJ=t("code",null,"深度优先搜索",-1),vJ=t("code",null,"二叉树",-1),wJ=t("code",null,"2+",-1),IJ=t("td",{style:{"text-align":"center"}},"🟠",-1),zJ={style:{"text-align":"center"}},qJ={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},jJ=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),OJ=t("td",{style:{"text-align":"left"}},"求和路径",-1),NJ=t("td",{style:{"text-align":"center"}},null,-1),LJ={style:{"text-align":"left"}},CJ=t("code",null,"树",-1),KJ=t("code",null,"深度优先搜索",-1),PJ=t("code",null,"二叉树",-1),BJ=t("td",{style:{"text-align":"center"}},"🟠",-1),VJ={style:{"text-align":"center"}},TJ={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},UJ=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),EJ=t("td",{style:{"text-align":"left"}},"BiNode",-1),RJ=t("td",{style:{"text-align":"center"}},null,-1),WJ={style:{"text-align":"left"}},GJ=t("code",null,"栈",-1),SJ=t("code",null,"树",-1),YJ=t("code",null,"深度优先搜索",-1),DJ=t("code",null,"3+",-1),QJ=t("td",{style:{"text-align":"center"}},"🟢",-1),FJ={style:{"text-align":"center"}},MJ={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"};function ZJ(AJ,HJ){const l=r("RouterLink"),s=r("ExternalLinkIcon");return _(),c("div",null,[h,t("details",null,[f,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[u]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[q]),_:1}),e(),j,e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[S]),_:1})]),Y,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ut,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Kt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Vt,Tt,t("td",Ut,[o(l,{to:"/problem/0094.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Et,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Wt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gt]),_:1}),e(),St]),Yt,t("td",Dt,[t("a",Qt,[e("🀄️"),o(s)]),e(),t("a",Ft,[e("🔗"),o(s)])])]),t("tr",null,[Mt,Zt,t("td",At,[o(l,{to:"/problem/0095.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ht,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,re,t("td",de,[o(l,{to:"/problem/0096.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ie]),_:1}),e(),he]),fe,t("td",ge,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[pe,ye,t("td",xe,[o(l,{to:"/problem/0098.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",be,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ve]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[we]),_:1}),e(),Ie]),ze,t("td",qe,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Oe,[e("🔗"),o(s)])])]),t("tr",null,[Ne,Le,t("td",Ce,[o(l,{to:"/problem/0099.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ke,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Be]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ve]),_:1}),e(),Te]),Ue,t("td",Ee,[t("a",Re,[e("🀄️"),o(s)]),e(),t("a",We,[e("🔗"),o(s)])])]),t("tr",null,[Ge,Se,t("td",Ye,[o(l,{to:"/problem/0100.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",De,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qe]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fe]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Me]),_:1}),e(),Ze]),Ae,t("td",He,[t("a",Je,[e("🀄️"),o(s)]),e(),t("a",Xe,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0101.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[so]),_:1}),e(),ro]),_o,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,fo,t("td",go,[o(l,{to:"/problem/0102.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[po]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[yo]),_:1})]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[wo,Io,t("td",zo,[o(l,{to:"/problem/0103.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[No]),_:1})]),Lo,t("td",Co,[t("a",Ko,[e("🀄️"),o(s)]),e(),t("a",Po,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Vo,t("td",To,[o(l,{to:"/problem/0104.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Uo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Eo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ro]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Wo]),_:1}),e(),Go]),So,t("td",Yo,[t("a",Do,[e("🀄️"),o(s)]),e(),t("a",Qo,[e("🔗"),o(s)])])]),t("tr",null,[Fo,Mo,t("td",Zo,[o(l,{to:"/problem/0105.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ao,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ho]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jo]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Xo]),_:1}),e(),$o]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",rl,[o(l,{to:"/problem/0106.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_l]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[al]),_:1}),e(),il]),hl,t("td",fl,[t("a",gl,[e("🀄️"),o(s)]),e(),t("a",ul,[e("🔗"),o(s)])])]),t("tr",null,[ml,pl,t("td",yl,[o(l,{to:"/problem/0107.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[vl]),_:1})]),wl,t("td",Il,[t("a",zl,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[jl,Ol,t("td",Nl,[o(l,{to:"/problem/0108.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ll,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cl]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Kl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Pl]),_:1}),e(),Bl]),Vl,t("td",Tl,[t("a",Ul,[e("🀄️"),o(s)]),e(),t("a",El,[e("🔗"),o(s)])])]),t("tr",null,[Rl,Wl,t("td",Gl,[o(l,{to:"/problem/0109.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yl]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Dl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Ql]),_:1}),e(),Fl]),Ml,t("td",Zl,[t("a",Al,[e("🀄️"),o(s)]),e(),t("a",Hl,[e("🔗"),o(s)])])]),t("tr",null,[Jl,Xl,t("td",$l,[o(l,{to:"/problem/0110.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[en]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ln]),_:1})]),nn,t("td",sn,[t("a",rn,[e("🀄️"),o(s)]),e(),t("a",dn,[e("🔗"),o(s)])])]),t("tr",null,[_n,cn,t("td",an,[o(l,{to:"/problem/0111.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[un]),_:1}),e(),mn]),pn,t("td",yn,[t("a",xn,[e("🀄️"),o(s)]),e(),t("a",bn,[e("🔗"),o(s)])])]),t("tr",null,[kn,vn,t("td",wn,[o(l,{to:"/problem/0112.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",In,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jn]),_:1}),e(),On]),Nn,t("td",Ln,[t("a",Cn,[e("🀄️"),o(s)]),e(),t("a",Kn,[e("🔗"),o(s)])])]),t("tr",null,[Pn,Bn,t("td",Vn,[o(l,{to:"/problem/0113.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Un]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[En]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Rn]),_:1}),e(),Wn]),Gn,t("td",Sn,[t("a",Yn,[e("🀄️"),o(s)]),e(),t("a",Dn,[e("🔗"),o(s)])])]),t("tr",null,[Qn,Fn,t("td",Mn,[o(l,{to:"/problem/0114.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[An]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jn]),_:1}),e(),Xn]),$n,t("td",ts,[t("a",es,[e("🀄️"),o(s)]),e(),t("a",os,[e("🔗"),o(s)])])]),t("tr",null,[ls,ns,t("td",ss,[o(l,{to:"/problem/0116.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rs,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_s]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[cs]),_:1}),e(),as]),is,t("td",hs,[t("a",fs,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[us,ms,t("td",ps,[o(l,{to:"/problem/0117.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ys,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ks]),_:1}),e(),vs]),ws,t("td",Is,[t("a",zs,[e("🀄️"),o(s)]),e(),t("a",qs,[e("🔗"),o(s)])])]),t("tr",null,[js,Os,t("td",Ns,[o(l,{to:"/problem/0124.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ls,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ks]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ps]),_:1}),e(),Bs]),Vs,t("td",Ts,[t("a",Us,[e("🀄️"),o(s)]),e(),t("a",Es,[e("🔗"),o(s)])])]),t("tr",null,[Rs,Ws,t("td",Gs,[o(l,{to:"/problem/0129.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ss,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ys]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ds]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qs]),_:1})]),Fs,t("td",Ms,[t("a",Zs,[e("🀄️"),o(s)]),e(),t("a",As,[e("🔗"),o(s)])])]),t("tr",null,[Hs,Js,t("td",Xs,[o(l,{to:"/problem/0144.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$s,[o(l,{to:"/tag/stack.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[er]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[or]),_:1}),e(),lr]),nr,t("td",sr,[t("a",rr,[e("🀄️"),o(s)]),e(),t("a",dr,[e("🔗"),o(s)])])]),t("tr",null,[_r,cr,t("td",ar,[o(l,{to:"/problem/0145.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ir,[o(l,{to:"/tag/stack.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[fr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gr]),_:1}),e(),ur]),mr,t("td",pr,[t("a",yr,[e("🀄️"),o(s)]),e(),t("a",xr,[e("🔗"),o(s)])])]),t("tr",null,[br,kr,t("td",vr,[o(l,{to:"/problem/0156.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ir]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zr]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qr]),_:1})]),jr,t("td",Or,[t("a",Nr,[e("🀄️"),o(s)]),e(),t("a",Lr,[e("🔗"),o(s)])])]),t("tr",null,[Cr,Kr,t("td",Pr,[o(l,{to:"/problem/0173.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Br,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Vr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Tr]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ur]),_:1}),e(),Er]),Rr,t("td",Wr,[t("a",Gr,[e("🀄️"),o(s)]),e(),t("a",Sr,[e("🔗"),o(s)])])]),t("tr",null,[Yr,Dr,t("td",Qr,[o(l,{to:"/problem/0199.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ar]),_:1}),e(),Hr]),Jr,t("td",Xr,[t("a",$r,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,t("td",ld,[o(l,{to:"/problem/0222.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nd,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[sd]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rd]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[dd]),_:1}),e(),_d]),cd,t("td",ad,[t("a",id,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[fd,gd,t("td",ud,[o(l,{to:"/problem/0226.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",md,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[xd]),_:1}),e(),bd]),kd,t("td",vd,[t("a",wd,[e("🀄️"),o(s)]),e(),t("a",Id,[e("🔗"),o(s)])])]),t("tr",null,[zd,qd,t("td",jd,[o(l,{to:"/problem/0230.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Od,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Nd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Cd]),_:1}),e(),Kd]),Pd,t("td",Bd,[t("a",Vd,[e("🀄️"),o(s)]),e(),t("a",Td,[e("🔗"),o(s)])])]),t("tr",null,[Ud,Ed,t("td",Rd,[o(l,{to:"/problem/0235.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Yd]),_:1}),e(),Dd]),Qd,t("td",Fd,[t("a",Md,[e("🀄️"),o(s)]),e(),t("a",Zd,[e("🔗"),o(s)])])]),t("tr",null,[Ad,Hd,t("td",Jd,[o(l,{to:"/problem/0236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[e_]),_:1})]),o_,t("td",l_,[t("a",n_,[e("🀄️"),o(s)]),e(),t("a",s_,[e("🔗"),o(s)])])]),t("tr",null,[r_,d_,__,t("td",c_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[h_]),_:1})]),f_,t("td",g_,[t("a",u_,[e("🀄️"),o(s)]),e(),t("a",m_,[e("🔗"),o(s)])])]),t("tr",null,[p_,y_,x_,t("td",b_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[k_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[v_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[w_]),_:1}),e(),I_]),z_,t("td",q_,[t("a",j_,[e("🀄️"),o(s)]),e(),t("a",O_,[e("🔗"),o(s)])])]),t("tr",null,[N_,L_,t("td",C_,[o(l,{to:"/problem/0257.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",K_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[P_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[V_]),_:1}),e(),T_]),U_,t("td",E_,[t("a",R_,[e("🀄️"),o(s)]),e(),t("a",W_,[e("🔗"),o(s)])])]),t("tr",null,[G_,S_,Y_,t("td",D_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Q_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[M_]),_:1}),e(),Z_]),A_,t("td",H_,[t("a",J_,[e("🀄️"),o(s)]),e(),t("a",X_,[e("🔗"),o(s)])])]),t("tr",null,[$_,tc,ec,t("td",oc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[nc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sc]),_:1}),e(),rc]),dc,t("td",_c,[t("a",cc,[e("🀄️"),o(s)]),e(),t("a",ac,[e("🔗"),o(s)])])]),t("tr",null,[ic,hc,fc,t("td",gc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[pc]),_:1}),e(),yc]),xc,t("td",bc,[t("a",kc,[e("🀄️"),o(s)]),e(),t("a",vc,[e("🔗"),o(s)])])]),t("tr",null,[wc,Ic,t("td",zc,[o(l,{to:"/problem/0297.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Oc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Nc]),_:1}),e(),Lc]),Cc,t("td",Kc,[t("a",Pc,[e("🀄️"),o(s)]),e(),t("a",Bc,[e("🔗"),o(s)])])]),t("tr",null,[Vc,Tc,Uc,t("td",Ec,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Rc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wc]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Gc]),_:1})]),Sc,t("td",Yc,[t("a",Dc,[e("🀄️"),o(s)]),e(),t("a",Qc,[e("🔗"),o(s)])])]),t("tr",null,[Fc,Mc,Zc,t("td",Ac,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xc]),_:1}),e(),$c]),ta,t("td",ea,[t("a",oa,[e("🀄️"),o(s)]),e(),t("a",la,[e("🔗"),o(s)])])]),t("tr",null,[na,sa,t("td",ra,[o(l,{to:"/problem/0331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",da,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_a]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ca]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[aa]),_:1}),e(),ia]),ha,t("td",fa,[t("a",ga,[e("🀄️"),o(s)]),e(),t("a",ua,[e("🔗"),o(s)])])]),t("tr",null,[ma,pa,ya,t("td",xa,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ba]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ka]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[va]),_:1}),e(),wa]),Ia,t("td",za,[t("a",qa,[e("🀄️"),o(s)]),e(),t("a",ja,[e("🔗"),o(s)])])]),t("tr",null,[Oa,Na,t("td",La,[o(l,{to:"/problem/0337.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ca,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ka]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pa]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ba]),_:1}),e(),Va]),Ta,t("td",Ua,[t("a",Ea,[e("🀄️"),o(s)]),e(),t("a",Ra,[e("🔗"),o(s)])])]),t("tr",null,[Wa,Ga,t("td",Sa,[o(l,{to:"/problem/0341.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ya,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Da]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Qa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fa]),_:1}),e(),Ma]),Za,t("td",Aa,[t("a",Ha,[e("🀄️"),o(s)]),e(),t("a",Ja,[e("🔗"),o(s)])])]),t("tr",null,[Xa,$a,t("td",ti,[o(l,{to:"/problem/0366.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ei,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[li]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ni]),_:1})]),si,t("td",ri,[t("a",di,[e("🀄️"),o(s)]),e(),t("a",_i,[e("🔗"),o(s)])])]),t("tr",null,[ci,ai,t("td",ii,[o(l,{to:"/problem/0404.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ui]),_:1}),e(),mi]),pi,t("td",yi,[t("a",xi,[e("🀄️"),o(s)]),e(),t("a",bi,[e("🔗"),o(s)])])]),t("tr",null,[ki,vi,t("td",wi,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ii,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zi]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[qi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ji]),_:1}),e(),Oi]),Ni,t("td",Li,[t("a",Ci,[e("🀄️"),o(s)]),e(),t("a",Ki,[e("🔗"),o(s)])])]),t("tr",null,[Pi,Bi,t("td",Vi,[o(l,{to:"/problem/0427.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ti,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ui]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ei]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[Ri]),_:1}),e(),Wi]),Gi,t("td",Si,[t("a",Yi,[e("🀄️"),o(s)]),e(),t("a",Di,[e("🔗"),o(s)])])]),t("tr",null,[Qi,Fi,Mi,t("td",Zi,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ai]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ji]),_:1}),e(),Xi]),$i,t("td",th,[t("a",eh,[e("🀄️"),o(s)]),e(),t("a",oh,[e("🔗"),o(s)])])]),t("tr",null,[lh,nh,t("td",sh,[o(l,{to:"/problem/0429.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_h]),_:1})]),ch,t("td",ah,[t("a",ih,[e("🀄️"),o(s)]),e(),t("a",hh,[e("🔗"),o(s)])])]),t("tr",null,[fh,gh,uh,t("td",mh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ph]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[xh]),_:1}),e(),bh]),kh,t("td",vh,[t("a",wh,[e("🀄️"),o(s)]),e(),t("a",Ih,[e("🔗"),o(s)])])]),t("tr",null,[zh,qh,t("td",jh,[o(l,{to:"/problem/0437.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Oh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Nh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Lh]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ch]),_:1})]),Kh,t("td",Ph,[t("a",Bh,[e("🀄️"),o(s)]),e(),t("a",Vh,[e("🔗"),o(s)])])]),t("tr",null,[Th,Uh,t("td",Eh,[o(l,{to:"/problem/0449.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Wh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Sh]),_:1}),e(),Yh]),Dh,t("td",Qh,[t("a",Fh,[e("🀄️"),o(s)]),e(),t("a",Mh,[e("🔗"),o(s)])])]),t("tr",null,[Zh,Ah,t("td",Hh,[o(l,{to:"/problem/0450.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Xh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[$h]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[t1]),_:1})]),e1,t("td",o1,[t("a",l1,[e("🀄️"),o(s)]),e(),t("a",n1,[e("🔗"),o(s)])])]),t("tr",null,[s1,r1,t("td",d1,[o(l,{to:"/problem/0501.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[c1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[a1]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[i1]),_:1}),e(),h1]),f1,t("td",g1,[t("a",u1,[e("🀄️"),o(s)]),e(),t("a",m1,[e("🔗"),o(s)])])]),t("tr",null,[p1,y1,x1,t("td",b1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[k1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[v1]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[w1]),_:1}),e(),I1]),z1,t("td",q1,[t("a",j1,[e("🀄️"),o(s)]),e(),t("a",O1,[e("🔗"),o(s)])])]),t("tr",null,[N1,L1,C1,t("td",K1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[P1]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[B1]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[V1]),_:1})]),T1,t("td",U1,[t("a",E1,[e("🀄️"),o(s)]),e(),t("a",R1,[e("🔗"),o(s)])])]),t("tr",null,[W1,G1,S1,t("td",Y1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[F1]),_:1}),e(),M1]),Z1,t("td",A1,[t("a",H1,[e("🀄️"),o(s)]),e(),t("a",J1,[e("🔗"),o(s)])])]),t("tr",null,[X1,$1,t("td",tf,[o(l,{to:"/problem/0515.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ef,[o(l,{to:"/tag/tree.html"},{default:n(()=>[of]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nf]),_:1}),e(),sf]),rf,t("td",df,[t("a",_f,[e("🀄️"),o(s)]),e(),t("a",cf,[e("🔗"),o(s)])])]),t("tr",null,[af,hf,t("td",ff,[o(l,{to:"/problem/0530.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[pf]),_:1}),e(),yf]),xf,t("td",bf,[t("a",kf,[e("🀄️"),o(s)]),e(),t("a",vf,[e("🔗"),o(s)])])]),t("tr",null,[wf,If,zf,t("td",qf,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jf]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Of]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Nf]),_:1}),e(),Lf]),Cf,t("td",Kf,[t("a",Pf,[e("🀄️"),o(s)]),e(),t("a",Bf,[e("🔗"),o(s)])])]),t("tr",null,[Vf,Tf,Uf,t("td",Ef,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Rf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wf]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Gf]),_:1}),e(),Sf]),Yf,t("td",Df,[t("a",Qf,[e("🀄️"),o(s)]),e(),t("a",Ff,[e("🔗"),o(s)])])]),t("tr",null,[Mf,Zf,t("td",Af,[o(l,{to:"/problem/0543.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xf]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$f]),_:1})]),tg,t("td",eg,[t("a",og,[e("🀄️"),o(s)]),e(),t("a",lg,[e("🔗"),o(s)])])]),t("tr",null,[ng,sg,rg,t("td",dg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_g]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cg]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ag]),_:1})]),ig,t("td",hg,[t("a",fg,[e("🀄️"),o(s)]),e(),t("a",gg,[e("🔗"),o(s)])])]),t("tr",null,[ug,mg,pg,t("td",yg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bg]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[kg]),_:1})]),vg,t("td",wg,[t("a",Ig,[e("🀄️"),o(s)]),e(),t("a",zg,[e("🔗"),o(s)])])]),t("tr",null,[qg,jg,Og,t("td",Ng,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lg]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[Cg]),_:1})]),Kg,t("td",Pg,[t("a",Bg,[e("🀄️"),o(s)]),e(),t("a",Vg,[e("🔗"),o(s)])])]),t("tr",null,[Tg,Ug,t("td",Eg,[o(l,{to:"/problem/0559.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Wg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Sg]),_:1})]),Yg,t("td",Dg,[t("a",Qg,[e("🀄️"),o(s)]),e(),t("a",Fg,[e("🔗"),o(s)])])]),t("tr",null,[Mg,Zg,t("td",Ag,[o(l,{to:"/problem/0563.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xg]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$g]),_:1})]),tu,t("td",eu,[t("a",ou,[e("🀄️"),o(s)]),e(),t("a",lu,[e("🔗"),o(s)])])]),t("tr",null,[nu,su,t("td",ru,[o(l,{to:"/problem/0572.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",du,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_u]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cu]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[au]),_:1}),e(),iu]),hu,t("td",fu,[t("a",gu,[e("🀄️"),o(s)]),e(),t("a",uu,[e("🔗"),o(s)])])]),t("tr",null,[mu,pu,yu,t("td",xu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ku]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vu]),_:1}),e(),wu]),Iu,t("td",zu,[t("a",qu,[e("🀄️"),o(s)]),e(),t("a",ju,[e("🔗"),o(s)])])]),t("tr",null,[Ou,Nu,t("td",Lu,[o(l,{to:"/problem/0589.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Cu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ku]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Pu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Bu]),_:1})]),Vu,t("td",Tu,[t("a",Uu,[e("🀄️"),o(s)]),e(),t("a",Eu,[e("🔗"),o(s)])])]),t("tr",null,[Ru,Wu,t("td",Gu,[o(l,{to:"/problem/0590.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Su,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yu]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Du]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qu]),_:1})]),Fu,t("td",Mu,[t("a",Zu,[e("🀄️"),o(s)]),e(),t("a",Au,[e("🔗"),o(s)])])]),t("tr",null,[Hu,Ju,Xu,t("td",$u,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[em]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[om]),_:1}),e(),lm]),nm,t("td",sm,[t("a",rm,[e("🀄️"),o(s)]),e(),t("a",dm,[e("🔗"),o(s)])])]),t("tr",null,[_m,cm,t("td",am,[o(l,{to:"/problem/0617.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",im,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fm]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gm]),_:1}),e(),um]),mm,t("td",pm,[t("a",ym,[e("🀄️"),o(s)]),e(),t("a",xm,[e("🔗"),o(s)])])]),t("tr",null,[bm,km,vm,t("td",wm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Im]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zm]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qm]),_:1}),e(),jm]),Om,t("td",Nm,[t("a",Lm,[e("🀄️"),o(s)]),e(),t("a",Cm,[e("🔗"),o(s)])])]),t("tr",null,[Km,Pm,t("td",Bm,[o(l,{to:"/problem/0637.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Tm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Um]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Em]),_:1}),e(),Rm]),Wm,t("td",Gm,[t("a",Sm,[e("🀄️"),o(s)]),e(),t("a",Ym,[e("🔗"),o(s)])])]),t("tr",null,[Dm,Qm,Fm,t("td",Mm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Am]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Hm]),_:1}),e(),Jm]),Xm,t("td",$m,[t("a",t2,[e("🀄️"),o(s)]),e(),t("a",e2,[e("🔗"),o(s)])])]),t("tr",null,[o2,l2,t("td",n2,[o(l,{to:"/problem/0653.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",s2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[r2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[d2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_2]),_:1}),e(),c2]),a2,t("td",i2,[t("a",h2,[e("🀄️"),o(s)]),e(),t("a",f2,[e("🔗"),o(s)])])]),t("tr",null,[g2,u2,t("td",m2,[o(l,{to:"/problem/0654.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",p2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[y2]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[x2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[b2]),_:1}),e(),k2]),v2,t("td",w2,[t("a",I2,[e("🀄️"),o(s)]),e(),t("a",z2,[e("🔗"),o(s)])])]),t("tr",null,[q2,j2,O2,t("td",N2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[L2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[C2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[K2]),_:1}),e(),P2]),B2,t("td",V2,[t("a",T2,[e("🀄️"),o(s)]),e(),t("a",U2,[e("🔗"),o(s)])])]),t("tr",null,[E2,R2,t("td",W2,[o(l,{to:"/problem/0662.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",G2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[S2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Y2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[D2]),_:1}),e(),Q2]),F2,t("td",M2,[t("a",Z2,[e("🀄️"),o(s)]),e(),t("a",A2,[e("🔗"),o(s)])])]),t("tr",null,[H2,J2,X2,t("td",$2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ep]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[op]),_:1})]),lp,t("td",np,[t("a",sp,[e("🀄️"),o(s)]),e(),t("a",rp,[e("🔗"),o(s)])])]),t("tr",null,[dp,_p,cp,t("td",ap,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ip]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[hp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fp]),_:1}),e(),gp]),up,t("td",mp,[t("a",pp,[e("🀄️"),o(s)]),e(),t("a",yp,[e("🔗"),o(s)])])]),t("tr",null,[xp,bp,kp,t("td",vp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ip]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[zp]),_:1}),e(),qp]),jp,t("td",Op,[t("a",Np,[e("🀄️"),o(s)]),e(),t("a",Lp,[e("🔗"),o(s)])])]),t("tr",null,[Cp,Kp,t("td",Pp,[o(l,{to:"/problem/0671.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Up]),_:1})]),Ep,t("td",Rp,[t("a",Wp,[e("🀄️"),o(s)]),e(),t("a",Gp,[e("🔗"),o(s)])])]),t("tr",null,[Sp,Yp,Dp,t("td",Qp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Zp]),_:1})]),Ap,t("td",Hp,[t("a",Jp,[e("🀄️"),o(s)]),e(),t("a",Xp,[e("🔗"),o(s)])])]),t("tr",null,[$p,ty,ey,t("td",oy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ly]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ny]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sy]),_:1}),e(),ry]),dy,t("td",_y,[t("a",cy,[e("🀄️"),o(s)]),e(),t("a",ay,[e("🔗"),o(s)])])]),t("tr",null,[iy,hy,t("td",fy,[o(l,{to:"/problem/0700.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uy]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[my]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[py]),_:1})]),yy,t("td",xy,[t("a",by,[e("🀄️"),o(s)]),e(),t("a",ky,[e("🔗"),o(s)])])]),t("tr",null,[vy,wy,t("td",Iy,[o(l,{to:"/problem/0701.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qy]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[jy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Oy]),_:1})]),Ny,t("td",Ly,[t("a",Cy,[e("🀄️"),o(s)]),e(),t("a",Ky,[e("🔗"),o(s)])])]),t("tr",null,[Py,By,t("td",Vy,[o(l,{to:"/problem/0703.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ty,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Uy]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ey]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ry]),_:1}),e(),Wy]),Gy,t("td",Sy,[t("a",Yy,[e("🀄️"),o(s)]),e(),t("a",Dy,[e("🔗"),o(s)])])]),t("tr",null,[Qy,Fy,My,t("td",Zy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ay]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Jy]),_:1}),e(),Xy]),$y,t("td",tx,[t("a",ex,[e("🀄️"),o(s)]),e(),t("a",ox,[e("🔗"),o(s)])])]),t("tr",null,[lx,nx,sx,t("td",rx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dx]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[_x]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[cx]),_:1}),e(),ax]),ix,t("td",hx,[t("a",fx,[e("🀄️"),o(s)]),e(),t("a",gx,[e("🔗"),o(s)])])]),t("tr",null,[ux,mx,t("td",px,[o(l,{to:"/problem/0783.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kx]),_:1}),e(),vx]),wx,t("td",Ix,[t("a",zx,[e("🀄️"),o(s)]),e(),t("a",qx,[e("🔗"),o(s)])])]),t("tr",null,[jx,Ox,Nx,t("td",Lx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kx]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Px]),_:1})]),Bx,t("td",Vx,[t("a",Tx,[e("🀄️"),o(s)]),e(),t("a",Ux,[e("🔗"),o(s)])])]),t("tr",null,[Ex,Rx,Wx,t("td",Gx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Yx]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Dx]),_:1}),e(),Qx]),Fx,t("td",Mx,[t("a",Zx,[e("🀄️"),o(s)]),e(),t("a",Ax,[e("🔗"),o(s)])])]),t("tr",null,[Hx,Jx,Xx,t("td",$x,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ob]),_:1}),e(),lb]),nb,t("td",sb,[t("a",rb,[e("🀄️"),o(s)]),e(),t("a",db,[e("🔗"),o(s)])])]),t("tr",null,[_b,cb,ab,t("td",ib,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gb]),_:1}),e(),ub]),mb,t("td",pb,[t("a",yb,[e("🀄️"),o(s)]),e(),t("a",xb,[e("🔗"),o(s)])])]),t("tr",null,[bb,kb,t("td",vb,[o(l,{to:"/problem/0872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ib]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zb]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qb]),_:1})]),jb,t("td",Ob,[t("a",Nb,[e("🀄️"),o(s)]),e(),t("a",Lb,[e("🔗"),o(s)])])]),t("tr",null,[Cb,Kb,t("td",Pb,[o(l,{to:"/problem/0889.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vb]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Tb]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Ub]),_:1}),e(),Eb]),Rb,t("td",Wb,[t("a",Gb,[e("🀄️"),o(s)]),e(),t("a",Sb,[e("🔗"),o(s)])])]),t("tr",null,[Yb,Db,Qb,t("td",Fb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mb]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Zb]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ab]),_:1}),e(),Hb]),Jb,t("td",Xb,[t("a",$b,[e("🀄️"),o(s)]),e(),t("a",t3,[e("🔗"),o(s)])])]),t("tr",null,[e3,o3,t("td",l3,[o(l,{to:"/problem/0897.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",n3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[s3]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[r3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[d3]),_:1}),e(),_3]),c3,t("td",a3,[t("a",i3,[e("🀄️"),o(s)]),e(),t("a",h3,[e("🔗"),o(s)])])]),t("tr",null,[f3,g3,u3,t("td",m3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[p3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[y3]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[x3]),_:1}),e(),b3]),k3,t("td",v3,[t("a",w3,[e("🀄️"),o(s)]),e(),t("a",I3,[e("🔗"),o(s)])])]),t("tr",null,[z3,q3,t("td",j3,[o(l,{to:"/problem/0938.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",O3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[N3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[L3]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[C3]),_:1}),e(),K3]),P3,t("td",B3,[t("a",V3,[e("🀄️"),o(s)]),e(),t("a",T3,[e("🔗"),o(s)])])]),t("tr",null,[U3,E3,t("td",R3,[o(l,{to:"/problem/0951.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",W3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[G3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[S3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Y3]),_:1})]),D3,t("td",Q3,[t("a",F3,[e("🀄️"),o(s)]),e(),t("a",M3,[e("🔗"),o(s)])])]),t("tr",null,[Z3,A3,t("td",H3,[o(l,{to:"/problem/0958.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",J3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[X3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[t0]),_:1})]),e0,t("td",o0,[t("a",l0,[e("🀄️"),o(s)]),e(),t("a",n0,[e("🔗"),o(s)])])]),t("tr",null,[s0,r0,t("td",d0,[o(l,{to:"/problem/0965.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[c0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[a0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[i0]),_:1}),e(),h0]),f0,t("td",g0,[t("a",u0,[e("🀄️"),o(s)]),e(),t("a",m0,[e("🔗"),o(s)])])]),t("tr",null,[p0,y0,x0,t("td",b0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[k0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[v0]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[w0]),_:1}),e(),I0]),z0,t("td",q0,[t("a",j0,[e("🀄️"),o(s)]),e(),t("a",O0,[e("🔗"),o(s)])])]),t("tr",null,[N0,L0,C0,t("td",K0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[P0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B0]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[V0]),_:1})]),T0,t("td",U0,[t("a",E0,[e("🀄️"),o(s)]),e(),t("a",R0,[e("🔗"),o(s)])])]),t("tr",null,[W0,G0,S0,t("td",Y0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[D0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q0]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[F0]),_:1})]),M0,t("td",Z0,[t("a",A0,[e("🀄️"),o(s)]),e(),t("a",H0,[e("🔗"),o(s)])])]),t("tr",null,[J0,X0,$0,t("td",t4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[e4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[o4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[l4]),_:1}),e(),n4]),s4,t("td",r4,[t("a",d4,[e("🀄️"),o(s)]),e(),t("a",_4,[e("🔗"),o(s)])])]),t("tr",null,[c4,a4,i4,t("td",h4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[f4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[g4]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[u4]),_:1}),e(),m4]),p4,t("td",y4,[t("a",x4,[e("🀄️"),o(s)]),e(),t("a",b4,[e("🔗"),o(s)])])]),t("tr",null,[k4,v4,t("td",w4,[o(l,{to:"/problem/0993.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",I4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[z4]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[q4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[j4]),_:1}),e(),O4]),N4,t("td",L4,[t("a",C4,[e("🀄️"),o(s)]),e(),t("a",K4,[e("🔗"),o(s)])])]),t("tr",null,[P4,B4,V4,t("td",T4,[o(l,{to:"/tag/tree.html"},{default:n(()=>[U4]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[E4]),_:1})]),R4,t("td",W4,[t("a",G4,[e("🀄️"),o(s)]),e(),t("a",S4,[e("🔗"),o(s)])])]),t("tr",null,[Y4,D4,t("td",Q4,[o(l,{to:"/problem/1008.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",F4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[M4]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Z4]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[A4]),_:1}),e(),H4]),J4,t("td",X4,[t("a",$4,[e("🀄️"),o(s)]),e(),t("a",t5,[e("🔗"),o(s)])])]),t("tr",null,[e5,o5,t("td",l5,[o(l,{to:"/problem/1022.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",n5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[s5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[r5]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[d5]),_:1})]),_5,t("td",c5,[t("a",a5,[e("🀄️"),o(s)]),e(),t("a",i5,[e("🔗"),o(s)])])]),t("tr",null,[h5,f5,g5,t("td",u5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[m5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[p5]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[y5]),_:1})]),x5,t("td",b5,[t("a",k5,[e("🀄️"),o(s)]),e(),t("a",v5,[e("🔗"),o(s)])])]),t("tr",null,[w5,I5,t("td",z5,[o(l,{to:"/problem/1028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",q5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[j5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[O5]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[N5]),_:1}),e(),L5]),C5,t("td",K5,[t("a",P5,[e("🀄️"),o(s)]),e(),t("a",B5,[e("🔗"),o(s)])])]),t("tr",null,[V5,T5,U5,t("td",E5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[R5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[W5]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[G5]),_:1}),e(),S5]),Y5,t("td",D5,[t("a",Q5,[e("🀄️"),o(s)]),e(),t("a",F5,[e("🔗"),o(s)])])]),t("tr",null,[M5,Z5,A5,t("td",H5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[J5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[X5]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$5]),_:1})]),t6,t("td",e6,[t("a",o6,[e("🀄️"),o(s)]),e(),t("a",l6,[e("🔗"),o(s)])])]),t("tr",null,[n6,s6,r6,t("td",d6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_6]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[c6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[a6]),_:1})]),i6,t("td",h6,[t("a",f6,[e("🀄️"),o(s)]),e(),t("a",g6,[e("🔗"),o(s)])])]),t("tr",null,[u6,m6,p6,t("td",y6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[x6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[b6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[k6]),_:1}),e(),v6]),w6,t("td",I6,[t("a",z6,[e("🀄️"),o(s)]),e(),t("a",q6,[e("🔗"),o(s)])])]),t("tr",null,[j6,O6,N6,t("td",L6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[C6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[K6]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[P6]),_:1})]),B6,t("td",V6,[t("a",T6,[e("🀄️"),o(s)]),e(),t("a",U6,[e("🔗"),o(s)])])]),t("tr",null,[E6,R6,W6,t("td",G6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[S6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Y6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[D6]),_:1}),e(),Q6]),F6,t("td",M6,[t("a",Z6,[e("🀄️"),o(s)]),e(),t("a",A6,[e("🔗"),o(s)])])]),t("tr",null,[H6,J6,X6,t("td",$6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[t7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[e7]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[o7]),_:1})]),l7,t("td",n7,[t("a",s7,[e("🀄️"),o(s)]),e(),t("a",r7,[e("🔗"),o(s)])])]),t("tr",null,[d7,_7,t("td",c7,[o(l,{to:"/problem/1161.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",a7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[i7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[h7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[f7]),_:1}),e(),g7]),u7,t("td",m7,[t("a",p7,[e("🀄️"),o(s)]),e(),t("a",y7,[e("🔗"),o(s)])])]),t("tr",null,[x7,b7,k7,t("td",v7,[o(l,{to:"/tag/stack.html"},{default:n(()=>[w7]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[I7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[z7]),_:1}),e(),q7]),j7,t("td",O7,[t("a",N7,[e("🀄️"),o(s)]),e(),t("a",L7,[e("🔗"),o(s)])])]),t("tr",null,[C7,K7,P7,t("td",B7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[V7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[T7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[U7]),_:1}),e(),E7]),R7,t("td",W7,[t("a",G7,[e("🀄️"),o(s)]),e(),t("a",S7,[e("🔗"),o(s)])])]),t("tr",null,[Y7,D7,Q7,t("td",F7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[M7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Z7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[A7]),_:1}),e(),H7]),J7,t("td",X7,[t("a",$7,[e("🀄️"),o(s)]),e(),t("a",t9,[e("🔗"),o(s)])])]),t("tr",null,[e9,o9,t("td",l9,[o(l,{to:"/problem/1261.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",n9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[s9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[r9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[d9]),_:1}),e(),_9]),c9,t("td",a9,[t("a",i9,[e("🀄️"),o(s)]),e(),t("a",h9,[e("🔗"),o(s)])])]),t("tr",null,[f9,g9,u9,t("td",m9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[p9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[y9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[x9]),_:1}),e(),b9]),k9,t("td",v9,[t("a",w9,[e("🀄️"),o(s)]),e(),t("a",I9,[e("🔗"),o(s)])])]),t("tr",null,[z9,q9,j9,t("td",O9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[N9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[L9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[C9]),_:1}),e(),K9]),P9,t("td",B9,[t("a",V9,[e("🀄️"),o(s)]),e(),t("a",T9,[e("🔗"),o(s)])])]),t("tr",null,[U9,E9,R9,t("td",W9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[G9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[S9]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Y9]),_:1}),e(),D9]),Q9,t("td",F9,[t("a",M9,[e("🀄️"),o(s)]),e(),t("a",Z9,[e("🔗"),o(s)])])]),t("tr",null,[A9,H9,J9,t("td",X9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[e8]),_:1}),e(),o8]),l8,t("td",n8,[t("a",s8,[e("🀄️"),o(s)]),e(),t("a",r8,[e("🔗"),o(s)])])]),t("tr",null,[d8,_8,c8,t("td",a8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[i8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[h8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[f8]),_:1})]),g8,t("td",u8,[t("a",m8,[e("🀄️"),o(s)]),e(),t("a",p8,[e("🔗"),o(s)])])]),t("tr",null,[y8,x8,b8,t("td",k8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w8]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[I8]),_:1})]),z8,t("td",q8,[t("a",j8,[e("🀄️"),o(s)]),e(),t("a",O8,[e("🔗"),o(s)])])]),t("tr",null,[N8,L8,C8,t("td",K8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[P8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[V8]),_:1}),e(),T8]),U8,t("td",E8,[t("a",R8,[e("🀄️"),o(s)]),e(),t("a",W8,[e("🔗"),o(s)])])]),t("tr",null,[G8,S8,Y8,t("td",D8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Q8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F8]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[M8]),_:1}),e(),Z8]),A8,t("td",H8,[t("a",J8,[e("🀄️"),o(s)]),e(),t("a",X8,[e("🔗"),o(s)])])]),t("tr",null,[$8,tk,t("td",ek,[o(l,{to:"/problem/1372.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ok,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nk]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sk]),_:1}),e(),rk]),dk,t("td",_k,[t("a",ck,[e("🀄️"),o(s)]),e(),t("a",ak,[e("🔗"),o(s)])])]),t("tr",null,[ik,hk,fk,t("td",gk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mk]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[pk]),_:1}),e(),yk]),xk,t("td",bk,[t("a",kk,[e("🀄️"),o(s)]),e(),t("a",vk,[e("🔗"),o(s)])])]),t("tr",null,[wk,Ik,zk,t("td",qk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ok]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Nk]),_:1})]),Lk,t("td",Ck,[t("a",Kk,[e("🀄️"),o(s)]),e(),t("a",Pk,[e("🔗"),o(s)])])]),t("tr",null,[Bk,Vk,Tk,t("td",Uk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ek]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Wk]),_:1}),e(),Gk]),Sk,t("td",Yk,[t("a",Dk,[e("🀄️"),o(s)]),e(),t("a",Qk,[e("🔗"),o(s)])])]),t("tr",null,[Fk,Mk,t("td",Zk,[o(l,{to:"/problem/1379.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ak,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xk]),_:1}),e(),$k]),tv,t("td",ev,[t("a",ov,[e("🀄️"),o(s)]),e(),t("a",lv,[e("🔗"),o(s)])])]),t("tr",null,[nv,sv,rv,t("td",dv,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[_v]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[cv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[av]),_:1}),e(),iv]),hv,t("td",fv,[t("a",gv,[e("🀄️"),o(s)]),e(),t("a",uv,[e("🔗"),o(s)])])]),t("tr",null,[mv,pv,yv,t("td",xv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vv]),_:1}),e(),wv]),Iv,t("td",zv,[t("a",qv,[e("🀄️"),o(s)]),e(),t("a",jv,[e("🔗"),o(s)])])]),t("tr",null,[Ov,Nv,Lv,t("td",Cv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Kv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Bv]),_:1}),e(),Vv]),Tv,t("td",Uv,[t("a",Ev,[e("🀄️"),o(s)]),e(),t("a",Rv,[e("🔗"),o(s)])])]),t("tr",null,[Wv,Gv,t("td",Sv,[o(l,{to:"/problem/1448.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Dv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Fv]),_:1}),e(),Mv]),Zv,t("td",Av,[t("a",Hv,[e("🀄️"),o(s)]),e(),t("a",Jv,[e("🔗"),o(s)])])]),t("tr",null,[Xv,$v,tw,t("td",ew,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[ow]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[lw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nw]),_:1}),e(),sw]),rw,t("td",dw,[t("a",_w,[e("🀄️"),o(s)]),e(),t("a",cw,[e("🔗"),o(s)])])]),t("tr",null,[aw,iw,hw,t("td",fw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mw]),_:1}),e(),pw]),yw,t("td",xw,[t("a",bw,[e("🀄️"),o(s)]),e(),t("a",kw,[e("🔗"),o(s)])])]),t("tr",null,[vw,ww,Iw,t("td",zw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ow]),_:1}),e(),Nw]),Lw,t("td",Cw,[t("a",Kw,[e("🀄️"),o(s)]),e(),t("a",Pw,[e("🔗"),o(s)])])]),t("tr",null,[Bw,Vw,Tw,t("td",Uw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ew]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ww]),_:1}),e(),Gw]),Sw,t("td",Yw,[t("a",Dw,[e("🀄️"),o(s)]),e(),t("a",Qw,[e("🔗"),o(s)])])]),t("tr",null,[Fw,Mw,Zw,t("td",Aw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xw]),_:1}),e(),$w]),tI,t("td",eI,[t("a",oI,[e("🀄️"),o(s)]),e(),t("a",lI,[e("🔗"),o(s)])])]),t("tr",null,[nI,sI,rI,t("td",dI,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_I]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[cI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aI]),_:1}),e(),iI]),hI,t("td",fI,[t("a",gI,[e("🀄️"),o(s)]),e(),t("a",uI,[e("🔗"),o(s)])])]),t("tr",null,[mI,pI,yI,t("td",xI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kI]),_:1})]),vI,t("td",wI,[t("a",II,[e("🀄️"),o(s)]),e(),t("a",zI,[e("🔗"),o(s)])])]),t("tr",null,[qI,jI,OI,t("td",NI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[LI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[CI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[KI]),_:1}),e(),PI]),BI,t("td",VI,[t("a",TI,[e("🀄️"),o(s)]),e(),t("a",UI,[e("🔗"),o(s)])])]),t("tr",null,[EI,RI,t("td",WI,[o(l,{to:"/problem/1522.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",GI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[SI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YI]),_:1})]),DI,t("td",QI,[t("a",FI,[e("🀄️"),o(s)]),e(),t("a",MI,[e("🔗"),o(s)])])]),t("tr",null,[ZI,AI,HI,t("td",JI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$I]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[tz]),_:1})]),ez,t("td",oz,[t("a",lz,[e("🀄️"),o(s)]),e(),t("a",nz,[e("🔗"),o(s)])])]),t("tr",null,[sz,rz,dz,t("td",_z,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cz]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[az]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[iz]),_:1}),e(),hz]),fz,t("td",gz,[t("a",uz,[e("🀄️"),o(s)]),e(),t("a",mz,[e("🔗"),o(s)])])]),t("tr",null,[pz,yz,xz,t("td",bz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[kz]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[vz]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[wz]),_:1}),e(),Iz]),zz,t("td",qz,[t("a",jz,[e("🀄️"),o(s)]),e(),t("a",Oz,[e("🔗"),o(s)])])]),t("tr",null,[Nz,Lz,Cz,t("td",Kz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Pz]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Bz]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Vz]),_:1}),e(),Tz]),Uz,t("td",Ez,[t("a",Rz,[e("🀄️"),o(s)]),e(),t("a",Wz,[e("🔗"),o(s)])])]),t("tr",null,[Gz,Sz,Yz,t("td",Dz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Qz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fz]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Mz]),_:1}),e(),Zz]),Az,t("td",Hz,[t("a",Jz,[e("🀄️"),o(s)]),e(),t("a",Xz,[e("🔗"),o(s)])])]),t("tr",null,[$z,tq,eq,t("td",oq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[sq]),_:1})]),rq,t("td",dq,[t("a",_q,[e("🀄️"),o(s)]),e(),t("a",cq,[e("🔗"),o(s)])])]),t("tr",null,[aq,iq,hq,t("td",fq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[uq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[mq]),_:1})]),pq,t("td",yq,[t("a",xq,[e("🀄️"),o(s)]),e(),t("a",bq,[e("🔗"),o(s)])])]),t("tr",null,[kq,vq,wq,t("td",Iq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qq]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[jq]),_:1}),e(),Oq]),Nq,t("td",Lq,[t("a",Cq,[e("🀄️"),o(s)]),e(),t("a",Kq,[e("🔗"),o(s)])])]),t("tr",null,[Pq,Bq,Vq,t("td",Tq,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Uq]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Eq]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Rq]),_:1}),e(),Wq]),Gq,t("td",Sq,[t("a",Yq,[e("🀄️"),o(s)]),e(),t("a",Dq,[e("🔗"),o(s)])])]),t("tr",null,[Qq,Fq,Mq,t("td",Zq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Aq]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Hq]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Jq]),_:1}),e(),Xq]),$q,t("td",tj,[t("a",ej,[e("🀄️"),o(s)]),e(),t("a",oj,[e("🔗"),o(s)])])]),t("tr",null,[lj,nj,sj,t("td",rj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cj]),_:1})]),aj,t("td",ij,[t("a",hj,[e("🀄️"),o(s)]),e(),t("a",fj,[e("🔗"),o(s)])])]),t("tr",null,[gj,uj,mj,t("td",pj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yj]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[xj]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[bj]),_:1}),e(),kj]),vj,t("td",wj,[t("a",Ij,[e("🀄️"),o(s)]),e(),t("a",zj,[e("🔗"),o(s)])])]),t("tr",null,[qj,jj,Oj,t("td",Nj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Lj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cj]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Kj]),_:1}),e(),Pj]),Bj,t("td",Vj,[t("a",Tj,[e("🀄️"),o(s)]),e(),t("a",Uj,[e("🔗"),o(s)])])]),t("tr",null,[Ej,Rj,Wj,t("td",Gj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Yj]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Dj]),_:1})]),Qj,t("td",Fj,[t("a",Mj,[e("🀄️"),o(s)]),e(),t("a",Zj,[e("🔗"),o(s)])])]),t("tr",null,[Aj,Hj,Jj,t("td",Xj,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$j]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tO]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[eO]),_:1}),e(),oO]),lO,t("td",nO,[t("a",sO,[e("🀄️"),o(s)]),e(),t("a",rO,[e("🔗"),o(s)])])]),t("tr",null,[dO,_O,cO,t("td",aO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[iO]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[hO]),_:1})]),fO,t("td",gO,[t("a",uO,[e("🀄️"),o(s)]),e(),t("a",mO,[e("🔗"),o(s)])])]),t("tr",null,[pO,yO,xO,t("td",bO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[wO]),_:1}),e(),IO]),zO,t("td",qO,[t("a",jO,[e("🀄️"),o(s)]),e(),t("a",OO,[e("🔗"),o(s)])])]),t("tr",null,[NO,LO,CO,t("td",KO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[PO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[BO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[VO]),_:1}),e(),TO]),UO,t("td",EO,[t("a",RO,[e("🀄️"),o(s)]),e(),t("a",WO,[e("🔗"),o(s)])])]),t("tr",null,[GO,SO,YO,t("td",DO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[QO]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[FO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[MO]),_:1}),e(),ZO]),AO,t("td",HO,[t("a",JO,[e("🀄️"),o(s)]),e(),t("a",XO,[e("🔗"),o(s)])])]),t("tr",null,[$O,tN,eN,t("td",oN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lN]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[nN]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[sN]),_:1}),e(),rN]),dN,t("td",_N,[t("a",cN,[e("🀄️"),o(s)]),e(),t("a",aN,[e("🔗"),o(s)])])]),t("tr",null,[iN,hN,fN,t("td",gN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mN]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[pN]),_:1}),e(),yN]),xN,t("td",bN,[t("a",kN,[e("🀄️"),o(s)]),e(),t("a",vN,[e("🔗"),o(s)])])]),t("tr",null,[wN,IN,zN,t("td",qN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ON]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[NN]),_:1})]),LN,t("td",CN,[t("a",KN,[e("🀄️"),o(s)]),e(),t("a",PN,[e("🔗"),o(s)])])]),t("tr",null,[BN,VN,TN,t("td",UN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[WN]),_:1}),e(),GN]),SN,t("td",YN,[t("a",DN,[e("🀄️"),o(s)]),e(),t("a",QN,[e("🔗"),o(s)])])]),t("tr",null,[FN,MN,ZN,t("td",AN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JN]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[XN]),_:1}),e(),$N]),tL,t("td",eL,[t("a",oL,[e("🀄️"),o(s)]),e(),t("a",lL,[e("🔗"),o(s)])])]),t("tr",null,[nL,sL,rL,t("td",dL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_L]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[cL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aL]),_:1}),e(),iL]),hL,t("td",fL,[t("a",gL,[e("🀄️"),o(s)]),e(),t("a",uL,[e("🔗"),o(s)])])]),t("tr",null,[mL,pL,yL,t("td",xL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kL]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[vL]),_:1}),e(),wL]),IL,t("td",zL,[t("a",qL,[e("🀄️"),o(s)]),e(),t("a",jL,[e("🔗"),o(s)])])]),t("tr",null,[OL,NL,LL,t("td",CL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PL]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[BL]),_:1}),e(),VL]),TL,t("td",UL,[t("a",EL,[e("🀄️"),o(s)]),e(),t("a",RL,[e("🔗"),o(s)])])]),t("tr",null,[WL,GL,t("td",SL,[o(l,{to:"/problem/2196.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",YL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[DL]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[QL]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[FL]),_:1}),e(),ML]),ZL,t("td",AL,[t("a",HL,[e("🀄️"),o(s)]),e(),t("a",JL,[e("🔗"),o(s)])])]),t("tr",null,[XL,$L,t("td",tC,[o(l,{to:"/problem/2236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",eC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oC]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[lC]),_:1})]),nC,t("td",sC,[t("a",rC,[e("🀄️"),o(s)]),e(),t("a",dC,[e("🔗"),o(s)])])]),t("tr",null,[_C,cC,aC,t("td",iC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fC]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[gC]),_:1}),e(),uC]),mC,t("td",pC,[t("a",yC,[e("🀄️"),o(s)]),e(),t("a",xC,[e("🔗"),o(s)])])]),t("tr",null,[bC,kC,vC,t("td",wC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zC]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qC]),_:1})]),jC,t("td",OC,[t("a",NC,[e("🀄️"),o(s)]),e(),t("a",LC,[e("🔗"),o(s)])])]),t("tr",null,[CC,KC,PC,t("td",BC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[VC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[TC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[UC]),_:1}),e(),EC]),RC,t("td",WC,[t("a",GC,[e("🀄️"),o(s)]),e(),t("a",SC,[e("🔗"),o(s)])])]),t("tr",null,[YC,DC,QC,t("td",FC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[MC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ZC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[AC]),_:1}),e(),HC]),JC,t("td",XC,[t("a",$C,[e("🀄️"),o(s)]),e(),t("a",tK,[e("🔗"),o(s)])])]),t("tr",null,[eK,oK,lK,t("td",nK,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[sK]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dK]),_:1}),e(),_K]),cK,t("td",aK,[t("a",iK,[e("🀄️"),o(s)]),e(),t("a",hK,[e("🔗"),o(s)])])]),t("tr",null,[fK,gK,t("td",uK,[o(l,{to:"/problem/2331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xK]),_:1})]),bK,t("td",kK,[t("a",vK,[e("🀄️"),o(s)]),e(),t("a",wK,[e("🔗"),o(s)])])]),t("tr",null,[IK,zK,qK,t("td",jK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[NK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LK]),_:1}),e(),CK]),KK,t("td",PK,[t("a",BK,[e("🀄️"),o(s)]),e(),t("a",VK,[e("🔗"),o(s)])])]),t("tr",null,[TK,UK,EK,t("td",RK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[WK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[GK]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[SK]),_:1})]),YK,t("td",DK,[t("a",QK,[e("🀄️"),o(s)]),e(),t("a",FK,[e("🔗"),o(s)])])]),t("tr",null,[MK,ZK,AK,t("td",HK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[JK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$K]),_:1}),e(),tP]),eP,t("td",oP,[t("a",lP,[e("🀄️"),o(s)]),e(),t("a",nP,[e("🔗"),o(s)])])]),t("tr",null,[sP,rP,t("td",dP,[o(l,{to:"/problem/2415.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_P,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[iP]),_:1}),e(),hP]),fP,t("td",gP,[t("a",uP,[e("🀄️"),o(s)]),e(),t("a",mP,[e("🔗"),o(s)])])]),t("tr",null,[pP,yP,xP,t("td",bP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kP]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[vP]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[wP]),_:1}),e(),IP]),zP,t("td",qP,[t("a",jP,[e("🀄️"),o(s)]),e(),t("a",OP,[e("🔗"),o(s)])])]),t("tr",null,[NP,LP,CP,t("td",KP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[PP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[BP]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[VP]),_:1}),e(),TP]),UP,t("td",EP,[t("a",RP,[e("🀄️"),o(s)]),e(),t("a",WP,[e("🔗"),o(s)])])]),t("tr",null,[GP,SP,YP,t("td",DP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[QP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MP]),_:1}),e(),ZP]),AP,t("td",HP,[t("a",JP,[e("🀄️"),o(s)]),e(),t("a",XP,[e("🔗"),o(s)])])]),t("tr",null,[$P,tB,t("td",eB,[o(l,{to:"/problem/2458.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sB]),_:1}),e(),rB]),dB,t("td",_B,[t("a",cB,[e("🀄️"),o(s)]),e(),t("a",aB,[e("🔗"),o(s)])])]),t("tr",null,[iB,hB,t("td",fB,[o(l,{to:"/problem/2467.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[pB]),_:1}),e(),yB]),xB,t("td",bB,[t("a",kB,[e("🀄️"),o(s)]),e(),t("a",vB,[e("🔗"),o(s)])])]),t("tr",null,[wB,IB,t("td",zB,[o(l,{to:"/problem/2471.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[OB]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[NB]),_:1})]),LB,t("td",CB,[t("a",KB,[e("🀄️"),o(s)]),e(),t("a",PB,[e("🔗"),o(s)])])]),t("tr",null,[BB,VB,TB,t("td",UB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RB]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[WB]),_:1}),e(),GB]),SB,t("td",YB,[t("a",DB,[e("🀄️"),o(s)]),e(),t("a",QB,[e("🔗"),o(s)])])]),t("tr",null,[FB,MB,ZB,t("td",AB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XB]),_:1}),e(),$B]),tV,t("td",eV,[t("a",oV,[e("🀄️"),o(s)]),e(),t("a",lV,[e("🔗"),o(s)])])]),t("tr",null,[nV,sV,rV,t("td",dV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_V]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cV]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[aV]),_:1}),e(),iV]),hV,t("td",fV,[t("a",gV,[e("🀄️"),o(s)]),e(),t("a",uV,[e("🔗"),o(s)])])]),t("tr",null,[mV,pV,yV,t("td",xV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bV]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[kV]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[vV]),_:1})]),wV,t("td",IV,[t("a",zV,[e("🀄️"),o(s)]),e(),t("a",qV,[e("🔗"),o(s)])])]),t("tr",null,[jV,OV,NV,t("td",LV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[CV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KV]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[PV]),_:1}),e(),BV]),VV,t("td",TV,[t("a",UV,[e("🀄️"),o(s)]),e(),t("a",EV,[e("🔗"),o(s)])])]),t("tr",null,[RV,WV,GV,t("td",SV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[YV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DV]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[QV]),_:1}),e(),FV]),MV,t("td",ZV,[t("a",AV,[e("🀄️"),o(s)]),e(),t("a",HV,[e("🔗"),o(s)])])]),t("tr",null,[JV,XV,t("td",$V,[o(l,{to:"/problem/2583.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[eT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[oT]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[lT]),_:1}),e(),nT]),sT,t("td",rT,[t("a",dT,[e("🀄️"),o(s)]),e(),t("a",_T,[e("🔗"),o(s)])])]),t("tr",null,[cT,aT,iT,t("td",hT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fT]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[gT]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[uT]),_:1}),e(),mT]),pT,t("td",yT,[t("a",xT,[e("🀄️"),o(s)]),e(),t("a",bT,[e("🔗"),o(s)])])]),t("tr",null,[kT,vT,t("td",wT,[o(l,{to:"/problem/2641.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",IT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jT]),_:1}),e(),OT]),NT,t("td",LT,[t("a",CT,[e("🀄️"),o(s)]),e(),t("a",KT,[e("🔗"),o(s)])])]),t("tr",null,[PT,BT,VT,t("td",TT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[UT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ET]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[RT]),_:1}),e(),WT]),GT,t("td",ST,[t("a",YT,[e("🀄️"),o(s)]),e(),t("a",DT,[e("🔗"),o(s)])])]),t("tr",null,[QT,FT,MT,t("td",ZT,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[AT]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[HT]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[JT]),_:1}),e(),XT]),$T,t("td",tU,[t("a",eU,[e("🀄️"),o(s)]),e(),t("a",oU,[e("🔗"),o(s)])])]),t("tr",null,[lU,nU,sU,t("td",rU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_U]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cU]),_:1})]),aU,t("td",iU,[t("a",hU,[e("🀄️"),o(s)]),e(),t("a",fU,[e("🔗"),o(s)])])]),t("tr",null,[gU,uU,mU,t("td",pU,[o(l,{to:"/tag/stack.html"},{default:n(()=>[yU]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[xU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bU]),_:1}),e(),kU]),vU,t("td",wU,[t("a",IU,[e("🀄️"),o(s)]),e(),t("a",zU,[e("🔗"),o(s)])])]),t("tr",null,[qU,jU,OU,t("td",NU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[LU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[CU]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[KU]),_:1}),e(),PU]),BU,t("td",VU,[t("a",TU,[e("🀄️"),o(s)]),e(),t("a",UU,[e("🔗"),o(s)])])]),t("tr",null,[EU,RU,WU,t("td",GU,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[SU]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[YU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DU]),_:1}),e(),QU]),FU,t("td",MU,[t("a",ZU,[e("🀄️"),o(s)]),e(),t("a",AU,[e("🔗"),o(s)])])]),t("tr",null,[HU,JU,XU,t("td",$U,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eE]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[oE]),_:1}),e(),lE]),nE,t("td",sE,[t("a",rE,[e("🀄️"),o(s)]),e(),t("a",dE,[e("🔗"),o(s)])])]),t("tr",null,[_E,cE,aE,t("td",iE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hE]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[fE]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gE]),_:1}),e(),uE]),mE,t("td",pE,[t("a",yE,[e("🀄️"),o(s)]),e(),t("a",xE,[e("🔗"),o(s)])])]),t("tr",null,[bE,kE,vE,t("td",wE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zE]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[qE]),_:1}),e(),jE]),OE,t("td",NE,[t("a",LE,[e("🀄️"),o(s)]),e(),t("a",CE,[e("🔗"),o(s)])])]),t("tr",null,[KE,PE,t("td",BE,[o(l,{to:"/problem/2872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",VE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[UE]),_:1})]),EE,t("td",RE,[t("a",WE,[e("🀄️"),o(s)]),e(),t("a",GE,[e("🔗"),o(s)])])]),t("tr",null,[SE,YE,DE,t("td",QE,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[FE]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ME]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ZE]),_:1}),e(),AE]),HE,t("td",JE,[t("a",XE,[e("🀄️"),o(s)]),e(),t("a",$E,[e("🔗"),o(s)])])]),t("tr",null,[tR,eR,oR,t("td",lR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sR]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rR]),_:1})]),dR,t("td",_R,[t("a",cR,[e("🀄️"),o(s)]),e(),t("a",aR,[e("🔗"),o(s)])])]),t("tr",null,[iR,hR,fR,t("td",gR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mR]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[pR]),_:1}),e(),yR]),xR,t("td",bR,[t("a",kR,[e("🀄️"),o(s)]),e(),t("a",vR,[e("🔗"),o(s)])])]),t("tr",null,[wR,IR,zR,t("td",qR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[OR]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[NR]),_:1}),e(),LR]),CR,t("td",KR,[t("a",PR,[e("🀄️"),o(s)]),e(),t("a",BR,[e("🔗"),o(s)])])]),t("tr",null,[VR,TR,UR,t("td",ER,[o(l,{to:"/tag/tree.html"},{default:n(()=>[RR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[WR]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[GR]),_:1})]),SR,t("td",YR,[t("a",DR,[e("🀄️"),o(s)]),e(),t("a",QR,[e("🔗"),o(s)])])]),t("tr",null,[FR,MR,ZR,t("td",AR,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[HR]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[JR]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[XR]),_:1}),e(),$R]),tW,t("td",eW,[t("a",oW,[e("🀄️"),o(s)]),e(),t("a",lW,[e("🔗"),o(s)])])]),t("tr",null,[nW,sW,rW,t("td",dW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_W]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[aW]),_:1}),e(),iW]),hW,t("td",fW,[t("a",gW,[e("🀄️"),o(s)]),e(),t("a",uW,[e("🔗"),o(s)])])]),t("tr",null,[mW,pW,t("td",yW,[o(l,{to:"/problem/3203.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vW]),_:1}),e(),wW]),IW,t("td",zW,[t("a",qW,[e("🀄️"),o(s)]),e(),t("a",jW,[e("🔗"),o(s)])])]),t("tr",null,[OW,NW,LW,t("td",CW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PW]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[BW]),_:1}),e(),VW]),TW,t("td",UW,[t("a",EW,[e("🀄️"),o(s)]),e(),t("a",RW,[e("🔗"),o(s)])])]),t("tr",null,[WW,GW,SW,t("td",YW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[DW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[QW]),_:1})]),FW,t("td",MW,[t("a",ZW,[e("🀄️"),o(s)]),e(),t("a",AW,[e("🔗"),o(s)])])]),t("tr",null,[HW,JW,XW,t("td",$W,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eG]),_:1})]),oG,t("td",lG,[t("a",nG,[e("🀄️"),o(s)]),e(),t("a",sG,[e("🔗"),o(s)])])]),t("tr",null,[rG,dG,t("td",_G,[o(l,{to:"/problem/3319.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iG]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[hG]),_:1}),e(),fG]),gG,t("td",uG,[t("a",mG,[e("🀄️"),o(s)]),e(),t("a",pG,[e("🔗"),o(s)])])]),t("tr",null,[yG,xG,bG,t("td",kG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wG]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[IG]),_:1}),e(),zG]),qG,t("td",jG,[t("a",OG,[e("🀄️"),o(s)]),e(),t("a",NG,[e("🔗"),o(s)])])]),t("tr",null,[LG,CG,KG,t("td",PG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[BG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[VG]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[TG]),_:1})]),UG,t("td",EG,[t("a",RG,[e("🀄️"),o(s)]),e(),t("a",WG,[e("🔗"),o(s)])])]),t("tr",null,[GG,SG,YG,t("td",DG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[QG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MG]),_:1})]),ZG,t("td",AG,[t("a",HG,[e("🀄️"),o(s)]),e(),t("a",JG,[e("🔗"),o(s)])])]),t("tr",null,[XG,$G,tS,t("td",eS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lS]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nS]),_:1})]),sS,t("td",rS,[t("a",dS,[e("🀄️"),o(s)]),e(),t("a",_S,[e("🔗"),o(s)])])]),t("tr",null,[cS,aS,iS,t("td",hS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gS]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[uS]),_:1}),e(),mS]),pS,t("td",yS,[t("a",xS,[e("🀄️"),o(s)]),e(),t("a",bS,[e("🔗"),o(s)])])]),t("tr",null,[kS,vS,wS,t("td",IS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jS]),_:1}),e(),OS]),NS,t("td",LS,[t("a",CS,[e("🀄️"),o(s)])])]),t("tr",null,[KS,PS,BS,t("td",VS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[US]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ES]),_:1})]),RS,t("td",WS,[t("a",GS,[e("🀄️"),o(s)])])]),t("tr",null,[SS,YS,DS,t("td",QS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[FS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[MS]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[ZS]),_:1})]),AS,t("td",HS,[t("a",JS,[e("🀄️"),o(s)])])]),t("tr",null,[XS,$S,tY,t("td",eY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nY]),_:1}),e(),sY]),rY,t("td",dY,[t("a",_Y,[e("🀄️"),o(s)])])]),t("tr",null,[cY,aY,iY,t("td",hY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fY]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[gY]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[uY]),_:1}),e(),mY]),pY,t("td",yY,[t("a",xY,[e("🀄️"),o(s)])])]),t("tr",null,[bY,kY,vY,t("td",wY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[zY]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[qY]),_:1})]),jY,t("td",OY,[t("a",NY,[e("🀄️"),o(s)])])]),t("tr",null,[LY,CY,KY,t("td",PY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[BY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[VY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[TY]),_:1}),e(),UY]),EY,t("td",RY,[t("a",WY,[e("🀄️"),o(s)])])]),t("tr",null,[GY,SY,YY,t("td",DY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[QY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MY]),_:1}),e(),ZY]),AY,t("td",HY,[t("a",JY,[e("🀄️"),o(s)])])]),t("tr",null,[XY,$Y,t("td",tD,[o(l,{to:"/offer/jz_offer_26_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",eD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lD]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[nD]),_:1})]),sD,t("td",rD,[t("a",dD,[e("🀄️"),o(s)])])]),t("tr",null,[_D,cD,t("td",aD,[o(l,{to:"/offer/jz_offer_27_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",iD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gD]),_:1}),e(),uD]),mD,t("td",pD,[t("a",yD,[e("🀄️"),o(s)])])]),t("tr",null,[xD,bD,t("td",kD,[o(l,{to:"/offer/jz_offer_28_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ID]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[zD]),_:1}),e(),qD]),jD,t("td",OD,[t("a",ND,[e("🀄️"),o(s)])])]),t("tr",null,[LD,CD,t("td",KD,[o(l,{to:"/offer/jz_offer_32_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",PD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[BD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[VD]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[TD]),_:1})]),UD,t("td",ED,[t("a",RD,[e("🀄️"),o(s)])])]),t("tr",null,[WD,GD,t("td",SD,[o(l,{to:"/offer/jz_offer_32_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",YD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[DD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[QD]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[FD]),_:1})]),MD,t("td",ZD,[t("a",AD,[e("🀄️"),o(s)])])]),t("tr",null,[HD,JD,t("td",XD,[o(l,{to:"/offer/jz_offer_32_3.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$D,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[eQ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[oQ]),_:1})]),lQ,t("td",nQ,[t("a",sQ,[e("🀄️"),o(s)])])]),t("tr",null,[rQ,dQ,t("td",_Q,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cQ,[o(l,{to:"/tag/stack.html"},{default:n(()=>[aQ]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[iQ]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[hQ]),_:1}),e(),fQ]),gQ,t("td",uQ,[t("a",mQ,[e("🀄️"),o(s)])])]),t("tr",null,[pQ,yQ,t("td",xQ,[o(l,{to:"/offer/jz_offer_34_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vQ]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[wQ]),_:1}),e(),IQ]),zQ,t("td",qQ,[t("a",jQ,[e("🀄️"),o(s)])])]),t("tr",null,[OQ,NQ,t("td",LQ,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",CQ,[o(l,{to:"/tag/stack.html"},{default:n(()=>[KQ]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[PQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[BQ]),_:1}),e(),VQ]),TQ,t("td",UQ,[t("a",EQ,[e("🀄️"),o(s)])])]),t("tr",null,[RQ,WQ,t("td",GQ,[o(l,{to:"/offer/jz_offer_37_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",SQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[YQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[QQ]),_:1}),e(),FQ]),MQ,t("td",ZQ,[t("a",AQ,[e("🀄️"),o(s)])])]),t("tr",null,[HQ,JQ,t("td",XQ,[o(l,{to:"/offer/jz_offer_54_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$Q,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eF]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[oF]),_:1}),e(),lF]),nF,t("td",sF,[t("a",rF,[e("🀄️"),o(s)])])]),t("tr",null,[dF,_F,t("td",cF,[o(l,{to:"/offer/jz_offer_55_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",aF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[iF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[hF]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[fF]),_:1}),e(),gF]),uF,t("td",mF,[t("a",pF,[e("🀄️"),o(s)])])]),t("tr",null,[yF,xF,t("td",bF,[o(l,{to:"/offer/jz_offer_55_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",kF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wF]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[IF]),_:1})]),zF,t("td",qF,[t("a",jF,[e("🀄️"),o(s)])])]),t("tr",null,[OF,NF,t("td",LF,[o(l,{to:"/offer/jz_offer_68_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",CF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PF]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[BF]),_:1}),e(),VF]),TF,t("td",UF,[t("a",EF,[e("🀄️"),o(s)])])]),t("tr",null,[RF,WF,t("td",GF,[o(l,{to:"/offer/jz_offer_68_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",SF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[YF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DF]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[QF]),_:1})]),FF,t("td",MF,[t("a",ZF,[e("🀄️"),o(s)])])]),t("tr",null,[AF,HF,t("td",JF,[o(l,{to:"/offer/jz_offer_07_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",XF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$F]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tM]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[eM]),_:1}),e(),oM]),lM,t("td",nM,[t("a",sM,[e("🀄️"),o(s)])])]),t("tr",null,[rM,dM,_M,t("td",cM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[iM]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[hM]),_:1}),e(),fM]),gM,t("td",uM,[t("a",mM,[e("🀄️"),o(s)])])]),t("tr",null,[pM,yM,xM,t("td",bM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[wM]),_:1}),e(),IM]),zM,t("td",qM,[t("a",jM,[e("🀄️"),o(s)])])]),t("tr",null,[OM,NM,LM,t("td",CM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[BM]),_:1}),e(),VM]),TM,t("td",UM,[t("a",EM,[e("🀄️"),o(s)])])]),t("tr",null,[RM,WM,t("td",GM,[o(l,{to:"/offer2/jz_offer_II_046.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",SM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[YM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[QM]),_:1}),e(),FM]),MM,t("td",ZM,[t("a",AM,[e("🀄️"),o(s)])])]),t("tr",null,[HM,JM,XM,t("td",$M,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eZ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[oZ]),_:1})]),lZ,t("td",nZ,[t("a",sZ,[e("🀄️"),o(s)])])]),t("tr",null,[rZ,dZ,t("td",_Z,[o(l,{to:"/offer2/jz_offer_II_048.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iZ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hZ]),_:1}),e(),fZ]),gZ,t("td",uZ,[t("a",mZ,[e("🀄️"),o(s)])])]),t("tr",null,[pZ,yZ,t("td",xZ,[o(l,{to:"/offer2/jz_offer_II_049.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vZ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[wZ]),_:1})]),IZ,t("td",zZ,[t("a",qZ,[e("🀄️"),o(s)])])]),t("tr",null,[jZ,OZ,t("td",NZ,[o(l,{to:"/offer2/jz_offer_II_050.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",LZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[CZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KZ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[PZ]),_:1})]),BZ,t("td",VZ,[t("a",TZ,[e("🀄️"),o(s)])])]),t("tr",null,[UZ,EZ,t("td",RZ,[o(l,{to:"/offer2/jz_offer_II_051.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",WZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[GZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[SZ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[YZ]),_:1}),e(),DZ]),QZ,t("td",FZ,[t("a",MZ,[e("🀄️"),o(s)])])]),t("tr",null,[ZZ,AZ,HZ,t("td",JZ,[o(l,{to:"/tag/stack.html"},{default:n(()=>[XZ]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[$Z]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tA]),_:1}),e(),eA]),oA,t("td",lA,[t("a",nA,[e("🀄️"),o(s)])])]),t("tr",null,[sA,rA,dA,t("td",_A,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aA]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[iA]),_:1}),e(),hA]),fA,t("td",gA,[t("a",uA,[e("🀄️"),o(s)])])]),t("tr",null,[mA,pA,yA,t("td",xA,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kA]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[vA]),_:1}),e(),wA]),IA,t("td",zA,[t("a",qA,[e("🀄️"),o(s)])])]),t("tr",null,[jA,OA,t("td",NA,[o(l,{to:"/offer2/jz_offer_II_055.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",LA,[o(l,{to:"/tag/stack.html"},{default:n(()=>[CA]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[KA]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[PA]),_:1}),e(),BA]),VA,t("td",TA,[t("a",UA,[e("🀄️"),o(s)])])]),t("tr",null,[EA,RA,t("td",WA,[o(l,{to:"/offer2/jz_offer_II_059.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",GA,[o(l,{to:"/tag/tree.html"},{default:n(()=>[SA]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[YA]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[DA]),_:1}),e(),QA]),FA,t("td",MA,[t("a",ZA,[e("🀄️"),o(s)])])]),t("tr",null,[AA,HA,JA,t("td",XA,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$A]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[tH]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[eH]),_:1}),e(),oH]),lH,t("td",nH,[t("a",sH,[e("🀄️"),o(s)])])]),t("tr",null,[rH,dH,_H,t("td",cH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aH]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[iH]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[hH]),_:1}),e(),fH]),gH,t("td",uH,[t("a",mH,[e("🀄️"),o(s)])])]),t("tr",null,[pH,yH,xH,t("td",bH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vH]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[wH]),_:1})]),IH,t("td",zH,[t("a",qH,[e("🀄️"),o(s)])])]),t("tr",null,[jH,OH,NH,t("td",LH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[CH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KH]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[PH]),_:1}),e(),BH]),VH,t("td",TH,[t("a",UH,[e("🀄️"),o(s)])])]),t("tr",null,[EH,RH,WH,t("td",GH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[SH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YH]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[DH]),_:1}),e(),QH]),FH,t("td",MH,[t("a",ZH,[e("🀄️"),o(s)])])]),t("tr",null,[AH,HH,JH,t("td",XH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$H]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tJ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[eJ]),_:1})]),oJ,t("td",lJ,[t("a",nJ,[e("🀄️"),o(s)])])]),t("tr",null,[sJ,rJ,dJ,t("td",_J,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cJ]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[aJ]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[iJ]),_:1}),e(),hJ]),fJ,t("td",gJ,[t("a",uJ,[e("🀄️"),o(s)])])]),t("tr",null,[mJ,pJ,yJ,t("td",xJ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kJ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[vJ]),_:1}),e(),wJ]),IJ,t("td",zJ,[t("a",qJ,[e("🀄️"),o(s)])])]),t("tr",null,[jJ,OJ,NJ,t("td",LJ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[CJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KJ]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[PJ]),_:1})]),BJ,t("td",VJ,[t("a",TJ,[e("🀄️"),o(s)])])]),t("tr",null,[UJ,EJ,RJ,t("td",WJ,[o(l,{to:"/tag/stack.html"},{default:n(()=>[GJ]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[SJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YJ]),_:1}),e(),DJ]),QJ,t("td",FJ,[t("a",MJ,[e("🀄️"),o(s)])])])])])])}const XJ=d(i,[["render",ZJ],["__file","tree.html.vue"]]);export{XJ as default};
