import{_,r as d,o as r,c as a,a as t,d as o,w as n,b as e,f as c}from"./app-aQeLbVW9.js";const i={},h=t("h1",{id:"最短路",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#最短路","aria-hidden":"true"},"#"),e(" 最短路")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),f=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("span",{class:"blue"},"最短路",-1),F=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),J=t("code",null,"字典树",-1),O=t("code",null,"线段树",-1),Q=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),G=t("code",null,"分治",-1),H=t("code",null,"回溯",-1),M=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ct=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),ft=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ft=t("td",{style:{"text-align":"center"}},"399",-1),Kt=t("td",{style:{"text-align":"left"}},"除法求值",-1),Rt={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Jt=t("code",null,"深度优先搜索",-1),Ot=t("code",null,"广度优先搜索",-1),Qt=t("code",null,"并查集",-1),Tt=t("code",null,"4+",-1),Ut=t("td",{style:{"text-align":"center"}},"🟠",-1),Xt={style:{"text-align":"center"}},At={href:"https://leetcode.cn/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Ht=t("td",{style:{"text-align":"center"}},"499",-1),Mt=t("td",{style:{"text-align":"left"}},"迷宫 III 🔒",-1),St=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),Zt=t("code",null,"广度优先搜索",-1),$t=t("code",null,"图",-1),te=t("code",null,"5+",-1),ee=t("td",{style:{"text-align":"center"}},"🔴",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"505",-1),de=t("td",{style:{"text-align":"left"}},"迷宫 II 🔒",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},ae=t("code",null,"深度优先搜索",-1),ce=t("code",null,"广度优先搜索",-1),ie=t("code",null,"图",-1),he=t("code",null,"4+",-1),ge=t("td",{style:{"text-align":"center"}},"🟠",-1),ue={style:{"text-align":"center"}},me={href:"https://leetcode.cn/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"743",-1),ye=t("td",{style:{"text-align":"left"}},"网络延迟时间",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"深度优先搜索",-1),we=t("code",null,"广度优先搜索",-1),ve=t("code",null,"图",-1),Ie=t("code",null,"2+",-1),qe=t("td",{style:{"text-align":"center"}},"🟠",-1),ze={style:{"text-align":"center"}},Le={href:"https://leetcode.cn/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},"787",-1),je=t("td",{style:{"text-align":"left"}},"K 站中转内最便宜的航班",-1),Ee=t("td",{style:{"text-align":"center"}},null,-1),Ne={style:{"text-align":"left"}},Pe=t("code",null,"深度优先搜索",-1),Be=t("code",null,"广度优先搜索",-1),Fe=t("code",null,"图",-1),Ke=t("code",null,"3+",-1),Re=t("td",{style:{"text-align":"center"}},"🟠",-1),De={style:{"text-align":"center"}},Je={href:"https://leetcode.cn/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},"882",-1),Te=t("td",{style:{"text-align":"left"}},"细分图中的可到达节点",-1),Ue=t("td",{style:{"text-align":"center"}},null,-1),Xe={style:{"text-align":"left"}},Ae=t("code",null,"图",-1),Ge=t("code",null,"最短路",-1),He=t("code",null,"堆（优先队列）",-1),Me=t("td",{style:{"text-align":"center"}},"🔴",-1),Se={style:{"text-align":"center"}},We={href:"https://leetcode.cn/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Ze=t("td",{style:{"text-align":"center"}},"1334",-1),$e=t("td",{style:{"text-align":"left"}},"阈值距离内邻居最少的城市",-1),to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"图",-1),lo=t("code",null,"动态规划",-1),no=t("code",null,"最短路",-1),so=t("td",{style:{"text-align":"center"}},"🟠",-1),_o={style:{"text-align":"center"}},ro={href:"https://leetcode.cn/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},"1368",-1),io=t("td",{style:{"text-align":"left"}},"使网格图至少有一条有效路径的最小代价",-1),ho=t("td",{style:{"text-align":"center"}},null,-1),go={style:{"text-align":"left"}},uo=t("code",null,"广度优先搜索",-1),mo=t("code",null,"图",-1),fo=t("code",null,"数组",-1),po=t("code",null,"3+",-1),yo=t("td",{style:{"text-align":"center"}},"🔴",-1),xo={style:{"text-align":"center"}},bo={href:"https://leetcode.cn/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"1514",-1),vo=t("td",{style:{"text-align":"left"}},"概率最大的路径",-1),Io=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},zo=t("code",null,"图",-1),Lo=t("code",null,"数组",-1),Co=t("code",null,"最短路",-1),Vo=t("code",null,"1+",-1),jo=t("td",{style:{"text-align":"center"}},"🟠",-1),Eo={style:{"text-align":"center"}},No={href:"https://leetcode.cn/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"1786",-1),Fo=t("td",{style:{"text-align":"left"}},"从第一个节点出发到最后一个节点的受限路径数",-1),Ko=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},Do=t("code",null,"图",-1),Jo=t("code",null,"拓扑排序",-1),Oo=t("code",null,"动态规划",-1),Qo=t("code",null,"2+",-1),To=t("td",{style:{"text-align":"center"}},"🟠",-1),Uo={style:{"text-align":"center"}},Xo={href:"https://leetcode.cn/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},Go=t("td",{style:{"text-align":"center"}},"1976",-1),Ho=t("td",{style:{"text-align":"left"}},"到达目的地的方案数",-1),Mo={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Wo=t("code",null,"图",-1),Yo=t("code",null,"拓扑排序",-1),Zo=t("code",null,"动态规划",-1),$o=t("code",null,"1+",-1),tl=t("td",{style:{"text-align":"center"}},"🟠",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"2045",-1),sl=t("td",{style:{"text-align":"left"}},"到达目的地的第二短时间",-1),dl=t("td",{style:{"text-align":"center"}},null,-1),_l={style:{"text-align":"left"}},rl=t("code",null,"广度优先搜索",-1),al=t("code",null,"图",-1),cl=t("code",null,"最短路",-1),il=t("td",{style:{"text-align":"center"}},"🔴",-1),hl={style:{"text-align":"center"}},gl={href:"https://leetcode.cn/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},"2093",-1),fl=t("td",{style:{"text-align":"left"}},"前往目标城市的最小费用 🔒",-1),pl=t("td",{style:{"text-align":"center"}},null,-1),yl={style:{"text-align":"left"}},xl=t("code",null,"图",-1),bl=t("code",null,"最短路",-1),kl=t("code",null,"堆（优先队列）",-1),wl=t("td",{style:{"text-align":"center"}},"🟠",-1),vl={style:{"text-align":"center"}},Il={href:"https://leetcode.cn/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},"2203",-1),Ll=t("td",{style:{"text-align":"left"}},"得到要求路径的最小带权子图",-1),Cl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},jl=t("code",null,"图",-1),El=t("code",null,"最短路",-1),Nl=t("td",{style:{"text-align":"center"}},"🔴",-1),Pl={style:{"text-align":"center"}},Bl={href:"https://leetcode.cn/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},"2290",-1),Rl=t("td",{style:{"text-align":"left"}},"到达角落需要移除障碍物的最小数目",-1),Dl={style:{"text-align":"center"}},Jl={style:{"text-align":"left"}},Ol=t("code",null,"广度优先搜索",-1),Ql=t("code",null,"图",-1),Tl=t("code",null,"数组",-1),Ul=t("code",null,"3+",-1),Xl=t("td",{style:{"text-align":"center"}},"🔴",-1),Al={style:{"text-align":"center"}},Gl={href:"https://leetcode.cn/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},"2297",-1),Sl=t("td",{style:{"text-align":"left"}},"跳跃游戏 VIII 🔒",-1),Wl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Zl=t("code",null,"栈",-1),$l=t("code",null,"图",-1),tn=t("code",null,"数组",-1),en=t("code",null,"3+",-1),on=t("td",{style:{"text-align":"center"}},"🟠",-1),ln={style:{"text-align":"center"}},nn={href:"https://leetcode.cn/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},"2473",-1),_n=t("td",{style:{"text-align":"left"}},"购买苹果的最低成本 🔒",-1),rn=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},cn=t("code",null,"图",-1),hn=t("code",null,"数组",-1),gn=t("code",null,"最短路",-1),un=t("code",null,"1+",-1),mn=t("td",{style:{"text-align":"center"}},"🟠",-1),fn={style:{"text-align":"center"}},pn={href:"https://leetcode.cn/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},"2577",-1),bn=t("td",{style:{"text-align":"left"}},"在网格图中访问一个格子的最少时间",-1),kn={style:{"text-align":"center"}},wn={style:{"text-align":"left"}},vn=t("code",null,"广度优先搜索",-1),In=t("code",null,"图",-1),qn=t("code",null,"数组",-1),zn=t("code",null,"3+",-1),Ln=t("td",{style:{"text-align":"center"}},"🔴",-1),Cn={style:{"text-align":"center"}},Vn={href:"https://leetcode.cn/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},"2642",-1),Nn=t("td",{style:{"text-align":"left"}},"设计可以求最短路径的图类",-1),Pn=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Fn=t("code",null,"图",-1),Kn=t("code",null,"设计",-1),Rn=t("code",null,"最短路",-1),Dn=t("code",null,"1+",-1),Jn=t("td",{style:{"text-align":"center"}},"🔴",-1),On={style:{"text-align":"center"}},Qn={href:"https://leetcode.cn/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},"2662",-1),Xn=t("td",{style:{"text-align":"left"}},"前往目标的最小代价",-1),An=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Hn=t("code",null,"图",-1),Mn=t("code",null,"数组",-1),Sn=t("code",null,"最短路",-1),Wn=t("code",null,"1+",-1),Yn=t("td",{style:{"text-align":"center"}},"🟠",-1),Zn={style:{"text-align":"center"}},$n={href:"https://leetcode.cn/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},ts={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},es=t("td",{style:{"text-align":"center"}},"2699",-1),os=t("td",{style:{"text-align":"left"}},"修改图中的边权",-1),ls=t("td",{style:{"text-align":"center"}},null,-1),ns={style:{"text-align":"left"}},ss=t("code",null,"图",-1),ds=t("code",null,"最短路",-1),_s=t("code",null,"堆（优先队列）",-1),rs=t("td",{style:{"text-align":"center"}},"🔴",-1),as={style:{"text-align":"center"}},cs={href:"https://leetcode.cn/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},is={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},"2714",-1),gs=t("td",{style:{"text-align":"left"}},"找到 K 次跨越的最短路径 🔒",-1),us=t("td",{style:{"text-align":"center"}},null,-1),ms={style:{"text-align":"left"}},fs=t("code",null,"图",-1),ps=t("code",null,"最短路",-1),ys=t("code",null,"堆（优先队列）",-1),xs=t("td",{style:{"text-align":"center"}},"🔴",-1),bs={style:{"text-align":"center"}},ks={href:"https://leetcode.cn/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},ws={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},vs=t("td",{style:{"text-align":"center"}},"2737",-1),Is=t("td",{style:{"text-align":"left"}},"找到最近的标记节点 🔒",-1),qs=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Ls=t("code",null,"图",-1),Cs=t("code",null,"数组",-1),Vs=t("code",null,"最短路",-1),js=t("code",null,"1+",-1),Es=t("td",{style:{"text-align":"center"}},"🟠",-1),Ns={style:{"text-align":"center"}},Ps={href:"https://leetcode.cn/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},"2959",-1),Ks=t("td",{style:{"text-align":"left"}},"关闭分部的可行集合数目",-1),Rs=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Js=t("code",null,"位运算",-1),Os=t("code",null,"图",-1),Qs=t("code",null,"枚举",-1),Ts=t("code",null,"2+",-1),Us=t("td",{style:{"text-align":"center"}},"🔴",-1),Xs={style:{"text-align":"center"}},As={href:"https://leetcode.cn/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},Gs={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},"2976",-1),Ms=t("td",{style:{"text-align":"left"}},"转换字符串的最小成本 I",-1),Ss=t("td",{style:{"text-align":"center"}},null,-1),Ws={style:{"text-align":"left"}},Ys=t("code",null,"图",-1),Zs=t("code",null,"数组",-1),$s=t("code",null,"字符串",-1),td=t("code",null,"1+",-1),ed=t("td",{style:{"text-align":"center"}},"🟠",-1),od={style:{"text-align":"center"}},ld={href:"https://leetcode.cn/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},nd={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},"2977",-1),dd=t("td",{style:{"text-align":"left"}},"转换字符串的最小成本 II",-1),_d=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},ad=t("code",null,"图",-1),cd=t("code",null,"字典树",-1),id=t("code",null,"数组",-1),hd=t("code",null,"3+",-1),gd=t("td",{style:{"text-align":"center"}},"🔴",-1),ud={style:{"text-align":"center"}},md={href:"https://leetcode.cn/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},fd={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},"3112",-1),yd=t("td",{style:{"text-align":"left"}},"访问消失节点的最少时间",-1),xd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},kd=t("code",null,"图",-1),wd=t("code",null,"数组",-1),vd=t("code",null,"最短路",-1),Id=t("code",null,"1+",-1),qd=t("td",{style:{"text-align":"center"}},"🟠",-1),zd={style:{"text-align":"center"}},Ld={href:"https://leetcode.cn/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},Cd={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},"3123",-1),jd=t("td",{style:{"text-align":"left"}},"最短路径中的边",-1),Ed=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Pd=t("code",null,"深度优先搜索",-1),Bd=t("code",null,"广度优先搜索",-1),Fd=t("code",null,"图",-1),Kd=t("code",null,"2+",-1),Rd=t("td",{style:{"text-align":"center"}},"🔴",-1),Dd={style:{"text-align":"center"}},Jd={href:"https://leetcode.cn/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Od={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"3286",-1),Td=t("td",{style:{"text-align":"left"}},"穿越网格图的安全路径",-1),Ud=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Ad=t("code",null,"广度优先搜索",-1),Gd=t("code",null,"图",-1),Hd=t("code",null,"数组",-1),Md=t("code",null,"3+",-1),Sd=t("td",{style:{"text-align":"center"}},"🟠",-1),Wd={style:{"text-align":"center"}},Yd={href:"https://leetcode.cn/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},Zd={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},"3341",-1),t_=t("td",{style:{"text-align":"left"}},"到达最后一个房间的最少时间 I",-1),e_=t("td",{style:{"text-align":"center"}},null,-1),o_={style:{"text-align":"left"}},l_=t("code",null,"图",-1),n_=t("code",null,"数组",-1),s_=t("code",null,"矩阵",-1),d_=t("code",null,"2+",-1),__=t("td",{style:{"text-align":"center"}},"🟠",-1),r_={style:{"text-align":"center"}},a_={href:"https://leetcode.cn/problems/find-minimum-time-to-reach-last-room-i",target:"_blank",rel:"noopener noreferrer"},c_={href:"https://leetcode.com/problems/find-minimum-time-to-reach-last-room-i",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},"3342",-1),h_=t("td",{style:{"text-align":"left"}},"到达最后一个房间的最少时间 II",-1),g_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},m_=t("code",null,"图",-1),f_=t("code",null,"数组",-1),p_=t("code",null,"矩阵",-1),y_=t("code",null,"2+",-1),x_=t("td",{style:{"text-align":"center"}},"🟠",-1),b_={style:{"text-align":"center"}},k_={href:"https://leetcode.cn/problems/find-minimum-time-to-reach-last-room-ii",target:"_blank",rel:"noopener noreferrer"},w_={href:"https://leetcode.com/problems/find-minimum-time-to-reach-last-room-ii",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},"3377",-1),I_=t("td",{style:{"text-align":"left"}},"使两个整数相等的数位操作",-1),q_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},L_=t("code",null,"图",-1),C_=t("code",null,"数学",-1),V_=t("code",null,"数论",-1),j_=t("code",null,"2+",-1),E_=t("td",{style:{"text-align":"center"}},"🟠",-1),N_={style:{"text-align":"center"}},P_={href:"https://leetcode.cn/problems/digit-operations-to-make-two-integers-equal",target:"_blank",rel:"noopener noreferrer"},B_={href:"https://leetcode.com/problems/digit-operations-to-make-two-integers-equal",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},"3419",-1),K_=t("td",{style:{"text-align":"left"}},"图的最大边权的最小值",-1),R_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},J_=t("code",null,"深度优先搜索",-1),O_=t("code",null,"广度优先搜索",-1),Q_=t("code",null,"图",-1),T_=t("code",null,"2+",-1),U_=t("td",{style:{"text-align":"center"}},"🟠",-1),X_={style:{"text-align":"center"}},A_={href:"https://leetcode.cn/problems/minimize-the-maximum-edge-weight-of-graph",target:"_blank",rel:"noopener noreferrer"},G_={href:"https://leetcode.com/problems/minimize-the-maximum-edge-weight-of-graph",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"LCP 35",-1),M_=t("td",{style:{"text-align":"left"}},"电动车游城市",-1),S_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},Y_=t("code",null,"图",-1),Z_=t("code",null,"最短路",-1),$_=t("code",null,"堆（优先队列）",-1),tr=t("td",{style:{"text-align":"center"}},"🔴",-1),er={style:{"text-align":"center"}},or={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},"LCP 56",-1),nr=t("td",{style:{"text-align":"left"}},"信物传送",-1),sr=t("td",{style:{"text-align":"center"}},null,-1),dr={style:{"text-align":"left"}},_r=t("code",null,"广度优先搜索",-1),rr=t("code",null,"图",-1),ar=t("code",null,"数组",-1),cr=t("code",null,"3+",-1),ir=t("td",{style:{"text-align":"center"}},"🟠",-1),hr={style:{"text-align":"center"}},gr={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},ur=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),mr=t("td",{style:{"text-align":"left"}},"计算除法",-1),fr={style:{"text-align":"center"}},pr={style:{"text-align":"left"}},yr=t("code",null,"深度优先搜索",-1),xr=t("code",null,"广度优先搜索",-1),br=t("code",null,"并查集",-1),kr=t("code",null,"3+",-1),wr=t("td",{style:{"text-align":"center"}},"🟠",-1),vr={style:{"text-align":"center"}},Ir={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"};function qr(zr,Lr){const l=d("RouterLink"),s=d("ExternalLinkIcon");return r(),a("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[P]),_:1}),e(),B,e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[T]),_:1})]),U,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),mt,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Et]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Nt]),_:1})])]),Pt,c(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ft,Kt,t("td",Rt,[o(l,{to:"/problem/0399.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Qt]),_:1}),e(),Tt]),Ut,t("td",Xt,[t("a",At,[e("🀄️"),o(s)]),e(),t("a",Gt,[e("🔗"),o(s)])])]),t("tr",null,[Ht,Mt,St,t("td",Wt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",re,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ie]),_:1}),e(),he]),ge,t("td",ue,[t("a",me,[e("🀄️"),o(s)]),e(),t("a",fe,[e("🔗"),o(s)])])]),t("tr",null,[pe,ye,xe,t("td",be,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[we]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ve]),_:1}),e(),Ie]),qe,t("td",ze,[t("a",Le,[e("🀄️"),o(s)]),e(),t("a",Ce,[e("🔗"),o(s)])])]),t("tr",null,[Ve,je,Ee,t("td",Ne,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Be]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Fe]),_:1}),e(),Ke]),Re,t("td",De,[t("a",Je,[e("🀄️"),o(s)]),e(),t("a",Oe,[e("🔗"),o(s)])])]),t("tr",null,[Qe,Te,Ue,t("td",Xe,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Ae]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Ge]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[He]),_:1})]),Me,t("td",Se,[t("a",We,[e("🀄️"),o(s)]),e(),t("a",Ye,[e("🔗"),o(s)])])]),t("tr",null,[Ze,$e,to,t("td",eo,[o(l,{to:"/tag/graph.html"},{default:n(()=>[oo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[no]),_:1})]),so,t("td",_o,[t("a",ro,[e("🀄️"),o(s)]),e(),t("a",ao,[e("🔗"),o(s)])])]),t("tr",null,[co,io,ho,t("td",go,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[uo]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fo]),_:1}),e(),po]),yo,t("td",xo,[t("a",bo,[e("🀄️"),o(s)]),e(),t("a",ko,[e("🔗"),o(s)])])]),t("tr",null,[wo,vo,Io,t("td",qo,[o(l,{to:"/tag/graph.html"},{default:n(()=>[zo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Lo]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Co]),_:1}),e(),Vo]),jo,t("td",Eo,[t("a",No,[e("🀄️"),o(s)]),e(),t("a",Po,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Fo,Ko,t("td",Ro,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Do]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Jo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Oo]),_:1}),e(),Qo]),To,t("td",Uo,[t("a",Xo,[e("🀄️"),o(s)]),e(),t("a",Ao,[e("🔗"),o(s)])])]),t("tr",null,[Go,Ho,t("td",Mo,[o(l,{to:"/problem/1976.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",So,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Wo]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Yo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zo]),_:1}),e(),$o]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,dl,t("td",_l,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rl]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[al]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[cl]),_:1})]),il,t("td",hl,[t("a",gl,[e("🀄️"),o(s)]),e(),t("a",ul,[e("🔗"),o(s)])])]),t("tr",null,[ml,fl,pl,t("td",yl,[o(l,{to:"/tag/graph.html"},{default:n(()=>[xl]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[bl]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[kl]),_:1})]),wl,t("td",vl,[t("a",Il,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[zl,Ll,Cl,t("td",Vl,[o(l,{to:"/tag/graph.html"},{default:n(()=>[jl]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[El]),_:1})]),Nl,t("td",Pl,[t("a",Bl,[e("🀄️"),o(s)]),e(),t("a",Fl,[e("🔗"),o(s)])])]),t("tr",null,[Kl,Rl,t("td",Dl,[o(l,{to:"/problem/2290.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jl,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ol]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ql]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Tl]),_:1}),e(),Ul]),Xl,t("td",Al,[t("a",Gl,[e("🀄️"),o(s)]),e(),t("a",Hl,[e("🔗"),o(s)])])]),t("tr",null,[Ml,Sl,Wl,t("td",Yl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zl]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$l]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tn]),_:1}),e(),en]),on,t("td",ln,[t("a",nn,[e("🀄️"),o(s)]),e(),t("a",sn,[e("🔗"),o(s)])])]),t("tr",null,[dn,_n,rn,t("td",an,[o(l,{to:"/tag/graph.html"},{default:n(()=>[cn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hn]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[gn]),_:1}),e(),un]),mn,t("td",fn,[t("a",pn,[e("🀄️"),o(s)]),e(),t("a",yn,[e("🔗"),o(s)])])]),t("tr",null,[xn,bn,t("td",kn,[o(l,{to:"/problem/2577.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wn,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vn]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[In]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qn]),_:1}),e(),zn]),Ln,t("td",Cn,[t("a",Vn,[e("🀄️"),o(s)]),e(),t("a",jn,[e("🔗"),o(s)])])]),t("tr",null,[En,Nn,Pn,t("td",Bn,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Fn]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Kn]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Rn]),_:1}),e(),Dn]),Jn,t("td",On,[t("a",Qn,[e("🀄️"),o(s)]),e(),t("a",Tn,[e("🔗"),o(s)])])]),t("tr",null,[Un,Xn,An,t("td",Gn,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Mn]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Sn]),_:1}),e(),Wn]),Yn,t("td",Zn,[t("a",$n,[e("🀄️"),o(s)]),e(),t("a",ts,[e("🔗"),o(s)])])]),t("tr",null,[es,os,ls,t("td",ns,[o(l,{to:"/tag/graph.html"},{default:n(()=>[ss]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[_s]),_:1})]),rs,t("td",as,[t("a",cs,[e("🀄️"),o(s)]),e(),t("a",is,[e("🔗"),o(s)])])]),t("tr",null,[hs,gs,us,t("td",ms,[o(l,{to:"/tag/graph.html"},{default:n(()=>[fs]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[ps]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[ys]),_:1})]),xs,t("td",bs,[t("a",ks,[e("🀄️"),o(s)]),e(),t("a",ws,[e("🔗"),o(s)])])]),t("tr",null,[vs,Is,qs,t("td",zs,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Ls]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Cs]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Vs]),_:1}),e(),js]),Es,t("td",Ns,[t("a",Ps,[e("🀄️"),o(s)]),e(),t("a",Bs,[e("🔗"),o(s)])])]),t("tr",null,[Fs,Ks,Rs,t("td",Ds,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Js]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Os]),_:1}),e(),o(l,{to:"/tag/enumeration.html"},{default:n(()=>[Qs]),_:1}),e(),Ts]),Us,t("td",Xs,[t("a",As,[e("🀄️"),o(s)]),e(),t("a",Gs,[e("🔗"),o(s)])])]),t("tr",null,[Hs,Ms,Ss,t("td",Ws,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Ys]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zs]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[$s]),_:1}),e(),td]),ed,t("td",od,[t("a",ld,[e("🀄️"),o(s)]),e(),t("a",nd,[e("🔗"),o(s)])])]),t("tr",null,[sd,dd,_d,t("td",rd,[o(l,{to:"/tag/graph.html"},{default:n(()=>[ad]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[cd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[id]),_:1}),e(),hd]),gd,t("td",ud,[t("a",md,[e("🀄️"),o(s)]),e(),t("a",fd,[e("🔗"),o(s)])])]),t("tr",null,[pd,yd,xd,t("td",bd,[o(l,{to:"/tag/graph.html"},{default:n(()=>[kd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wd]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[vd]),_:1}),e(),Id]),qd,t("td",zd,[t("a",Ld,[e("🀄️"),o(s)]),e(),t("a",Cd,[e("🔗"),o(s)])])]),t("tr",null,[Vd,jd,Ed,t("td",Nd,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Bd]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Fd]),_:1}),e(),Kd]),Rd,t("td",Dd,[t("a",Jd,[e("🀄️"),o(s)]),e(),t("a",Od,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Td,Ud,t("td",Xd,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ad]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Gd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Hd]),_:1}),e(),Md]),Sd,t("td",Wd,[t("a",Yd,[e("🀄️"),o(s)]),e(),t("a",Zd,[e("🔗"),o(s)])])]),t("tr",null,[$d,t_,e_,t("td",o_,[o(l,{to:"/tag/graph.html"},{default:n(()=>[l_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[n_]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[s_]),_:1}),e(),d_]),__,t("td",r_,[t("a",a_,[e("🀄️"),o(s)]),e(),t("a",c_,[e("🔗"),o(s)])])]),t("tr",null,[i_,h_,g_,t("td",u_,[o(l,{to:"/tag/graph.html"},{default:n(()=>[m_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[f_]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[p_]),_:1}),e(),y_]),x_,t("td",b_,[t("a",k_,[e("🀄️"),o(s)]),e(),t("a",w_,[e("🔗"),o(s)])])]),t("tr",null,[v_,I_,q_,t("td",z_,[o(l,{to:"/tag/graph.html"},{default:n(()=>[L_]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[C_]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[V_]),_:1}),e(),j_]),E_,t("td",N_,[t("a",P_,[e("🀄️"),o(s)]),e(),t("a",B_,[e("🔗"),o(s)])])]),t("tr",null,[F_,K_,R_,t("td",D_,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[J_]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[O_]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Q_]),_:1}),e(),T_]),U_,t("td",X_,[t("a",A_,[e("🀄️"),o(s)]),e(),t("a",G_,[e("🔗"),o(s)])])]),t("tr",null,[H_,M_,S_,t("td",W_,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Y_]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[Z_]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[$_]),_:1})]),tr,t("td",er,[t("a",or,[e("🀄️"),o(s)])])]),t("tr",null,[lr,nr,sr,t("td",dr,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_r]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[rr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ar]),_:1}),e(),cr]),ir,t("td",hr,[t("a",gr,[e("🀄️"),o(s)])])]),t("tr",null,[ur,mr,t("td",fr,[o(l,{to:"/offer2/jz_offer_II_111.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pr,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[xr]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[br]),_:1}),e(),kr]),wr,t("td",vr,[t("a",Ir,[e("🀄️"),o(s)])])])])])])}const Vr=_(i,[["render",qr],["__file","shortest-path.html.vue"]]);export{Vr as default};
