import{_ as r,r as l,o as i,c as u,a as n,b as s,d as a,w as e,e as o}from"./app-aQeLbVW9.js";const d={},k=n("h1",{id:"_365-水壶问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_365-水壶问题","aria-hidden":"true"},"#"),s(" 365. 水壶问题")],-1),g=n("code",null,"深度优先搜索",-1),h=n("code",null,"广度优先搜索",-1),m=n("code",null,"数学",-1),f={href:"https://leetcode.cn/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"力扣",-1),b={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"LeetCode",-1),y=o('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given two jugs with capacities <code>x</code> liters and <code>y</code> liters. You have an infinite water supply. Return whether the total amount of water in both jugs may reach <code>target</code> using the following operations:</p><ul><li>Fill either jug completely with water.</li><li>Completely empty either jug.</li><li>Pour water from one jug into another until the receiving jug is full, or the transferring jug is empty.</li></ul><p><strong>Example 1:</strong></p><p><strong>Input:</strong> x = 3, y = 5, target = 4</p><p><strong>Output:</strong> true</p><p><strong>Explanation:</strong></p><p>Follow these steps to reach a total of 4 liters:</p><ol><li>Fill the 5-liter jug (0, 5).</li><li>Pour from the 5-liter jug into the 3-liter jug, leaving 2 liters (3, 2).</li><li>Empty the 3-liter jug (0, 2).</li><li>Transfer the 2 liters from the 5-liter jug to the 3-liter jug (2, 0).</li><li>Fill the 5-liter jug again (2, 5).</li><li>Pour from the 5-liter jug into the 3-liter jug until the 3-liter jug is full. This leaves 4 liters in the 5-liter jug (3, 4).</li><li>Empty the 3-liter jug. Now, you have exactly 4 liters in the 5-liter jug (0, 4).</li></ol>',9),x={href:"https://www.youtube.com/watch?v=BVtQNK_ZUJg&ab_channel=notnek01",target:"_blank",rel:"noopener noreferrer"},w=o('<p><strong>Example 2:</strong></p><p><strong>Input:</strong> x = 2, y = 6, target = 5</p><p><strong>Output:</strong> false</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> x = 1, y = 2, target = 3</p><p><strong>Output:</strong> true</p><p><strong>Explanation:</strong> Fill both jugs. The total amount of water in both jugs is equal to 3 now.</p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= x, y, target &lt;= 10^3</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>有两个水壶，容量分别为 <code>x</code> 和 <code>y</code> 升。水的供应是无限的。确定是否有可能使用这两个壶准确得到 <code>target</code> 升。</p><p>你可以：</p><ul><li>装满任意一个水壶</li><li>清空任意一个水壶</li><li>将水从一个水壶倒入另一个水壶，直到接水壶已满，或倒水壶已空。</li></ul><p><strong>示例 1:</strong></p>',14),j=o("<p><strong>输入:</strong> x = 3,y = 5,target = 4</p><p><strong>输出:</strong> true</p><p><strong>解释：</strong> 按照以下步骤操作，以达到总共 4 升水：</p><ol><li><p>装满 5 升的水壶(0, 5)。</p></li><li><p>把 5 升的水壶倒进 3 升的水壶，留下 2 升(3, 2)。</p></li><li><p>倒空 3 升的水壶(0, 2)。</p></li><li><p>把 2 升水从 5 升的水壶转移到 3 升的水壶(2, 0)。</p></li><li><p>再次加满 5 升的水壶(2, 5)。</p></li><li><p>从 5 升的水壶向 3 升的水壶倒水直到 3 升的水壶倒满。5 升的水壶里留下了 4 升水(3, 4)。</p></li><li><p>倒空 3 升的水壶。现在，5 升的水壶里正好有 4 升水(0, 4)。</p></li></ol>",4),E={href:"https://www.youtube.com/watch?v=BVtQNK_ZUJg",target:"_blank",rel:"noopener noreferrer"},O=n("em",null,'"Die Hard"',-1),F=o(`<p><strong>示例 2:</strong></p><blockquote><p><strong>输入:</strong> x = 2, y = 6, target = 5</p><p><strong>输出:</strong> false</p></blockquote><p><strong>示例 3:</strong></p><blockquote><p><strong>输入:</strong> x = 1, y = 2, target = 3</p><p><strong>输出:</strong> true</p><p><strong>解释：</strong> 同时倒满两个水壶。现在两个水壶中水的总量等于 3。</p></blockquote><p><strong>提示:</strong></p><ul><li><code>1 &lt;= x, y, target &lt;= 10^3</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>这道题是经典的 <strong>水壶问题</strong>，可以通过深度优先搜索（DFS）进行求解。</p><ol><li><strong>状态空间</strong>： <ul><li>每个状态由当前水量 <code>n</code> 表示，从初始状态 <code>n = 0</code> 开始。</li></ul></li><li><strong>四种可能的操作</strong>： <ul><li>向当前水量加入 <code>x</code> 升水：<code>n + x</code></li><li>向当前水量加入 <code>y</code> 升水：<code>n + y</code></li><li>倒掉 <code>x</code> 升水：<code>n - x</code></li><li>倒掉 <code>y</code> 升水：<code>n - y</code></li></ul></li><li><strong>剪枝条件</strong>： <ul><li>超出总容量 <code>x + y</code></li><li>当前水量小于 0</li><li>当前水量已经访问过（避免死循环）</li></ul></li><li><strong>结束条件</strong>： <ul><li>当 <code>n = target</code> 时，代表可以量出 <code>target</code> 升水，返回 <code>true</code>.</li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><p><strong>时间复杂度</strong>：<code>O(x + y)</code>，由于水量只能在 <code>0</code> 到 <code>x + y</code> 之间，因此最多有 <code>O(x + y)</code> 种不同的水量组合需要遍历。</p></li><li><p><strong>空间复杂度</strong>：<code>O(x + y)</code></p><ul><li>使用递归 DFS，会有函数调用栈，最深递归层数为 <code>O(x + y)</code>。</li><li>还使用了一个集合 <code>visited</code> 来存储访问状态，空间需求为 <code>O(x + y)</code>。</li></ul></li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">x</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">y</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">canMeasureWater</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">||</span> n <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span>n <span class="token operator">+</span> x<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">dfs</span><span class="token punctuation">(</span>n <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">dfs</span><span class="token punctuation">(</span>n <span class="token operator">+</span> y<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">dfs</span><span class="token punctuation">(</span>n <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function N(q,V){const c=l("font"),p=l("RouterLink"),t=l("ExternalLinkIcon");return i(),u("div",null,[k,n("p",null,[s("🟠 "),a(c,{color:"#ffb800"},{default:e(()=>[s("Medium")]),_:1}),s("  🔖  "),a(p,{to:"/tag/depth-first-search.html"},{default:e(()=>[g]),_:1}),s(),a(p,{to:"/tag/breadth-first-search.html"},{default:e(()=>[h]),_:1}),s(),a(p,{to:"/tag/math.html"},{default:e(()=>[m]),_:1}),s("  🔗 "),n("a",f,[_,a(t)]),s(),n("a",b,[v,a(t)])]),y,n("p",null,[s("Reference: The "),n("a",x,[s("Die Hard"),a(t)]),s(" example.")]),w,n("blockquote",null,[j,n("p",null,[s("参考：来自著名的 "),n("a",E,[O,a(t)])])]),F])}const C=r(d,[["render",N],["__file","0365.html.vue"]]);export{C as default};
