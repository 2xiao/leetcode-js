import{_,r as d,o as a,c,f as r,a as t,d as o,w as l,b as e}from"./app-aQeLbVW9.js";const i={},h=t("h1",{id:"_3-3-分治算法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_3-3-分治算法","aria-hidden":"true"},"#"),e(" 3.3 分治算法")],-1),f=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),e(" 相关题目")],-1),u=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),g=t("td",{style:{"text-align":"center"}},"4",-1),m=t("td",{style:{"text-align":"left"}},"寻找两个正序数组的中位数",-1),p={style:{"text-align":"center"}},x={style:{"text-align":"left"}},y=t("code",null,"数组",-1),b=t("code",null,"二分查找",-1),k=t("code",null,"分治",-1),T=t("td",{style:{"text-align":"center"}},"🔴",-1),w={style:{"text-align":"center"}},v={href:"https://leetcode.cn/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},E={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},N=t("td",{style:{"text-align":"center"}},"23",-1),q=t("td",{style:{"text-align":"left"}},"合并 K 个升序链表",-1),I={style:{"text-align":"center"}},L={style:{"text-align":"left"}},R=t("code",null,"链表",-1),A=t("code",null,"分治",-1),B=t("code",null,"堆（优先队列）",-1),C=t("code",null,"1+",-1),D=t("td",{style:{"text-align":"center"}},"🔴",-1),O={style:{"text-align":"center"}},S={href:"https://leetcode.cn/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},V={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},j=t("td",{style:{"text-align":"center"}},"53",-1),P=t("td",{style:{"text-align":"left"}},"最大子数组和",-1),z={style:{"text-align":"center"}},U={style:{"text-align":"left"}},H=t("code",null,"数组",-1),K=t("code",null,"分治",-1),F=t("code",null,"动态规划",-1),G=t("td",{style:{"text-align":"center"}},"🟠",-1),J={style:{"text-align":"center"}},M={href:"https://leetcode.cn/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},W=t("td",{style:{"text-align":"center"}},"241",-1),X=t("td",{style:{"text-align":"left"}},"为运算表达式设计优先级",-1),Y={style:{"text-align":"center"}},Z={style:{"text-align":"left"}},$=t("code",null,"递归",-1),tt=t("code",null,"记忆化搜索",-1),et=t("code",null,"数学",-1),ot=t("code",null,"2+",-1),nt=t("td",{style:{"text-align":"center"}},"🟠",-1),lt={style:{"text-align":"center"}},st={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},dt=t("td",{style:{"text-align":"center"}},"169",-1),_t=t("td",{style:{"text-align":"left"}},"多数元素",-1),at={style:{"text-align":"center"}},ct={style:{"text-align":"left"}},it=t("code",null,"数组",-1),ht=t("code",null,"哈希表",-1),ft=t("code",null,"分治",-1),ut=t("code",null,"2+",-1),gt=t("td",{style:{"text-align":"center"}},"🟢",-1),mt={style:{"text-align":"center"}},pt={href:"https://leetcode.cn/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},yt=t("td",{style:{"text-align":"center"}},"50",-1),bt=t("td",{style:{"text-align":"left"}},"Pow(x, n)",-1),kt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},wt=t("code",null,"递归",-1),vt=t("code",null,"数学",-1),Et=t("td",{style:{"text-align":"center"}},"🟠",-1),Nt={style:{"text-align":"center"}},qt={href:"https://leetcode.cn/problems/powx-n",target:"_blank",rel:"noopener noreferrer"},It={href:"https://leetcode.com/problems/powx-n",target:"_blank",rel:"noopener noreferrer"},Lt=t("td",{style:{"text-align":"center"}},"14",-1),Rt=t("td",{style:{"text-align":"left"}},"最长公共前缀",-1),At={style:{"text-align":"center"}},Bt={style:{"text-align":"left"}},Ct=t("code",null,"字典树",-1),Dt=t("code",null,"字符串",-1),Ot=t("td",{style:{"text-align":"center"}},"🟢",-1),St={style:{"text-align":"center"}},Vt={href:"https://leetcode.cn/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://leetcode.com/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),zt=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),Ut={style:{"text-align":"center"}},Ht={style:{"text-align":"left"}},Kt=t("code",null,"栈",-1),Ft=t("code",null,"树",-1),Gt=t("code",null,"二叉搜索树",-1),Jt=t("code",null,"4+",-1),Mt=t("td",{style:{"text-align":"center"}},"🟠",-1),Qt={style:{"text-align":"center"}},Wt={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"};function Xt(Yt,Zt){const n=d("RouterLink"),s=d("ExternalLinkIcon");return a(),c("div",null,[h,r(" START TABLE "),r(" Please keep comment here to allow auto update "),r(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),f,r(" prettier-ignore "),t("table",null,[u,t("tbody",null,[t("tr",null,[g,m,t("td",p,[o(n,{to:"/problem/0004.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",x,[o(n,{to:"/tag/array.html"},{default:l(()=>[y]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[b]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[k]),_:1})]),T,t("td",w,[t("a",v,[e("🀄️"),o(s)]),e(),t("a",E,[e("🔗"),o(s)])])]),t("tr",null,[N,q,t("td",I,[o(n,{to:"/problem/0023.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",L,[o(n,{to:"/tag/linked-list.html"},{default:l(()=>[R]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[A]),_:1}),e(),o(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[B]),_:1}),e(),C]),D,t("td",O,[t("a",S,[e("🀄️"),o(s)]),e(),t("a",V,[e("🔗"),o(s)])])]),t("tr",null,[j,P,t("td",z,[o(n,{to:"/problem/0053.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",U,[o(n,{to:"/tag/array.html"},{default:l(()=>[H]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[K]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[F]),_:1})]),G,t("td",J,[t("a",M,[e("🀄️"),o(s)]),e(),t("a",Q,[e("🔗"),o(s)])])]),t("tr",null,[W,X,t("td",Y,[o(n,{to:"/problem/0241.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Z,[o(n,{to:"/tag/recursion.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/memoization.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[et]),_:1}),e(),ot]),nt,t("td",lt,[t("a",st,[e("🀄️"),o(s)]),e(),t("a",rt,[e("🔗"),o(s)])])]),t("tr",null,[dt,_t,t("td",at,[o(n,{to:"/problem/0169.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",ct,[o(n,{to:"/tag/array.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[ht]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[ft]),_:1}),e(),ut]),gt,t("td",mt,[t("a",pt,[e("🀄️"),o(s)]),e(),t("a",xt,[e("🔗"),o(s)])])]),t("tr",null,[yt,bt,t("td",kt,[o(n,{to:"/problem/0050.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Tt,[o(n,{to:"/tag/recursion.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[vt]),_:1})]),Et,t("td",Nt,[t("a",qt,[e("🀄️"),o(s)]),e(),t("a",It,[e("🔗"),o(s)])])]),t("tr",null,[Lt,Rt,t("td",At,[o(n,{to:"/problem/0014.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Bt,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Ct]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Dt]),_:1})]),Ot,t("td",St,[t("a",Vt,[e("🀄️"),o(s)]),e(),t("a",jt,[e("🔗"),o(s)])])]),t("tr",null,[Pt,zt,t("td",Ut,[o(n,{to:"/offer/jz_offer_33_1.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Ht,[o(n,{to:"/tag/stack.html"},{default:l(()=>[Kt]),_:1}),e(),o(n,{to:"/tag/tree.html"},{default:l(()=>[Ft]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[Gt]),_:1}),e(),Jt]),Mt,t("td",Qt,[t("a",Wt,[e("🀄️"),o(s)])])])])])])}const te=_(i,[["render",Xt],["__file","divide_conquer.html.vue"]]);export{te as default};
