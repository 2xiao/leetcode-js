import{_ as l,r as a,o as i,c as d,a as n,b as s,d as e,w as o,e as r}from"./app-B5EG-zH0.js";const u={},k=n("h1",{id:"_1014-最佳观光组合",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1014-最佳观光组合","aria-hidden":"true"},"#"),s(" 1014. 最佳观光组合")],-1),m=n("code",null,"数组",-1),v=n("code",null,"动态规划",-1),h={href:"https://leetcode.cn/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"力扣",-1),b={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"LeetCode",-1),x=r(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given an integer array <code>values</code> where values[i] represents the value of the <code>ith</code> sightseeing spot. Two sightseeing spots <code>i</code> and <code>j</code> have a <strong>distance</strong> <code>j - i</code> between them.</p><p>The score of a pair (<code>i &lt; j</code>) of sightseeing spots is <code>values[i] + values[j] + i - j</code>: the sum of the values of the sightseeing spots, minus the distance between them.</p><p>Return <em>the maximum score of a pair of sightseeing spots</em>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: values = [8,1,5,2,6]</p><p>Output: 11</p><p>Explanation: i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: values = [1,2]</p><p>Output: 2</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>2 &lt;= values.length &lt;= 5 * 10^4</code></li><li><code>1 &lt;= values[i] &lt;= 1000</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个正整数数组 <code>values</code>，其中 <code>values[i]</code> 表示第 <code>i</code> 个观光景点的评分，并且两个景点 <code>i</code> 和 <code>j</code> 之间的 <strong>距离</strong> 为 <code>j - i</code>。</p><p>一对景点（<code>i &lt; j</code>）组成的观光组合的得分为 <code>values[i] + values[j] + i - j</code> ，也就是景点的评分之和<strong>减去</strong> 它们两者之间的距离。</p><p>返回一对观光景点能取得的最高分。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> values = [8,1,5,2,6]</p><p><strong>输出：</strong> 11</p><p><strong>解释：</strong> i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> values = [1,2]</p><p><strong>输出：</strong> 2</p></blockquote><p><strong>提示：</strong></p><ul><li><code>2 &lt;= values.length &lt;= 5 * 10^4</code></li><li><code>1 &lt;= values[i] &lt;= 1000</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>在这道题中，我们需要找到两个景点 <code>i</code> 和 <code>j</code> (满足 <code>i &lt; j</code>)，使得得分公式 <code>values[i] + values[j] + i - j</code> 最大。通过分析公式，可以拆分为两部分：</p><ul><li><strong>左边部分</strong>：<code>values[i] + i</code>，固定时只与 <code>i</code> 有关。</li><li><strong>右边部分</strong>：<code>values[j] - j</code>，固定时只与 <code>j</code> 有关。</li></ul><p>在遍历 <code>j</code> 时，我们只需记录当前最大值 <code>values[i] + i</code>（称为 <code>maxLeft</code>），并将其与 <code>values[j] - j</code> 进行计算即可。</p><ol><li>初始化 <code>maxLeft</code> 为第一个元素的 <code>values[0] + 0</code>，因为 <code>i = 0</code>。</li><li>初始化 <code>maxScore</code> 为 0，表示当前最大得分。</li><li>从 <code>i = 1</code> 开始遍历数组： <ul><li>计算当前景点得分为 <code>maxLeft + (values[j] - j)</code>，并更新 <code>maxScore</code>。</li><li>更新 <code>maxLeft</code> 为当前的最大值，即 <code>max(maxLeft, values[i] + i)</code>。</li></ul></li><li>遍历完成后，返回 <code>maxScore</code>。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是 <code>values</code> 的长度，遍历一次数组 <code>values</code> 即可。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，只使用了常量变量 <code>maxLeft</code> 和 <code>maxScore</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">values</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxScoreSightseeingPair</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> n <span class="token operator">=</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">let</span> maxLeft <span class="token operator">=</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 初始 maxLeft = values[0] + 0</span>
	<span class="token keyword">let</span> maxScore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 最大得分</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 计算当前得分，并更新最大得分</span>
		maxScore <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxScore<span class="token punctuation">,</span> maxLeft <span class="token operator">+</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 更新 maxLeft</span>
		maxLeft <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxLeft<span class="token punctuation">,</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> maxScore<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29);function _(j,L){const p=a("font"),t=a("RouterLink"),c=a("ExternalLinkIcon");return i(),d("div",null,[k,n("p",null,[s("🟠 "),e(p,{color:"#ffb800"},{default:o(()=>[s("Medium")]),_:1}),s("  🔖  "),e(t,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),s(),e(t,{to:"/tag/dynamic-programming.html"},{default:o(()=>[v]),_:1}),s("  🔗 "),n("a",h,[g,e(c)]),s(),n("a",b,[f,e(c)])]),x])}const y=l(u,[["render",_],["__file","1014.html.vue"]]);export{y as default};
