import{_ as u,r as c,o as d,c as k,a as n,b as t,d as e,w as s,f as h,e as m}from"./app-aQeLbVW9.js";const _={},g=n("h1",{id:"_520-检测大写字母",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_520-检测大写字母","aria-hidden":"true"},"#"),t(" 520. 检测大写字母")],-1),b=n("code",null,"字符串",-1),f={href:"https://leetcode.cn/problems/detect-capital",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"力扣",-1),v={href:"https://leetcode.com/problems/detect-capital",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"LeetCode",-1),x=m('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>We define the usage of capitals in a word to be right when one of the following cases holds:</p><ul><li>All letters in this word are capitals, like <code>&quot;USA&quot;</code>.</li><li>All letters in this word are not capitals, like <code>&quot;leetcode&quot;</code>.</li><li>Only the first letter in this word is capital, like <code>&quot;Google&quot;</code>.</li></ul><p>Given a string <code>word</code>, return <code>true</code> if the usage of capitals in it is right.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: word = &quot;USA&quot;</p><p>Output: true</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: word = &quot;FlaG&quot;</p><p>Output: false</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= word.length &lt;= 100</code></li><li><code>word</code> consists of lowercase and uppercase English letters.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>我们定义，在以下情况时，单词的大写用法是正确的：</p><ul><li>全部字母都是大写，比如 <code>&quot;USA&quot;</code> 。</li><li>单词中所有字母都不是大写，比如 <code>&quot;leetcode&quot;</code> 。</li><li>如果单词不只含有一个字母，只有首字母大写， 比如 <code>&quot;Google&quot;</code> 。</li></ul><p>给你一个字符串 <code>word</code> 。如果大写用法正确，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> word = &quot;USA&quot;</p><p><strong>输出：</strong> true</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> word = &quot;FlaG&quot;</p><p><strong>输出：</strong> false</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= word.length &lt;= 100</code></li><li><code>word</code> 由小写和大写英文字母组成</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><h3 id="思路一-字符串全等" tabindex="-1"><a class="header-anchor" href="#思路一-字符串全等" aria-hidden="true">#</a> 思路一：字符串全等</h3><p>可以直接检查以下三种情况之一是否成立。如果任意一种成立，则返回 <code>true</code>，否则返回 <code>false</code>。</p><ol><li><strong>全部大写</strong>： 判断 <code>word</code> 是否等于 <code>word.toUpperCase()</code>。</li><li><strong>全部小写</strong>： 判断 <code>word</code> 是否等于 <code>word.toLowerCase()</code>。</li><li><strong>首字母大写</strong>： 判断 <code>word</code> 是否等于 <code>word[0].toUpperCase()</code> 拼接上 <code>word.slice(1).toLowerCase()</code>。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是字符串的长度，每次对字符串操作（<code>toUpperCase</code>, <code>toLowerCase</code>, 或 <code>slice</code>）的时间复杂度为<code>O(n)</code>。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，所有操作只使用了固定的变量。</li></ul><hr><h3 id="思路二-大写字母数量" tabindex="-1"><a class="header-anchor" href="#思路二-大写字母数量" aria-hidden="true">#</a> 思路二：大写字母数量</h3><ol><li><p><strong>辅助函数判断是否为大写字母</strong>：</p><ul><li>使用 <code>isUpper(char)</code> 函数判断当前字母是否为大写。</li><li>大写字母的 ASCII 值范围是 <code>[65, 90]</code>，也就是 <code>&#39;A&#39;.charCodeAt()</code> 到 <code>&#39;Z&#39;.charCodeAt()</code>。</li></ul></li><li><p><strong>统计大写字母的个数</strong>：</p><ul><li>遍历整个单词，逐字符检查是否为大写，并记录大写字母的个数 <code>upperCount</code>。</li></ul></li><li><p><strong>判断大小写规则</strong>：</p><ul><li>如果 <strong>大写字母的个数为 0</strong>，说明全部字母都是小写，满足条件。</li><li>如果 <strong>大写字母的个数等于单词长度</strong>，说明全部字母都是大写，满足条件。</li><li>如果 <strong>大写字母的个数为 1 且第一个字母是大写</strong>，说明单词是首字母大写，其余全小写，满足条件。</li><li>其他情况返回 <code>false</code>。</li></ul></li></ol><h4 id="复杂度分析-1" tabindex="-1"><a class="header-anchor" href="#复杂度分析-1" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是字符串的长度，遍历单词统计大写字母的次数。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，只使用了常量空间的计数器和变量。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',32),C=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[t(`/**
 * `),n("span",{class:"token keyword"},"@param"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(),n("span",{class:"token parameter"},"word"),t(`
 * `),n("span",{class:"token keyword"},"@return"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("boolean"),n("span",{class:"token punctuation"},"}")]),t(`
 */`)]),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"detectCapitalUse"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"word"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token comment"},"// 全部大写 或 全部小写 或 首字母大写"),t(`
	`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"("),t(`
		word `),n("span",{class:"token operator"},"==="),t(" word"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toUpperCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"||"),t(`
		word `),n("span",{class:"token operator"},"==="),t(" word"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowerCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"||"),t(`
		word `),n("span",{class:"token operator"},"==="),t(" word"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toUpperCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"+"),t(" word"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowerCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`
	`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[t(`/**
 * `),n("span",{class:"token keyword"},"@param"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(),n("span",{class:"token parameter"},"word"),t(`
 * `),n("span",{class:"token keyword"},"@return"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("boolean"),n("span",{class:"token punctuation"},"}")]),t(`
 */`)]),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"detectCapitalUse"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"word"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token comment"},"// 辅助函数判断是否为大写字母"),t(`
	`),n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token function-variable function"},"isUpper"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"char"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(`
		char`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charCodeAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},">="),t(),n("span",{class:"token string"},"'A'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charCodeAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"&&"),t(`
		char`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charCodeAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"<="),t(),n("span",{class:"token string"},"'Z'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charCodeAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`

	`),n("span",{class:"token keyword"},"let"),t(" upperCount "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 大写字母计数"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" char "),n("span",{class:"token keyword"},"of"),t(" word"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"isUpper"),n("span",{class:"token punctuation"},"("),t("char"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
			upperCount`),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 遇到大写字母，计数器加 1"),t(`
		`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`

	`),n("span",{class:"token comment"},"// 判断三种合法情况"),t(`
	`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("upperCount "),n("span",{class:"token operator"},"==="),t(),n("span",{class:"token number"},"0"),t(),n("span",{class:"token operator"},"||"),t(" upperCount "),n("span",{class:"token operator"},"==="),t(" word"),n("span",{class:"token punctuation"},"."),t("length"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 全小写 或 全大写"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("upperCount "),n("span",{class:"token operator"},"==="),t(),n("span",{class:"token number"},"1"),t(),n("span",{class:"token operator"},"&&"),t(),n("span",{class:"token function"},"isUpper"),n("span",{class:"token punctuation"},"("),t("word"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 首字母大写"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`

	`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 其他情况不符合规则"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("h2",{id:"相关题目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),t(" 相关题目")],-1),U=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),L=n("td",{style:{"text-align":"center"}},"2129",-1),I=n("td",{style:{"text-align":"left"}},"将标题首字母大写",-1),O={style:{"text-align":"center"}},E={style:{"text-align":"left"}},j=n("code",null,"字符串",-1),S=n("td",{style:{"text-align":"center"}},"🟢",-1),G={style:{"text-align":"center"}},N={href:"https://leetcode.cn/problems/capitalize-the-title",target:"_blank",rel:"noopener noreferrer"},V={href:"https://leetcode.com/problems/capitalize-the-title",target:"_blank",rel:"noopener noreferrer"},B=n("td",{style:{"text-align":"center"}},"3120",-1),T=n("td",{style:{"text-align":"left"}},"统计特殊字母的数量 I",-1),z=n("td",{style:{"text-align":"center"}},null,-1),F={style:{"text-align":"left"}},R=n("code",null,"哈希表",-1),Z=n("code",null,"字符串",-1),W=n("td",{style:{"text-align":"center"}},"🟢",-1),D={style:{"text-align":"center"}},H={href:"https://leetcode.cn/problems/count-the-number-of-special-characters-i",target:"_blank",rel:"noopener noreferrer"},J={href:"https://leetcode.com/problems/count-the-number-of-special-characters-i",target:"_blank",rel:"noopener noreferrer"},K=n("td",{style:{"text-align":"center"}},"3121",-1),M=n("td",{style:{"text-align":"left"}},"统计特殊字母的数量 II",-1),P=n("td",{style:{"text-align":"center"}},null,-1),Q={style:{"text-align":"left"}},X=n("code",null,"哈希表",-1),Y=n("code",null,"字符串",-1),$=n("td",{style:{"text-align":"center"}},"🟠",-1),nn={style:{"text-align":"center"}},tn={href:"https://leetcode.cn/problems/count-the-number-of-special-characters-ii",target:"_blank",rel:"noopener noreferrer"},en={href:"https://leetcode.com/problems/count-the-number-of-special-characters-ii",target:"_blank",rel:"noopener noreferrer"};function sn(on,an){const i=c("font"),a=c("RouterLink"),o=c("ExternalLinkIcon"),p=c("CodeTabs");return d(),k("div",null,[g,n("p",null,[t("🟢 "),e(i,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1}),t("  🔖  "),e(a,{to:"/tag/string.html"},{default:s(()=>[b]),_:1}),t("  🔗 "),n("a",f,[w,e(o)]),t(),n("a",v,[y,e(o)])]),x,e(p,{id:"253",data:[{id:"字符串全等"},{id:"大写字母数量"}]},{title0:s(({value:l,isActive:r})=>[t("字符串全等")]),title1:s(({value:l,isActive:r})=>[t("大写字母数量")]),tab0:s(({value:l,isActive:r})=>[C]),tab1:s(({value:l,isActive:r})=>[q]),_:1}),A,h(" prettier-ignore "),n("table",null,[U,n("tbody",null,[n("tr",null,[L,I,n("td",O,[e(a,{to:"/problem/2129.html"},{default:s(()=>[t("[✓]")]),_:1})]),n("td",E,[e(a,{to:"/tag/string.html"},{default:s(()=>[j]),_:1})]),S,n("td",G,[n("a",N,[t("🀄️"),e(o)]),t(),n("a",V,[t("🔗"),e(o)])])]),n("tr",null,[B,T,z,n("td",F,[e(a,{to:"/tag/hash-table.html"},{default:s(()=>[R]),_:1}),t(),e(a,{to:"/tag/string.html"},{default:s(()=>[Z]),_:1})]),W,n("td",D,[n("a",H,[t("🀄️"),e(o)]),t(),n("a",J,[t("🔗"),e(o)])])]),n("tr",null,[K,M,P,n("td",Q,[e(a,{to:"/tag/hash-table.html"},{default:s(()=>[X]),_:1}),t(),e(a,{to:"/tag/string.html"},{default:s(()=>[Y]),_:1})]),$,n("td",nn,[n("a",tn,[t("🀄️"),e(o)]),t(),n("a",en,[t("🔗"),e(o)])])])])])])}const ln=u(_,[["render",sn],["__file","0520.html.vue"]]);export{ln as default};
