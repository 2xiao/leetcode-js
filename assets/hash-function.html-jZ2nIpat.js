import{_,r as d,o as r,c,a as t,d as o,w as l,b as e,f as i}from"./app-B5EG-zH0.js";const a={},h=t("h1",{id:"哈希函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),e(" 哈希函数")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),E=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),D=t("code",null,"最短路",-1),F=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),j=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),H=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),M=t("code",null,"递归",-1),O=t("code",null,"分治",-1),P=t("code",null,"回溯",-1),Q=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),lt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),at=t("code",null,"状态压缩",-1),ht=t("span",{class:"blue"},"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Et=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),Dt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ft=t("td",{style:{"text-align":"center"}},"187",-1),Kt=t("td",{style:{"text-align":"left"}},"重复的DNA序列",-1),Tt={style:{"text-align":"center"}},jt={style:{"text-align":"left"}},At=t("code",null,"位运算",-1),St=t("code",null,"哈希表",-1),Ut=t("code",null,"字符串",-1),Gt=t("code",null,"3+",-1),Ht=t("td",{style:{"text-align":"center"}},"🟠",-1),Jt={style:{"text-align":"center"}},Mt={href:"https://leetcode.cn/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},"214",-1),Qt=t("td",{style:{"text-align":"left"}},"最短回文串",-1),Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"字符串",-1),Zt=t("code",null,"字符串匹配",-1),$t=t("code",null,"哈希函数",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"center"}},"🔴",-1),oe={style:{"text-align":"center"}},ne={href:"https://leetcode.cn/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"535",-1),de=t("td",{style:{"text-align":"left"}},"TinyURL 的加密与解密",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},ce=t("code",null,"设计",-1),ie=t("code",null,"哈希表",-1),ae=t("code",null,"字符串",-1),he=t("code",null,"1+",-1),ge=t("td",{style:{"text-align":"center"}},"🟠",-1),ue={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"572",-1),ye=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),xe={style:{"text-align":"center"}},be={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),we=t("code",null,"二叉树",-1),Ie=t("code",null,"2+",-1),qe=t("td",{style:{"text-align":"center"}},"🟢",-1),ze={style:{"text-align":"center"}},Le={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},"694",-1),Be=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 🔒",-1),Ce=t("td",{style:{"text-align":"center"}},null,-1),Ee={style:{"text-align":"left"}},Re=t("code",null,"深度优先搜索",-1),De=t("code",null,"广度优先搜索",-1),Fe=t("code",null,"并查集",-1),Ke=t("code",null,"2+",-1),Te=t("td",{style:{"text-align":"center"}},"🟠",-1),je={style:{"text-align":"center"}},Ae={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"705",-1),Ge=t("td",{style:{"text-align":"left"}},"设计哈希集合",-1),He={style:{"text-align":"center"}},Je={style:{"text-align":"left"}},Me=t("code",null,"设计",-1),Oe=t("code",null,"数组",-1),Pe=t("code",null,"哈希表",-1),Qe=t("code",null,"2+",-1),We=t("td",{style:{"text-align":"center"}},"🟢",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"706",-1),to=t("td",{style:{"text-align":"left"}},"设计哈希映射",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},no=t("code",null,"设计",-1),lo=t("code",null,"数组",-1),so=t("code",null,"哈希表",-1),_o=t("code",null,"2+",-1),ro=t("td",{style:{"text-align":"center"}},"🟢",-1),co={style:{"text-align":"center"}},io={href:"https://leetcode.cn/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"711",-1),go=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 II 🔒",-1),uo=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},mo=t("code",null,"深度优先搜索",-1),po=t("code",null,"广度优先搜索",-1),yo=t("code",null,"并查集",-1),xo=t("code",null,"2+",-1),bo=t("td",{style:{"text-align":"center"}},"🔴",-1),ko={style:{"text-align":"center"}},vo={href:"https://leetcode.cn/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},wo={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},"718",-1),qo=t("td",{style:{"text-align":"left"}},"最长重复子数组",-1),zo=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},No=t("code",null,"数组",-1),Vo=t("code",null,"二分查找",-1),Bo=t("code",null,"动态规划",-1),Co=t("code",null,"3+",-1),Eo=t("td",{style:{"text-align":"center"}},"🟠",-1),Ro={style:{"text-align":"center"}},Do={href:"https://leetcode.cn/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},Fo={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},"1044",-1),To=t("td",{style:{"text-align":"left"}},"最长重复子串",-1),jo=t("td",{style:{"text-align":"center"}},null,-1),Ao={style:{"text-align":"left"}},So=t("code",null,"字符串",-1),Uo=t("code",null,"二分查找",-1),Go=t("code",null,"后缀数组",-1),Ho=t("code",null,"3+",-1),Jo=t("td",{style:{"text-align":"center"}},"🔴",-1),Mo={style:{"text-align":"center"}},Oo={href:"https://leetcode.cn/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},"1062",-1),Wo=t("td",{style:{"text-align":"left"}},"最长重复子串 🔒",-1),Xo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"字符串",-1),$o=t("code",null,"二分查找",-1),tn=t("code",null,"动态规划",-1),en=t("code",null,"3+",-1),on=t("td",{style:{"text-align":"center"}},"🟠",-1),nn={style:{"text-align":"center"}},ln={href:"https://leetcode.cn/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},"1147",-1),_n=t("td",{style:{"text-align":"left"}},"段式回文",-1),rn=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},an=t("code",null,"贪心",-1),hn=t("code",null,"双指针",-1),gn=t("code",null,"字符串",-1),un=t("code",null,"3+",-1),fn=t("td",{style:{"text-align":"center"}},"🔴",-1),mn={style:{"text-align":"center"}},pn={href:"https://leetcode.cn/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},"1316",-1),bn=t("td",{style:{"text-align":"left"}},"不同的循环子字符串",-1),kn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},wn=t("code",null,"字典树",-1),In=t("code",null,"字符串",-1),qn=t("code",null,"哈希函数",-1),zn=t("code",null,"1+",-1),Ln=t("td",{style:{"text-align":"center"}},"🔴",-1),Nn={style:{"text-align":"center"}},Vn={href:"https://leetcode.cn/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},"1392",-1),En=t("td",{style:{"text-align":"left"}},"最长快乐前缀",-1),Rn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Fn=t("code",null,"字符串",-1),Kn=t("code",null,"字符串匹配",-1),Tn=t("code",null,"哈希函数",-1),jn=t("code",null,"1+",-1),An=t("td",{style:{"text-align":"center"}},"🔴",-1),Sn={style:{"text-align":"center"}},Un={href:"https://leetcode.cn/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},"1461",-1),Jn=t("td",{style:{"text-align":"left"}},"检查一个字符串是否包含所有长度为 K 的二进制子串",-1),Mn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Pn=t("code",null,"位运算",-1),Qn=t("code",null,"哈希表",-1),Wn=t("code",null,"字符串",-1),Xn=t("code",null,"2+",-1),Yn=t("td",{style:{"text-align":"center"}},"🟠",-1),Zn={style:{"text-align":"center"}},$n={href:"https://leetcode.cn/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},"1554",-1),ol=t("td",{style:{"text-align":"left"}},"只有一个不同字符的字符串 🔒",-1),nl=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},sl=t("code",null,"哈希表",-1),dl=t("code",null,"字符串",-1),_l=t("code",null,"哈希函数",-1),rl=t("code",null,"1+",-1),cl=t("td",{style:{"text-align":"center"}},"🟠",-1),il={style:{"text-align":"center"}},al={href:"https://leetcode.cn/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},"1698",-1),ul=t("td",{style:{"text-align":"left"}},"字符串的不同子字符串个数 🔒",-1),fl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},pl=t("code",null,"字典树",-1),yl=t("code",null,"字符串",-1),xl=t("code",null,"后缀数组",-1),bl=t("code",null,"2+",-1),kl=t("td",{style:{"text-align":"center"}},"🟠",-1),vl={style:{"text-align":"center"}},wl={href:"https://leetcode.cn/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},"1923",-1),zl=t("td",{style:{"text-align":"left"}},"最长公共子路径",-1),Ll=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Vl=t("code",null,"数组",-1),Bl=t("code",null,"二分查找",-1),Cl=t("code",null,"后缀数组",-1),El=t("code",null,"2+",-1),Rl=t("td",{style:{"text-align":"center"}},"🔴",-1),Dl={style:{"text-align":"center"}},Fl={href:"https://leetcode.cn/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Kl={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},"1948",-1),jl=t("td",{style:{"text-align":"left"}},"删除系统中的重复文件夹",-1),Al=t("td",{style:{"text-align":"center"}},null,-1),Sl={style:{"text-align":"left"}},Ul=t("code",null,"字典树",-1),Gl=t("code",null,"数组",-1),Hl=t("code",null,"哈希表",-1),Jl=t("code",null,"2+",-1),Ml=t("td",{style:{"text-align":"center"}},"🔴",-1),Ol={style:{"text-align":"center"}},Pl={href:"https://leetcode.cn/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},Ql={href:"https://leetcode.com/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},"1960",-1),Xl=t("td",{style:{"text-align":"left"}},"两个回文子字符串长度的最大乘积",-1),Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"字符串",-1),ts=t("code",null,"哈希函数",-1),es=t("code",null,"滚动哈希",-1),os=t("td",{style:{"text-align":"center"}},"🔴",-1),ns={style:{"text-align":"center"}},ls={href:"https://leetcode.cn/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},ss={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},ds=t("td",{style:{"text-align":"center"}},"2156",-1),_s=t("td",{style:{"text-align":"left"}},"查找给定哈希值的子串",-1),rs=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},is=t("code",null,"字符串",-1),as=t("code",null,"滑动窗口",-1),hs=t("code",null,"哈希函数",-1),gs=t("code",null,"1+",-1),us=t("td",{style:{"text-align":"center"}},"🔴",-1),fs={style:{"text-align":"center"}},ms={href:"https://leetcode.cn/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},"2168",-1),xs=t("td",{style:{"text-align":"left"}},"每个数字的频率都相同的独特子字符串的数量 🔒",-1),bs=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},vs=t("code",null,"哈希表",-1),ws=t("code",null,"字符串",-1),Is=t("code",null,"计数",-1),qs=t("code",null,"2+",-1),zs=t("td",{style:{"text-align":"center"}},"🟠",-1),Ls={style:{"text-align":"center"}},Ns={href:"https://leetcode.cn/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},Vs={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},"2223",-1),Cs=t("td",{style:{"text-align":"left"}},"构造字符串的总得分和",-1),Es=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},Ds=t("code",null,"字符串",-1),Fs=t("code",null,"二分查找",-1),Ks=t("code",null,"字符串匹配",-1),Ts=t("code",null,"3+",-1),js=t("td",{style:{"text-align":"center"}},"🔴",-1),As={style:{"text-align":"center"}},Ss={href:"https://leetcode.cn/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Us={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},"2261",-1),Hs=t("td",{style:{"text-align":"left"}},"含最多 K 个可整除元素的子数组",-1),Js={style:{"text-align":"center"}},Ms={style:{"text-align":"left"}},Os=t("code",null,"字典树",-1),Ps=t("code",null,"数组",-1),Qs=t("code",null,"哈希表",-1),Ws=t("code",null,"3+",-1),Xs=t("td",{style:{"text-align":"center"}},"🟠",-1),Ys={style:{"text-align":"center"}},Zs={href:"https://leetcode.cn/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},$s={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},"2430",-1),ed=t("td",{style:{"text-align":"left"}},"对字母串可执行的最大删除数",-1),od=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},ld=t("code",null,"字符串",-1),sd=t("code",null,"动态规划",-1),dd=t("code",null,"字符串匹配",-1),_d=t("code",null,"2+",-1),rd=t("td",{style:{"text-align":"center"}},"🔴",-1),cd={style:{"text-align":"center"}},id={href:"https://leetcode.cn/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},ad={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},"3006",-1),gd=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 I",-1),ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},md=t("code",null,"双指针",-1),pd=t("code",null,"字符串",-1),yd=t("code",null,"二分查找",-1),xd=t("code",null,"3+",-1),bd=t("td",{style:{"text-align":"center"}},"🟠",-1),kd={style:{"text-align":"center"}},vd={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},wd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},"3008",-1),qd=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 II",-1),zd=t("td",{style:{"text-align":"center"}},null,-1),Ld={style:{"text-align":"left"}},Nd=t("code",null,"双指针",-1),Vd=t("code",null,"字符串",-1),Bd=t("code",null,"二分查找",-1),Cd=t("code",null,"3+",-1),Ed=t("td",{style:{"text-align":"center"}},"🔴",-1),Rd={style:{"text-align":"center"}},Dd={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Fd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Kd=t("td",{style:{"text-align":"center"}},"3023",-1),Td=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 I 🔒",-1),jd=t("td",{style:{"text-align":"center"}},null,-1),Ad={style:{"text-align":"left"}},Sd=t("code",null,"数组",-1),Ud=t("code",null,"字符串匹配",-1),Gd=t("code",null,"滑动窗口",-1),Hd=t("code",null,"2+",-1),Jd=t("td",{style:{"text-align":"center"}},"🟠",-1),Md={style:{"text-align":"center"}},Od={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Pd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"3029",-1),Wd=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 I",-1),Xd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"字符串",-1),$d=t("code",null,"字符串匹配",-1),t_=t("code",null,"哈希函数",-1),e_=t("code",null,"1+",-1),o_=t("td",{style:{"text-align":"center"}},"🟠",-1),n_={style:{"text-align":"center"}},l_={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},s_={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},"3031",-1),__=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 II",-1),r_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},i_=t("code",null,"字符串",-1),a_=t("code",null,"字符串匹配",-1),h_=t("code",null,"哈希函数",-1),g_=t("code",null,"1+",-1),u_=t("td",{style:{"text-align":"center"}},"🔴",-1),f_={style:{"text-align":"center"}},m_={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},p_={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},"3034",-1),x_=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 I",-1),b_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},v_=t("code",null,"数组",-1),w_=t("code",null,"字符串匹配",-1),I_=t("code",null,"哈希函数",-1),q_=t("code",null,"1+",-1),z_=t("td",{style:{"text-align":"center"}},"🟠",-1),L_={style:{"text-align":"center"}},N_={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},V_={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},"3036",-1),C_=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 II",-1),E_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},D_=t("code",null,"数组",-1),F_=t("code",null,"字符串匹配",-1),K_=t("code",null,"哈希函数",-1),T_=t("code",null,"1+",-1),j_=t("td",{style:{"text-align":"center"}},"🔴",-1),A_={style:{"text-align":"center"}},S_={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},U_={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},"3037",-1),H_=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 II 🔒",-1),J_=t("td",{style:{"text-align":"center"}},null,-1),M_={style:{"text-align":"left"}},O_=t("code",null,"数组",-1),P_=t("code",null,"字符串匹配",-1),Q_=t("code",null,"滑动窗口",-1),W_=t("code",null,"2+",-1),X_=t("td",{style:{"text-align":"center"}},"🔴",-1),Y_={style:{"text-align":"center"}},Z_={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},$_={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},"3042",-1),er=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 I",-1),or={style:{"text-align":"center"}},nr={style:{"text-align":"left"}},lr=t("code",null,"字典树",-1),sr=t("code",null,"数组",-1),dr=t("code",null,"字符串",-1),_r=t("code",null,"3+",-1),rr=t("td",{style:{"text-align":"center"}},"🟢",-1),cr={style:{"text-align":"center"}},ir={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},"3045",-1),gr=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 II",-1),ur=t("td",{style:{"text-align":"center"}},null,-1),fr={style:{"text-align":"left"}},mr=t("code",null,"字典树",-1),pr=t("code",null,"数组",-1),yr=t("code",null,"字符串",-1),xr=t("code",null,"3+",-1),br=t("td",{style:{"text-align":"center"}},"🔴",-1),kr={style:{"text-align":"center"}},vr={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},wr={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Ir=t("td",{style:{"text-align":"center"}},"3135",-1),qr=t("td",{style:{"text-align":"left"}},"通过添加或删除结尾字符来同化字符串 🔒",-1),zr=t("td",{style:{"text-align":"center"}},null,-1),Lr={style:{"text-align":"left"}},Nr=t("code",null,"字符串",-1),Vr=t("code",null,"二分查找",-1),Br=t("code",null,"动态规划",-1),Cr=t("code",null,"2+",-1),Er=t("td",{style:{"text-align":"center"}},"🟠",-1),Rr={style:{"text-align":"center"}},Dr={href:"https://leetcode.cn/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},Fr={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},"3291",-1),Tr=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),jr=t("td",{style:{"text-align":"center"}},null,-1),Ar={style:{"text-align":"left"}},Sr=t("code",null,"字典树",-1),Ur=t("code",null,"线段树",-1),Gr=t("code",null,"数组",-1),Hr=t("code",null,"6+",-1),Jr=t("td",{style:{"text-align":"center"}},"🟠",-1),Mr={style:{"text-align":"center"}},Or={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Pr={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Qr=t("td",{style:{"text-align":"center"}},"3292",-1),Wr=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),Xr=t("td",{style:{"text-align":"center"}},null,-1),Yr={style:{"text-align":"left"}},Zr=t("code",null,"线段树",-1),$r=t("code",null,"数组",-1),tc=t("code",null,"字符串",-1),ec=t("code",null,"5+",-1),oc=t("td",{style:{"text-align":"center"}},"🔴",-1),nc={style:{"text-align":"center"}},lc={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},sc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},"3327",-1),_c=t("td",{style:{"text-align":"left"}},"判断 DFS 字符串是否是回文串",-1),rc=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},ic=t("code",null,"树",-1),ac=t("code",null,"深度优先搜索",-1),hc=t("code",null,"数组",-1),gc=t("code",null,"3+",-1),uc=t("td",{style:{"text-align":"center"}},"🔴",-1),fc={style:{"text-align":"center"}},mc={href:"https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},pc={href:"https://leetcode.com/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),xc=t("td",{style:{"text-align":"left"}},"检查子树",-1),bc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},vc=t("code",null,"树",-1),wc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"二叉树",-1),qc=t("code",null,"2+",-1),zc=t("td",{style:{"text-align":"center"}},"🟠",-1),Lc={style:{"text-align":"center"}},Nc={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),Bc=t("td",{style:{"text-align":"left"}},"恢复空格",-1),Cc=t("td",{style:{"text-align":"center"}},null,-1),Ec={style:{"text-align":"left"}},Rc=t("code",null,"字典树",-1),Dc=t("code",null,"数组",-1),Fc=t("code",null,"哈希表",-1),Kc=t("code",null,"4+",-1),Tc=t("td",{style:{"text-align":"center"}},"🟠",-1),jc={style:{"text-align":"center"}},Ac={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"};function Sc(Uc,Gc){const n=d("RouterLink"),s=d("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[g,u,t("p",null,[o(n,{to:"/tag/array.html"},{default:l(()=>[f]),_:1}),e(),o(n,{to:"/tag/matrix.html"},{default:l(()=>[m]),_:1}),e(),o(n,{to:"/tag/linked-list.html"},{default:l(()=>[p]),_:1}),e(),o(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[y]),_:1}),e(),o(n,{to:"/tag/stack.html"},{default:l(()=>[x]),_:1}),e(),o(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[b]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[k]),_:1}),e(),o(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[I]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[q]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[z]),_:1}),e(),o(n,{to:"/tag/tree.html"},{default:l(()=>[L]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[N]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),e(),o(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[B]),_:1}),e(),o(n,{to:"/tag/graph.html"},{default:l(()=>[C]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[E]),_:1}),e(),o(n,{to:"/tag/topological-sort.html"},{default:l(()=>[R]),_:1}),e(),o(n,{to:"/tag/shortest-path.html"},{default:l(()=>[D]),_:1}),e(),o(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[F]),_:1}),e(),o(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[K]),_:1}),e(),o(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[T]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[j]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[A]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[S]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[U]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),H,t("p",null,[o(n,{to:"/tag/enumeration.html"},{default:l(()=>[J]),_:1}),e(),o(n,{to:"/tag/recursion.html"},{default:l(()=>[M]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[O]),_:1}),e(),o(n,{to:"/tag/backtracking.html"},{default:l(()=>[P]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[Q]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[X]),_:1}),e(),o(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[Y]),_:1}),e(),o(n,{to:"/tag/counting-sort.html"},{default:l(()=>[Z]),_:1}),e(),o(n,{to:"/tag/radix-sort.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/merge-sort.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/quickselect.html"},{default:l(()=>[et]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[ot]),_:1}),e(),o(n,{to:"/tag/memoization.html"},{default:l(()=>[nt]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[lt]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[st]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[dt]),_:1}),e(),o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[_t]),_:1}),e(),o(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),e(),o(n,{to:"/tag/counting.html"},{default:l(()=>[ct]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/bitmask.html"},{default:l(()=>[at]),_:1}),e(),ht,e(),o(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),e(),o(n,{to:"/tag/line-sweep.html"},{default:l(()=>[ut]),_:1})]),ft,t("p",null,[o(n,{to:"/tag/math.html"},{default:l(()=>[mt]),_:1}),e(),o(n,{to:"/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[yt]),_:1}),e(),o(n,{to:"/tag/game-theory.html"},{default:l(()=>[xt]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[bt]),_:1}),e(),o(n,{to:"/tag/combinatorics.html"},{default:l(()=>[kt]),_:1}),e(),o(n,{to:"/tag/randomized.html"},{default:l(()=>[vt]),_:1}),e(),o(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),e(),o(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),e(),o(n,{to:"/tag/database.html"},{default:l(()=>[zt]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Lt]),_:1}),e(),o(n,{to:"/tag/data-stream.html"},{default:l(()=>[Nt]),_:1}),e(),o(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),e(),o(n,{to:"/tag/interactive.html"},{default:l(()=>[Bt]),_:1}),e(),o(n,{to:"/tag/iterator.html"},{default:l(()=>[Ct]),_:1}),e(),o(n,{to:"/tag/concurrency.html"},{default:l(()=>[Et]),_:1})])]),Rt,i(" prettier-ignore "),t("table",null,[Dt,t("tbody",null,[t("tr",null,[Ft,Kt,t("td",Tt,[o(n,{to:"/problem/0187.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",jt,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[At]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[St]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Ut]),_:1}),e(),Gt]),Ht,t("td",Jt,[t("a",Mt,[e("🀄️"),o(s)]),e(),t("a",Ot,[e("🔗"),o(s)])])]),t("tr",null,[Pt,Qt,Wt,t("td",Xt,[o(n,{to:"/tag/string.html"},{default:l(()=>[Yt]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Zt]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",ne,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",re,[o(n,{to:"/tag/design.html"},{default:l(()=>[ce]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[ie]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ae]),_:1}),e(),he]),ge,t("td",ue,[t("a",fe,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[pe,ye,t("td",xe,[o(n,{to:"/problem/0572.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",be,[o(n,{to:"/tag/tree.html"},{default:l(()=>[ke]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[ve]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[we]),_:1}),e(),Ie]),qe,t("td",ze,[t("a",Le,[e("🀄️"),o(s)]),e(),t("a",Ne,[e("🔗"),o(s)])])]),t("tr",null,[Ve,Be,Ce,t("td",Ee,[o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[Re]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[De]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[Fe]),_:1}),e(),Ke]),Te,t("td",je,[t("a",Ae,[e("🀄️"),o(s)]),e(),t("a",Se,[e("🔗"),o(s)])])]),t("tr",null,[Ue,Ge,t("td",He,[o(n,{to:"/problem/0705.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Je,[o(n,{to:"/tag/design.html"},{default:l(()=>[Me]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Oe]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Pe]),_:1}),e(),Qe]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,t("td",eo,[o(n,{to:"/problem/0706.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(n,{to:"/tag/design.html"},{default:l(()=>[no]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[lo]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[so]),_:1}),e(),_o]),ro,t("td",co,[t("a",io,[e("🀄️"),o(s)]),e(),t("a",ao,[e("🔗"),o(s)])])]),t("tr",null,[ho,go,uo,t("td",fo,[o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[mo]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[po]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[yo]),_:1}),e(),xo]),bo,t("td",ko,[t("a",vo,[e("🀄️"),o(s)]),e(),t("a",wo,[e("🔗"),o(s)])])]),t("tr",null,[Io,qo,zo,t("td",Lo,[o(n,{to:"/tag/array.html"},{default:l(()=>[No]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Vo]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Bo]),_:1}),e(),Co]),Eo,t("td",Ro,[t("a",Do,[e("🀄️"),o(s)]),e(),t("a",Fo,[e("🔗"),o(s)])])]),t("tr",null,[Ko,To,jo,t("td",Ao,[o(n,{to:"/tag/string.html"},{default:l(()=>[So]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Uo]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[Go]),_:1}),e(),Ho]),Jo,t("td",Mo,[t("a",Oo,[e("🀄️"),o(s)]),e(),t("a",Po,[e("🔗"),o(s)])])]),t("tr",null,[Qo,Wo,Xo,t("td",Yo,[o(n,{to:"/tag/string.html"},{default:l(()=>[Zo]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[$o]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[tn]),_:1}),e(),en]),on,t("td",nn,[t("a",ln,[e("🀄️"),o(s)]),e(),t("a",sn,[e("🔗"),o(s)])])]),t("tr",null,[dn,_n,rn,t("td",cn,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[an]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[hn]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[gn]),_:1}),e(),un]),fn,t("td",mn,[t("a",pn,[e("🀄️"),o(s)]),e(),t("a",yn,[e("🔗"),o(s)])])]),t("tr",null,[xn,bn,kn,t("td",vn,[o(n,{to:"/tag/trie.html"},{default:l(()=>[wn]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[In]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[qn]),_:1}),e(),zn]),Ln,t("td",Nn,[t("a",Vn,[e("🀄️"),o(s)]),e(),t("a",Bn,[e("🔗"),o(s)])])]),t("tr",null,[Cn,En,Rn,t("td",Dn,[o(n,{to:"/tag/string.html"},{default:l(()=>[Fn]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Kn]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[Tn]),_:1}),e(),jn]),An,t("td",Sn,[t("a",Un,[e("🀄️"),o(s)]),e(),t("a",Gn,[e("🔗"),o(s)])])]),t("tr",null,[Hn,Jn,Mn,t("td",On,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Pn]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Qn]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Wn]),_:1}),e(),Xn]),Yn,t("td",Zn,[t("a",$n,[e("🀄️"),o(s)]),e(),t("a",tl,[e("🔗"),o(s)])])]),t("tr",null,[el,ol,nl,t("td",ll,[o(n,{to:"/tag/hash-table.html"},{default:l(()=>[sl]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[dl]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[_l]),_:1}),e(),rl]),cl,t("td",il,[t("a",al,[e("🀄️"),o(s)]),e(),t("a",hl,[e("🔗"),o(s)])])]),t("tr",null,[gl,ul,fl,t("td",ml,[o(n,{to:"/tag/trie.html"},{default:l(()=>[pl]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[yl]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[xl]),_:1}),e(),bl]),kl,t("td",vl,[t("a",wl,[e("🀄️"),o(s)]),e(),t("a",Il,[e("🔗"),o(s)])])]),t("tr",null,[ql,zl,Ll,t("td",Nl,[o(n,{to:"/tag/array.html"},{default:l(()=>[Vl]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Bl]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[Cl]),_:1}),e(),El]),Rl,t("td",Dl,[t("a",Fl,[e("🀄️"),o(s)]),e(),t("a",Kl,[e("🔗"),o(s)])])]),t("tr",null,[Tl,jl,Al,t("td",Sl,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Ul]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Gl]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Hl]),_:1}),e(),Jl]),Ml,t("td",Ol,[t("a",Pl,[e("🀄️"),o(s)]),e(),t("a",Ql,[e("🔗"),o(s)])])]),t("tr",null,[Wl,Xl,Yl,t("td",Zl,[o(n,{to:"/tag/string.html"},{default:l(()=>[$l]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[ts]),_:1}),e(),o(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[es]),_:1})]),os,t("td",ns,[t("a",ls,[e("🀄️"),o(s)]),e(),t("a",ss,[e("🔗"),o(s)])])]),t("tr",null,[ds,_s,rs,t("td",cs,[o(n,{to:"/tag/string.html"},{default:l(()=>[is]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[as]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[hs]),_:1}),e(),gs]),us,t("td",fs,[t("a",ms,[e("🀄️"),o(s)]),e(),t("a",ps,[e("🔗"),o(s)])])]),t("tr",null,[ys,xs,bs,t("td",ks,[o(n,{to:"/tag/hash-table.html"},{default:l(()=>[vs]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ws]),_:1}),e(),o(n,{to:"/tag/counting.html"},{default:l(()=>[Is]),_:1}),e(),qs]),zs,t("td",Ls,[t("a",Ns,[e("🀄️"),o(s)]),e(),t("a",Vs,[e("🔗"),o(s)])])]),t("tr",null,[Bs,Cs,Es,t("td",Rs,[o(n,{to:"/tag/string.html"},{default:l(()=>[Ds]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Fs]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ks]),_:1}),e(),Ts]),js,t("td",As,[t("a",Ss,[e("🀄️"),o(s)]),e(),t("a",Us,[e("🔗"),o(s)])])]),t("tr",null,[Gs,Hs,t("td",Js,[o(n,{to:"/problem/2261.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Ms,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Os]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ps]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Qs]),_:1}),e(),Ws]),Xs,t("td",Ys,[t("a",Zs,[e("🀄️"),o(s)]),e(),t("a",$s,[e("🔗"),o(s)])])]),t("tr",null,[td,ed,od,t("td",nd,[o(n,{to:"/tag/string.html"},{default:l(()=>[ld]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[sd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[dd]),_:1}),e(),_d]),rd,t("td",cd,[t("a",id,[e("🀄️"),o(s)]),e(),t("a",ad,[e("🔗"),o(s)])])]),t("tr",null,[hd,gd,ud,t("td",fd,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[md]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[pd]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[yd]),_:1}),e(),xd]),bd,t("td",kd,[t("a",vd,[e("🀄️"),o(s)]),e(),t("a",wd,[e("🔗"),o(s)])])]),t("tr",null,[Id,qd,zd,t("td",Ld,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[Nd]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Vd]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Bd]),_:1}),e(),Cd]),Ed,t("td",Rd,[t("a",Dd,[e("🀄️"),o(s)]),e(),t("a",Fd,[e("🔗"),o(s)])])]),t("tr",null,[Kd,Td,jd,t("td",Ad,[o(n,{to:"/tag/array.html"},{default:l(()=>[Sd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ud]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Gd]),_:1}),e(),Hd]),Jd,t("td",Md,[t("a",Od,[e("🀄️"),o(s)]),e(),t("a",Pd,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Wd,Xd,t("td",Yd,[o(n,{to:"/tag/string.html"},{default:l(()=>[Zd]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[$d]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[t_]),_:1}),e(),e_]),o_,t("td",n_,[t("a",l_,[e("🀄️"),o(s)]),e(),t("a",s_,[e("🔗"),o(s)])])]),t("tr",null,[d_,__,r_,t("td",c_,[o(n,{to:"/tag/string.html"},{default:l(()=>[i_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[a_]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[h_]),_:1}),e(),g_]),u_,t("td",f_,[t("a",m_,[e("🀄️"),o(s)]),e(),t("a",p_,[e("🔗"),o(s)])])]),t("tr",null,[y_,x_,b_,t("td",k_,[o(n,{to:"/tag/array.html"},{default:l(()=>[v_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[w_]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[I_]),_:1}),e(),q_]),z_,t("td",L_,[t("a",N_,[e("🀄️"),o(s)]),e(),t("a",V_,[e("🔗"),o(s)])])]),t("tr",null,[B_,C_,E_,t("td",R_,[o(n,{to:"/tag/array.html"},{default:l(()=>[D_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[F_]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[K_]),_:1}),e(),T_]),j_,t("td",A_,[t("a",S_,[e("🀄️"),o(s)]),e(),t("a",U_,[e("🔗"),o(s)])])]),t("tr",null,[G_,H_,J_,t("td",M_,[o(n,{to:"/tag/array.html"},{default:l(()=>[O_]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[P_]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Q_]),_:1}),e(),W_]),X_,t("td",Y_,[t("a",Z_,[e("🀄️"),o(s)]),e(),t("a",$_,[e("🔗"),o(s)])])]),t("tr",null,[tr,er,t("td",or,[o(n,{to:"/problem/3042.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",nr,[o(n,{to:"/tag/trie.html"},{default:l(()=>[lr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[sr]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[dr]),_:1}),e(),_r]),rr,t("td",cr,[t("a",ir,[e("🀄️"),o(s)]),e(),t("a",ar,[e("🔗"),o(s)])])]),t("tr",null,[hr,gr,ur,t("td",fr,[o(n,{to:"/tag/trie.html"},{default:l(()=>[mr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[pr]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[yr]),_:1}),e(),xr]),br,t("td",kr,[t("a",vr,[e("🀄️"),o(s)]),e(),t("a",wr,[e("🔗"),o(s)])])]),t("tr",null,[Ir,qr,zr,t("td",Lr,[o(n,{to:"/tag/string.html"},{default:l(()=>[Nr]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Vr]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Br]),_:1}),e(),Cr]),Er,t("td",Rr,[t("a",Dr,[e("🀄️"),o(s)]),e(),t("a",Fr,[e("🔗"),o(s)])])]),t("tr",null,[Kr,Tr,jr,t("td",Ar,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Sr]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ur]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Gr]),_:1}),e(),Hr]),Jr,t("td",Mr,[t("a",Or,[e("🀄️"),o(s)]),e(),t("a",Pr,[e("🔗"),o(s)])])]),t("tr",null,[Qr,Wr,Xr,t("td",Yr,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Zr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[$r]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[tc]),_:1}),e(),ec]),oc,t("td",nc,[t("a",lc,[e("🀄️"),o(s)]),e(),t("a",sc,[e("🔗"),o(s)])])]),t("tr",null,[dc,_c,rc,t("td",cc,[o(n,{to:"/tag/tree.html"},{default:l(()=>[ic]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[ac]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[hc]),_:1}),e(),gc]),uc,t("td",fc,[t("a",mc,[e("🀄️"),o(s)]),e(),t("a",pc,[e("🔗"),o(s)])])]),t("tr",null,[yc,xc,bc,t("td",kc,[o(n,{to:"/tag/tree.html"},{default:l(()=>[vc]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[wc]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[Ic]),_:1}),e(),qc]),zc,t("td",Lc,[t("a",Nc,[e("🀄️"),o(s)])])]),t("tr",null,[Vc,Bc,Cc,t("td",Ec,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Rc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Dc]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Fc]),_:1}),e(),Kc]),Tc,t("td",jc,[t("a",Ac,[e("🀄️"),o(s)])])])])])])}const Jc=_(a,[["render",Sc],["__file","hash-function.html.vue"]]);export{Jc as default};
