import{_ as r,r as o,o as l,c as i,a as n,b as s,d as e,w as a,e as d}from"./app-aQeLbVW9.js";const u={},k=n("h1",{id:"_3375-使数组的值全部为-k-的最少操作次数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3375-使数组的值全部为-k-的最少操作次数","aria-hidden":"true"},"#"),s(" 3375. 使数组的值全部为 K 的最少操作次数")],-1),m=n("code",null,"数组",-1),g=n("code",null,"哈希表",-1),h={href:"https://leetcode.cn/problems/minimum-operations-to-make-array-values-equal-to-k",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"力扣",-1),_={href:"https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"LeetCode",-1),f=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p><p>An integer <code>h</code> is called <strong>valid</strong> if all values in the array that are <strong>strictly greater</strong> than <code>h</code> are <em>identical</em>.</p><p>For example, if <code>nums = [10, 8, 10, 8]</code>, a <strong>valid</strong> integer is <code>h = 9</code> because all <code>nums[i] &gt; 9</code> are equal to 10, but 5 is not a <strong>valid</strong> integer.</p><p>You are allowed to perform the following operation on <code>nums</code>:</p><ul><li>Select an integer <code>h</code> that is <em>valid</em> for the <strong>current</strong> values in <code>nums</code>.</li><li>For each index <code>i</code> where <code>nums[i] &gt; h</code>, set <code>nums[i]</code> to <code>h</code>.</li></ul><p>Return the <strong>minimum</strong> number of operations required to make every element in <code>nums</code> <strong>equal</strong> to <code>k</code>. If it is impossible to make all elements equal to <code>k</code>, return -1.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> nums = [5,2,5,4,5], k = 2</p><p><strong>Output:</strong> 2</p><p><strong>Explanation:</strong></p><p>The operations can be performed in order using valid integers 4 and then 2.</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> nums = [2,1,2], k = 2</p><p><strong>Output:</strong> -1</p><p><strong>Explanation:</strong></p><p>It is impossible to make all the values equal to 2.</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> nums = [9,7,5,3], k = 1</p><p><strong>Output:</strong> 4</p><p><strong>Explanation:</strong></p><p>The operations can be performed using valid integers in the order 7, 5, 3, and</p><ol><li></li></ol><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 100 </code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li><li><code>1 &lt;= k &lt;= 100</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> 。</p><p>如果一个数组中所有 <strong>严格大于</strong> <code>h</code> 的整数值都 <strong>相等</strong> ，那么我们称整数 <code>h</code> 是 <strong>合法的</strong> 。</p><p>比方说，如果 <code>nums = [10, 8, 10, 8]</code> ，那么 <code>h = 9</code> 是一个 <strong>合法</strong> 整数，因为所有满足 <code>nums[i] &gt; 9</code> 的数都等于 10 ，但是 5 不是 <strong>合法</strong> 整数。</p><p>你可以对 <code>nums</code> 执行以下操作：</p><ul><li>选择一个整数 <code>h</code> ，它对于 <strong>当前</strong> <code>nums</code> 中的值是合法的。</li><li>对于每个下标 <code>i</code> ，如果它满足 <code>nums[i] &gt; h</code> ，那么将 <code>nums[i]</code> 变为 <code>h</code> 。</li></ul><p>你的目标是将 <code>nums</code> 中的所有元素都变为 <code>k</code> ，请你返回 <strong>最少</strong> 操作次数。如果无法将所有元素都变 <code>k</code> ，那么返回 -1 。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> nums = [5,2,5,4,5], k = 2</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><p>依次选择合法整数 4 和 2 ，将数组全部变为 2 。</p><p><strong>示例 2：</strong></p><p><strong>输入：</strong> nums = [2,1,2], k = 2</p><p><strong>输出：</strong> -1</p><p><strong>解释：</strong></p><p>没法将所有值变为 2 。</p><p><strong>示例 3：</strong></p><p><strong>输入：</strong> nums = [9,7,5,3], k = 1</p><p><strong>输出：</strong> 4</p><p><strong>解释：</strong></p><p>依次选择合法整数 7 ，5 ，3 和 1 ，将数组全部变为 1 。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 100 </code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li><li><code>1 &lt;= k &lt;= 100</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>初始化一个空的 <code>Set</code> 用于存储所有大于 <code>k</code> 的不同元素。</li><li>遍历数组： <ul><li>如果遇到小于 <code>k</code> 的元素，直接返回 <code>-1</code>。</li><li>如果等于 <code>k</code>，跳过。</li><li>如果大于 <code>k</code>，加入 <code>Set</code>。</li></ul></li><li>最后返回 <code>Set</code> 的大小，即为不同的大于 <code>k</code> 的元素数量。</li></ul><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是数组 <code>nums</code> 的长度，遍历一遍数组。</li><li><strong>空间复杂度</strong>：<code>O(n)</code>，最坏情况下所有元素都大于 <code>k</code> 且互不相同，<code>Set</code> 最多存储 <code>n</code> 个元素。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">k</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">minOperations</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> unique <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
		unique<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> unique<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55);function y(x,w){const p=o("font"),t=o("RouterLink"),c=o("ExternalLinkIcon");return l(),i("div",null,[k,n("p",null,[s("🟢 "),e(p,{color:"#15bd66"},{default:a(()=>[s("Easy")]),_:1}),s("  🔖  "),e(t,{to:"/tag/array.html"},{default:a(()=>[m]),_:1}),s(),e(t,{to:"/tag/hash-table.html"},{default:a(()=>[g]),_:1}),s("  🔗 "),n("a",h,[v,e(c)]),s(),n("a",_,[b,e(c)])]),f])}const E=r(u,[["render",y],["__file","3375.html.vue"]]);export{E as default};
