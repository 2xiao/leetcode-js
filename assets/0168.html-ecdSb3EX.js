import{_ as r,r as l,o as p,c as u,a as n,b as e,d as t,w as s,f as i,e as d}from"./app-B5EG-zH0.js";const m={},h=n("h1",{id:"_168-excel-表列名称",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_168-excel-表列名称","aria-hidden":"true"},"#"),e(" 168. Excel 表列名称")],-1),k=n("code",null,"数学",-1),g=n("code",null,"字符串",-1),b={href:"https://leetcode.cn/problems/excel-sheet-column-title",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"力扣",-1),f={href:"https://leetcode.com/problems/excel-sheet-column-title",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"LeetCode",-1),v=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an integer <code>columnNumber</code>, return <em>its corresponding column title as it appears in an Excel sheet</em>.</p><p>For example:</p><blockquote><p>A -&gt; 1 B -&gt; 2 C -&gt; 3 ... Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ...</p></blockquote><p><strong>Example 1:</strong></p><blockquote><p>Input: columnNumber = 1</p><p>Output: &quot;A&quot;</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: columnNumber = 28</p><p>Output: &quot;AB&quot;</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: columnNumber = 701</p><p>Output: &quot;ZY&quot;</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= columnNumber &lt;= 2^31 - 1</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个整数 <code>columnNumber</code> ，返回它在 Excel 表中相对应的列名称。</p><p>例如：</p><blockquote><p>A -&gt; 1 B -&gt; 2 C -&gt; 3 ... Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ...</p></blockquote><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> columnNumber = 1</p><p><strong>输出：</strong> &quot;A&quot;</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> columnNumber = 28</p><p><strong>输出：</strong> &quot;AB&quot;</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> columnNumber = 701</p><p><strong>输出：</strong> &quot;ZY&quot;</p></blockquote><p><strong>示例 4：</strong></p><blockquote><p><strong>输入：</strong> columnNumber = 2147483647</p><p><strong>输出：</strong> &quot;FXSHRXW&quot;</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= columnNumber &lt;= 2^31 - 1</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>题目要求将 Excel 表格列序号（数字）转换为对应的列名称（字母）。这个问题本质是将十进制数字转化为一种特殊的 26 进制表示。</p><ol><li><p>初始化一个空字符串 <code>str</code> 用于存储结果。</p></li><li><p>循环执行以下操作，直到 <code>columnNumber</code> 为 0：</p><ul><li>将 <code>columnNumber</code> 减去 1，因为 Excel 列编号从 1 开始，而字母的 ASCII 码从 0 开始，所以需要在每次取余操作前减去 1，确保取余结果与字母正确对应。 <ul><li>例如： <ul><li><code>columnNumber = 1</code>：<code>1 - 1 = 0</code>，对应字母 <code>A</code>。</li><li><code>columnNumber = 28</code>：<code>28 - 1 = 27</code>，取余 <code>27 % 26 = 1</code>，对应字母 <code>B</code>。</li></ul></li></ul></li><li>利用取余操作 <code>columnNumber % 26</code> 获取当前的最低位字母，从最后一个字母开始逐步确定。</li><li>使用 <code>String.fromCharCode</code> 将余数转换为对应的字母（通过 <code>A</code> 的 ASCII 值加上余数）。</li><li>更新 <code>columnNumber</code> 为整除 26 的结果，移位到下一位。</li></ul></li><li><p>返回结果字符串 <code>str</code>。</p></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(log26(columnNumber))</code>，每次循环将 <code>columnNumber</code> 缩小约 26 倍，因此最多需要 <code>log26(columnNumber)</code> 次操作。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，仅用常量空间存储字符串。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">columnNumber</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">convertToTitle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">columnNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 用于存储最终的列名称</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>columnNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		columnNumber <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 将列号减 1，便于处理 26 进制</span>
		str <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>columnNumber <span class="token operator">%</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">;</span> <span class="token comment">// 计算当前字母并拼接</span>
		columnNumber <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>columnNumber <span class="token operator">/</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 更新列号，处理更高位</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,34),q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),N=n("td",{style:{"text-align":"center"}},"171",-1),y=n("td",{style:{"text-align":"left"}},"Excel 表列序号",-1),A={style:{"text-align":"center"}},C={style:{"text-align":"left"}},E=n("code",null,"数学",-1),w=n("code",null,"字符串",-1),B=n("td",{style:{"text-align":"center"}},"🟢",-1),I={style:{"text-align":"center"}},S={href:"https://leetcode.cn/problems/excel-sheet-column-number",target:"_blank",rel:"noopener noreferrer"},L={href:"https://leetcode.com/problems/excel-sheet-column-number",target:"_blank",rel:"noopener noreferrer"},O=n("td",{style:{"text-align":"center"}},"2194",-1),V=n("td",{style:{"text-align":"left"}},"Excel 表中某个范围内的单元格",-1),Z={style:{"text-align":"center"}},j={style:{"text-align":"left"}},R=n("code",null,"字符串",-1),T=n("td",{style:{"text-align":"center"}},"🟢",-1),F={style:{"text-align":"center"}},X={href:"https://leetcode.cn/problems/cells-in-a-range-on-an-excel-sheet",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://leetcode.com/problems/cells-in-a-range-on-an-excel-sheet",target:"_blank",rel:"noopener noreferrer"};function G(H,M){const c=l("font"),o=l("RouterLink"),a=l("ExternalLinkIcon");return p(),u("div",null,[h,n("p",null,[e("🟢 "),t(c,{color:"#15bd66"},{default:s(()=>[e("Easy")]),_:1}),e("  🔖  "),t(o,{to:"/tag/math.html"},{default:s(()=>[k]),_:1}),e(),t(o,{to:"/tag/string.html"},{default:s(()=>[g]),_:1}),e("  🔗 "),n("a",b,[_,t(a)]),e(),n("a",f,[x,t(a)])]),v,i(" prettier-ignore "),n("table",null,[q,n("tbody",null,[n("tr",null,[N,y,n("td",A,[t(o,{to:"/problem/0171.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",C,[t(o,{to:"/tag/math.html"},{default:s(()=>[E]),_:1}),e(),t(o,{to:"/tag/string.html"},{default:s(()=>[w]),_:1})]),B,n("td",I,[n("a",S,[e("🀄️"),t(a)]),e(),n("a",L,[e("🔗"),t(a)])])]),n("tr",null,[O,V,n("td",Z,[t(o,{to:"/problem/2194.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",j,[t(o,{to:"/tag/string.html"},{default:s(()=>[R]),_:1})]),T,n("td",F,[n("a",X,[e("🀄️"),t(a)]),e(),n("a",Y,[e("🔗"),t(a)])])])])])])}const z=r(m,[["render",G],["__file","0168.html.vue"]]);export{z as default};
