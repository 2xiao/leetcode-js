import{_ as p,r as l,o as i,c as r,a as n,b as s,d as a,w as t,f as u,e as d}from"./app-fBVbqwGY.js";const k={},h=n("h1",{id:"_3160-所有球里面不同颜色的数目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3160-所有球里面不同颜色的数目","aria-hidden":"true"},"#"),s(" 3160. 所有球里面不同颜色的数目")],-1),m=n("code",null,"数组",-1),g=n("code",null,"哈希表",-1),b=n("code",null,"模拟",-1),f={href:"https://leetcode.cn/problems/find-the-number-of-distinct-colors-among-the-balls",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"力扣",-1),_={href:"https://leetcode.com/problems/find-the-number-of-distinct-colors-among-the-balls",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"LeetCode",-1),x=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given an integer <code>limit</code> and a 2D array <code>queries</code> of size <code>n x 2</code>.</p><p>There are <code>limit + 1</code> balls with <strong>distinct</strong> labels in the range <code>[0, limit]</code>. Initially, all balls are uncolored. For every query in <code>queries</code> that is of the form <code>[x, y]</code>, you mark ball <code>x</code> with the color <code>y</code>. After each query, you need to find the number of <strong>distinct</strong> colors among the balls.</p><p>Return an array <code>result</code> of length <code>n</code>, where <code>result[i]</code> denotes the number of distinct colors <em>after</em> <code>ith</code> query.</p><p><strong>Note</strong> that when answering a query, lack of a color <em>will not</em> be considered as a color.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> limit = 4, queries = [[1,4],[2,5],[1,3],[3,4]]</p><p><strong>Output:</strong> [1,2,2,3]</p><p><strong>Explanation:</strong></p><figure><img src="https://assets.leetcode.com/uploads/2024/04/17/ezgifcom-crop.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>After query 0, ball 1 has color 4.</li><li>After query 1, ball 1 has color 4, and ball 2 has color 5.</li><li>After query 2, ball 1 has color 3, and ball 2 has color 5.</li><li>After query 3, ball 1 has color 3, ball 2 has color 5, and ball 3 has color 4.</li></ul><p><strong>Example 2:</strong></p><p><strong>Input:</strong> limit = 4, queries = [[0,1],[1,2],[2,2],[3,4],[4,5]]</p><p><strong>Output:</strong> [1,2,2,3,4]</p><p><strong>Explanation:</strong></p><p><strong><img src="https://assets.leetcode.com/uploads/2024/04/17/ezgifcom-crop2.gif" alt="" loading="lazy"></strong></p><ul><li>After query 0, ball 0 has color 1.</li><li>After query 1, ball 0 has color 1, and ball 1 has color 2.</li><li>After query 2, ball 0 has color 1, and balls 1 and 2 have color 2.</li><li>After query 3, ball 0 has color 1, balls 1 and 2 have color 2, and ball 3 has color 4.</li><li>After query 4, ball 0 has color 1, balls 1 and 2 have color 2, ball 3 has color 4, and ball 4 has color 5.</li></ul><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= limit &lt;= 10^9</code></li><li><code>1 &lt;= n == queries.length &lt;= 10^5</code></li><li><code>queries[i].length == 2</code></li><li><code>0 &lt;= queries[i][0] &lt;= limit</code></li><li><code>1 &lt;= queries[i][1] &lt;= 10^9</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个整数 <code>limit</code> 和一个大小为 <code>n x 2</code> 的二维数组 <code>queries</code> 。</p><p>总共有 <code>limit + 1</code> 个球，每个球的编号为 <code>[0, limit]</code> 中一个 <strong>互不相同</strong> 的数字。一开始，所有球都没有颜色。<code>queries</code> 中每次操作的格式为 <code>[x, y]</code> ，你需要将球 <code>x</code> 染上颜色 <code>y</code> 。每次操作之后，你需要求出所有球中 <strong>不同</strong> 颜色的数目。</p><p>请你返回一个长度为 <code>n</code> 的数组 <code>result</code> ，其中 <code>result[i]</code> 是第 <code>i</code> 次操作以后不同颜色的数目。</p><p><strong>注意</strong> ，没有染色的球不算作一种颜色。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> limit = 4, queries = [[1,4],[2,5],[1,3],[3,4]]</p><p><strong>输出：</strong>[1,2,2,3]</p><p><strong>解释：</strong></p><figure><img src="https://assets.leetcode.com/uploads/2024/04/17/ezgifcom-crop.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>操作 0 后，球 1 颜色为 4 。</li><li>操作 1 后，球 1 颜色为 4 ，球 2 颜色为 5 。</li><li>操作 2 后，球 1 颜色为 3 ，球 2 颜色为 5 。</li><li>操作 3 后，球 1 颜色为 3 ，球 2 颜色为 5 ，球 3 颜色为 4 。</li></ul><p><strong>示例 2：</strong></p><p><strong>输入：</strong> limit = 4, queries = [[0,1],[1,2],[2,2],[3,4],[4,5]]</p><p><strong>输出：</strong>[1,2,2,3,4]</p><p><strong>解释：</strong></p><p><strong><img src="https://assets.leetcode.com/uploads/2024/04/17/ezgifcom-crop2.gif" alt="" loading="lazy"></strong></p><ul><li>操作 0 后，球 0 颜色为 1 。</li><li>操作 1 后，球 0 颜色为 1 ，球 1 颜色为 2 。</li><li>操作 2 后，球 0 颜色为 1 ，球 1 和 2 颜色为 2 。</li><li>操作 3 后，球 0 颜色为 1 ，球 1 和 2 颜色为 2 ，球 3 颜色为 4 。</li><li>操作 4 后，球 0 颜色为 1 ，球 1 和 2 颜色为 2 ，球 3 颜色为 4 ，球 4 颜色为 5 。</li></ul><p><strong>提示：</strong></p><ul><li><code>1 &lt;= limit &lt;= 10^9</code></li><li><code>1 &lt;= n == queries.length &lt;= 10^5</code></li><li><code>queries[i].length == 2</code></li><li><code>0 &lt;= queries[i][0] &lt;= limit</code></li><li><code>1 &lt;= queries[i][1] &lt;= 10^9</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p><strong>初始化:</strong> 定义两个 <code>Map</code> 和结果数组 <code>res</code>。</p><ul><li><code>ballMap</code>: 存储每个球当前的颜色，用于追踪每个球的最新状态。</li><li><code>colorMap</code>: 记录每种颜色出现的球数量，用于维护不同颜色的数量。</li></ul></li><li><p><strong>遍历查询:</strong></p><ul><li>如果 <code>ballMap</code> 中已经存在该球编号： <ul><li>获取该球的之前颜色 <code>prevColor</code>。</li><li>更新 <code>colorMap</code> 中对应颜色的计数，若计数为 0 则删除该颜色。</li></ul></li><li>将新颜色写入 <code>ballMap</code> 并更新 <code>colorMap</code> 计数。</li></ul></li><li><p><strong>记录结果:</strong> 将 <code>colorMap.size</code> 追加到结果数组中。</p></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度:</strong> <code>O(n)</code>，其中 <code>n</code> 为查询的数量，每个查询操作都在 <code>Map</code> 中完成，时间复杂度为 <code>O(1)</code>。</li><li><strong>空间复杂度:</strong> <code>O(n)</code>，用于存储球和颜色的映射关系。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">limit</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">queries</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">queryResults</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">limit<span class="token punctuation">,</span> queries</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> ballMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> colorMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>ball<span class="token punctuation">,</span> color<span class="token punctuation">]</span> <span class="token keyword">of</span> queries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> prevColor <span class="token operator">=</span> ballMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 如果颜色发生变化</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>prevColor <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> prevCount <span class="token operator">=</span> colorMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prevColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>prevCount <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				colorMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>prevColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				colorMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>prevColor<span class="token punctuation">,</span> prevCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// 更新 ballMap 和 colorMap</span>
		ballMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ball<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>
		colorMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> <span class="token punctuation">(</span>colorMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>colorMap<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,45),q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),w=n("td",{style:{"text-align":"center"}},"1742",-1),M=n("td",{style:{"text-align":"left"}},"盒子中小球的最大数量",-1),C={style:{"text-align":"center"}},z={style:{"text-align":"left"}},A=n("code",null,"哈希表",-1),E=n("code",null,"数学",-1),N=n("code",null,"计数",-1),I=n("td",{style:{"text-align":"center"}},"🟢",-1),L={style:{"text-align":"center"}},O={href:"https://leetcode.cn/problems/maximum-number-of-balls-in-a-box",target:"_blank",rel:"noopener noreferrer"},V={href:"https://leetcode.com/problems/maximum-number-of-balls-in-a-box",target:"_blank",rel:"noopener noreferrer"};function R(j,B){const c=l("font"),e=l("RouterLink"),o=l("ExternalLinkIcon");return i(),r("div",null,[h,n("p",null,[s("🟠 "),a(c,{color:"#ffb800"},{default:t(()=>[s("Medium")]),_:1}),s("  🔖  "),a(e,{to:"/tag/array.html"},{default:t(()=>[m]),_:1}),s(),a(e,{to:"/tag/hash-table.html"},{default:t(()=>[g]),_:1}),s(),a(e,{to:"/tag/simulation.html"},{default:t(()=>[b]),_:1}),s("  🔗 "),n("a",f,[v,a(o)]),s(),n("a",_,[y,a(o)])]),x,u(" prettier-ignore "),n("table",null,[q,n("tbody",null,[n("tr",null,[w,M,n("td",C,[a(e,{to:"/problem/1742.html"},{default:t(()=>[s("[✓]")]),_:1})]),n("td",z,[a(e,{to:"/tag/hash-table.html"},{default:t(()=>[A]),_:1}),s(),a(e,{to:"/tag/math.html"},{default:t(()=>[E]),_:1}),s(),a(e,{to:"/tag/counting.html"},{default:t(()=>[N]),_:1})]),I,n("td",L,[n("a",O,[s("🀄️"),a(o)]),s(),n("a",V,[s("🔗"),a(o)])])])])])])}const D=p(k,[["render",R],["__file","3160.html.vue"]]);export{D as default};
