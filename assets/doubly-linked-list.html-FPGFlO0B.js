import{_,r as d,o as c,c as a,a as t,d as o,w as n,b as e,f as i}from"./app-B5EG-zH0.js";const h={},r=t("h1",{id:"双向链表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#双向链表","aria-hidden":"true"},"#"),e(" 双向链表")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("span",{class:"blue"},"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),L=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),R=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),B=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),U=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),X=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),H=t("code",null,"枚举",-1),J=t("code",null,"递归",-1),K=t("code",null,"分治",-1),M=t("code",null,"回溯",-1),P=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),rt=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Lt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Rt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),Bt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Et=t("td",{style:{"text-align":"center"}},"146",-1),Ut=t("td",{style:{"text-align":"left"}},"LRU 缓存",-1),Dt={style:{"text-align":"center"}},Ft={style:{"text-align":"left"}},Qt=t("code",null,"设计",-1),Tt=t("code",null,"哈希表",-1),Xt=t("code",null,"链表",-1),At=t("code",null,"1+",-1),Gt=t("td",{style:{"text-align":"center"}},"🟠",-1),Ht={style:{"text-align":"center"}},Jt={href:"https://leetcode.cn/problems/lru-cache",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://leetcode.com/problems/lru-cache",target:"_blank",rel:"noopener noreferrer"},Mt=t("td",{style:{"text-align":"center"}},"426",-1),Pt=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),St={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},Yt=t("code",null,"栈",-1),Zt=t("code",null,"树",-1),$t=t("code",null,"深度优先搜索",-1),te=t("code",null,"4+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"430",-1),de=t("td",{style:{"text-align":"left"}},"扁平化多级双向链表",-1),_e={style:{"text-align":"center"}},ce={style:{"text-align":"left"}},ae=t("code",null,"深度优先搜索",-1),ie=t("code",null,"链表",-1),he=t("code",null,"双向链表",-1),re=t("td",{style:{"text-align":"center"}},"🟠",-1),ue={style:{"text-align":"center"}},ge={href:"https://leetcode.cn/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},"432",-1),ye=t("td",{style:{"text-align":"left"}},"全 O(1) 的数据结构",-1),pe={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},be=t("code",null,"设计",-1),ke=t("code",null,"哈希表",-1),ve=t("code",null,"链表",-1),Ie=t("code",null,"1+",-1),we=t("td",{style:{"text-align":"center"}},"🔴",-1),Le={style:{"text-align":"center"}},qe={href:"https://leetcode.cn/problems/all-oone-data-structure",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://leetcode.com/problems/all-oone-data-structure",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},"460",-1),je=t("td",{style:{"text-align":"left"}},"LFU 缓存",-1),Ne={style:{"text-align":"center"}},Re={style:{"text-align":"left"}},Ve=t("code",null,"设计",-1),Be=t("code",null,"哈希表",-1),Ce=t("code",null,"链表",-1),Ee=t("code",null,"1+",-1),Ue=t("td",{style:{"text-align":"center"}},"🔴",-1),De={style:{"text-align":"center"}},Fe={href:"https://leetcode.cn/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://leetcode.com/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},"716",-1),Xe=t("td",{style:{"text-align":"left"}},"最大栈 🔒",-1),Ae=t("td",{style:{"text-align":"center"}},null,-1),Ge={style:{"text-align":"left"}},He=t("code",null,"栈",-1),Je=t("code",null,"设计",-1),Ke=t("code",null,"链表",-1),Me=t("code",null,"2+",-1),Pe=t("td",{style:{"text-align":"center"}},"🔴",-1),Se={style:{"text-align":"center"}},We={href:"https://leetcode.cn/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Ze=t("td",{style:{"text-align":"center"}},"1472",-1),$e=t("td",{style:{"text-align":"left"}},"设计浏览器历史记录",-1),to={style:{"text-align":"center"}},eo={style:{"text-align":"left"}},oo=t("code",null,"栈",-1),lo=t("code",null,"设计",-1),no=t("code",null,"数组",-1),so=t("code",null,"3+",-1),_o=t("td",{style:{"text-align":"center"}},"🟠",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"1797",-1),ro=t("td",{style:{"text-align":"left"}},"设计一个验证系统",-1),uo=t("td",{style:{"text-align":"center"}},null,-1),go={style:{"text-align":"left"}},fo=t("code",null,"设计",-1),mo=t("code",null,"哈希表",-1),yo=t("code",null,"链表",-1),po=t("code",null,"1+",-1),xo=t("td",{style:{"text-align":"center"}},"🟠",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/design-authentication-manager",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/design-authentication-manager",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},"2296",-1),wo=t("td",{style:{"text-align":"left"}},"设计一个文本编辑器",-1),Lo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},zo=t("code",null,"栈",-1),Oo=t("code",null,"设计",-1),jo=t("code",null,"链表",-1),No=t("code",null,"3+",-1),Ro=t("td",{style:{"text-align":"center"}},"🔴",-1),Vo={style:{"text-align":"center"}},Bo={href:"https://leetcode.cn/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},Co={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},"3263",-1),Uo=t("td",{style:{"text-align":"left"}},"将双链表转换为数组 I 🔒",-1),Do=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Qo=t("code",null,"数组",-1),To=t("code",null,"链表",-1),Xo=t("code",null,"双向链表",-1),Ao=t("td",{style:{"text-align":"center"}},"🟢",-1),Go={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/convert-doubly-linked-list-to-array-i",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-i",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},"3294",-1),Mo=t("td",{style:{"text-align":"left"}},"将双链表转换为数组 II 🔒",-1),Po=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Wo=t("code",null,"数组",-1),Yo=t("code",null,"链表",-1),Zo=t("code",null,"双向链表",-1),$o=t("td",{style:{"text-align":"center"}},"🟠",-1),tl={style:{"text-align":"center"}},el={href:"https://leetcode.cn/problems/convert-doubly-linked-list-to-array-ii",target:"_blank",rel:"noopener noreferrer"},ol={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-ii",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),nl=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),sl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"栈",-1),cl=t("code",null,"树",-1),al=t("code",null,"深度优先搜索",-1),il=t("code",null,"4+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),rl={style:{"text-align":"center"}},ul={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),fl=t("td",{style:{"text-align":"left"}},"展平多级双向链表",-1),ml={style:{"text-align":"center"}},yl={style:{"text-align":"left"}},pl=t("code",null,"深度优先搜索",-1),xl=t("code",null,"链表",-1),bl=t("code",null,"双向链表",-1),kl=t("td",{style:{"text-align":"center"}},"🟠",-1),vl={style:{"text-align":"center"}},Il={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},"剑指 Offer II 31",-1),Ll=t("td",{style:{"text-align":"left"}},"最近最少使用缓存",-1),ql={style:{"text-align":"center"}},zl={style:{"text-align":"left"}},Ol=t("code",null,"设计",-1),jl=t("code",null,"哈希表",-1),Nl=t("code",null,"链表",-1),Rl=t("code",null,"1+",-1),Vl=t("td",{style:{"text-align":"center"}},"🟠",-1),Bl={style:{"text-align":"center"}},Cl={href:"https://leetcode.cn/problems/OrIXps",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},"面试题 16.25",-1),Ul=t("td",{style:{"text-align":"left"}},"LRU 缓存",-1),Dl={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Ql=t("code",null,"设计",-1),Tl=t("code",null,"哈希表",-1),Xl=t("code",null,"链表",-1),Al=t("code",null,"1+",-1),Gl=t("td",{style:{"text-align":"center"}},"🟠",-1),Hl={style:{"text-align":"center"}},Jl={href:"https://leetcode.cn/problems/lru-cache-lcci",target:"_blank",rel:"noopener noreferrer"};function Kl(Ml,Pl){const l=d("RouterLink"),s=d("ExternalLinkIcon");return c(),a("div",null,[r,t("details",null,[u,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),p,e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[A]),_:1})]),G,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ut]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Rt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Vt]),_:1})])]),Bt,i(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Et,Ut,t("td",Dt,[o(l,{to:"/problem/0146.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ft,[o(l,{to:"/tag/design.html"},{default:n(()=>[Qt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Tt]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Xt]),_:1}),e(),At]),Gt,t("td",Ht,[t("a",Jt,[e("🀄️"),o(s)]),e(),t("a",Kt,[e("🔗"),o(s)])])]),t("tr",null,[Mt,Pt,t("td",St,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,de,t("td",_e,[o(l,{to:"/problem/0430.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ce,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[ie]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[he]),_:1})]),re,t("td",ue,[t("a",ge,[e("🀄️"),o(s)]),e(),t("a",fe,[e("🔗"),o(s)])])]),t("tr",null,[me,ye,t("td",pe,[o(l,{to:"/problem/0432.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/design.html"},{default:n(()=>[be]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[ve]),_:1}),e(),Ie]),we,t("td",Le,[t("a",qe,[e("🀄️"),o(s)]),e(),t("a",ze,[e("🔗"),o(s)])])]),t("tr",null,[Oe,je,t("td",Ne,[o(l,{to:"/problem/0460.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Re,[o(l,{to:"/tag/design.html"},{default:n(()=>[Ve]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Be]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Ce]),_:1}),e(),Ee]),Ue,t("td",De,[t("a",Fe,[e("🀄️"),o(s)]),e(),t("a",Qe,[e("🔗"),o(s)])])]),t("tr",null,[Te,Xe,Ae,t("td",Ge,[o(l,{to:"/tag/stack.html"},{default:n(()=>[He]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Je]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Ke]),_:1}),e(),Me]),Pe,t("td",Se,[t("a",We,[e("🀄️"),o(s)]),e(),t("a",Ye,[e("🔗"),o(s)])])]),t("tr",null,[Ze,$e,t("td",to,[o(l,{to:"/problem/1472.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",eo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[oo]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[no]),_:1}),e(),so]),_o,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,ro,uo,t("td",go,[o(l,{to:"/tag/design.html"},{default:n(()=>[fo]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[yo]),_:1}),e(),po]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[Io,wo,Lo,t("td",qo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zo]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[jo]),_:1}),e(),No]),Ro,t("td",Vo,[t("a",Bo,[e("🀄️"),o(s)]),e(),t("a",Co,[e("🔗"),o(s)])])]),t("tr",null,[Eo,Uo,Do,t("td",Fo,[o(l,{to:"/tag/array.html"},{default:n(()=>[Qo]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[To]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[Xo]),_:1})]),Ao,t("td",Go,[t("a",Ho,[e("🀄️"),o(s)]),e(),t("a",Jo,[e("🔗"),o(s)])])]),t("tr",null,[Ko,Mo,Po,t("td",So,[o(l,{to:"/tag/array.html"},{default:n(()=>[Wo]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Yo]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[Zo]),_:1})]),$o,t("td",tl,[t("a",el,[e("🀄️"),o(s)]),e(),t("a",ol,[e("🔗"),o(s)])])]),t("tr",null,[ll,nl,t("td",sl,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_l]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[al]),_:1}),e(),il]),hl,t("td",rl,[t("a",ul,[e("🀄️"),o(s)])])]),t("tr",null,[gl,fl,t("td",ml,[o(l,{to:"/offer2/jz_offer_II_028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yl,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[xl]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[bl]),_:1})]),kl,t("td",vl,[t("a",Il,[e("🀄️"),o(s)])])]),t("tr",null,[wl,Ll,t("td",ql,[o(l,{to:"/offer2/jz_offer_II_031.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zl,[o(l,{to:"/tag/design.html"},{default:n(()=>[Ol]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[jl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Nl]),_:1}),e(),Rl]),Vl,t("td",Bl,[t("a",Cl,[e("🀄️"),o(s)])])]),t("tr",null,[El,Ul,t("td",Dl,[o(l,{to:"/interview/i_16.25.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fl,[o(l,{to:"/tag/design.html"},{default:n(()=>[Ql]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Tl]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Xl]),_:1}),e(),Al]),Gl,t("td",Hl,[t("a",Jl,[e("🀄️"),o(s)])])])])])])}const Wl=_(h,[["render",Kl],["__file","doubly-linked-list.html.vue"]]);export{Wl as default};
