import{_ as i,r as a,o as c,c as d,a as t,b as e,d as n,w as o,f as p,e as u}from"./app-aQeLbVW9.js";const h={},_=t("h1",{id:"_319-灯泡开关",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_319-灯泡开关","aria-hidden":"true"},"#"),e(" 319. 灯泡开关")],-1),g=t("code",null,"脑筋急转弯",-1),f=t("code",null,"数学",-1),b={href:"https://leetcode.cn/problems/bulb-switcher",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"力扣",-1),k={href:"https://leetcode.com/problems/bulb-switcher",target:"_blank",rel:"noopener noreferrer"},x=t("code",null,"LeetCode",-1),y=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>There are <code>n</code> bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb.</p><p>On the third round, you toggle every third bulb (turning on if it&#39;s off or turning off if it&#39;s on). For the <code>ith</code> round, you toggle every <code>i</code> bulb. For the <code>nth</code> round, you only toggle the last bulb.</p><p>Return <em>the number of bulbs that are on after<code>n</code> rounds</em>.</p><p><strong>Example 1:</strong></p><figure><img src="https://assets.leetcode.com/uploads/2020/11/05/bulb.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>Input: n = 3</p><p>Output: 1</p><p>Explanation: At first, the three bulbs are [off, off, off].</p><p>After the first round, the three bulbs are [on, on, on].</p><p>After the second round, the three bulbs are [on, off, on].</p><p>After the third round, the three bulbs are [on, off, off].</p><p>So you should return 1 because there is only one bulb is on.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: n = 0</p><p>Output: 0</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: n = 1</p><p>Output: 1</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= n &lt;= 10^9</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>初始时有 <code>n</code> 个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭第二个。</p><p>第三轮，你每三个灯泡就切换第三个灯泡的开关（即，打开变关闭，关闭变打开）。第 <code>i</code> 轮，你每 <code>i</code> 个灯泡就切换第 <code>i</code> 个灯泡的开关。直到第 <code>n</code> 轮，你只需要切换最后一个灯泡的开关。</p><p>找出并返回 <code>n</code> 轮后有多少个亮着的灯泡。</p><p><strong>示例 1：</strong></p><figure><img src="https://assets.leetcode.com/uploads/2020/11/05/bulb.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>输入：</strong> n = 3</p><p><strong>输出：</strong> 1</p><p><strong>解释：</strong></p><p>初始时, 灯泡状态 <strong>[关闭, 关闭, 关闭]</strong>.</p><p>第一轮后, 灯泡状态 <strong>[开启, 开启, 开启]</strong>.</p><p>第二轮后, 灯泡状态 <strong>[开启, 关闭, 开启]</strong>.</p><p>第三轮后, 灯泡状态 <strong>[开启, 关闭, 关闭]</strong>.</p><p>你应该返回 1，因为只有一个灯泡还亮着。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> n = 0</p><p><strong>输出：</strong> 0</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> n = 1</p><p><strong>输出：</strong> 1</p></blockquote><p><strong>提示：</strong></p><ul><li><code>0 &lt;= n &lt;= 10^9</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p><strong>1. 状态变化规律</strong></p><ul><li>灯泡是否亮着，取决于它被切换的次数： <ul><li>如果一个灯泡的编号有奇数个因数，则它是亮的。</li><li>如果一个灯泡的编号有偶数个因数，则它是灭的。</li></ul></li></ul><p><strong>2. 数学分析</strong></p><ul><li>一个数的因数通常是成对出现的，例如： <ul><li>6 的因数有 {1, 6}, {2, 3}，因数成对。</li></ul></li><li>只有 <strong>完全平方数</strong> 才有奇数个因数，例如： <ul><li>9 的因数有 {1, 9}, {3}，因数不成对。</li></ul></li></ul><p><strong>3. 问题转化</strong></p><ul><li>问题变为：<code>n</code> 的范围内有多少个完全平方数。 <ul><li>这等价于求 <code>floor(sqrt(n))</code>，即平方数的个数。</li></ul></li></ul><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(1)</code>，计算平方根的时间复杂度为 <code>O(1)</code>。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，只需常数额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">bulbSwitch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,38),v=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),q=t("td",{style:{"text-align":"center"}},"672",-1),w=t("td",{style:{"text-align":"left"}},"灯泡开关 Ⅱ",-1),E=t("td",{style:{"text-align":"center"}},null,-1),O={style:{"text-align":"left"}},j=t("code",null,"位运算",-1),C=t("code",null,"深度优先搜索",-1),I=t("code",null,"广度优先搜索",-1),L=t("code",null,"1+",-1),N=t("td",{style:{"text-align":"center"}},"🟠",-1),V={style:{"text-align":"center"}},A={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},B={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},M=t("td",{style:{"text-align":"center"}},"995",-1),R=t("td",{style:{"text-align":"left"}},"K 连续位的最小翻转次数",-1),S=t("td",{style:{"text-align":"center"}},null,-1),z={style:{"text-align":"left"}},F=t("code",null,"位运算",-1),T=t("code",null,"队列",-1),K=t("code",null,"数组",-1),Y=t("code",null,"2+",-1),D=t("td",{style:{"text-align":"center"}},"🔴",-1),G={style:{"text-align":"center"}},H={href:"https://leetcode.cn/problems/minimum-number-of-k-consecutive-bit-flips",target:"_blank",rel:"noopener noreferrer"},J={href:"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips",target:"_blank",rel:"noopener noreferrer"},P=t("td",{style:{"text-align":"center"}},"1375",-1),Q=t("td",{style:{"text-align":"left"}},"二进制字符串前缀一致的次数",-1),U=t("td",{style:{"text-align":"center"}},null,-1),W={style:{"text-align":"left"}},X=t("code",null,"数组",-1),Z=t("td",{style:{"text-align":"center"}},"🟠",-1),$={style:{"text-align":"center"}},tt={href:"https://leetcode.cn/problems/number-of-times-binary-string-is-prefix-aligned",target:"_blank",rel:"noopener noreferrer"},et={href:"https://leetcode.com/problems/number-of-times-binary-string-is-prefix-aligned",target:"_blank",rel:"noopener noreferrer"},nt=t("td",{style:{"text-align":"center"}},"2485",-1),ot=t("td",{style:{"text-align":"left"}},"找出中枢整数",-1),st=t("td",{style:{"text-align":"center"}},null,-1),lt={style:{"text-align":"left"}},at=t("code",null,"数学",-1),rt=t("code",null,"前缀和",-1),it=t("td",{style:{"text-align":"center"}},"🟢",-1),ct={style:{"text-align":"center"}},dt={href:"https://leetcode.cn/problems/find-the-pivot-integer",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://leetcode.com/problems/find-the-pivot-integer",target:"_blank",rel:"noopener noreferrer"};function ut(ht,_t){const r=a("font"),s=a("RouterLink"),l=a("ExternalLinkIcon");return c(),d("div",null,[_,t("p",null,[e("🟠 "),n(r,{color:"#ffb800"},{default:o(()=>[e("Medium")]),_:1}),e("  🔖  "),n(s,{to:"/tag/brainteaser.html"},{default:o(()=>[g]),_:1}),e(),n(s,{to:"/tag/math.html"},{default:o(()=>[f]),_:1}),e("  🔗 "),t("a",b,[m,n(l)]),e(),t("a",k,[x,n(l)])]),y,p(" prettier-ignore "),t("table",null,[v,t("tbody",null,[t("tr",null,[q,w,E,t("td",O,[n(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[j]),_:1}),e(),n(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[C]),_:1}),e(),n(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[I]),_:1}),e(),L]),N,t("td",V,[t("a",A,[e("🀄️"),n(l)]),e(),t("a",B,[e("🔗"),n(l)])])]),t("tr",null,[M,R,S,t("td",z,[n(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[F]),_:1}),e(),n(s,{to:"/tag/queue.html"},{default:o(()=>[T]),_:1}),e(),n(s,{to:"/tag/array.html"},{default:o(()=>[K]),_:1}),e(),Y]),D,t("td",G,[t("a",H,[e("🀄️"),n(l)]),e(),t("a",J,[e("🔗"),n(l)])])]),t("tr",null,[P,Q,U,t("td",W,[n(s,{to:"/tag/array.html"},{default:o(()=>[X]),_:1})]),Z,t("td",$,[t("a",tt,[e("🀄️"),n(l)]),e(),t("a",et,[e("🔗"),n(l)])])]),t("tr",null,[nt,ot,st,t("td",lt,[n(s,{to:"/tag/math.html"},{default:o(()=>[at]),_:1}),e(),n(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1})]),it,t("td",ct,[t("a",dt,[e("🀄️"),n(l)]),e(),t("a",pt,[e("🔗"),n(l)])])])])])])}const ft=i(h,[["render",ut],["__file","0319.html.vue"]]);export{ft as default};
