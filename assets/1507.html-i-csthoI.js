import{_ as l,r as a,o as r,c as i,a as n,b as s,d as t,w as e,e as u}from"./app-B5EG-zH0.js";const d={},k=n("h1",{id:"_1507-转变日期格式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1507-转变日期格式","aria-hidden":"true"},"#"),s(" 1507. 转变日期格式")],-1),q=n("code",null,"字符串",-1),m={href:"https://leetcode.cn/problems/reformat-date",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"力扣",-1),v={href:"https://leetcode.com/problems/reformat-date",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"LeetCode",-1),b=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a <code>date</code> string in the form <code>Day Month Year</code>, where:</p><ul><li><code>Day</code> is in the set <code>{&quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;, ..., &quot;30th&quot;, &quot;31st&quot;}</code>.</li><li><code>Month</code> is in the set <code>{&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;}</code>.</li><li><code>Year</code> is in the range <code>[1900, 2100]</code>.</li></ul><p>Convert the date string to the format <code>YYYY-MM-DD</code>, where:</p><ul><li><code>YYYY</code> denotes the 4 digit year.</li><li><code>MM</code> denotes the 2 digit month.</li><li><code>DD</code> denotes the 2 digit day.</li></ul><p><strong>Example 1:</strong></p><blockquote><p>Input: date = &quot;20th Oct 2052&quot;</p><p>Output: &quot;2052-10-20&quot;</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: date = &quot;6th Jun 1933&quot;</p><p>Output: &quot;1933-06-06&quot;</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: date = &quot;26th May 1960&quot;</p><p>Output: &quot;1960-05-26&quot;</p></blockquote><p><strong>Constraints:</strong></p><ul><li>The given dates are guaranteed to be valid, so no error handling is necessary.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个字符串 <code>date</code> ，它的格式为 <code>Day Month Year</code> ，其中：</p><ul><li><code>Day</code> 是集合 <code>{&quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;, ..., &quot;30th&quot;, &quot;31st&quot;}</code> 中的一个元素。</li><li><code>Month</code> 是集合 <code>{&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;}</code> 中的一个元素。</li><li><code>Year</code> 的范围在 ​<code>[1900, 2100]</code> 之间。</li></ul><p>请你将字符串转变为 <code>YYYY-MM-DD</code> 的格式，其中：</p><ul><li><code>YYYY</code> 表示 4 位的年份。</li><li><code>MM</code> 表示 2 位的月份。</li><li><code>DD</code> 表示 2 位的天数。</li></ul><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> date = &quot;20th Oct 2052&quot;</p><p><strong>输出：</strong> &quot;2052-10-20&quot;</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> date = &quot;6th Jun 1933&quot;</p><p><strong>输出：</strong> &quot;1933-06-06&quot;</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> date = &quot;26th May 1960&quot;</p><p><strong>输出：</strong> &quot;1960-05-26&quot;</p></blockquote><p><strong>提示：</strong></p><ul><li>给定日期保证是合法的，所以不需要处理异常输入。</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><strong>月份映射</strong>：使用对象 <code>months</code> 将月份的英文缩写映射到对应的数字（例如 <code>&quot;Jan&quot;</code> 映射为 <code>&quot;01&quot;</code>）。这样做可以方便快速查找。</li><li><strong>拆分日期</strong>：通过 <code>split(&#39; &#39;)</code> 将日期字符串拆分为 <code>day</code>、<code>month</code> 和 <code>year</code>。</li><li><strong>处理日期的后缀</strong>：使用 <code>slice(0, day.length - 2)</code> 去除日期中的后缀（如 <code>st</code>、<code>nd</code>、<code>rd</code>、<code>th</code>）。</li><li><strong>补零处理</strong>：确保日期总是两位数，如果日期只有一位数（如 <code>1</code>），则在前面加上零。</li><li><strong>返回格式化后的日期</strong>：通过模板字符串，将 <code>year</code>、<code>month</code> 和 <code>day</code> 组合成所需的 <code>&quot;yyyy-mm-dd&quot;</code> 格式返回。</li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(1)</code>，对日期进行切割和字符串操作的时间复杂度是 <code>O(1)</code>，因为只涉及固定长度的字符串。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，<code>months</code> 对象是常量大小的映射。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">date</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">reformatDate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 将月份的英文缩写与数字对应起来</span>
	<span class="token keyword">const</span> months <span class="token operator">=</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">Jan</span><span class="token operator">:</span> <span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Feb</span><span class="token operator">:</span> <span class="token string">&#39;02&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Mar</span><span class="token operator">:</span> <span class="token string">&#39;03&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Apr</span><span class="token operator">:</span> <span class="token string">&#39;04&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">May</span><span class="token operator">:</span> <span class="token string">&#39;05&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Jun</span><span class="token operator">:</span> <span class="token string">&#39;06&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Jul</span><span class="token operator">:</span> <span class="token string">&#39;07&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Aug</span><span class="token operator">:</span> <span class="token string">&#39;08&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Sep</span><span class="token operator">:</span> <span class="token string">&#39;09&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Oct</span><span class="token operator">:</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Nov</span><span class="token operator">:</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">Dec</span><span class="token operator">:</span> <span class="token string">&#39;12&#39;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token comment">// 拆分输入日期</span>
	<span class="token keyword">let</span> <span class="token punctuation">[</span>day<span class="token punctuation">,</span> month<span class="token punctuation">,</span> year<span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 去掉日期中的后缀（例如 &quot;1st&quot; -&gt; &quot;1&quot;）</span>
	day <span class="token operator">=</span> day<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> day<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 如果日期是单数，则前面补零</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>day<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		day <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> day<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 返回按要求格式化后的日期</span>
	<span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>months<span class="token punctuation">[</span>month<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function y(_,f){const p=a("font"),c=a("RouterLink"),o=a("ExternalLinkIcon");return r(),i("div",null,[k,n("p",null,[s("🟢 "),t(p,{color:"#15bd66"},{default:e(()=>[s("Easy")]),_:1}),s("  🔖  "),t(c,{to:"/tag/string.html"},{default:e(()=>[q]),_:1}),s("  🔗 "),n("a",m,[h,t(o)]),s(),n("a",v,[g,t(o)])]),b])}const Y=l(d,[["render",y],["__file","1507.html.vue"]]);export{Y as default};
