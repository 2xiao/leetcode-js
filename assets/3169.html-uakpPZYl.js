import{_ as c,r as p,o as r,c as i,a as n,b as s,d as t,w as e,f as d,e as u}from"./app-fBVbqwGY.js";const g={},k=n("h1",{id:"_3169-无需开会的工作日",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3169-无需开会的工作日","aria-hidden":"true"},"#"),s(" 3169. 无需开会的工作日")],-1),m=n("code",null,"数组",-1),h=n("code",null,"排序",-1),_={href:"https://leetcode.cn/problems/count-days-without-meetings",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"力扣",-1),b={href:"https://leetcode.com/problems/count-days-without-meetings",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"LeetCode",-1),f=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given a positive integer <code>days</code> representing the total number of days an employee is available for work (starting from day 1). You are also given a 2D array <code>meetings</code> of size <code>n</code> where, <code>meetings[i] = [start_i, end_i]</code> represents the starting and ending days of meeting <code>i</code> (inclusive).</p><p>Return the count of days when the employee is available for work but no meetings are scheduled.</p><p><strong>Note:</strong> The meetings may overlap.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> days = 10, meetings = [[5,7],[1,3],[9,10]]</p><p><strong>Output:</strong> 2</p><p><strong>Explanation:</strong></p><p>There is no meeting scheduled on the 4th and 8th days.</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> days = 5, meetings = [[2,4],[1,3]]</p><p><strong>Output:</strong> 1</p><p><strong>Explanation:</strong></p><p>There is no meeting scheduled on the 5th day.</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> days = 6, meetings = [[1,6]]</p><p><strong>Output:</strong> 0</p><p><strong>Explanation:</strong></p><p>Meetings are scheduled for all working days.</p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= days &lt;= 10^9</code></li><li><code>1 &lt;= meetings.length &lt;= 10^5</code></li><li><code>meetings[i].length == 2</code></li><li><code>1 &lt;= meetings[i][0] &lt;= meetings[i][1] &lt;= days</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个正整数 <code>days</code>，表示员工可工作的总天数（从第 1 天开始）。另给你一个二维数组 <code>meetings</code>，长度为 <code>n</code>，其中 <code>meetings[i] = [start_i, end_i]</code> 表示第 <code>i</code> 次会议的开始和结束天数（包含首尾）。</p><p>返回员工可工作且没有安排会议的天数。</p><p><strong>注意：</strong> 会议时间可能会有重叠。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> days = 10, meetings = [[5,7],[1,3],[9,10]]</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><p>第 4 天和第 8 天没有安排会议。</p><p><strong>示例 2：</strong></p><p><strong>输入：</strong> days = 5, meetings = [[2,4],[1,3]]</p><p><strong>输出：</strong> 1</p><p><strong>解释：</strong></p><p>第 5 天没有安排会议。</p><p><strong>示例 3：</strong></p><p><strong>输入：</strong> days = 6, meetings = [[1,6]]</p><p><strong>输出：</strong> 0</p><p><strong>解释：</strong></p><p>所有工作日都安排了会议。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= days &lt;= 10^9</code></li><li><code>1 &lt;= meetings.length &lt;= 10^5</code></li><li><code>meetings[i].length == 2</code></li><li><code>1 &lt;= meetings[i][0] &lt;= meetings[i][1] &lt;= days</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p><strong>对会议进行排序</strong></p><ul><li>按照 <strong>开始日期升序</strong> 对会议进行排序。</li></ul></li><li><p><strong>遍历排序后的会议</strong></p><ul><li>用 <code>prev</code> 变量记录<strong>当前已经占用到的最晚日期</strong>。</li><li>对于每场会议： <ul><li><strong>空闲天数</strong> = 当前会议的 <code>start</code> 与 <code>prev</code> 之间的差值（如果存在空闲）。</li><li>如果 <code>end</code> 超过 <code>prev</code>，则更新 <code>prev</code>。</li></ul></li></ul></li><li><p><strong>处理最后的空闲天数</strong></p><ul><li>遍历结束后，若 <code>prev &lt; days</code>，说明最后一段时间还有空闲天数，需将其计入。</li></ul></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(m log m)</code>，其中 <code>m</code> 为会议数量。 <ul><li>对 <code>meetings</code> 进行排序的时间复杂度为 <code>O(m log m)</code>；</li><li>遍历每个会议的时间复杂度为 <code>O(m)</code>；</li><li>因此整体时间复杂度为 <code>O(m log m)</code>。</li></ul></li><li><strong>空间复杂度</strong>：<code>O(1)</code>，使用常数级别的变量 <code>count</code> 和 <code>prev</code>，排序可在原数组上进行，不需要额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">days</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">meetings</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">countDays</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">days<span class="token punctuation">,</span> meetings</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	meetings<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> prev <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> meetings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> <span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span> <span class="token operator">=</span> meetings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count <span class="token operator">+=</span> start <span class="token operator">-</span> prev <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		prev <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	count <span class="token operator">+=</span> days <span class="token operator">-</span> prev<span class="token punctuation">;</span>
	<span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,49),x=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"center"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),w=n("td",{style:{"text-align":"center"}},"56",-1),E=n("td",{style:{"text-align":"left"}},"合并区间",-1),O={style:{"text-align":"center"}},N={style:{"text-align":"left"}},C=n("code",null,"数组",-1),I=n("code",null,"排序",-1),L=n("td",{style:{"text-align":"center"}},"🟠",-1),V={style:{"text-align":"center"}},T={href:"https://leetcode.cn/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},j={href:"https://leetcode.com/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"};function B(M,R){const l=p("font"),a=p("RouterLink"),o=p("ExternalLinkIcon");return r(),i("div",null,[k,n("p",null,[s("🟠 "),t(l,{color:"#ffb800"},{default:e(()=>[s("Medium")]),_:1}),s("  🔖  "),t(a,{to:"/tag/array.html"},{default:e(()=>[m]),_:1}),s(),t(a,{to:"/tag/sorting.html"},{default:e(()=>[h]),_:1}),s("  🔗 "),n("a",_,[v,t(o)]),s(),n("a",b,[y,t(o)])]),f,d(" prettier-ignore "),n("table",null,[x,n("tbody",null,[n("tr",null,[w,E,n("td",O,[t(a,{to:"/problem/0056.html"},{default:e(()=>[s("[✓]")]),_:1})]),n("td",N,[t(a,{to:"/tag/array.html"},{default:e(()=>[C]),_:1}),s(),t(a,{to:"/tag/sorting.html"},{default:e(()=>[I]),_:1})]),L,n("td",V,[n("a",T,[s("🀄️"),t(o)]),s(),n("a",j,[s("🔗"),t(o)])])])])])])}const Y=c(g,[["render",B],["__file","3169.html.vue"]]);export{Y as default};
