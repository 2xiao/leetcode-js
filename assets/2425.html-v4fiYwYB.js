import{_ as l,r as t,o as i,c as u,a as n,b as s,d as e,w as a,e as r}from"./app-aQeLbVW9.js";const d={},m=n("h1",{id:"_2425-所有数对的异或和",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2425-所有数对的异或和","aria-hidden":"true"},"#"),s(" 2425. 所有数对的异或和")],-1),k=n("code",null,"位运算",-1),h=n("code",null,"脑筋急转弯",-1),g=n("code",null,"数组",-1),b={href:"https://leetcode.cn/problems/bitwise-xor-of-all-pairings",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"力扣",-1),_={href:"https://leetcode.com/problems/bitwise-xor-of-all-pairings",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"LeetCode",-1),w=r(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given two <strong>0-indexed</strong> arrays, <code>nums1</code> and <code>nums2</code>, consisting of non-negative integers. There exists another array, <code>nums3</code>, which contains the bitwise XOR of <strong>all pairings</strong> of integers between <code>nums1</code> and <code>nums2</code> (every integer in <code>nums1</code> is paired with every integer in <code>nums2</code> <strong>exactly once</strong>).</p><p>Return <em>the <strong>bitwise XOR</strong> of all integers in</em> <code>nums3</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums1 = [2,1,3], nums2 = [10,2,5,0]</p><p>Output: 13</p><p>Explanation:</p><p>A possible nums3 array is [8,0,7,2,11,3,4,1,9,1,6,3].</p><p>The bitwise XOR of all these numbers is 13, so we return 13.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums1 = [1,2], nums2 = [3,4]</p><p>Output: 0</p><p>Explanation:</p><p>All possible pairs of bitwise XORs are nums1[0] ^ nums2[0], nums1[0] ^ nums2[1], nums1[1] ^ nums2[0], and nums1[1] ^ nums2[1].</p><p>Thus, one possible nums3 array is [2,5,1,6].</p><p>2 ^ 5 ^ 1 ^ 6 = 0, so we return 0.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums1.length, nums2.length &lt;= 10^5</code></li><li><code>0 &lt;= nums1[i], nums2[j] &lt;= 10^9</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你两个下标从 <strong>0</strong> 开始的数组 <code>nums1</code> 和 <code>nums2</code> ，两个数组都只包含非负整数。请你求出另外一个数组 <code>nums3</code> ，包含 <code>nums1</code> 和 <code>nums2</code> 中 <strong>所有数对</strong> 的异或和（<code>nums1</code> 中每个整数都跟 <code>nums2</code> 中每个整数 <strong>恰好</strong> 匹配一次）。</p><p>请你返回 <code>nums3</code> 中所有整数的 <strong>异或和</strong> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> nums1 = [2,1,3], nums2 = [10,2,5,0]</p><p><strong>输出：</strong> 13</p><p><strong>解释：</strong></p><p>一个可能的 nums3 数组是 [8,0,7,2,11,3,4,1,9,1,6,3] 。</p><p>所有这些数字的异或和是 13 ，所以我们返回 13 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> nums1 = [1,2], nums2 = [3,4]</p><p><strong>输出：</strong> 0</p><p><strong>解释：</strong></p><p>所有数对异或和的结果分别为 nums1[0] ^ nums2[0] ，nums1[0] ^ nums2[1] ，nums1[1] ^ nums2[0] 和 nums1[1] ^ nums2[1] 。</p><p>所以，一个可能的 nums3 数组是 [2,5,1,6] 。</p><p>2 ^ 5 ^ 1 ^ 6 = 0 ，所以我们返回 0 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums1.length, nums2.length &lt;= 10^5</code></li><li><code>0 &lt;= nums1[i], nums2[j] &lt;= 10^9</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p>统计 <code>nums1</code> 和 <code>nums2</code> 中的数字被异或的次数：</p><ul><li>对于 <code>nums1</code> 中的每个数字，会被 <code>nums2</code> 的所有数字异或 <code>len2</code> 次。</li><li>对于 <code>nums2</code> 中的每个数字，会被 <code>nums1</code> 的所有数字异或 <code>len1</code> 次。</li></ul></li><li><p>遍历两个数组，对每个数字的总出现次数取模 2，判断是否对结果有贡献。</p><ul><li>如果某个数字出现次数是偶数次，那么异或结果对总异或没有贡献。</li><li>如果某个数字出现次数是奇数次，那么它会对总异或产生贡献。</li></ul></li><li><p>维护一个变量 <code>res</code>，将所有有贡献的数字异或到 <code>res</code> 中。</p></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n + m)</code>，其中 <code>n</code> 和 <code>m</code> 分别是 <code>nums1</code> 和 <code>nums2</code> 的长度，遍历 <code>nums1</code> 和 <code>nums2</code> 一次。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，使用常量额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums2</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">xorAllNums</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> len1 <span class="token operator">=</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">const</span> len2 <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>len2 <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			res <span class="token operator">^=</span> num<span class="token punctuation">;</span> <span class="token comment">// nums1 的每个数字参与 len2 次异或，当 len2 为奇数时，保留贡献</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>len1 <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			res <span class="token operator">^=</span> num<span class="token punctuation">;</span> <span class="token comment">// nums2 的每个数字参与 len1 次异或，当 len1 为奇数时，保留贡献</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function y(x,q){const c=t("font"),o=t("RouterLink"),p=t("ExternalLinkIcon");return i(),u("div",null,[m,n("p",null,[s("🟠 "),e(c,{color:"#ffb800"},{default:a(()=>[s("Medium")]),_:1}),s("  🔖  "),e(o,{to:"/tag/bit-manipulation.html"},{default:a(()=>[k]),_:1}),s(),e(o,{to:"/tag/brainteaser.html"},{default:a(()=>[h]),_:1}),s(),e(o,{to:"/tag/array.html"},{default:a(()=>[g]),_:1}),s("  🔗 "),n("a",b,[v,e(p)]),s(),n("a",_,[f,e(p)])]),w])}const E=l(d,[["render",y],["__file","2425.html.vue"]]);export{E as default};
