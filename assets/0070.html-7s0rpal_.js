import{_ as p,r as l,o as u,c as _,a as t,b as e,d as n,w as s,f as h,e as m}from"./app-B5EG-zH0.js";const k={},g=t("h1",{id:"_70-爬楼梯",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_70-爬楼梯","aria-hidden":"true"},"#"),e(" 70. 爬楼梯")],-1),b=t("code",null,"记忆化搜索",-1),f=t("code",null,"数学",-1),y=t("code",null,"动态规划",-1),x={href:"https://leetcode.cn/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},v=t("code",null,"力扣",-1),w={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},E=t("code",null,"LeetCode",-1),j=m('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are climbing a staircase. It takes <code>n</code> steps to reach the top.</p><p>Each time you can either climb <code>1</code> or <code>2</code> steps. In how many distinct ways can you climb to the top?</p><p><strong>Example 1:</strong></p><blockquote><p>Input: n = 2</p><p>Output: 2</p><p>Explanation: There are two ways to climb to the top.</p><ol><li><p>1 step + 1 step</p></li><li><p>2 steps</p></li></ol></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: n = 3</p><p>Output: 3</p><p>Explanation: There are three ways to climb to the top.</p><ol><li><p>1 step + 1 step + 1 step</p></li><li><p>1 step + 2 steps</p></li><li><p>2 steps + 1 step</p></li></ol></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= n &lt;= 45</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>假设你正在爬楼梯。需要 <code>n</code> 阶你才能到达楼顶。</p><p>每次你可以爬 <code>1</code> 或 <code>2</code> 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> n = 2</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong> 有两种方法可以爬到楼顶。</p><ol><li><p>1 阶 + 1 阶</p></li><li><p>2 阶</p></li></ol></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> n = 3</p><p><strong>输出：</strong> 3</p><p><strong>解释：</strong> 有三种方法可以爬到楼顶。</p><ol><li><p>1 阶 + 1 阶 + 1 阶</p></li><li><p>1 阶 + 2 阶</p></li><li><p>2 阶 + 1 阶</p></li></ol></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 45</code></li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li><p><strong>递归定义</strong>：</p><ul><li><p>设 <code>dp[i]</code> 表示到达第 <code>i</code> 级台阶的方法数。</p></li><li><p>由于每次只能爬 <code>1</code> 级或 <code>2</code> 级，因此可以从 <code>i-1</code> 或 <code>i-2</code> 级台阶爬上来：</p><p><code>dp[i] = dp[i - 1] + dp[i - 2]</code></p></li><li><p>这与 <strong>斐波那契数列</strong> 相同。</p></li></ul></li><li><p><strong>边界条件</strong>：</p><ul><li><code>dp[0] = 1</code>（只有一种方式，即不爬）。</li><li><code>dp[1] = 1</code>（只能一步到达）。</li></ul></li><li><p><strong>动态规划求解</strong>：</p><ul><li>使用数组 <code>dp</code> 记录状态。</li><li>递推 <code>dp[i] = dp[i - 1] + dp[i - 2]</code> 直到 <code>dp[n]</code>。</li></ul></li><li><p><strong>优化点：滚动变量</strong></p><ul><li>用两个变量 <code>prev1</code> 和 <code>prev2</code> 代替数组 <code>dp</code>，将空间复杂度优化为 <code>O(1)</code>。</li></ul></li></ol><h2 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h2><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，仅需一次循环计算 <code>dp[i]</code>。</li><li><strong>空间复杂度</strong>： <ul><li><code>O(n)</code>，使用数组 <code>dp</code>。</li><li>可优化为 <code>O(1)</code>，仅存 <code>dp[i-1]</code> 和 <code>dp[i-2]</code>。</li></ul></li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',23),q=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[e(`/**
 * `),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"n"),e(`
 * `),t("span",{class:"token keyword"},"@return"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(`
 */`)]),e(`
`),t("span",{class:"token keyword"},"var"),e(),t("span",{class:"token function-variable function"},"climbStairs"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"n"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e(`
	`),t("span",{class:"token keyword"},"let"),e(" dp "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"new"),e(),t("span",{class:"token class-name"},"Array"),t("span",{class:"token punctuation"},"("),e("n "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"fill"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e(`
	dp`),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e(`
	dp`),t("span",{class:"token punctuation"},"["),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e(`
	`),t("span",{class:"token keyword"},"for"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},";"),e(" i "),t("span",{class:"token operator"},"<="),e(" n"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e(`
		dp`),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(" dp"),t("span",{class:"token punctuation"},"["),e("i "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"+"),e(" dp"),t("span",{class:"token punctuation"},"["),e("i "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e(`
	`),t("span",{class:"token punctuation"},"}"),e(`
	`),t("span",{class:"token keyword"},"return"),e(" dp"),t("span",{class:"token punctuation"},"["),e("n"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),I=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[e(`/**
 * `),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"n"),e(`
 * `),t("span",{class:"token keyword"},"@return"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(`
 */`)]),e(`
`),t("span",{class:"token keyword"},"var"),e(),t("span",{class:"token function-variable function"},"climbStairs"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"n"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e(`
	`),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("n "),t("span",{class:"token operator"},"<="),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e(`
	`),t("span",{class:"token keyword"},"let"),e(" prev2 "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),e(`
		prev1 `),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e(`
	`),t("span",{class:"token keyword"},"for"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},";"),e(" i "),t("span",{class:"token operator"},"<="),e(" n"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e(`
		`),t("span",{class:"token keyword"},"let"),e(" curr "),t("span",{class:"token operator"},"="),e(" prev1 "),t("span",{class:"token operator"},"+"),e(" prev2"),t("span",{class:"token punctuation"},";"),e(`
		prev2 `),t("span",{class:"token operator"},"="),e(" prev1"),t("span",{class:"token punctuation"},";"),e(`
		prev1 `),t("span",{class:"token operator"},"="),e(" curr"),t("span",{class:"token punctuation"},";"),e(`
	`),t("span",{class:"token punctuation"},"}"),e(`
	`),t("span",{class:"token keyword"},"return"),e(" prev1"),t("span",{class:"token punctuation"},";"),e(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),C=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),e(" 相关题目")],-1),N=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),O=t("td",{style:{"text-align":"center"}},"509",-1),A=t("td",{style:{"text-align":"left"}},"斐波那契数",-1),L={style:{"text-align":"center"}},T={style:{"text-align":"left"}},V=t("code",null,"递归",-1),z=t("code",null,"记忆化搜索",-1),B=t("code",null,"数学",-1),S=t("code",null,"1+",-1),R=t("td",{style:{"text-align":"center"}},"🟢",-1),K={style:{"text-align":"center"}},Y={href:"https://leetcode.cn/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},D={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},F=t("td",{style:{"text-align":"center"}},"746",-1),G=t("td",{style:{"text-align":"left"}},"使用最小花费爬楼梯",-1),H={style:{"text-align":"center"}},J={style:{"text-align":"left"}},M=t("code",null,"数组",-1),P=t("code",null,"动态规划",-1),Q=t("td",{style:{"text-align":"center"}},"🟢",-1),U={style:{"text-align":"center"}},W={href:"https://leetcode.cn/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},X={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Z=t("td",{style:{"text-align":"center"}},"1137",-1),$=t("td",{style:{"text-align":"left"}},"第 N 个泰波那契数",-1),tt={style:{"text-align":"center"}},et={style:{"text-align":"left"}},nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"数学",-1),ot=t("code",null,"动态规划",-1),at=t("td",{style:{"text-align":"center"}},"🟢",-1),lt={style:{"text-align":"center"}},ct={href:"https://leetcode.cn/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},it=t("td",{style:{"text-align":"center"}},"2244",-1),dt=t("td",{style:{"text-align":"left"}},"完成所有任务需要的最少轮数",-1),pt=t("td",{style:{"text-align":"center"}},null,-1),ut={style:{"text-align":"left"}},_t=t("code",null,"贪心",-1),ht=t("code",null,"数组",-1),mt=t("code",null,"哈希表",-1),kt=t("code",null,"1+",-1),gt=t("td",{style:{"text-align":"center"}},"🟠",-1),bt={style:{"text-align":"center"}},ft={href:"https://leetcode.cn/problems/minimum-rounds-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},xt=t("td",{style:{"text-align":"center"}},"2320",-1),vt=t("td",{style:{"text-align":"left"}},"统计放置房子的方式数",-1),wt=t("td",{style:{"text-align":"center"}},null,-1),Et={style:{"text-align":"left"}},jt=t("code",null,"动态规划",-1),qt=t("td",{style:{"text-align":"center"}},"🟠",-1),It={style:{"text-align":"center"}},Ct={href:"https://leetcode.cn/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},Ot=t("td",{style:{"text-align":"center"}},"2400",-1),At=t("td",{style:{"text-align":"left"}},"恰好移动 k 步到达某一位置的方法数目",-1),Lt=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},Vt=t("code",null,"数学",-1),zt=t("code",null,"动态规划",-1),Bt=t("code",null,"组合数学",-1),St=t("td",{style:{"text-align":"center"}},"🟠",-1),Rt={style:{"text-align":"center"}},Kt={href:"https://leetcode.cn/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},"2466",-1),Ft=t("td",{style:{"text-align":"left"}},"统计构造好字符串的方案数",-1),Gt={style:{"text-align":"center"}},Ht={style:{"text-align":"left"}},Jt=t("code",null,"动态规划",-1),Mt=t("td",{style:{"text-align":"center"}},"🟠",-1),Pt={style:{"text-align":"center"}},Qt={href:"https://leetcode.cn/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},"2498",-1),Xt=t("td",{style:{"text-align":"left"}},"青蛙过河 II",-1),Zt=t("td",{style:{"text-align":"center"}},null,-1),$t={style:{"text-align":"left"}},te=t("code",null,"贪心",-1),ee=t("code",null,"数组",-1),ne=t("code",null,"二分查找",-1),se=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},ae={href:"https://leetcode.cn/problems/frog-jump-ii",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/frog-jump-ii",target:"_blank",rel:"noopener noreferrer"},ce=t("td",{style:{"text-align":"center"}},"3154",-1),re=t("td",{style:{"text-align":"left"}},"到达第 K 级台阶的方案数",-1),ie=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},pe=t("code",null,"位运算",-1),ue=t("code",null,"记忆化搜索",-1),_e=t("code",null,"数学",-1),he=t("code",null,"2+",-1),me=t("td",{style:{"text-align":"center"}},"🔴",-1),ke={style:{"text-align":"center"}},ge={href:"https://leetcode.cn/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},be={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},"3183",-1),ye=t("td",{style:{"text-align":"left"}},"达到总和的方法数量 🔒",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),ve={style:{"text-align":"left"}},we=t("code",null,"数组",-1),Ee=t("code",null,"动态规划",-1),je=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},Ie={href:"https://leetcode.cn/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"};function Ne(Oe,Ae){const i=l("font"),o=l("RouterLink"),a=l("ExternalLinkIcon"),d=l("CodeTabs");return u(),_("div",null,[g,t("p",null,[e("🟢 "),n(i,{color:"#15bd66"},{default:s(()=>[e("Easy")]),_:1}),e("  🔖  "),n(o,{to:"/tag/memoization.html"},{default:s(()=>[b]),_:1}),e(),n(o,{to:"/tag/math.html"},{default:s(()=>[f]),_:1}),e(),n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[y]),_:1}),e("  🔗 "),t("a",x,[v,n(a)]),e(),t("a",w,[E,n(a)])]),j,n(d,{id:"264",data:[{id:"动态规划"},{id:"动态规划-滚动变量"}]},{title0:s(({value:c,isActive:r})=>[e("动态规划")]),title1:s(({value:c,isActive:r})=>[e("动态规划-滚动变量")]),tab0:s(({value:c,isActive:r})=>[q]),tab1:s(({value:c,isActive:r})=>[I]),_:1}),C,h(" prettier-ignore "),t("table",null,[N,t("tbody",null,[t("tr",null,[O,A,t("td",L,[n(o,{to:"/problem/0509.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",T,[n(o,{to:"/tag/recursion.html"},{default:s(()=>[V]),_:1}),e(),n(o,{to:"/tag/memoization.html"},{default:s(()=>[z]),_:1}),e(),n(o,{to:"/tag/math.html"},{default:s(()=>[B]),_:1}),e(),S]),R,t("td",K,[t("a",Y,[e("🀄️"),n(a)]),e(),t("a",D,[e("🔗"),n(a)])])]),t("tr",null,[F,G,t("td",H,[n(o,{to:"/problem/0746.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",J,[n(o,{to:"/tag/array.html"},{default:s(()=>[M]),_:1}),e(),n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[P]),_:1})]),Q,t("td",U,[t("a",W,[e("🀄️"),n(a)]),e(),t("a",X,[e("🔗"),n(a)])])]),t("tr",null,[Z,$,t("td",tt,[n(o,{to:"/problem/1137.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",et,[n(o,{to:"/tag/memoization.html"},{default:s(()=>[nt]),_:1}),e(),n(o,{to:"/tag/math.html"},{default:s(()=>[st]),_:1}),e(),n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[ot]),_:1})]),at,t("td",lt,[t("a",ct,[e("🀄️"),n(a)]),e(),t("a",rt,[e("🔗"),n(a)])])]),t("tr",null,[it,dt,pt,t("td",ut,[n(o,{to:"/tag/greedy.html"},{default:s(()=>[_t]),_:1}),e(),n(o,{to:"/tag/array.html"},{default:s(()=>[ht]),_:1}),e(),n(o,{to:"/tag/hash-table.html"},{default:s(()=>[mt]),_:1}),e(),kt]),gt,t("td",bt,[t("a",ft,[e("🀄️"),n(a)]),e(),t("a",yt,[e("🔗"),n(a)])])]),t("tr",null,[xt,vt,wt,t("td",Et,[n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[jt]),_:1})]),qt,t("td",It,[t("a",Ct,[e("🀄️"),n(a)]),e(),t("a",Nt,[e("🔗"),n(a)])])]),t("tr",null,[Ot,At,Lt,t("td",Tt,[n(o,{to:"/tag/math.html"},{default:s(()=>[Vt]),_:1}),e(),n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[zt]),_:1}),e(),n(o,{to:"/tag/combinatorics.html"},{default:s(()=>[Bt]),_:1})]),St,t("td",Rt,[t("a",Kt,[e("🀄️"),n(a)]),e(),t("a",Yt,[e("🔗"),n(a)])])]),t("tr",null,[Dt,Ft,t("td",Gt,[n(o,{to:"/problem/2466.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ht,[n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Jt]),_:1})]),Mt,t("td",Pt,[t("a",Qt,[e("🀄️"),n(a)]),e(),t("a",Ut,[e("🔗"),n(a)])])]),t("tr",null,[Wt,Xt,Zt,t("td",$t,[n(o,{to:"/tag/greedy.html"},{default:s(()=>[te]),_:1}),e(),n(o,{to:"/tag/array.html"},{default:s(()=>[ee]),_:1}),e(),n(o,{to:"/tag/binary-search.html"},{default:s(()=>[ne]),_:1})]),se,t("td",oe,[t("a",ae,[e("🀄️"),n(a)]),e(),t("a",le,[e("🔗"),n(a)])])]),t("tr",null,[ce,re,ie,t("td",de,[n(o,{to:"/tag/bit-manipulation.html"},{default:s(()=>[pe]),_:1}),e(),n(o,{to:"/tag/memoization.html"},{default:s(()=>[ue]),_:1}),e(),n(o,{to:"/tag/math.html"},{default:s(()=>[_e]),_:1}),e(),he]),me,t("td",ke,[t("a",ge,[e("🀄️"),n(a)]),e(),t("a",be,[e("🔗"),n(a)])])]),t("tr",null,[fe,ye,xe,t("td",ve,[n(o,{to:"/tag/array.html"},{default:s(()=>[we]),_:1}),e(),n(o,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Ee]),_:1})]),je,t("td",qe,[t("a",Ie,[e("🀄️"),n(a)]),e(),t("a",Ce,[e("🔗"),n(a)])])])])])])}const Te=p(k,[["render",Ne],["__file","0070.html.vue"]]);export{Te as default};
