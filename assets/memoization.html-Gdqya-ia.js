import{_,r as d,o as r,c as a,a as t,d as o,w as n,b as e,f as c}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"记忆化搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#记忆化搜索","aria-hidden":"true"},"#"),e(" 记忆化搜索")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),f=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),z=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),I=t("code",null,"字符串匹配",-1),C=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),E=t("code",null,"最小生成树",-1),V=t("code",null,"图",-1),j=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),X=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),H=t("code",null,"后缀数组",-1),W=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),Z=t("code",null,"递归",-1),A=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),J=t("code",null,"贪心",-1),M=t("code",null,"动态规划",-1),Q=t("code",null,"排序",-1),S=t("code",null,"桶排序",-1),U=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("span",{class:"blue"},"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ct=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),ft=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),zt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),It=t("code",null,"数据库",-1),Ct=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Et=t("code",null,"交互",-1),Vt=t("code",null,"迭代器",-1),jt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ot=t("td",{style:{"text-align":"center"}},"70",-1),Kt=t("td",{style:{"text-align":"left"}},"爬楼梯",-1),Rt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},Xt=t("code",null,"记忆化搜索",-1),Dt=t("code",null,"数学",-1),Ft=t("code",null,"动态规划",-1),Ht=t("td",{style:{"text-align":"center"}},"🟢",-1),Wt={style:{"text-align":"center"}},Yt={href:"https://leetcode.cn/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},At=t("td",{style:{"text-align":"center"}},"139",-1),Gt=t("td",{style:{"text-align":"left"}},"单词拆分",-1),Jt={style:{"text-align":"center"}},Mt={style:{"text-align":"left"}},Qt=t("code",null,"字典树",-1),St=t("code",null,"记忆化搜索",-1),Ut=t("code",null,"数组",-1),$t=t("code",null,"3+",-1),te=t("td",{style:{"text-align":"center"}},"🟠",-1),ee={style:{"text-align":"center"}},oe={href:"https://leetcode.cn/problems/word-break",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},"140",-1),se=t("td",{style:{"text-align":"left"}},"单词拆分 II",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},re=t("code",null,"字典树",-1),ae=t("code",null,"记忆化搜索",-1),ce=t("code",null,"数组",-1),ie=t("code",null,"4+",-1),he=t("td",{style:{"text-align":"center"}},"🔴",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},"241",-1),pe=t("td",{style:{"text-align":"left"}},"为运算表达式设计优先级",-1),ye={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},be=t("code",null,"递归",-1),ke=t("code",null,"记忆化搜索",-1),ze=t("code",null,"数学",-1),we=t("code",null,"2+",-1),ve=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},Ie={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"294",-1),Ne=t("td",{style:{"text-align":"left"}},"翻转游戏 II 🔒",-1),Ee=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},je=t("code",null,"记忆化搜索",-1),Pe=t("code",null,"数学",-1),Be=t("code",null,"动态规划",-1),Oe=t("code",null,"2+",-1),Ke=t("td",{style:{"text-align":"center"}},"🟠",-1),Re={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},"329",-1),Fe=t("td",{style:{"text-align":"left"}},"矩阵中的最长递增路径",-1),He={style:{"text-align":"center"}},We={style:{"text-align":"left"}},Ye=t("code",null,"深度优先搜索",-1),Ze=t("code",null,"广度优先搜索",-1),Ae=t("code",null,"图",-1),Ge=t("code",null,"5+",-1),Je=t("td",{style:{"text-align":"center"}},"🔴",-1),Me={style:{"text-align":"center"}},Qe={href:"https://leetcode.cn/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"397",-1),$e=t("td",{style:{"text-align":"left"}},"整数替换",-1),to={style:{"text-align":"center"}},eo={style:{"text-align":"left"}},oo=t("code",null,"贪心",-1),lo=t("code",null,"位运算",-1),no=t("code",null,"记忆化搜索",-1),so=t("code",null,"1+",-1),_o=t("td",{style:{"text-align":"center"}},"🟠",-1),ro={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},co={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},"464",-1),ho=t("td",{style:{"text-align":"left"}},"我能赢吗",-1),go={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},mo=t("code",null,"位运算",-1),fo=t("code",null,"记忆化搜索",-1),po=t("code",null,"数学",-1),yo=t("code",null,"3+",-1),xo=t("td",{style:{"text-align":"center"}},"🟠",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},zo={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"488",-1),vo=t("td",{style:{"text-align":"left"}},"祖玛游戏",-1),qo=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},Co=t("code",null,"栈",-1),Lo=t("code",null,"广度优先搜索",-1),No=t("code",null,"记忆化搜索",-1),Eo=t("code",null,"2+",-1),Vo=t("td",{style:{"text-align":"center"}},"🔴",-1),jo={style:{"text-align":"center"}},Po={href:"https://leetcode.cn/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Bo={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},"509",-1),Ko=t("td",{style:{"text-align":"left"}},"斐波那契数",-1),Ro={style:{"text-align":"center"}},To={style:{"text-align":"left"}},Xo=t("code",null,"递归",-1),Do=t("code",null,"记忆化搜索",-1),Fo=t("code",null,"数学",-1),Ho=t("code",null,"1+",-1),Wo=t("td",{style:{"text-align":"center"}},"🟢",-1),Yo={style:{"text-align":"center"}},Zo={href:"https://leetcode.cn/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},Go=t("td",{style:{"text-align":"center"}},"546",-1),Jo=t("td",{style:{"text-align":"left"}},"移除盒子",-1),Mo=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},So=t("code",null,"记忆化搜索",-1),Uo=t("code",null,"数组",-1),$o=t("code",null,"动态规划",-1),tl=t("td",{style:{"text-align":"center"}},"🔴",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"638",-1),sl=t("td",{style:{"text-align":"left"}},"大礼包",-1),dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},rl=t("code",null,"位运算",-1),al=t("code",null,"记忆化搜索",-1),cl=t("code",null,"数组",-1),il=t("code",null,"3+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),gl={style:{"text-align":"center"}},ul={href:"https://leetcode.cn/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},ml={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},"698",-1),pl=t("td",{style:{"text-align":"left"}},"划分为k个相等的子集",-1),yl=t("td",{style:{"text-align":"center"}},null,-1),xl={style:{"text-align":"left"}},bl=t("code",null,"位运算",-1),kl=t("code",null,"记忆化搜索",-1),zl=t("code",null,"数组",-1),wl=t("code",null,"3+",-1),vl=t("td",{style:{"text-align":"center"}},"🟠",-1),ql={style:{"text-align":"center"}},Il={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Cl={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},"894",-1),Nl=t("td",{style:{"text-align":"left"}},"所有可能的真二叉树",-1),El=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},jl=t("code",null,"树",-1),Pl=t("code",null,"递归",-1),Bl=t("code",null,"记忆化搜索",-1),Ol=t("code",null,"2+",-1),Kl=t("td",{style:{"text-align":"center"}},"🟠",-1),Rl={style:{"text-align":"center"}},Tl={href:"https://leetcode.cn/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Xl={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},Dl=t("td",{style:{"text-align":"center"}},"913",-1),Fl=t("td",{style:{"text-align":"left"}},"猫和老鼠",-1),Hl=t("td",{style:{"text-align":"center"}},null,-1),Wl={style:{"text-align":"left"}},Yl=t("code",null,"图",-1),Zl=t("code",null,"拓扑排序",-1),Al=t("code",null,"记忆化搜索",-1),Gl=t("code",null,"3+",-1),Jl=t("td",{style:{"text-align":"center"}},"🔴",-1),Ml={style:{"text-align":"center"}},Ql={href:"https://leetcode.cn/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},"964",-1),$l=t("td",{style:{"text-align":"left"}},"表示数字的最少运算符",-1),tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"记忆化搜索",-1),ln=t("code",null,"数学",-1),nn=t("code",null,"动态规划",-1),sn=t("td",{style:{"text-align":"center"}},"🔴",-1),dn={style:{"text-align":"center"}},_n={href:"https://leetcode.cn/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},"1137",-1),cn=t("td",{style:{"text-align":"left"}},"第 N 个泰波那契数",-1),hn={style:{"text-align":"center"}},gn={style:{"text-align":"left"}},un=t("code",null,"记忆化搜索",-1),mn=t("code",null,"数学",-1),fn=t("code",null,"动态规划",-1),pn=t("td",{style:{"text-align":"center"}},"🟢",-1),yn={style:{"text-align":"center"}},xn={href:"https://leetcode.cn/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"1387",-1),zn=t("td",{style:{"text-align":"left"}},"将整数按权重排序",-1),wn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},qn=t("code",null,"记忆化搜索",-1),In=t("code",null,"动态规划",-1),Cn=t("code",null,"排序",-1),Ln=t("td",{style:{"text-align":"center"}},"🟠",-1),Nn={style:{"text-align":"center"}},En={href:"https://leetcode.cn/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},"1444",-1),Pn=t("td",{style:{"text-align":"left"}},"切披萨的方案数",-1),Bn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Kn=t("code",null,"记忆化搜索",-1),Rn=t("code",null,"数组",-1),Tn=t("code",null,"动态规划",-1),Xn=t("code",null,"1+",-1),Dn=t("td",{style:{"text-align":"center"}},"🔴",-1),Fn={style:{"text-align":"center"}},Hn={href:"https://leetcode.cn/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",{style:{"text-align":"center"}},"1553",-1),Zn=t("td",{style:{"text-align":"left"}},"吃掉 N 个橘子的最少天数",-1),An=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Jn=t("code",null,"记忆化搜索",-1),Mn=t("code",null,"动态规划",-1),Qn=t("td",{style:{"text-align":"center"}},"🔴",-1),Sn={style:{"text-align":"center"}},Un={href:"https://leetcode.cn/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},"1569",-1),es=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ns=t("code",null,"树",-1),ss=t("code",null,"并查集",-1),ds=t("code",null,"二叉搜索树",-1),_s=t("code",null,"7+",-1),rs=t("td",{style:{"text-align":"center"}},"🔴",-1),as={style:{"text-align":"center"}},cs={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},is={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},"1575",-1),gs=t("td",{style:{"text-align":"left"}},"统计所有可行路径",-1),us=t("td",{style:{"text-align":"center"}},null,-1),ms={style:{"text-align":"left"}},fs=t("code",null,"记忆化搜索",-1),ps=t("code",null,"数组",-1),ys=t("code",null,"动态规划",-1),xs=t("td",{style:{"text-align":"center"}},"🔴",-1),bs={style:{"text-align":"center"}},ks={href:"https://leetcode.cn/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},zs={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},"1611",-1),vs=t("td",{style:{"text-align":"left"}},"使整数变为 0 的最少操作次数",-1),qs=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},Cs=t("code",null,"位运算",-1),Ls=t("code",null,"记忆化搜索",-1),Ns=t("code",null,"动态规划",-1),Es=t("td",{style:{"text-align":"center"}},"🔴",-1),Vs={style:{"text-align":"center"}},js={href:"https://leetcode.cn/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},Ps={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},"1659",-1),Os=t("td",{style:{"text-align":"left"}},"最大化网格幸福感",-1),Ks=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},Ts=t("code",null,"位运算",-1),Xs=t("code",null,"记忆化搜索",-1),Ds=t("code",null,"动态规划",-1),Fs=t("code",null,"1+",-1),Hs=t("td",{style:{"text-align":"center"}},"🔴",-1),Ws={style:{"text-align":"center"}},Ys={href:"https://leetcode.cn/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},Zs={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},"1728",-1),Gs=t("td",{style:{"text-align":"left"}},"猫和老鼠 II",-1),Js=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},Qs=t("code",null,"图",-1),Ss=t("code",null,"拓扑排序",-1),Us=t("code",null,"记忆化搜索",-1),$s=t("code",null,"5+",-1),td=t("td",{style:{"text-align":"center"}},"🔴",-1),ed={style:{"text-align":"center"}},od={href:"https://leetcode.cn/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},ld={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},nd=t("td",{style:{"text-align":"center"}},"1815",-1),sd=t("td",{style:{"text-align":"left"}},"得到新鲜甜甜圈的最多组数",-1),dd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},rd=t("code",null,"位运算",-1),ad=t("code",null,"记忆化搜索",-1),cd=t("code",null,"数组",-1),id=t("code",null,"2+",-1),hd=t("td",{style:{"text-align":"center"}},"🔴",-1),gd={style:{"text-align":"center"}},ud={href:"https://leetcode.cn/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},md={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},"1857",-1),pd=t("td",{style:{"text-align":"left"}},"有向图中最大颜色值",-1),yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},bd=t("code",null,"图",-1),kd=t("code",null,"拓扑排序",-1),zd=t("code",null,"记忆化搜索",-1),wd=t("code",null,"3+",-1),vd=t("td",{style:{"text-align":"center"}},"🔴",-1),qd={style:{"text-align":"center"}},Id={href:"https://leetcode.cn/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Cd={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},"1900",-1),Nd=t("td",{style:{"text-align":"left"}},"最佳运动员的比拼回合",-1),Ed=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},jd=t("code",null,"记忆化搜索",-1),Pd=t("code",null,"动态规划",-1),Bd=t("td",{style:{"text-align":"center"}},"🔴",-1),Od={style:{"text-align":"center"}},Kd={href:"https://leetcode.cn/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Rd={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},"2019",-1),Xd=t("td",{style:{"text-align":"left"}},"解出数学表达式的学生分数",-1),Dd=t("td",{style:{"text-align":"center"}},null,-1),Fd={style:{"text-align":"left"}},Hd=t("code",null,"栈",-1),Wd=t("code",null,"记忆化搜索",-1),Yd=t("code",null,"数组",-1),Zd=t("code",null,"3+",-1),Ad=t("td",{style:{"text-align":"center"}},"🔴",-1),Gd={style:{"text-align":"center"}},Jd={href:"https://leetcode.cn/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},Md={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"2311",-1),Sd=t("td",{style:{"text-align":"left"}},"小于等于 K 的最长二进制子序列",-1),Ud=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"贪心",-1),e_=t("code",null,"记忆化搜索",-1),o_=t("code",null,"字符串",-1),l_=t("code",null,"1+",-1),n_=t("td",{style:{"text-align":"center"}},"🟠",-1),s_={style:{"text-align":"center"}},d_={href:"https://leetcode.cn/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},__={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},"2312",-1),a_=t("td",{style:{"text-align":"left"}},"卖木头块",-1),c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},h_=t("code",null,"记忆化搜索",-1),g_=t("code",null,"数组",-1),u_=t("code",null,"动态规划",-1),m_=t("td",{style:{"text-align":"center"}},"🔴",-1),f_={style:{"text-align":"center"}},p_={href:"https://leetcode.cn/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},y_={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},"2318",-1),b_=t("td",{style:{"text-align":"left"}},"不同骰子序列的数目",-1),k_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},w_=t("code",null,"记忆化搜索",-1),v_=t("code",null,"动态规划",-1),q_=t("td",{style:{"text-align":"center"}},"🔴",-1),I_={style:{"text-align":"center"}},C_={href:"https://leetcode.cn/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},L_={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},N_=t("td",{style:{"text-align":"center"}},"2328",-1),E_=t("td",{style:{"text-align":"left"}},"网格图中递增路径的数目",-1),V_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},P_=t("code",null,"深度优先搜索",-1),B_=t("code",null,"广度优先搜索",-1),O_=t("code",null,"图",-1),K_=t("code",null,"5+",-1),R_=t("td",{style:{"text-align":"center"}},"🔴",-1),T_={style:{"text-align":"center"}},X_={href:"https://leetcode.cn/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},D_={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},"2713",-1),H_=t("td",{style:{"text-align":"left"}},"矩阵中严格递增的单元格数",-1),W_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},Z_=t("code",null,"记忆化搜索",-1),A_=t("code",null,"数组",-1),G_=t("code",null,"哈希表",-1),J_=t("code",null,"5+",-1),M_=t("td",{style:{"text-align":"center"}},"🔴",-1),Q_={style:{"text-align":"center"}},S_={href:"https://leetcode.cn/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},U_={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},"2876",-1),tr=t("td",{style:{"text-align":"left"}},"有向图访问计数",-1),er=t("td",{style:{"text-align":"center"}},null,-1),or={style:{"text-align":"left"}},lr=t("code",null,"图",-1),nr=t("code",null,"记忆化搜索",-1),sr=t("code",null,"动态规划",-1),dr=t("td",{style:{"text-align":"center"}},"🔴",-1),_r={style:{"text-align":"center"}},rr={href:"https://leetcode.cn/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"2998",-1),ir=t("td",{style:{"text-align":"left"}},"使 X 和 Y 相等的最少操作次数",-1),hr=t("td",{style:{"text-align":"center"}},null,-1),gr={style:{"text-align":"left"}},ur=t("code",null,"广度优先搜索",-1),mr=t("code",null,"记忆化搜索",-1),fr=t("code",null,"动态规划",-1),pr=t("td",{style:{"text-align":"center"}},"🟠",-1),yr={style:{"text-align":"center"}},xr={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},br={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},"3040",-1),zr=t("td",{style:{"text-align":"left"}},"相同分数的最大操作数目 II",-1),wr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},qr=t("code",null,"记忆化搜索",-1),Ir=t("code",null,"数组",-1),Cr=t("code",null,"动态规划",-1),Lr=t("td",{style:{"text-align":"center"}},"🟠",-1),Nr={style:{"text-align":"center"}},Er={href:"https://leetcode.cn/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},"3154",-1),Pr=t("td",{style:{"text-align":"left"}},"到达第 K 级台阶的方案数",-1),Br=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},Kr=t("code",null,"位运算",-1),Rr=t("code",null,"记忆化搜索",-1),Tr=t("code",null,"数学",-1),Xr=t("code",null,"2+",-1),Dr=t("td",{style:{"text-align":"center"}},"🔴",-1),Fr={style:{"text-align":"center"}},Hr={href:"https://leetcode.cn/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},Yr=t("td",{style:{"text-align":"center"}},"3459",-1),Zr=t("td",{style:{"text-align":"left"}},"最长 V 形对角线段的长度",-1),Ar=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Jr=t("code",null,"记忆化搜索",-1),Mr=t("code",null,"数组",-1),Qr=t("code",null,"动态规划",-1),Sr=t("code",null,"1+",-1),Ur=t("td",{style:{"text-align":"center"}},"🔴",-1),$r={style:{"text-align":"center"}},ta={href:"https://leetcode.cn/problems/length-of-longest-v-shaped-diagonal-segment",target:"_blank",rel:"noopener noreferrer"},ea={href:"https://leetcode.com/problems/length-of-longest-v-shaped-diagonal-segment",target:"_blank",rel:"noopener noreferrer"},oa=t("td",{style:{"text-align":"center"}},"LCP 20",-1),la=t("td",{style:{"text-align":"left"}},"快速公交",-1),na=t("td",{style:{"text-align":"center"}},null,-1),sa={style:{"text-align":"left"}},da=t("code",null,"记忆化搜索",-1),_a=t("code",null,"数组",-1),ra=t("code",null,"动态规划",-1),aa=t("td",{style:{"text-align":"center"}},"🔴",-1),ca={style:{"text-align":"center"}},ia={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},ha=t("td",{style:{"text-align":"center"}},"LCP 45",-1),ga=t("td",{style:{"text-align":"left"}},"自行车炫技赛场",-1),ua=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},fa=t("code",null,"深度优先搜索",-1),pa=t("code",null,"广度优先搜索",-1),ya=t("code",null,"记忆化搜索",-1),xa=t("code",null,"3+",-1),ba=t("td",{style:{"text-align":"center"}},"🟠",-1),ka={style:{"text-align":"center"}},za={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},"LCP 63",-1),va=t("td",{style:{"text-align":"left"}},"弹珠游戏",-1),qa=t("td",{style:{"text-align":"center"}},null,-1),Ia={style:{"text-align":"left"}},Ca=t("code",null,"深度优先搜索",-1),La=t("code",null,"广度优先搜索",-1),Na=t("code",null,"图",-1),Ea=t("code",null,"5+",-1),Va=t("td",{style:{"text-align":"center"}},"🟠",-1),ja={style:{"text-align":"center"}},Pa={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Ba=t("td",{style:{"text-align":"center"}},"剑指 Offer 10",-1),Oa=t("td",{style:{"text-align":"left"}},"斐波那契数列",-1),Ka={style:{"text-align":"center"}},Ra={style:{"text-align":"left"}},Ta=t("code",null,"记忆化搜索",-1),Xa=t("code",null,"数学",-1),Da=t("code",null,"动态规划",-1),Fa=t("td",{style:{"text-align":"center"}},"🟢",-1),Ha={style:{"text-align":"center"}},Wa={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},"剑指 Offer 10-II",-1),Za=t("td",{style:{"text-align":"left"}},"青蛙跳台阶问题",-1),Aa={style:{"text-align":"center"}},Ga={style:{"text-align":"left"}},Ja=t("code",null,"记忆化搜索",-1),Ma=t("code",null,"数学",-1),Qa=t("code",null,"动态规划",-1),Sa=t("td",{style:{"text-align":"center"}},"🟢",-1),Ua={style:{"text-align":"center"}},$a={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},tc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),ec=t("td",{style:{"text-align":"left"}},"最长递增路径",-1),oc=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},nc=t("code",null,"深度优先搜索",-1),sc=t("code",null,"广度优先搜索",-1),dc=t("code",null,"图",-1),_c=t("code",null,"5+",-1),rc=t("td",{style:{"text-align":"center"}},"🔴",-1),ac={style:{"text-align":"center"}},cc={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),hc=t("td",{style:{"text-align":"left"}},"三步问题",-1),gc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},mc=t("code",null,"记忆化搜索",-1),fc=t("code",null,"数学",-1),pc=t("code",null,"动态规划",-1),yc=t("td",{style:{"text-align":"center"}},"🟢",-1),xc={style:{"text-align":"center"}},bc={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},kc=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),zc=t("td",{style:{"text-align":"left"}},"布尔运算",-1),wc=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},qc=t("code",null,"记忆化搜索",-1),Ic=t("code",null,"字符串",-1),Cc=t("code",null,"动态规划",-1),Lc=t("td",{style:{"text-align":"center"}},"🟠",-1),Nc={style:{"text-align":"center"}},Ec={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"};function Vc(jc,Pc){const l=d("RouterLink"),s=d("ExternalLinkIcon");return r(),a("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[H]),_:1})]),W,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),lt,e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),mt,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Et]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[jt]),_:1})])]),Pt,c(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ot,Kt,t("td",Rt,[o(l,{to:"/problem/0070.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Dt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ft]),_:1})]),Ht,t("td",Wt,[t("a",Yt,[e("🀄️"),o(s)]),e(),t("a",Zt,[e("🔗"),o(s)])])]),t("tr",null,[At,Gt,t("td",Jt,[o(l,{to:"/problem/0139.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mt,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Qt]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[St]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ut]),_:1}),e(),$t]),te,t("td",ee,[t("a",oe,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[ne,se,t("td",de,[o(l,{to:"/problem/0140.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/trie.html"},{default:n(()=>[re]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ce]),_:1}),e(),ie]),he,t("td",ge,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[fe,pe,t("td",ye,[o(l,{to:"/problem/0241.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[be]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ze]),_:1}),e(),we]),ve,t("td",qe,[t("a",Ie,[e("🀄️"),o(s)]),e(),t("a",Ce,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ne,Ee,t("td",Ve,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[je]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Be]),_:1}),e(),Oe]),Ke,t("td",Re,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Xe,[e("🔗"),o(s)])])]),t("tr",null,[De,Fe,t("td",He,[o(l,{to:"/problem/0329.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",We,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ye]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ze]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ae]),_:1}),e(),Ge]),Je,t("td",Me,[t("a",Qe,[e("🀄️"),o(s)]),e(),t("a",Se,[e("🔗"),o(s)])])]),t("tr",null,[Ue,$e,t("td",to,[o(l,{to:"/problem/0397.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",eo,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[oo]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[no]),_:1}),e(),so]),_o,t("td",ro,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",co,[e("🔗"),o(s)])])]),t("tr",null,[io,ho,t("td",go,[o(l,{to:"/problem/0464.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[fo]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[po]),_:1}),e(),yo]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",zo,[e("🔗"),o(s)])])]),t("tr",null,[wo,vo,qo,t("td",Io,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Co]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Lo]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[No]),_:1}),e(),Eo]),Vo,t("td",jo,[t("a",Po,[e("🀄️"),o(s)]),e(),t("a",Bo,[e("🔗"),o(s)])])]),t("tr",null,[Oo,Ko,t("td",Ro,[o(l,{to:"/problem/0509.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",To,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[Xo]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Do]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Fo]),_:1}),e(),Ho]),Wo,t("td",Yo,[t("a",Zo,[e("🀄️"),o(s)]),e(),t("a",Ao,[e("🔗"),o(s)])])]),t("tr",null,[Go,Jo,Mo,t("td",Qo,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[So]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Uo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$o]),_:1})]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",dl,[o(l,{to:"/problem/0638.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_l,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[rl]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[al]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cl]),_:1}),e(),il]),hl,t("td",gl,[t("a",ul,[e("🀄️"),o(s)]),e(),t("a",ml,[e("🔗"),o(s)])])]),t("tr",null,[fl,pl,yl,t("td",xl,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[bl]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zl]),_:1}),e(),wl]),vl,t("td",ql,[t("a",Il,[e("🀄️"),o(s)]),e(),t("a",Cl,[e("🔗"),o(s)])])]),t("tr",null,[Ll,Nl,El,t("td",Vl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jl]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Bl]),_:1}),e(),Ol]),Kl,t("td",Rl,[t("a",Tl,[e("🀄️"),o(s)]),e(),t("a",Xl,[e("🔗"),o(s)])])]),t("tr",null,[Dl,Fl,Hl,t("td",Wl,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Yl]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Zl]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Al]),_:1}),e(),Gl]),Jl,t("td",Ml,[t("a",Ql,[e("🀄️"),o(s)]),e(),t("a",Sl,[e("🔗"),o(s)])])]),t("tr",null,[Ul,$l,tn,t("td",en,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ln]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nn]),_:1})]),sn,t("td",dn,[t("a",_n,[e("🀄️"),o(s)]),e(),t("a",rn,[e("🔗"),o(s)])])]),t("tr",null,[an,cn,t("td",hn,[o(l,{to:"/problem/1137.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gn,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[un]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[mn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fn]),_:1})]),pn,t("td",yn,[t("a",xn,[e("🀄️"),o(s)]),e(),t("a",bn,[e("🔗"),o(s)])])]),t("tr",null,[kn,zn,wn,t("td",vn,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[In]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Cn]),_:1})]),Ln,t("td",Nn,[t("a",En,[e("🀄️"),o(s)]),e(),t("a",Vn,[e("🔗"),o(s)])])]),t("tr",null,[jn,Pn,Bn,t("td",On,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Kn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Rn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Tn]),_:1}),e(),Xn]),Dn,t("td",Fn,[t("a",Hn,[e("🀄️"),o(s)]),e(),t("a",Wn,[e("🔗"),o(s)])])]),t("tr",null,[Yn,Zn,An,t("td",Gn,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Jn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Mn]),_:1})]),Qn,t("td",Sn,[t("a",Un,[e("🀄️"),o(s)]),e(),t("a",$n,[e("🔗"),o(s)])])]),t("tr",null,[ts,es,os,t("td",ls,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ns]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[ss]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ds]),_:1}),e(),_s]),rs,t("td",as,[t("a",cs,[e("🀄️"),o(s)]),e(),t("a",is,[e("🔗"),o(s)])])]),t("tr",null,[hs,gs,us,t("td",ms,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[fs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ps]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ys]),_:1})]),xs,t("td",bs,[t("a",ks,[e("🀄️"),o(s)]),e(),t("a",zs,[e("🔗"),o(s)])])]),t("tr",null,[ws,vs,qs,t("td",Is,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Cs]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ls]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ns]),_:1})]),Es,t("td",Vs,[t("a",js,[e("🀄️"),o(s)]),e(),t("a",Ps,[e("🔗"),o(s)])])]),t("tr",null,[Bs,Os,Ks,t("td",Rs,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Ts]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Xs]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ds]),_:1}),e(),Fs]),Hs,t("td",Ws,[t("a",Ys,[e("🀄️"),o(s)]),e(),t("a",Zs,[e("🔗"),o(s)])])]),t("tr",null,[As,Gs,Js,t("td",Ms,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Qs]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Ss]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Us]),_:1}),e(),$s]),td,t("td",ed,[t("a",od,[e("🀄️"),o(s)]),e(),t("a",ld,[e("🔗"),o(s)])])]),t("tr",null,[nd,sd,dd,t("td",_d,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[rd]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[ad]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cd]),_:1}),e(),id]),hd,t("td",gd,[t("a",ud,[e("🀄️"),o(s)]),e(),t("a",md,[e("🔗"),o(s)])])]),t("tr",null,[fd,pd,yd,t("td",xd,[o(l,{to:"/tag/graph.html"},{default:n(()=>[bd]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[kd]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[zd]),_:1}),e(),wd]),vd,t("td",qd,[t("a",Id,[e("🀄️"),o(s)]),e(),t("a",Cd,[e("🔗"),o(s)])])]),t("tr",null,[Ld,Nd,Ed,t("td",Vd,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[jd]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Pd]),_:1})]),Bd,t("td",Od,[t("a",Kd,[e("🀄️"),o(s)]),e(),t("a",Rd,[e("🔗"),o(s)])])]),t("tr",null,[Td,Xd,Dd,t("td",Fd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Hd]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Wd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yd]),_:1}),e(),Zd]),Ad,t("td",Gd,[t("a",Jd,[e("🀄️"),o(s)]),e(),t("a",Md,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Sd,Ud,t("td",$d,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[e_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[o_]),_:1}),e(),l_]),n_,t("td",s_,[t("a",d_,[e("🀄️"),o(s)]),e(),t("a",__,[e("🔗"),o(s)])])]),t("tr",null,[r_,a_,c_,t("td",i_,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[h_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[g_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[u_]),_:1})]),m_,t("td",f_,[t("a",p_,[e("🀄️"),o(s)]),e(),t("a",y_,[e("🔗"),o(s)])])]),t("tr",null,[x_,b_,k_,t("td",z_,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[w_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[v_]),_:1})]),q_,t("td",I_,[t("a",C_,[e("🀄️"),o(s)]),e(),t("a",L_,[e("🔗"),o(s)])])]),t("tr",null,[N_,E_,V_,t("td",j_,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[P_]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[B_]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[O_]),_:1}),e(),K_]),R_,t("td",T_,[t("a",X_,[e("🀄️"),o(s)]),e(),t("a",D_,[e("🔗"),o(s)])])]),t("tr",null,[F_,H_,W_,t("td",Y_,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Z_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[A_]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[G_]),_:1}),e(),J_]),M_,t("td",Q_,[t("a",S_,[e("🀄️"),o(s)]),e(),t("a",U_,[e("🔗"),o(s)])])]),t("tr",null,[$_,tr,er,t("td",or,[o(l,{to:"/tag/graph.html"},{default:n(()=>[lr]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[nr]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sr]),_:1})]),dr,t("td",_r,[t("a",rr,[e("🀄️"),o(s)]),e(),t("a",ar,[e("🔗"),o(s)])])]),t("tr",null,[cr,ir,hr,t("td",gr,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ur]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[mr]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fr]),_:1})]),pr,t("td",yr,[t("a",xr,[e("🀄️"),o(s)]),e(),t("a",br,[e("🔗"),o(s)])])]),t("tr",null,[kr,zr,wr,t("td",vr,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[qr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ir]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Cr]),_:1})]),Lr,t("td",Nr,[t("a",Er,[e("🀄️"),o(s)]),e(),t("a",Vr,[e("🔗"),o(s)])])]),t("tr",null,[jr,Pr,Br,t("td",Or,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Kr]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Rr]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Tr]),_:1}),e(),Xr]),Dr,t("td",Fr,[t("a",Hr,[e("🀄️"),o(s)]),e(),t("a",Wr,[e("🔗"),o(s)])])]),t("tr",null,[Yr,Zr,Ar,t("td",Gr,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Jr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Mr]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Qr]),_:1}),e(),Sr]),Ur,t("td",$r,[t("a",ta,[e("🀄️"),o(s)]),e(),t("a",ea,[e("🔗"),o(s)])])]),t("tr",null,[oa,la,na,t("td",sa,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[da]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_a]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ra]),_:1})]),aa,t("td",ca,[t("a",ia,[e("🀄️"),o(s)])])]),t("tr",null,[ha,ga,ua,t("td",ma,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fa]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[pa]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[ya]),_:1}),e(),xa]),ba,t("td",ka,[t("a",za,[e("🀄️"),o(s)])])]),t("tr",null,[wa,va,qa,t("td",Ia,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ca]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[La]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Na]),_:1}),e(),Ea]),Va,t("td",ja,[t("a",Pa,[e("🀄️"),o(s)])])]),t("tr",null,[Ba,Oa,t("td",Ka,[o(l,{to:"/offer/jz_offer_10_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ra,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ta]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Xa]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Da]),_:1})]),Fa,t("td",Ha,[t("a",Wa,[e("🀄️"),o(s)])])]),t("tr",null,[Ya,Za,t("td",Aa,[o(l,{to:"/offer/jz_offer_10_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ga,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ja]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Ma]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Qa]),_:1})]),Sa,t("td",Ua,[t("a",$a,[e("🀄️"),o(s)])])]),t("tr",null,[tc,ec,oc,t("td",lc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sc]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[dc]),_:1}),e(),_c]),rc,t("td",ac,[t("a",cc,[e("🀄️"),o(s)])])]),t("tr",null,[ic,hc,gc,t("td",uc,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[fc]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[pc]),_:1})]),yc,t("td",xc,[t("a",bc,[e("🀄️"),o(s)])])]),t("tr",null,[kc,zc,wc,t("td",vc,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[qc]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ic]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Cc]),_:1})]),Lc,t("td",Nc,[t("a",Ec,[e("🀄️"),o(s)])])])])])])}const Oc=_(i,[["render",Vc],["__file","memoization.html.vue"]]);export{Oc as default};
