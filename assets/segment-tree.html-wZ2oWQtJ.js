import{_,r as d,o as r,c,a as t,d as o,w as l,b as e,f as a}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),e(" 线段树")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("span",{class:"blue"},"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),H=t("code",null,"递归",-1),M=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),lt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Et=t("td",{style:{"text-align":"center"}},"218",-1),Ot=t("td",{style:{"text-align":"left"}},"天际线问题",-1),Rt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Tt=t("code",null,"树状数组",-1),At=t("code",null,"线段树",-1),Gt=t("code",null,"数组",-1),Jt=t("code",null,"4+",-1),Dt=t("td",{style:{"text-align":"center"}},"🔴",-1),Ft={style:{"text-align":"center"}},Ht={href:"https://leetcode.cn/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},"307",-1),Ut=t("td",{style:{"text-align":"left"}},"区域和检索 - 数组可修改",-1),Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"设计",-1),Zt=t("code",null,"树状数组",-1),$t=t("code",null,"线段树",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},ne={href:"https://leetcode.cn/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"308",-1),de=t("td",{style:{"text-align":"left"}},"二维区域和检索 - 矩阵可修改 🔒",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},ce=t("code",null,"设计",-1),ae=t("code",null,"树状数组",-1),ie=t("code",null,"线段树",-1),he=t("code",null,"2+",-1),ge=t("td",{style:{"text-align":"center"}},"🔴",-1),ue={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"315",-1),pe=t("td",{style:{"text-align":"left"}},"计算右侧小于当前元素的个数",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"树状数组",-1),qe=t("code",null,"线段树",-1),Ie=t("code",null,"数组",-1),we=t("code",null,"4+",-1),ve=t("td",{style:{"text-align":"center"}},"🔴",-1),ze={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",{style:{"text-align":"center"}},"327",-1),Ke=t("td",{style:{"text-align":"left"}},"区间和的个数",-1),Be=t("td",{style:{"text-align":"center"}},null,-1),Ne={style:{"text-align":"left"}},Pe=t("code",null,"树状数组",-1),Ve=t("code",null,"线段树",-1),Ee=t("code",null,"数组",-1),Oe=t("code",null,"4+",-1),Re=t("td",{style:{"text-align":"center"}},"🔴",-1),Qe={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"406",-1),Je=t("td",{style:{"text-align":"left"}},"根据身高重建队列",-1),De={style:{"text-align":"center"}},Fe={style:{"text-align":"left"}},He=t("code",null,"树状数组",-1),Me=t("code",null,"线段树",-1),Se=t("code",null,"数组",-1),Ue=t("code",null,"1+",-1),We=t("td",{style:{"text-align":"center"}},"🟠",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"493",-1),to=t("td",{style:{"text-align":"left"}},"翻转对",-1),eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},no=t("code",null,"树状数组",-1),lo=t("code",null,"线段树",-1),so=t("code",null,"数组",-1),_o=t("code",null,"4+",-1),ro=t("td",{style:{"text-align":"center"}},"🔴",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"673",-1),go=t("td",{style:{"text-align":"left"}},"最长递增子序列的个数",-1),uo={style:{"text-align":"center"}},fo={style:{"text-align":"left"}},mo=t("code",null,"树状数组",-1),yo=t("code",null,"线段树",-1),po=t("code",null,"数组",-1),xo=t("code",null,"1+",-1),bo=t("td",{style:{"text-align":"center"}},"🟠",-1),ko={style:{"text-align":"center"}},qo={href:"https://leetcode.cn/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"683",-1),vo=t("td",{style:{"text-align":"left"}},"K 个关闭的灯泡 🔒",-1),zo=t("td",{style:{"text-align":"center"}},null,-1),jo={style:{"text-align":"left"}},Lo=t("code",null,"树状数组",-1),Co=t("code",null,"线段树",-1),Ko=t("code",null,"队列",-1),Bo=t("code",null,"5+",-1),No=t("td",{style:{"text-align":"center"}},"🔴",-1),Po={style:{"text-align":"center"}},Vo={href:"https://leetcode.cn/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},"699",-1),Ro=t("td",{style:{"text-align":"left"}},"掉落的方块",-1),Qo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"线段树",-1),Go=t("code",null,"数组",-1),Jo=t("code",null,"有序集合",-1),Do=t("td",{style:{"text-align":"center"}},"🔴",-1),Fo={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},"715",-1),Uo=t("td",{style:{"text-align":"left"}},"Range 模块",-1),Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"设计",-1),Zo=t("code",null,"线段树",-1),$o=t("code",null,"有序集合",-1),tn=t("td",{style:{"text-align":"center"}},"🔴",-1),en={style:{"text-align":"center"}},on={href:"https://leetcode.cn/problems/range-module",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},"729",-1),sn=t("td",{style:{"text-align":"left"}},"我的日程安排表 I",-1),dn={style:{"text-align":"center"}},_n={style:{"text-align":"left"}},rn=t("code",null,"设计",-1),cn=t("code",null,"线段树",-1),an=t("code",null,"数组",-1),hn=t("code",null,"2+",-1),gn=t("td",{style:{"text-align":"center"}},"🟠",-1),un={style:{"text-align":"center"}},fn={href:"https://leetcode.cn/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},"731",-1),pn=t("td",{style:{"text-align":"left"}},"我的日程安排表 II",-1),xn={style:{"text-align":"center"}},bn={style:{"text-align":"left"}},kn=t("code",null,"设计",-1),qn=t("code",null,"线段树",-1),In=t("code",null,"数组",-1),wn=t("code",null,"3+",-1),vn=t("td",{style:{"text-align":"center"}},"🟠",-1),zn={style:{"text-align":"center"}},jn={href:"https://leetcode.cn/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},"732",-1),Kn=t("td",{style:{"text-align":"left"}},"我的日程安排表 III",-1),Bn=t("td",{style:{"text-align":"center"}},null,-1),Nn={style:{"text-align":"left"}},Pn=t("code",null,"设计",-1),Vn=t("code",null,"线段树",-1),En=t("code",null,"二分查找",-1),On=t("code",null,"2+",-1),Rn=t("td",{style:{"text-align":"center"}},"🔴",-1),Qn={style:{"text-align":"center"}},Tn={href:"https://leetcode.cn/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},An={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},Gn=t("td",{style:{"text-align":"center"}},"850",-1),Jn=t("td",{style:{"text-align":"left"}},"矩形面积 II",-1),Dn=t("td",{style:{"text-align":"center"}},null,-1),Fn={style:{"text-align":"left"}},Hn=t("code",null,"线段树",-1),Mn=t("code",null,"数组",-1),Sn=t("code",null,"有序集合",-1),Un=t("code",null,"1+",-1),Wn=t("td",{style:{"text-align":"center"}},"🔴",-1),Xn={style:{"text-align":"center"}},Yn={href:"https://leetcode.cn/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},"1157",-1),tl=t("td",{style:{"text-align":"left"}},"子数组中占绝大多数的元素",-1),el=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"设计",-1),ll=t("code",null,"树状数组",-1),sl=t("code",null,"线段树",-1),dl=t("code",null,"2+",-1),_l=t("td",{style:{"text-align":"center"}},"🔴",-1),rl={style:{"text-align":"center"}},cl={href:"https://leetcode.cn/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},al={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},"1395",-1),hl=t("td",{style:{"text-align":"left"}},"统计作战单位数",-1),gl=t("td",{style:{"text-align":"center"}},null,-1),ul={style:{"text-align":"left"}},fl=t("code",null,"树状数组",-1),ml=t("code",null,"线段树",-1),yl=t("code",null,"数组",-1),pl=t("code",null,"1+",-1),xl=t("td",{style:{"text-align":"center"}},"🟠",-1),bl={style:{"text-align":"center"}},kl={href:"https://leetcode.cn/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Il=t("td",{style:{"text-align":"center"}},"1505",-1),wl=t("td",{style:{"text-align":"left"}},"最多 K 次交换相邻数位后得到的最小整数",-1),vl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},jl=t("code",null,"贪心",-1),Ll=t("code",null,"树状数组",-1),Cl=t("code",null,"线段树",-1),Kl=t("code",null,"1+",-1),Bl=t("td",{style:{"text-align":"center"}},"🔴",-1),Nl={style:{"text-align":"center"}},Pl={href:"https://leetcode.cn/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Vl={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},"1521",-1),Ol=t("td",{style:{"text-align":"left"}},"找到最接近目标值的函数值",-1),Rl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Tl=t("code",null,"位运算",-1),Al=t("code",null,"线段树",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"1+",-1),Dl=t("td",{style:{"text-align":"center"}},"🔴",-1),Fl={style:{"text-align":"center"}},Hl={href:"https://leetcode.cn/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},Sl=t("td",{style:{"text-align":"center"}},"1622",-1),Ul=t("td",{style:{"text-align":"left"}},"奇妙序列",-1),Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"设计",-1),Zl=t("code",null,"线段树",-1),$l=t("code",null,"数学",-1),ts=t("td",{style:{"text-align":"center"}},"🔴",-1),es={style:{"text-align":"center"}},os={href:"https://leetcode.cn/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},ns={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"1649",-1),ss=t("td",{style:{"text-align":"left"}},"通过指令创建有序数组",-1),ds=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},rs=t("code",null,"树状数组",-1),cs=t("code",null,"线段树",-1),as=t("code",null,"数组",-1),is=t("code",null,"4+",-1),hs=t("td",{style:{"text-align":"center"}},"🔴",-1),gs={style:{"text-align":"center"}},us={href:"https://leetcode.cn/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},"1687",-1),ys=t("td",{style:{"text-align":"left"}},"从仓库到码头运输箱子",-1),ps=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"线段树",-1),ks=t("code",null,"队列",-1),qs=t("code",null,"数组",-1),Is=t("code",null,"4+",-1),ws=t("td",{style:{"text-align":"center"}},"🔴",-1),vs={style:{"text-align":"center"}},zs={href:"https://leetcode.cn/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},js={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},"2031",-1),Cs=t("td",{style:{"text-align":"left"}},"1 比 0 多的子数组个数 🔒",-1),Ks=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Ns=t("code",null,"树状数组",-1),Ps=t("code",null,"线段树",-1),Vs=t("code",null,"数组",-1),Es=t("code",null,"4+",-1),Os=t("td",{style:{"text-align":"center"}},"🟠",-1),Rs={style:{"text-align":"center"}},Qs={href:"https://leetcode.cn/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Ts={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},"2080",-1),Gs=t("td",{style:{"text-align":"left"}},"区间内查询数字的频率",-1),Js=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"设计",-1),Hs=t("code",null,"线段树",-1),Ms=t("code",null,"数组",-1),Ss=t("code",null,"2+",-1),Us=t("td",{style:{"text-align":"center"}},"🟠",-1),Ws={style:{"text-align":"center"}},Xs={href:"https://leetcode.cn/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},Ys={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},"2158",-1),$s=t("td",{style:{"text-align":"left"}},"每天绘制新区域的数量 🔒",-1),td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},od=t("code",null,"线段树",-1),nd=t("code",null,"数组",-1),ld=t("code",null,"有序集合",-1),sd=t("td",{style:{"text-align":"center"}},"🔴",-1),dd={style:{"text-align":"center"}},_d={href:"https://leetcode.cn/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},rd={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},"2179",-1),ad=t("td",{style:{"text-align":"left"}},"统计数组中好三元组数目",-1),id=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},gd=t("code",null,"树状数组",-1),ud=t("code",null,"线段树",-1),fd=t("code",null,"数组",-1),md=t("code",null,"4+",-1),yd=t("td",{style:{"text-align":"center"}},"🔴",-1),pd={style:{"text-align":"center"}},xd={href:"https://leetcode.cn/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},bd={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},"2213",-1),qd=t("td",{style:{"text-align":"left"}},"由单个字符重复的最长子字符串",-1),Id=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},vd=t("code",null,"线段树",-1),zd=t("code",null,"数组",-1),jd=t("code",null,"字符串",-1),Ld=t("code",null,"1+",-1),Cd=t("td",{style:{"text-align":"center"}},"🔴",-1),Kd={style:{"text-align":"center"}},Bd={href:"https://leetcode.cn/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Nd={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Pd=t("td",{style:{"text-align":"center"}},"2276",-1),Vd=t("td",{style:{"text-align":"left"}},"统计区间中的整数数目",-1),Ed=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Rd=t("code",null,"设计",-1),Qd=t("code",null,"线段树",-1),Td=t("code",null,"有序集合",-1),Ad=t("td",{style:{"text-align":"center"}},"🔴",-1),Gd={style:{"text-align":"center"}},Jd={href:"https://leetcode.cn/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Dd={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"2286",-1),Hd=t("td",{style:{"text-align":"left"}},"以组为单位订音乐会的门票",-1),Md=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Ud=t("code",null,"设计",-1),Wd=t("code",null,"树状数组",-1),Xd=t("code",null,"线段树",-1),Yd=t("code",null,"1+",-1),Zd=t("td",{style:{"text-align":"center"}},"🔴",-1),$d={style:{"text-align":"center"}},t_={href:"https://leetcode.cn/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},e_={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},o_=t("td",{style:{"text-align":"center"}},"2407",-1),n_=t("td",{style:{"text-align":"left"}},"最长递增子序列 II",-1),l_=t("td",{style:{"text-align":"center"}},null,-1),s_={style:{"text-align":"left"}},d_=t("code",null,"树状数组",-1),__=t("code",null,"线段树",-1),r_=t("code",null,"队列",-1),c_=t("code",null,"4+",-1),a_=t("td",{style:{"text-align":"center"}},"🔴",-1),i_={style:{"text-align":"center"}},h_={href:"https://leetcode.cn/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},g_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},"2424",-1),f_=t("td",{style:{"text-align":"left"}},"最长上传前缀",-1),m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},p_=t("code",null,"并查集",-1),x_=t("code",null,"设计",-1),b_=t("code",null,"树状数组",-1),k_=t("code",null,"4+",-1),q_=t("td",{style:{"text-align":"center"}},"🟠",-1),I_={style:{"text-align":"center"}},w_={href:"https://leetcode.cn/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},v_={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},z_=t("td",{style:{"text-align":"center"}},"2426",-1),j_=t("td",{style:{"text-align":"left"}},"满足不等式的数对数目",-1),L_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},K_=t("code",null,"树状数组",-1),B_=t("code",null,"线段树",-1),N_=t("code",null,"数组",-1),P_=t("code",null,"4+",-1),V_=t("td",{style:{"text-align":"center"}},"🔴",-1),E_={style:{"text-align":"center"}},O_={href:"https://leetcode.cn/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},R_={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},"2519",-1),T_=t("td",{style:{"text-align":"left"}},"统计 K-Big 索引的数量 🔒",-1),A_=t("td",{style:{"text-align":"center"}},null,-1),G_={style:{"text-align":"left"}},J_=t("code",null,"树状数组",-1),D_=t("code",null,"线段树",-1),F_=t("code",null,"数组",-1),H_=t("code",null,"4+",-1),M_=t("td",{style:{"text-align":"center"}},"🔴",-1),S_={style:{"text-align":"center"}},U_={href:"https://leetcode.cn/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},W_={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"2569",-1),Y_=t("td",{style:{"text-align":"left"}},"更新数组后处理求和查询",-1),Z_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},tr=t("code",null,"线段树",-1),er=t("code",null,"数组",-1),or=t("td",{style:{"text-align":"center"}},"🔴",-1),nr={style:{"text-align":"center"}},lr={href:"https://leetcode.cn/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},"2659",-1),_r=t("td",{style:{"text-align":"left"}},"将数组清空",-1),rr=t("td",{style:{"text-align":"center"}},null,-1),cr={style:{"text-align":"left"}},ar=t("code",null,"贪心",-1),ir=t("code",null,"树状数组",-1),hr=t("code",null,"线段树",-1),gr=t("code",null,"4+",-1),ur=t("td",{style:{"text-align":"center"}},"🔴",-1),fr={style:{"text-align":"center"}},mr={href:"https://leetcode.cn/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},"2736",-1),xr=t("td",{style:{"text-align":"left"}},"最大和查询",-1),br=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},qr=t("code",null,"栈",-1),Ir=t("code",null,"树状数组",-1),wr=t("code",null,"线段树",-1),vr=t("code",null,"4+",-1),zr=t("td",{style:{"text-align":"center"}},"🔴",-1),jr={style:{"text-align":"center"}},Lr={href:"https://leetcode.cn/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},"2907",-1),Br=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 I 🔒",-1),Nr=t("td",{style:{"text-align":"center"}},null,-1),Pr={style:{"text-align":"left"}},Vr=t("code",null,"树状数组",-1),Er=t("code",null,"线段树",-1),Or=t("code",null,"数组",-1),Rr=t("td",{style:{"text-align":"center"}},"🟠",-1),Qr={style:{"text-align":"center"}},Tr={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},Gr=t("td",{style:{"text-align":"center"}},"2916",-1),Jr=t("td",{style:{"text-align":"left"}},"子数组不同元素数目的平方和 II",-1),Dr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Hr=t("code",null,"树状数组",-1),Mr=t("code",null,"线段树",-1),Sr=t("code",null,"数组",-1),Ur=t("code",null,"1+",-1),Wr=t("td",{style:{"text-align":"center"}},"🔴",-1),Xr={style:{"text-align":"center"}},Yr={href:"https://leetcode.cn/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},"2921",-1),tc=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 II 🔒",-1),ec=t("td",{style:{"text-align":"center"}},null,-1),oc={style:{"text-align":"left"}},nc=t("code",null,"树状数组",-1),lc=t("code",null,"线段树",-1),sc=t("code",null,"数组",-1),dc=t("td",{style:{"text-align":"center"}},"🔴",-1),_c={style:{"text-align":"center"}},rc={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},cc={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},"2926",-1),ic=t("td",{style:{"text-align":"left"}},"平衡子序列的最大和",-1),hc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},uc=t("code",null,"树状数组",-1),fc=t("code",null,"线段树",-1),mc=t("code",null,"数组",-1),yc=t("code",null,"2+",-1),pc=t("td",{style:{"text-align":"center"}},"🔴",-1),xc={style:{"text-align":"center"}},bc={href:"https://leetcode.cn/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},kc={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},"2940",-1),Ic=t("td",{style:{"text-align":"left"}},"找到 Alice 和 Bob 可以相遇的建筑",-1),wc={style:{"text-align":"center"}},vc={style:{"text-align":"left"}},zc=t("code",null,"栈",-1),jc=t("code",null,"树状数组",-1),Lc=t("code",null,"线段树",-1),Cc=t("code",null,"4+",-1),Kc=t("td",{style:{"text-align":"center"}},"🔴",-1),Bc={style:{"text-align":"center"}},Nc={href:"https://leetcode.cn/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Pc={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},"3072",-1),Ec=t("td",{style:{"text-align":"left"}},"将元素分配到两个数组中 II",-1),Oc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Qc=t("code",null,"树状数组",-1),Tc=t("code",null,"线段树",-1),Ac=t("code",null,"数组",-1),Gc=t("code",null,"1+",-1),Jc=t("td",{style:{"text-align":"center"}},"🔴",-1),Dc={style:{"text-align":"center"}},Fc={href:"https://leetcode.cn/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Hc={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},"3109",-1),Sc=t("td",{style:{"text-align":"left"}},"查找排列的下标 🔒",-1),Uc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Xc=t("code",null,"树状数组",-1),Yc=t("code",null,"线段树",-1),Zc=t("code",null,"数组",-1),$c=t("code",null,"4+",-1),ta=t("td",{style:{"text-align":"center"}},"🟠",-1),ea={style:{"text-align":"center"}},oa={href:"https://leetcode.cn/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},na={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},"3117",-1),sa=t("td",{style:{"text-align":"left"}},"划分数组得到最小的值之和",-1),da=t("td",{style:{"text-align":"center"}},null,-1),_a={style:{"text-align":"left"}},ra=t("code",null,"位运算",-1),ca=t("code",null,"线段树",-1),aa=t("code",null,"队列",-1),ia=t("code",null,"3+",-1),ha=t("td",{style:{"text-align":"center"}},"🔴",-1),ga={style:{"text-align":"center"}},ua={href:"https://leetcode.cn/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},fa={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"3161",-1),ya=t("td",{style:{"text-align":"left"}},"物块放置查询",-1),pa=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},ba=t("code",null,"树状数组",-1),ka=t("code",null,"线段树",-1),qa=t("code",null,"数组",-1),Ia=t("code",null,"1+",-1),wa=t("td",{style:{"text-align":"center"}},"🔴",-1),va={style:{"text-align":"center"}},za={href:"https://leetcode.cn/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},ja={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},"3165",-1),Ca=t("td",{style:{"text-align":"left"}},"不包含相邻元素的子序列的最大和",-1),Ka=t("td",{style:{"text-align":"center"}},null,-1),Ba={style:{"text-align":"left"}},Na=t("code",null,"线段树",-1),Pa=t("code",null,"数组",-1),Va=t("code",null,"分治",-1),Ea=t("code",null,"1+",-1),Oa=t("td",{style:{"text-align":"center"}},"🔴",-1),Ra={style:{"text-align":"center"}},Qa={href:"https://leetcode.cn/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Ta={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},"3171",-1),Ga=t("td",{style:{"text-align":"left"}},"找到按位或最接近 K 的子数组",-1),Ja=t("td",{style:{"text-align":"center"}},null,-1),Da={style:{"text-align":"left"}},Fa=t("code",null,"位运算",-1),Ha=t("code",null,"线段树",-1),Ma=t("code",null,"数组",-1),Sa=t("code",null,"1+",-1),Ua=t("td",{style:{"text-align":"center"}},"🔴",-1),Wa={style:{"text-align":"center"}},Xa={href:"https://leetcode.cn/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},Ya={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},Za=t("td",{style:{"text-align":"center"}},"3187",-1),$a=t("td",{style:{"text-align":"left"}},"数组中的峰值",-1),ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},oi=t("code",null,"树状数组",-1),ni=t("code",null,"线段树",-1),li=t("code",null,"数组",-1),si=t("td",{style:{"text-align":"center"}},"🔴",-1),di={style:{"text-align":"center"}},_i={href:"https://leetcode.cn/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},ri={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},"3209",-1),ai=t("td",{style:{"text-align":"left"}},"子数组按位与值为 K 的数目",-1),ii=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},gi=t("code",null,"位运算",-1),ui=t("code",null,"线段树",-1),fi=t("code",null,"数组",-1),mi=t("code",null,"1+",-1),yi=t("td",{style:{"text-align":"center"}},"🔴",-1),pi={style:{"text-align":"center"}},xi={href:"https://leetcode.cn/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},bi={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"3291",-1),qi=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),Ii=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},vi=t("code",null,"字典树",-1),zi=t("code",null,"线段树",-1),ji=t("code",null,"数组",-1),Li=t("code",null,"6+",-1),Ci=t("td",{style:{"text-align":"center"}},"🟠",-1),Ki={style:{"text-align":"center"}},Bi={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Ni={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},"3292",-1),Vi=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),Ei=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},Ri=t("code",null,"线段树",-1),Qi=t("code",null,"数组",-1),Ti=t("code",null,"字符串",-1),Ai=t("code",null,"5+",-1),Gi=t("td",{style:{"text-align":"center"}},"🔴",-1),Ji={style:{"text-align":"center"}},Di={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Fi={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Hi=t("td",{style:{"text-align":"center"}},"3380",-1),Mi=t("td",{style:{"text-align":"left"}},"用点构造面积最大的矩形 I",-1),Si=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Wi=t("code",null,"树状数组",-1),Xi=t("code",null,"线段树",-1),Yi=t("code",null,"几何",-1),Zi=t("code",null,"4+",-1),$i=t("td",{style:{"text-align":"center"}},"🟠",-1),th={style:{"text-align":"center"}},eh={href:"https://leetcode.cn/problems/maximum-area-rectangle-with-point-constraints-i",target:"_blank",rel:"noopener noreferrer"},oh={href:"https://leetcode.com/problems/maximum-area-rectangle-with-point-constraints-i",target:"_blank",rel:"noopener noreferrer"},nh=t("td",{style:{"text-align":"center"}},"3382",-1),lh=t("td",{style:{"text-align":"left"}},"用点构造面积最大的矩形 II",-1),sh=t("td",{style:{"text-align":"center"}},null,-1),dh={style:{"text-align":"left"}},_h=t("code",null,"树状数组",-1),rh=t("code",null,"线段树",-1),ch=t("code",null,"几何",-1),ah=t("code",null,"3+",-1),ih=t("td",{style:{"text-align":"center"}},"🔴",-1),hh={style:{"text-align":"center"}},gh={href:"https://leetcode.cn/problems/maximum-area-rectangle-with-point-constraints-ii",target:"_blank",rel:"noopener noreferrer"},uh={href:"https://leetcode.com/problems/maximum-area-rectangle-with-point-constraints-ii",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},"3410",-1),mh=t("td",{style:{"text-align":"left"}},"删除所有值为某个元素后的最大子数组和",-1),yh=t("td",{style:{"text-align":"center"}},null,-1),ph={style:{"text-align":"left"}},xh=t("code",null,"线段树",-1),bh=t("code",null,"数组",-1),kh=t("code",null,"动态规划",-1),qh=t("td",{style:{"text-align":"center"}},"🔴",-1),Ih={style:{"text-align":"center"}},wh={href:"https://leetcode.cn/problems/maximize-subarray-sum-after-removing-all-occurrences-of-one-element",target:"_blank",rel:"noopener noreferrer"},vh={href:"https://leetcode.com/problems/maximize-subarray-sum-after-removing-all-occurrences-of-one-element",target:"_blank",rel:"noopener noreferrer"},zh=t("td",{style:{"text-align":"center"}},"3420",-1),jh=t("td",{style:{"text-align":"left"}},"统计 K 次操作以内得到非递减子数组的数目",-1),Lh=t("td",{style:{"text-align":"center"}},null,-1),Ch={style:{"text-align":"left"}},Kh=t("code",null,"栈",-1),Bh=t("code",null,"线段树",-1),Nh=t("code",null,"队列",-1),Ph=t("code",null,"4+",-1),Vh=t("td",{style:{"text-align":"center"}},"🔴",-1),Eh={style:{"text-align":"center"}},Oh={href:"https://leetcode.cn/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Rh={href:"https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},"3454",-1),Th=t("td",{style:{"text-align":"left"}},"分割正方形 II",-1),Ah=t("td",{style:{"text-align":"center"}},null,-1),Gh={style:{"text-align":"left"}},Jh=t("code",null,"线段树",-1),Dh=t("code",null,"数组",-1),Fh=t("code",null,"二分查找",-1),Hh=t("code",null,"1+",-1),Mh=t("td",{style:{"text-align":"center"}},"🔴",-1),Sh={style:{"text-align":"center"}},Uh={href:"https://leetcode.cn/problems/separate-squares-ii",target:"_blank",rel:"noopener noreferrer"},Wh={href:"https://leetcode.com/problems/separate-squares-ii",target:"_blank",rel:"noopener noreferrer"},Xh=t("td",{style:{"text-align":"center"}},"3477",-1),Yh=t("td",{style:{"text-align":"left"}},"将水果放入篮子 II",-1),Zh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},t1=t("code",null,"线段树",-1),e1=t("code",null,"数组",-1),o1=t("code",null,"二分查找",-1),n1=t("code",null,"1+",-1),l1=t("td",{style:{"text-align":"center"}},"🟢",-1),s1={style:{"text-align":"center"}},d1={href:"https://leetcode.cn/problems/fruits-into-baskets-ii",target:"_blank",rel:"noopener noreferrer"},_1={href:"https://leetcode.com/problems/fruits-into-baskets-ii",target:"_blank",rel:"noopener noreferrer"},r1=t("td",{style:{"text-align":"center"}},"3479",-1),c1=t("td",{style:{"text-align":"left"}},"将水果装入篮子 III",-1),a1=t("td",{style:{"text-align":"center"}},null,-1),i1={style:{"text-align":"left"}},h1=t("code",null,"线段树",-1),g1=t("code",null,"数组",-1),u1=t("code",null,"二分查找",-1),f1=t("code",null,"1+",-1),m1=t("td",{style:{"text-align":"center"}},"🟠",-1),y1={style:{"text-align":"center"}},p1={href:"https://leetcode.cn/problems/fruits-into-baskets-iii",target:"_blank",rel:"noopener noreferrer"},x1={href:"https://leetcode.com/problems/fruits-into-baskets-iii",target:"_blank",rel:"noopener noreferrer"},b1=t("td",{style:{"text-align":"center"}},"3480",-1),k1=t("td",{style:{"text-align":"left"}},"删除一个冲突对后最大子数组数目",-1),q1=t("td",{style:{"text-align":"center"}},null,-1),I1={style:{"text-align":"left"}},w1=t("code",null,"线段树",-1),v1=t("code",null,"数组",-1),z1=t("code",null,"枚举",-1),j1=t("code",null,"1+",-1),L1=t("td",{style:{"text-align":"center"}},"🔴",-1),C1={style:{"text-align":"center"}},K1={href:"https://leetcode.cn/problems/maximize-subarrays-after-removing-one-conflicting-pair",target:"_blank",rel:"noopener noreferrer"},B1={href:"https://leetcode.com/problems/maximize-subarrays-after-removing-one-conflicting-pair",target:"_blank",rel:"noopener noreferrer"},N1=t("td",{style:{"text-align":"center"}},"LCP 05",-1),P1=t("td",{style:{"text-align":"left"}},"发 LeetCoin",-1),V1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},O1=t("code",null,"树状数组",-1),R1=t("code",null,"线段树",-1),Q1=t("code",null,"数组",-1),T1=t("td",{style:{"text-align":"center"}},"🔴",-1),A1={style:{"text-align":"center"}},G1={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},"LCP 09",-1),D1=t("td",{style:{"text-align":"left"}},"最小跳跃次数",-1),F1=t("td",{style:{"text-align":"center"}},null,-1),H1={style:{"text-align":"left"}},M1=t("code",null,"广度优先搜索",-1),S1=t("code",null,"线段树",-1),U1=t("code",null,"数组",-1),W1=t("code",null,"1+",-1),X1=t("td",{style:{"text-align":"center"}},"🔴",-1),Y1={style:{"text-align":"center"}},Z1={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},$1=t("td",{style:{"text-align":"center"}},"LCP 27",-1),tg=t("td",{style:{"text-align":"left"}},"黑盒光线反射",-1),eg=t("td",{style:{"text-align":"center"}},null,-1),og={style:{"text-align":"left"}},ng=t("code",null,"设计",-1),lg=t("code",null,"线段树",-1),sg=t("code",null,"数学",-1),dg=t("code",null,"1+",-1),_g=t("td",{style:{"text-align":"center"}},"🔴",-1),rg={style:{"text-align":"center"}},cg={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},ag=t("td",{style:{"text-align":"center"}},"LCP 52",-1),ig=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),hg=t("td",{style:{"text-align":"center"}},null,-1),gg={style:{"text-align":"left"}},ug=t("code",null,"树",-1),fg=t("code",null,"线段树",-1),mg=t("code",null,"二叉搜索树",-1),yg=t("code",null,"4+",-1),pg=t("td",{style:{"text-align":"center"}},"🟠",-1),xg={style:{"text-align":"center"}},bg={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),qg=t("td",{style:{"text-align":"left"}},"数组中的逆序对",-1),Ig={style:{"text-align":"center"}},wg={style:{"text-align":"left"}},vg=t("code",null,"树状数组",-1),zg=t("code",null,"线段树",-1),jg=t("code",null,"数组",-1),Lg=t("code",null,"4+",-1),Cg=t("td",{style:{"text-align":"center"}},"🔴",-1),Kg={style:{"text-align":"center"}},Bg={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Pg=t("td",{style:{"text-align":"left"}},"日程表",-1),Vg={style:{"text-align":"center"}},Eg={style:{"text-align":"left"}},Og=t("code",null,"设计",-1),Rg=t("code",null,"线段树",-1),Qg=t("code",null,"二分查找",-1),Tg=t("code",null,"1+",-1),Ag=t("td",{style:{"text-align":"center"}},"🟠",-1),Gg={style:{"text-align":"center"}},Jg={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"};function Dg(Fg,Hg){const n=d("RouterLink"),s=d("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[g,u,t("p",null,[o(n,{to:"/tag/array.html"},{default:l(()=>[f]),_:1}),e(),o(n,{to:"/tag/matrix.html"},{default:l(()=>[m]),_:1}),e(),o(n,{to:"/tag/linked-list.html"},{default:l(()=>[y]),_:1}),e(),o(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),e(),o(n,{to:"/tag/stack.html"},{default:l(()=>[x]),_:1}),e(),o(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[b]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[k]),_:1}),e(),o(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[q]),_:1}),e(),o(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[w]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[z]),_:1}),e(),o(n,{to:"/tag/tree.html"},{default:l(()=>[j]),_:1}),e(),o(n,{to:"/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),e(),o(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[K]),_:1}),e(),o(n,{to:"/tag/graph.html"},{default:l(()=>[B]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),e(),o(n,{to:"/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),e(),o(n,{to:"/tag/shortest-path.html"},{default:l(()=>[V]),_:1}),e(),o(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[E]),_:1}),e(),o(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[O]),_:1}),e(),o(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),e(),o(n,{to:"/tag/union-find.html"},{default:l(()=>[Q]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[T]),_:1}),e(),A,e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[G]),_:1}),e(),o(n,{to:"/tag/suffix-array.html"},{default:l(()=>[J]),_:1})]),D,t("p",null,[o(n,{to:"/tag/enumeration.html"},{default:l(()=>[F]),_:1}),e(),o(n,{to:"/tag/recursion.html"},{default:l(()=>[H]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[M]),_:1}),e(),o(n,{to:"/tag/backtracking.html"},{default:l(()=>[S]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[U]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[X]),_:1}),e(),o(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[Y]),_:1}),e(),o(n,{to:"/tag/counting-sort.html"},{default:l(()=>[Z]),_:1}),e(),o(n,{to:"/tag/radix-sort.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/merge-sort.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/quickselect.html"},{default:l(()=>[et]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[ot]),_:1}),e(),o(n,{to:"/tag/memoization.html"},{default:l(()=>[nt]),_:1}),e(),o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[lt]),_:1}),e(),o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[st]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[dt]),_:1}),e(),o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[_t]),_:1}),e(),o(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),e(),o(n,{to:"/tag/counting.html"},{default:l(()=>[ct]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[at]),_:1}),e(),o(n,{to:"/tag/bitmask.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[ht]),_:1}),e(),o(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),e(),o(n,{to:"/tag/line-sweep.html"},{default:l(()=>[ut]),_:1})]),ft,t("p",null,[o(n,{to:"/tag/math.html"},{default:l(()=>[mt]),_:1}),e(),o(n,{to:"/tag/number-theory.html"},{default:l(()=>[yt]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[pt]),_:1}),e(),o(n,{to:"/tag/game-theory.html"},{default:l(()=>[xt]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[bt]),_:1}),e(),o(n,{to:"/tag/combinatorics.html"},{default:l(()=>[kt]),_:1}),e(),o(n,{to:"/tag/randomized.html"},{default:l(()=>[qt]),_:1}),e(),o(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),e(),o(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[vt]),_:1}),e(),o(n,{to:"/tag/database.html"},{default:l(()=>[zt]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[jt]),_:1}),e(),o(n,{to:"/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),e(),o(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),e(),o(n,{to:"/tag/interactive.html"},{default:l(()=>[Kt]),_:1}),e(),o(n,{to:"/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),e(),o(n,{to:"/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Et,Ot,Rt,t("td",Qt,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Tt]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[At]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Gt]),_:1}),e(),Jt]),Dt,t("td",Ft,[t("a",Ht,[e("🀄️"),o(s)]),e(),t("a",Mt,[e("🔗"),o(s)])])]),t("tr",null,[St,Ut,t("td",Wt,[o(n,{to:"/problem/0307.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Xt,[o(n,{to:"/tag/design.html"},{default:l(()=>[Yt]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Zt]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",ne,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",re,[o(n,{to:"/tag/design.html"},{default:l(()=>[ce]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ae]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ie]),_:1}),e(),he]),ge,t("td",ue,[t("a",fe,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,xe,t("td",be,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ke]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[qe]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ie]),_:1}),e(),we]),ve,t("td",ze,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Le,[e("🔗"),o(s)])])]),t("tr",null,[Ce,Ke,Be,t("td",Ne,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Pe]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ve]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ee]),_:1}),e(),Oe]),Re,t("td",Qe,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[Ge,Je,t("td",De,[o(n,{to:"/problem/0406.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Fe,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[He]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Me]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Se]),_:1}),e(),Ue]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,eo,t("td",oo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[no]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[lo]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[so]),_:1}),e(),_o]),ro,t("td",co,[t("a",ao,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,go,t("td",uo,[o(n,{to:"/problem/0673.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",fo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[mo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[yo]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[po]),_:1}),e(),xo]),bo,t("td",ko,[t("a",qo,[e("🀄️"),o(s)]),e(),t("a",Io,[e("🔗"),o(s)])])]),t("tr",null,[wo,vo,zo,t("td",jo,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Lo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Co]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[Ko]),_:1}),e(),Bo]),No,t("td",Po,[t("a",Vo,[e("🀄️"),o(s)]),e(),t("a",Eo,[e("🔗"),o(s)])])]),t("tr",null,[Oo,Ro,Qo,t("td",To,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ao]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Go]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[Jo]),_:1})]),Do,t("td",Fo,[t("a",Ho,[e("🀄️"),o(s)]),e(),t("a",Mo,[e("🔗"),o(s)])])]),t("tr",null,[So,Uo,Wo,t("td",Xo,[o(n,{to:"/tag/design.html"},{default:l(()=>[Yo]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Zo]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[$o]),_:1})]),tn,t("td",en,[t("a",on,[e("🀄️"),o(s)]),e(),t("a",nn,[e("🔗"),o(s)])])]),t("tr",null,[ln,sn,t("td",dn,[o(n,{to:"/problem/0729.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",_n,[o(n,{to:"/tag/design.html"},{default:l(()=>[rn]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[cn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[an]),_:1}),e(),hn]),gn,t("td",un,[t("a",fn,[e("🀄️"),o(s)]),e(),t("a",mn,[e("🔗"),o(s)])])]),t("tr",null,[yn,pn,t("td",xn,[o(n,{to:"/problem/0731.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",bn,[o(n,{to:"/tag/design.html"},{default:l(()=>[kn]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[qn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[In]),_:1}),e(),wn]),vn,t("td",zn,[t("a",jn,[e("🀄️"),o(s)]),e(),t("a",Ln,[e("🔗"),o(s)])])]),t("tr",null,[Cn,Kn,Bn,t("td",Nn,[o(n,{to:"/tag/design.html"},{default:l(()=>[Pn]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Vn]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[En]),_:1}),e(),On]),Rn,t("td",Qn,[t("a",Tn,[e("🀄️"),o(s)]),e(),t("a",An,[e("🔗"),o(s)])])]),t("tr",null,[Gn,Jn,Dn,t("td",Fn,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Hn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Mn]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[Sn]),_:1}),e(),Un]),Wn,t("td",Xn,[t("a",Yn,[e("🀄️"),o(s)]),e(),t("a",Zn,[e("🔗"),o(s)])])]),t("tr",null,[$n,tl,el,t("td",ol,[o(n,{to:"/tag/design.html"},{default:l(()=>[nl]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ll]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[sl]),_:1}),e(),dl]),_l,t("td",rl,[t("a",cl,[e("🀄️"),o(s)]),e(),t("a",al,[e("🔗"),o(s)])])]),t("tr",null,[il,hl,gl,t("td",ul,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[fl]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ml]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[yl]),_:1}),e(),pl]),xl,t("td",bl,[t("a",kl,[e("🀄️"),o(s)]),e(),t("a",ql,[e("🔗"),o(s)])])]),t("tr",null,[Il,wl,vl,t("td",zl,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[jl]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ll]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Cl]),_:1}),e(),Kl]),Bl,t("td",Nl,[t("a",Pl,[e("🀄️"),o(s)]),e(),t("a",Vl,[e("🔗"),o(s)])])]),t("tr",null,[El,Ol,Rl,t("td",Ql,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Tl]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Al]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Gl]),_:1}),e(),Jl]),Dl,t("td",Fl,[t("a",Hl,[e("🀄️"),o(s)]),e(),t("a",Ml,[e("🔗"),o(s)])])]),t("tr",null,[Sl,Ul,Wl,t("td",Xl,[o(n,{to:"/tag/design.html"},{default:l(()=>[Yl]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Zl]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[$l]),_:1})]),ts,t("td",es,[t("a",os,[e("🀄️"),o(s)]),e(),t("a",ns,[e("🔗"),o(s)])])]),t("tr",null,[ls,ss,ds,t("td",_s,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[rs]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[cs]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[as]),_:1}),e(),is]),hs,t("td",gs,[t("a",us,[e("🀄️"),o(s)]),e(),t("a",fs,[e("🔗"),o(s)])])]),t("tr",null,[ms,ys,ps,t("td",xs,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[bs]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[ks]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[qs]),_:1}),e(),Is]),ws,t("td",vs,[t("a",zs,[e("🀄️"),o(s)]),e(),t("a",js,[e("🔗"),o(s)])])]),t("tr",null,[Ls,Cs,Ks,t("td",Bs,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ns]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ps]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Vs]),_:1}),e(),Es]),Os,t("td",Rs,[t("a",Qs,[e("🀄️"),o(s)]),e(),t("a",Ts,[e("🔗"),o(s)])])]),t("tr",null,[As,Gs,Js,t("td",Ds,[o(n,{to:"/tag/design.html"},{default:l(()=>[Fs]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Hs]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ms]),_:1}),e(),Ss]),Us,t("td",Ws,[t("a",Xs,[e("🀄️"),o(s)]),e(),t("a",Ys,[e("🔗"),o(s)])])]),t("tr",null,[Zs,$s,td,t("td",ed,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[od]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[nd]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[ld]),_:1})]),sd,t("td",dd,[t("a",_d,[e("🀄️"),o(s)]),e(),t("a",rd,[e("🔗"),o(s)])])]),t("tr",null,[cd,ad,id,t("td",hd,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[gd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ud]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[fd]),_:1}),e(),md]),yd,t("td",pd,[t("a",xd,[e("🀄️"),o(s)]),e(),t("a",bd,[e("🔗"),o(s)])])]),t("tr",null,[kd,qd,Id,t("td",wd,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[vd]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[zd]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[jd]),_:1}),e(),Ld]),Cd,t("td",Kd,[t("a",Bd,[e("🀄️"),o(s)]),e(),t("a",Nd,[e("🔗"),o(s)])])]),t("tr",null,[Pd,Vd,Ed,t("td",Od,[o(n,{to:"/tag/design.html"},{default:l(()=>[Rd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Qd]),_:1}),e(),o(n,{to:"/tag/ordered-set.html"},{default:l(()=>[Td]),_:1})]),Ad,t("td",Gd,[t("a",Jd,[e("🀄️"),o(s)]),e(),t("a",Dd,[e("🔗"),o(s)])])]),t("tr",null,[Fd,Hd,Md,t("td",Sd,[o(n,{to:"/tag/design.html"},{default:l(()=>[Ud]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Wd]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Xd]),_:1}),e(),Yd]),Zd,t("td",$d,[t("a",t_,[e("🀄️"),o(s)]),e(),t("a",e_,[e("🔗"),o(s)])])]),t("tr",null,[o_,n_,l_,t("td",s_,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[d_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[__]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[r_]),_:1}),e(),c_]),a_,t("td",i_,[t("a",h_,[e("🀄️"),o(s)]),e(),t("a",g_,[e("🔗"),o(s)])])]),t("tr",null,[u_,f_,m_,t("td",y_,[o(n,{to:"/tag/union-find.html"},{default:l(()=>[p_]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[x_]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[b_]),_:1}),e(),k_]),q_,t("td",I_,[t("a",w_,[e("🀄️"),o(s)]),e(),t("a",v_,[e("🔗"),o(s)])])]),t("tr",null,[z_,j_,L_,t("td",C_,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[K_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[B_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[N_]),_:1}),e(),P_]),V_,t("td",E_,[t("a",O_,[e("🀄️"),o(s)]),e(),t("a",R_,[e("🔗"),o(s)])])]),t("tr",null,[Q_,T_,A_,t("td",G_,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[J_]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[D_]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[F_]),_:1}),e(),H_]),M_,t("td",S_,[t("a",U_,[e("🀄️"),o(s)]),e(),t("a",W_,[e("🔗"),o(s)])])]),t("tr",null,[X_,Y_,Z_,t("td",$_,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[tr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[er]),_:1})]),or,t("td",nr,[t("a",lr,[e("🀄️"),o(s)]),e(),t("a",sr,[e("🔗"),o(s)])])]),t("tr",null,[dr,_r,rr,t("td",cr,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[ar]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ir]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[hr]),_:1}),e(),gr]),ur,t("td",fr,[t("a",mr,[e("🀄️"),o(s)]),e(),t("a",yr,[e("🔗"),o(s)])])]),t("tr",null,[pr,xr,br,t("td",kr,[o(n,{to:"/tag/stack.html"},{default:l(()=>[qr]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Ir]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[wr]),_:1}),e(),vr]),zr,t("td",jr,[t("a",Lr,[e("🀄️"),o(s)]),e(),t("a",Cr,[e("🔗"),o(s)])])]),t("tr",null,[Kr,Br,Nr,t("td",Pr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Vr]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Er]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Or]),_:1})]),Rr,t("td",Qr,[t("a",Tr,[e("🀄️"),o(s)]),e(),t("a",Ar,[e("🔗"),o(s)])])]),t("tr",null,[Gr,Jr,Dr,t("td",Fr,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Hr]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Mr]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Sr]),_:1}),e(),Ur]),Wr,t("td",Xr,[t("a",Yr,[e("🀄️"),o(s)]),e(),t("a",Zr,[e("🔗"),o(s)])])]),t("tr",null,[$r,tc,ec,t("td",oc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[nc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[lc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[sc]),_:1})]),dc,t("td",_c,[t("a",rc,[e("🀄️"),o(s)]),e(),t("a",cc,[e("🔗"),o(s)])])]),t("tr",null,[ac,ic,hc,t("td",gc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[uc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[fc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[mc]),_:1}),e(),yc]),pc,t("td",xc,[t("a",bc,[e("🀄️"),o(s)]),e(),t("a",kc,[e("🔗"),o(s)])])]),t("tr",null,[qc,Ic,t("td",wc,[o(n,{to:"/problem/2940.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",vc,[o(n,{to:"/tag/stack.html"},{default:l(()=>[zc]),_:1}),e(),o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[jc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Lc]),_:1}),e(),Cc]),Kc,t("td",Bc,[t("a",Nc,[e("🀄️"),o(s)]),e(),t("a",Pc,[e("🔗"),o(s)])])]),t("tr",null,[Vc,Ec,Oc,t("td",Rc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Qc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Tc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ac]),_:1}),e(),Gc]),Jc,t("td",Dc,[t("a",Fc,[e("🀄️"),o(s)]),e(),t("a",Hc,[e("🔗"),o(s)])])]),t("tr",null,[Mc,Sc,Uc,t("td",Wc,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Xc]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Yc]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Zc]),_:1}),e(),$c]),ta,t("td",ea,[t("a",oa,[e("🀄️"),o(s)]),e(),t("a",na,[e("🔗"),o(s)])])]),t("tr",null,[la,sa,da,t("td",_a,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[ra]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ca]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[aa]),_:1}),e(),ia]),ha,t("td",ga,[t("a",ua,[e("🀄️"),o(s)]),e(),t("a",fa,[e("🔗"),o(s)])])]),t("tr",null,[ma,ya,pa,t("td",xa,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[ba]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ka]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[qa]),_:1}),e(),Ia]),wa,t("td",va,[t("a",za,[e("🀄️"),o(s)]),e(),t("a",ja,[e("🔗"),o(s)])])]),t("tr",null,[La,Ca,Ka,t("td",Ba,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Na]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Pa]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[Va]),_:1}),e(),Ea]),Oa,t("td",Ra,[t("a",Qa,[e("🀄️"),o(s)]),e(),t("a",Ta,[e("🔗"),o(s)])])]),t("tr",null,[Aa,Ga,Ja,t("td",Da,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Fa]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ha]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ma]),_:1}),e(),Sa]),Ua,t("td",Wa,[t("a",Xa,[e("🀄️"),o(s)]),e(),t("a",Ya,[e("🔗"),o(s)])])]),t("tr",null,[Za,$a,ti,t("td",ei,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[oi]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ni]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[li]),_:1})]),si,t("td",di,[t("a",_i,[e("🀄️"),o(s)]),e(),t("a",ri,[e("🔗"),o(s)])])]),t("tr",null,[ci,ai,ii,t("td",hi,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[gi]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[ui]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[fi]),_:1}),e(),mi]),yi,t("td",pi,[t("a",xi,[e("🀄️"),o(s)]),e(),t("a",bi,[e("🔗"),o(s)])])]),t("tr",null,[ki,qi,Ii,t("td",wi,[o(n,{to:"/tag/trie.html"},{default:l(()=>[vi]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[zi]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[ji]),_:1}),e(),Li]),Ci,t("td",Ki,[t("a",Bi,[e("🀄️"),o(s)]),e(),t("a",Ni,[e("🔗"),o(s)])])]),t("tr",null,[Pi,Vi,Ei,t("td",Oi,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Ri]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Qi]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Ti]),_:1}),e(),Ai]),Gi,t("td",Ji,[t("a",Di,[e("🀄️"),o(s)]),e(),t("a",Fi,[e("🔗"),o(s)])])]),t("tr",null,[Hi,Mi,Si,t("td",Ui,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Wi]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Xi]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[Yi]),_:1}),e(),Zi]),$i,t("td",th,[t("a",eh,[e("🀄️"),o(s)]),e(),t("a",oh,[e("🔗"),o(s)])])]),t("tr",null,[nh,lh,sh,t("td",dh,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[_h]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[rh]),_:1}),e(),o(n,{to:"/tag/geometry.html"},{default:l(()=>[ch]),_:1}),e(),ah]),ih,t("td",hh,[t("a",gh,[e("🀄️"),o(s)]),e(),t("a",uh,[e("🔗"),o(s)])])]),t("tr",null,[fh,mh,yh,t("td",ph,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[xh]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[bh]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[kh]),_:1})]),qh,t("td",Ih,[t("a",wh,[e("🀄️"),o(s)]),e(),t("a",vh,[e("🔗"),o(s)])])]),t("tr",null,[zh,jh,Lh,t("td",Ch,[o(n,{to:"/tag/stack.html"},{default:l(()=>[Kh]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Bh]),_:1}),e(),o(n,{to:"/tag/queue.html"},{default:l(()=>[Nh]),_:1}),e(),Ph]),Vh,t("td",Eh,[t("a",Oh,[e("🀄️"),o(s)]),e(),t("a",Rh,[e("🔗"),o(s)])])]),t("tr",null,[Qh,Th,Ah,t("td",Gh,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Jh]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Dh]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Fh]),_:1}),e(),Hh]),Mh,t("td",Sh,[t("a",Uh,[e("🀄️"),o(s)]),e(),t("a",Wh,[e("🔗"),o(s)])])]),t("tr",null,[Xh,Yh,Zh,t("td",$h,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[t1]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[e1]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[o1]),_:1}),e(),n1]),l1,t("td",s1,[t("a",d1,[e("🀄️"),o(s)]),e(),t("a",_1,[e("🔗"),o(s)])])]),t("tr",null,[r1,c1,a1,t("td",i1,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[h1]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[g1]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[u1]),_:1}),e(),f1]),m1,t("td",y1,[t("a",p1,[e("🀄️"),o(s)]),e(),t("a",x1,[e("🔗"),o(s)])])]),t("tr",null,[b1,k1,q1,t("td",I1,[o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[w1]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[v1]),_:1}),e(),o(n,{to:"/tag/enumeration.html"},{default:l(()=>[z1]),_:1}),e(),j1]),L1,t("td",C1,[t("a",K1,[e("🀄️"),o(s)]),e(),t("a",B1,[e("🔗"),o(s)])])]),t("tr",null,[N1,P1,V1,t("td",E1,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[O1]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[R1]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Q1]),_:1})]),T1,t("td",A1,[t("a",G1,[e("🀄️"),o(s)])])]),t("tr",null,[J1,D1,F1,t("td",H1,[o(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[M1]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[S1]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[U1]),_:1}),e(),W1]),X1,t("td",Y1,[t("a",Z1,[e("🀄️"),o(s)])])]),t("tr",null,[$1,tg,eg,t("td",og,[o(n,{to:"/tag/design.html"},{default:l(()=>[ng]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[lg]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[sg]),_:1}),e(),dg]),_g,t("td",rg,[t("a",cg,[e("🀄️"),o(s)])])]),t("tr",null,[ag,ig,hg,t("td",gg,[o(n,{to:"/tag/tree.html"},{default:l(()=>[ug]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[fg]),_:1}),e(),o(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[mg]),_:1}),e(),yg]),pg,t("td",xg,[t("a",bg,[e("🀄️"),o(s)])])]),t("tr",null,[kg,qg,t("td",Ig,[o(n,{to:"/offer/jz_offer_51_1.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",wg,[o(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[vg]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[zg]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[jg]),_:1}),e(),Lg]),Cg,t("td",Kg,[t("a",Bg,[e("🀄️"),o(s)])])]),t("tr",null,[Ng,Pg,t("td",Vg,[o(n,{to:"/offer2/jz_offer_II_058.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Eg,[o(n,{to:"/tag/design.html"},{default:l(()=>[Og]),_:1}),e(),o(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Rg]),_:1}),e(),o(n,{to:"/tag/binary-search.html"},{default:l(()=>[Qg]),_:1}),e(),Tg]),Ag,t("td",Gg,[t("a",Jg,[e("🀄️"),o(s)])])])])])])}const Sg=_(i,[["render",Dg],["__file","segment-tree.html.vue"]]);export{Sg as default};
