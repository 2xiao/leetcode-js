import{_,r as d,o as c,c as a,a as t,d as e,w as n,b as o,f as r}from"./app-fBVbqwGY.js";const i={},h=t("h1",{id:"多线程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#多线程","aria-hidden":"true"},"#"),o(" 多线程")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),z=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),B=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),I=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),F=t("code",null,"强连通分量",-1),H=t("code",null,"欧拉回路",-1),O=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),K=t("p",null,[t("strong",null,"算法")],-1),M=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),Q=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),zt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Bt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),It=t("span",{class:"blue"},"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ft=t("td",{style:{"text-align":"center"}},"1114",-1),Ht=t("td",{style:{"text-align":"left"}},"按序打印",-1),Ot=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},At=t("code",null,"多线程",-1),Dt=t("td",{style:{"text-align":"center"}},"🟢",-1),Gt={style:{"text-align":"center"}},Jt={href:"https://leetcode.cn/problems/print-in-order",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://leetcode.com/problems/print-in-order",target:"_blank",rel:"noopener noreferrer"},Mt=t("td",{style:{"text-align":"center"}},"1115",-1),Pt=t("td",{style:{"text-align":"left"}},"交替打印 FooBar",-1),Qt=t("td",{style:{"text-align":"center"}},null,-1),St={style:{"text-align":"left"}},Ut=t("code",null,"多线程",-1),Wt=t("td",{style:{"text-align":"center"}},"🟠",-1),Xt={style:{"text-align":"center"}},Yt={href:"https://leetcode.cn/problems/print-foobar-alternately",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://leetcode.com/problems/print-foobar-alternately",target:"_blank",rel:"noopener noreferrer"},$t=t("td",{style:{"text-align":"center"}},"1116",-1),te=t("td",{style:{"text-align":"left"}},"打印零与奇偶数",-1),ee=t("td",{style:{"text-align":"center"}},null,-1),oe={style:{"text-align":"left"}},le=t("code",null,"多线程",-1),ne=t("td",{style:{"text-align":"center"}},"🟠",-1),se={style:{"text-align":"center"}},de={href:"https://leetcode.cn/problems/print-zero-even-odd",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://leetcode.com/problems/print-zero-even-odd",target:"_blank",rel:"noopener noreferrer"},ce=t("td",{style:{"text-align":"center"}},"1117",-1),ae=t("td",{style:{"text-align":"left"}},"H2O 生成",-1),re=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},he=t("code",null,"多线程",-1),ue=t("td",{style:{"text-align":"center"}},"🟠",-1),ge={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/building-h2o",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/building-h2o",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"1188",-1),ye=t("td",{style:{"text-align":"left"}},"设计有限阻塞队列 🔒",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"多线程",-1),ze=t("td",{style:{"text-align":"center"}},"🟠",-1),we={style:{"text-align":"center"}},ve={href:"https://leetcode.cn/problems/design-bounded-blocking-queue",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://leetcode.com/problems/design-bounded-blocking-queue",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},"1195",-1),Le=t("td",{style:{"text-align":"left"}},"交替打印字符串",-1),Ne=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},Ce=t("code",null,"多线程",-1),Ee=t("td",{style:{"text-align":"center"}},"🟠",-1),Ie={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/fizz-buzz-multithreaded",target:"_blank",rel:"noopener noreferrer"},je={href:"https://leetcode.com/problems/fizz-buzz-multithreaded",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},"1226",-1),He=t("td",{style:{"text-align":"left"}},"哲学家进餐",-1),Oe=t("td",{style:{"text-align":"center"}},null,-1),Te={style:{"text-align":"left"}},Ae=t("code",null,"多线程",-1),De=t("td",{style:{"text-align":"center"}},"🟠",-1),Ge={style:{"text-align":"center"}},Je={href:"https://leetcode.cn/problems/the-dining-philosophers",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://leetcode.com/problems/the-dining-philosophers",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},"1242",-1),Pe=t("td",{style:{"text-align":"left"}},"多线程网页爬虫 🔒",-1),Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"深度优先搜索",-1),We=t("code",null,"广度优先搜索",-1),Xe=t("code",null,"多线程",-1),Ye=t("td",{style:{"text-align":"center"}},"🟠",-1),Ze={style:{"text-align":"center"}},$e={href:"https://leetcode.cn/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},to={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},"1279",-1),oo=t("td",{style:{"text-align":"left"}},"红绿灯路口 🔒",-1),lo=t("td",{style:{"text-align":"center"}},null,-1),no={style:{"text-align":"left"}},so=t("code",null,"多线程",-1),_o=t("td",{style:{"text-align":"center"}},"🟢",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/traffic-light-controlled-intersection",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://leetcode.com/problems/traffic-light-controlled-intersection",target:"_blank",rel:"noopener noreferrer"};function io(ho,uo){const l=d("RouterLink"),s=d("ExternalLinkIcon");return c(),a("div",null,[h,t("details",null,[u,g,t("p",null,[e(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),o(),e(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),o(),e(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),o(),e(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),o(),e(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),o(),e(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),o(),e(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),o(),e(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[z]),_:1}),o(),e(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),o(),e(l,{to:"/tag/hash-table.html"},{default:n(()=>[v]),_:1}),o(),e(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),o(),e(l,{to:"/tag/string-matching.html"},{default:n(()=>[B]),_:1}),o(),e(l,{to:"/tag/tree.html"},{default:n(()=>[L]),_:1}),o(),e(l,{to:"/tag/binary-tree.html"},{default:n(()=>[N]),_:1}),o(),e(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[V]),_:1}),o(),e(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[C]),_:1}),o(),e(l,{to:"/tag/graph.html"},{default:n(()=>[E]),_:1}),o(),e(l,{to:"/tag/ordered-set.html"},{default:n(()=>[I]),_:1}),o(),e(l,{to:"/tag/topological-sort.html"},{default:n(()=>[R]),_:1}),o(),e(l,{to:"/tag/shortest-path.html"},{default:n(()=>[j]),_:1}),o(),e(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[F]),_:1}),o(),e(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[H]),_:1}),o(),e(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[O]),_:1}),o(),e(l,{to:"/tag/union-find.html"},{default:n(()=>[T]),_:1}),o(),e(l,{to:"/tag/trie.html"},{default:n(()=>[A]),_:1}),o(),e(l,{to:"/tag/segment-tree.html"},{default:n(()=>[D]),_:1}),o(),e(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[G]),_:1}),o(),e(l,{to:"/tag/suffix-array.html"},{default:n(()=>[J]),_:1})]),K,t("p",null,[e(l,{to:"/tag/enumeration.html"},{default:n(()=>[M]),_:1}),o(),e(l,{to:"/tag/recursion.html"},{default:n(()=>[P]),_:1}),o(),e(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[Q]),_:1}),o(),e(l,{to:"/tag/backtracking.html"},{default:n(()=>[S]),_:1}),o(),e(l,{to:"/tag/greedy.html"},{default:n(()=>[U]),_:1}),o(),e(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W]),_:1}),o(),e(l,{to:"/tag/sorting.html"},{default:n(()=>[X]),_:1}),o(),e(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),o(),e(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),o(),e(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),o(),e(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),o(),e(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),o(),e(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),o(),e(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),o(),e(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),o(),e(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),o(),e(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),o(),e(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),o(),e(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[ct]),_:1}),o(),e(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),o(),e(l,{to:"/tag/sliding-window.html"},{default:n(()=>[rt]),_:1}),o(),e(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),o(),e(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),o(),e(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ut]),_:1}),o(),e(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ft,t("p",null,[e(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),o(),e(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),o(),e(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),o(),e(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),o(),e(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),o(),e(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),o(),e(l,{to:"/tag/randomized.html"},{default:n(()=>[zt]),_:1}),o(),e(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),o(),e(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[vt]),_:1}),o(),e(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),o(),e(l,{to:"/tag/database.html"},{default:n(()=>[Bt]),_:1}),o(),e(l,{to:"/tag/design.html"},{default:n(()=>[Lt]),_:1}),o(),e(l,{to:"/tag/data-stream.html"},{default:n(()=>[Nt]),_:1}),o(),e(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Vt]),_:1}),o(),e(l,{to:"/tag/interactive.html"},{default:n(()=>[Ct]),_:1}),o(),e(l,{to:"/tag/iterator.html"},{default:n(()=>[Et]),_:1}),o(),It])]),Rt,r(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Ft,Ht,Ot,t("td",Tt,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[At]),_:1})]),Dt,t("td",Gt,[t("a",Jt,[o("🀄️"),e(s)]),o(),t("a",Kt,[o("🔗"),e(s)])])]),t("tr",null,[Mt,Pt,Qt,t("td",St,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[Ut]),_:1})]),Wt,t("td",Xt,[t("a",Yt,[o("🀄️"),e(s)]),o(),t("a",Zt,[o("🔗"),e(s)])])]),t("tr",null,[$t,te,ee,t("td",oe,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[le]),_:1})]),ne,t("td",se,[t("a",de,[o("🀄️"),e(s)]),o(),t("a",_e,[o("🔗"),e(s)])])]),t("tr",null,[ce,ae,re,t("td",ie,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[he]),_:1})]),ue,t("td",ge,[t("a",fe,[o("🀄️"),e(s)]),o(),t("a",me,[o("🔗"),e(s)])])]),t("tr",null,[pe,ye,xe,t("td",be,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[ke]),_:1})]),ze,t("td",we,[t("a",ve,[o("🀄️"),e(s)]),o(),t("a",qe,[o("🔗"),e(s)])])]),t("tr",null,[Be,Le,Ne,t("td",Ve,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[Ce]),_:1})]),Ee,t("td",Ie,[t("a",Re,[o("🀄️"),e(s)]),o(),t("a",je,[o("🔗"),e(s)])])]),t("tr",null,[Fe,He,Oe,t("td",Te,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[Ae]),_:1})]),De,t("td",Ge,[t("a",Je,[o("🀄️"),e(s)]),o(),t("a",Ke,[o("🔗"),e(s)])])]),t("tr",null,[Me,Pe,Qe,t("td",Se,[e(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ue]),_:1}),o(),e(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[We]),_:1}),o(),e(l,{to:"/tag/concurrency.html"},{default:n(()=>[Xe]),_:1})]),Ye,t("td",Ze,[t("a",$e,[o("🀄️"),e(s)]),o(),t("a",to,[o("🔗"),e(s)])])]),t("tr",null,[eo,oo,lo,t("td",no,[e(l,{to:"/tag/concurrency.html"},{default:n(()=>[so]),_:1})]),_o,t("td",co,[t("a",ao,[o("🀄️"),e(s)]),o(),t("a",ro,[o("🔗"),e(s)])])])])])])}const fo=_(i,[["render",io],["__file","concurrency.html.vue"]]);export{fo as default};
