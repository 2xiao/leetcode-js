import{_ as s,r as _,o as i,c as d,a as n,b as t,d as e,w as l,e as a}from"./app-B5EG-zH0.js";const r="/leetcode-js/assets/1-1-1-RNsJLNFS.png",h={},c=a('<h1 id="_1-1-如何学习数据结构与算法" tabindex="-1"><a class="header-anchor" href="#_1-1-如何学习数据结构与算法" aria-hidden="true">#</a> 1.1 如何学习数据结构与算法</h1><p>首先我们来明确一下数据结构与算法的定义。</p><p>从广义上讲，数据结构就是指一组数据的存储结构，算法就是操作数据的一组方法。</p><p>从狭义上讲，也就是本书要讲的，是指某些经典的数据结构和算法，比如队列、栈、堆、二分查找、动态规划等。这些都是前人从实际操作场景中抽象出来的，经过非常多的求证和检验，可以高效地帮助我们解决实际的开发问题。</p><p>「算法工程师」做的「算法」，和「数据结构与算法」中的「算法」完全是两码事。</p><p>对前者来说，重点在数学建模和调参经验，计算机只是拿来做计算的工具而已；而后者的重点是计算机思维，需要你能够站在计算机的视角，抽象、化简实际问题，然后用合理的数据结构去解决问题。</p><h2 id="如何学习" tabindex="-1"><a class="header-anchor" href="#如何学习" aria-hidden="true">#</a> 如何学习</h2><p>数据结构与算法涵盖的内容很多，要如何高效地系统性学习呢？</p><p>你并不需要掌握图里面的所有知识点。很多高级的数据结构与算法，比如二分图、最大流等，在我们平常的开发中很少会用到。</p><p>我总结了 20 个最常用、最基础的数据结构与算法，不管是应付面试还是工作需要，只要集中精力逐一攻克这 20 个知识点就足够了。</p>',10),u={class:"hint-container info"},p=n("p",{class:"hint-container-title"},"数据结构与算法",-1),f=n("strong",null,"9 个数据结构",-1),m=n("strong",null,"11 个算法",-1),b=a('<p>我对每个知识点都做了精讲，并配有对应的 LeetCode 题目，可以帮你打下扎实的基础，形成自己的知识体系。</p><p>想要对数据结构和算法有更全面的认识，可以查看这张思维导图，里面几乎涵盖了所有数据结构和算法书籍中都会讲到的知识点。</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="如何刷题" tabindex="-1"><a class="header-anchor" href="#如何刷题" aria-hidden="true">#</a> 如何刷题</h2><p>LeetCode 题目虽然多，但如果分类别来看，其实也没多少，很多题目都是类似的套路和延伸。</p><p>对于计算机基础不扎实的同学，如果按照高频顺序刷题，通过每道题反向获取知识，这样的方法不是不可以，但效率可能不高，还会造成知识零散化，不能融会贯通。</p><p>建议采用“<strong>分类知识学习</strong> + <strong>核心题目</strong> + <strong>反复训练</strong> + <strong>融会贯通</strong>”的系统性学习方法。</p>',7),g=n("strong",null,"面试必刷 150 题",-1),k=n("strong",null,"面试高频 200 题",-1),x=n("p",null,"掌握了这十几种常见算法类型的基本原理和思路，就对数据结构与算法有了一个大体的了解，即便出现很多新题，大多也能用现有知识体系去化解。",-1),C=n("strong",null,"CodeTop 热题排行榜",-1),L=n("strong",null,"海外兔热题排行榜",-1),v=n("strong",null,"热门企业题库",-1),y=n("strong",null,"LeetCode 题解",-1),N=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"电影《师父》里面有一句话：「每日挥刀五百下，这个数管住了我。」")],-1),w=n("p",null,[t("成功往往来自于，"),n("strong",null,"把简单、正确的事情重复做"),t("，不相信也不追求快速而一劳永逸的必胜之法。")],-1),V=n("p",null,"想要通关 LeetCode，没有什么神奇的方法，最重要还是自己动手刷题。",-1),B=n("p",null,"多花时间思考怎么 AC 手上的题目，少花时间幻想走了多少进度条。",-1);function R(S,q){const o=_("RouterLink");return i(),d("div",null,[c,n("div",u,[p,n("ul",null,[n("li",null,[n("p",null,[f,t("："),e(o,{to:"/book/array.html"},{default:l(()=>[t("数组")]),_:1}),t("、"),e(o,{to:"/book/linked_list.html"},{default:l(()=>[t("链表")]),_:1}),t("、"),e(o,{to:"/book/stack.html"},{default:l(()=>[t("栈")]),_:1}),t("、"),e(o,{to:"/book/queue.html"},{default:l(()=>[t("队列")]),_:1}),t("、"),e(o,{to:"/book/hash.html"},{default:l(()=>[t("哈希表")]),_:1}),t("、"),e(o,{to:"/book/tree.html"},{default:l(()=>[t("树")]),_:1}),t("、"),e(o,{to:"/book/heap.html"},{default:l(()=>[t("堆")]),_:1}),t("、"),e(o,{to:"/book/graph.html"},{default:l(()=>[t("图")]),_:1}),t("、"),e(o,{to:"/book/string.html"},{default:l(()=>[t("字符串")]),_:1}),t(";")])]),n("li",null,[n("p",null,[m,t("："),e(o,{to:"/book/enumeration.html"},{default:l(()=>[t("枚举算法")]),_:1}),t("、"),e(o,{to:"/book/recursion.html"},{default:l(()=>[t("递归算法")]),_:1}),t("、"),e(o,{to:"/book/divide_conquer.html"},{default:l(()=>[t("分治算法")]),_:1}),t("、"),e(o,{to:"/book/backtracking.html"},{default:l(()=>[t("回溯算法")]),_:1}),t("、"),e(o,{to:"/book/greedy.html"},{default:l(()=>[t("贪心算法")]),_:1}),t("、"),e(o,{to:"/book/dynamic_programming.html"},{default:l(()=>[t("动态规划")]),_:1}),t("、"),e(o,{to:"/book/bit.html"},{default:l(()=>[t("位运算")]),_:1}),t("、"),e(o,{to:"/book/sort.html"},{default:l(()=>[t("排序算法")]),_:1}),t("、"),e(o,{to:"/book/binary_search.html"},{default:l(()=>[t("二分查找")]),_:1}),t("、"),e(o,{to:"/book/two_pointer.html"},{default:l(()=>[t("双指针")]),_:1}),t("、"),e(o,{to:"/book/slide_window.html"},{default:l(()=>[t("滑动窗口")]),_:1}),t(";")])])])]),b,n("p",null,[t("我整理了 "),e(o,{to:"/plan/top_150_list.html"},{default:l(()=>[g]),_:1}),t(" 和 "),e(o,{to:"/plan/top_200_list.html"},{default:l(()=>[k]),_:1}),t("，建议先从这些题入手，分类别练习，点击标题可以跳转到 LeetCode 对应答题页面，点击题解（JS）可以查看我的答题思路和代码，遇到不熟悉的知识点可以去对应的知识点精讲学习。")]),x,n("p",null,[t("对算法模板、数据结构形成初步的认识之后，可以再结合 "),e(o,{to:"/plan/codetop_list.html"},{default:l(()=>[C]),_:1}),t("、"),e(o,{to:"/plan/rabbit_list.html"},{default:l(()=>[L]),_:1}),t("、"),e(o,{to:"/plan/company_list.html"},{default:l(()=>[v]),_:1}),t("、 "),e(o,{to:"/problem/"},{default:l(()=>[y]),_:1}),t(" 多加练习，逐渐提升自己对答题思路的掌握，和对内在原理的领悟。")]),N,w,V,B])}const T=s(h,[["render",R],["__file","intro.html.vue"]]);export{T as default};
