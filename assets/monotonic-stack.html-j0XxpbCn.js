import{_ as d,r as _,o as r,c,a as t,d as o,w as n,b as e,f as a}from"./app-fBVbqwGY.js";const i={},h=t("h1",{id:"单调栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调栈","aria-hidden":"true"},"#"),e(" 单调栈")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),f=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("span",{class:"blue"},"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),V=t("code",null,"二叉树",-1),K=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),M=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),P=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),H=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),U=t("code",null,"排序",-1),W=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),ft=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Vt=t("code",null,"数据流",-1),Kt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Et=t("td",{style:{"text-align":"center"}},"42",-1),Mt=t("td",{style:{"text-align":"left"}},"接雨水",-1),Qt={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},At=t("code",null,"栈",-1),Pt=t("code",null,"数组",-1),St=t("code",null,"双指针",-1),Tt=t("code",null,"2+",-1),Xt=t("td",{style:{"text-align":"center"}},"🔴",-1),Yt={style:{"text-align":"center"}},Dt={href:"https://leetcode.cn/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},Gt=t("td",{style:{"text-align":"center"}},"84",-1),Ht=t("td",{style:{"text-align":"left"}},"柱状图中最大的矩形",-1),Jt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Zt=t("code",null,"数组",-1),$t=t("code",null,"单调栈",-1),te=t("td",{style:{"text-align":"center"}},"🔴",-1),ee={style:{"text-align":"center"}},oe={href:"https://leetcode.cn/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},"85",-1),se=t("td",{style:{"text-align":"left"}},"最大矩形",-1),_e={style:{"text-align":"center"}},de={style:{"text-align":"left"}},re=t("code",null,"栈",-1),ce=t("code",null,"数组",-1),ae=t("code",null,"动态规划",-1),ie=t("code",null,"2+",-1),he=t("td",{style:{"text-align":"center"}},"🔴",-1),ue={style:{"text-align":"center"}},ge={href:"https://leetcode.cn/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},"255",-1),ye=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),pe=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},be=t("code",null,"栈",-1),ke=t("code",null,"树",-1),ve=t("code",null,"二叉搜索树",-1),we=t("code",null,"4+",-1),Ie=t("td",{style:{"text-align":"center"}},"🟠",-1),qe={style:{"text-align":"center"}},ze={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},je={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},"316",-1),Ke=t("td",{style:{"text-align":"left"}},"去除重复字母",-1),Le={style:{"text-align":"center"}},Be={style:{"text-align":"left"}},Ne=t("code",null,"栈",-1),Oe=t("code",null,"贪心",-1),Ce=t("code",null,"字符串",-1),Ee=t("code",null,"1+",-1),Me=t("td",{style:{"text-align":"center"}},"🟠",-1),Qe={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},"321",-1),Se=t("td",{style:{"text-align":"left"}},"拼接最大数",-1),Te=t("td",{style:{"text-align":"center"}},null,-1),Xe={style:{"text-align":"left"}},Ye=t("code",null,"栈",-1),De=t("code",null,"贪心",-1),Fe=t("code",null,"数组",-1),Ge=t("code",null,"2+",-1),He=t("td",{style:{"text-align":"center"}},"🔴",-1),Je={style:{"text-align":"center"}},Ue={href:"https://leetcode.cn/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},We={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Ze=t("td",{style:{"text-align":"center"}},"402",-1),$e=t("td",{style:{"text-align":"left"}},"移掉 K 位数字",-1),to={style:{"text-align":"center"}},eo={style:{"text-align":"left"}},oo=t("code",null,"栈",-1),lo=t("code",null,"贪心",-1),no=t("code",null,"字符串",-1),so=t("code",null,"1+",-1),_o=t("td",{style:{"text-align":"center"}},"🟠",-1),ro={style:{"text-align":"center"}},co={href:"https://leetcode.cn/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},"456",-1),ho=t("td",{style:{"text-align":"left"}},"132 模式",-1),uo={style:{"text-align":"center"}},go={style:{"text-align":"left"}},mo=t("code",null,"栈",-1),fo=t("code",null,"数组",-1),yo=t("code",null,"二分查找",-1),po=t("code",null,"2+",-1),xo=t("td",{style:{"text-align":"center"}},"🟠",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"496",-1),Io=t("td",{style:{"text-align":"left"}},"下一个更大元素 I",-1),qo={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},jo=t("code",null,"栈",-1),Vo=t("code",null,"数组",-1),Ko=t("code",null,"哈希表",-1),Lo=t("code",null,"1+",-1),Bo=t("td",{style:{"text-align":"center"}},"🟢",-1),No={style:{"text-align":"center"}},Oo={href:"https://leetcode.cn/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},Co={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},"503",-1),Mo=t("td",{style:{"text-align":"left"}},"下一个更大元素 II",-1),Qo={style:{"text-align":"center"}},Ro={style:{"text-align":"left"}},Ao=t("code",null,"栈",-1),Po=t("code",null,"数组",-1),So=t("code",null,"单调栈",-1),To=t("td",{style:{"text-align":"center"}},"🟠",-1),Xo={style:{"text-align":"center"}},Yo={href:"https://leetcode.cn/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},Do={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},"581",-1),Go=t("td",{style:{"text-align":"left"}},"最短无序连续子数组",-1),Ho=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Uo=t("code",null,"栈",-1),Wo=t("code",null,"贪心",-1),Zo=t("code",null,"数组",-1),$o=t("code",null,"3+",-1),tl=t("td",{style:{"text-align":"center"}},"🟠",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"654",-1),sl=t("td",{style:{"text-align":"left"}},"最大二叉树",-1),_l={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},rl=t("code",null,"栈",-1),cl=t("code",null,"树",-1),al=t("code",null,"数组",-1),il=t("code",null,"3+",-1),hl=t("td",{style:{"text-align":"center"}},"🟠",-1),ul={style:{"text-align":"center"}},gl={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},ml={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},"739",-1),yl=t("td",{style:{"text-align":"left"}},"每日温度",-1),pl={style:{"text-align":"center"}},xl={style:{"text-align":"left"}},bl=t("code",null,"栈",-1),kl=t("code",null,"数组",-1),vl=t("code",null,"单调栈",-1),wl=t("td",{style:{"text-align":"center"}},"🟠",-1),Il={style:{"text-align":"center"}},ql={href:"https://leetcode.cn/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},jl=t("td",{style:{"text-align":"center"}},"768",-1),Vl=t("td",{style:{"text-align":"left"}},"最多能完成排序的块 II",-1),Kl=t("td",{style:{"text-align":"center"}},null,-1),Ll={style:{"text-align":"left"}},Bl=t("code",null,"栈",-1),Nl=t("code",null,"贪心",-1),Ol=t("code",null,"数组",-1),Cl=t("code",null,"2+",-1),El=t("td",{style:{"text-align":"center"}},"🔴",-1),Ml={style:{"text-align":"center"}},Ql={href:"https://leetcode.cn/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Rl={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},"769",-1),Pl=t("td",{style:{"text-align":"left"}},"最多能完成排序的块",-1),Sl={style:{"text-align":"center"}},Tl={style:{"text-align":"left"}},Xl=t("code",null,"栈",-1),Yl=t("code",null,"贪心",-1),Dl=t("code",null,"数组",-1),Fl=t("code",null,"2+",-1),Gl=t("td",{style:{"text-align":"center"}},"🟠",-1),Hl={style:{"text-align":"center"}},Jl={href:"https://leetcode.cn/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},"853",-1),Zl=t("td",{style:{"text-align":"left"}},"车队",-1),$l=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"栈",-1),on=t("code",null,"数组",-1),ln=t("code",null,"排序",-1),nn=t("code",null,"1+",-1),sn=t("td",{style:{"text-align":"center"}},"🟠",-1),_n={style:{"text-align":"center"}},dn={href:"https://leetcode.cn/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},"901",-1),an=t("td",{style:{"text-align":"left"}},"股票价格跨度",-1),hn={style:{"text-align":"center"}},un={style:{"text-align":"left"}},gn=t("code",null,"栈",-1),mn=t("code",null,"设计",-1),fn=t("code",null,"数据流",-1),yn=t("code",null,"1+",-1),pn=t("td",{style:{"text-align":"center"}},"🟠",-1),xn={style:{"text-align":"center"}},bn={href:"https://leetcode.cn/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},"907",-1),wn=t("td",{style:{"text-align":"left"}},"子数组的最小值之和",-1),In=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},zn=t("code",null,"栈",-1),jn=t("code",null,"数组",-1),Vn=t("code",null,"动态规划",-1),Kn=t("code",null,"1+",-1),Ln=t("td",{style:{"text-align":"center"}},"🟠",-1),Bn={style:{"text-align":"center"}},Nn={href:"https://leetcode.cn/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},On={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},"962",-1),En=t("td",{style:{"text-align":"left"}},"最大宽度坡",-1),Mn={style:{"text-align":"center"}},Qn={style:{"text-align":"left"}},Rn=t("code",null,"栈",-1),An=t("code",null,"数组",-1),Pn=t("code",null,"单调栈",-1),Sn=t("td",{style:{"text-align":"center"}},"🟠",-1),Tn={style:{"text-align":"center"}},Xn={href:"https://leetcode.cn/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},"975",-1),Fn=t("td",{style:{"text-align":"left"}},"奇偶跳",-1),Gn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},Jn=t("code",null,"栈",-1),Un=t("code",null,"数组",-1),Wn=t("code",null,"动态规划",-1),Zn=t("code",null,"2+",-1),$n=t("td",{style:{"text-align":"center"}},"🔴",-1),ts={style:{"text-align":"center"}},es={href:"https://leetcode.cn/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},os={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"1008",-1),ns=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),ss={style:{"text-align":"center"}},_s={style:{"text-align":"left"}},ds=t("code",null,"栈",-1),rs=t("code",null,"树",-1),cs=t("code",null,"二叉搜索树",-1),as=t("code",null,"3+",-1),is=t("td",{style:{"text-align":"center"}},"🟠",-1),hs={style:{"text-align":"center"}},us={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},"1019",-1),fs=t("td",{style:{"text-align":"left"}},"链表中的下一个更大节点",-1),ys=t("td",{style:{"text-align":"center"}},null,-1),ps={style:{"text-align":"left"}},xs=t("code",null,"栈",-1),bs=t("code",null,"数组",-1),ks=t("code",null,"链表",-1),vs=t("code",null,"1+",-1),ws=t("td",{style:{"text-align":"center"}},"🟠",-1),Is={style:{"text-align":"center"}},qs={href:"https://leetcode.cn/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},zs={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},"1063",-1),Vs=t("td",{style:{"text-align":"left"}},"有效子数组的数目 🔒",-1),Ks=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},Bs=t("code",null,"栈",-1),Ns=t("code",null,"数组",-1),Os=t("code",null,"单调栈",-1),Cs=t("td",{style:{"text-align":"center"}},"🔴",-1),Es={style:{"text-align":"center"}},Ms={href:"https://leetcode.cn/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Qs={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Rs=t("td",{style:{"text-align":"center"}},"1081",-1),As=t("td",{style:{"text-align":"left"}},"不同字符的最小子序列",-1),Ps={style:{"text-align":"center"}},Ss={style:{"text-align":"left"}},Ts=t("code",null,"栈",-1),Xs=t("code",null,"贪心",-1),Ys=t("code",null,"字符串",-1),Ds=t("code",null,"1+",-1),Fs=t("td",{style:{"text-align":"center"}},"🟠",-1),Gs={style:{"text-align":"center"}},Hs={href:"https://leetcode.cn/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Js={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},"1124",-1),Ws=t("td",{style:{"text-align":"left"}},"表现良好的最长时间段",-1),Zs=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},t_=t("code",null,"栈",-1),e_=t("code",null,"数组",-1),o_=t("code",null,"哈希表",-1),l_=t("code",null,"2+",-1),n_=t("td",{style:{"text-align":"center"}},"🟠",-1),s_={style:{"text-align":"center"}},__={href:"https://leetcode.cn/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},d_={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},"1130",-1),c_=t("td",{style:{"text-align":"left"}},"叶值的最小代价生成树",-1),a_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},h_=t("code",null,"栈",-1),u_=t("code",null,"贪心",-1),g_=t("code",null,"数组",-1),m_=t("code",null,"2+",-1),f_=t("td",{style:{"text-align":"center"}},"🟠",-1),y_={style:{"text-align":"center"}},p_={href:"https://leetcode.cn/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},x_={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},b_=t("td",{style:{"text-align":"center"}},"1475",-1),k_=t("td",{style:{"text-align":"left"}},"商品折扣后的最终价格",-1),v_={style:{"text-align":"center"}},w_={style:{"text-align":"left"}},I_=t("code",null,"栈",-1),q_=t("code",null,"数组",-1),z_=t("code",null,"单调栈",-1),j_=t("td",{style:{"text-align":"center"}},"🟢",-1),V_={style:{"text-align":"center"}},K_={href:"https://leetcode.cn/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},L_={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},"1504",-1),N_=t("td",{style:{"text-align":"left"}},"统计全 1 子矩形",-1),O_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},E_=t("code",null,"栈",-1),M_=t("code",null,"数组",-1),Q_=t("code",null,"动态规划",-1),R_=t("code",null,"2+",-1),A_=t("td",{style:{"text-align":"center"}},"🟠",-1),P_={style:{"text-align":"center"}},S_={href:"https://leetcode.cn/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},T_={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"1526",-1),Y_=t("td",{style:{"text-align":"left"}},"形成目标数组的子数组最少增加次数",-1),D_=t("td",{style:{"text-align":"center"}},null,-1),F_={style:{"text-align":"left"}},G_=t("code",null,"栈",-1),H_=t("code",null,"贪心",-1),J_=t("code",null,"数组",-1),U_=t("code",null,"2+",-1),W_=t("td",{style:{"text-align":"center"}},"🔴",-1),Z_={style:{"text-align":"center"}},$_={href:"https://leetcode.cn/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"1574",-1),od=t("td",{style:{"text-align":"left"}},"删除最短的子数组使剩余数组有序",-1),ld={style:{"text-align":"center"}},nd={style:{"text-align":"left"}},sd=t("code",null,"栈",-1),_d=t("code",null,"数组",-1),dd=t("code",null,"双指针",-1),rd=t("code",null,"2+",-1),cd=t("td",{style:{"text-align":"center"}},"🟠",-1),ad={style:{"text-align":"center"}},id={href:"https://leetcode.cn/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},"1673",-1),gd=t("td",{style:{"text-align":"left"}},"找出最具竞争力的子序列",-1),md=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},yd=t("code",null,"栈",-1),pd=t("code",null,"贪心",-1),xd=t("code",null,"数组",-1),bd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"center"}},"🟠",-1),vd={style:{"text-align":"center"}},wd={href:"https://leetcode.cn/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Id={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},"1762",-1),zd=t("td",{style:{"text-align":"left"}},"能看到海景的建筑物 🔒",-1),jd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Kd=t("code",null,"栈",-1),Ld=t("code",null,"数组",-1),Bd=t("code",null,"单调栈",-1),Nd=t("td",{style:{"text-align":"center"}},"🟠",-1),Od={style:{"text-align":"center"}},Cd={href:"https://leetcode.cn/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Ed={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Md=t("td",{style:{"text-align":"center"}},"1776",-1),Qd=t("td",{style:{"text-align":"left"}},"车队 II",-1),Rd=t("td",{style:{"text-align":"center"}},null,-1),Ad={style:{"text-align":"left"}},Pd=t("code",null,"栈",-1),Sd=t("code",null,"数组",-1),Td=t("code",null,"数学",-1),Xd=t("code",null,"2+",-1),Yd=t("td",{style:{"text-align":"center"}},"🔴",-1),Dd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Gd={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},"1793",-1),Jd=t("td",{style:{"text-align":"left"}},"好子数组的最大分数",-1),Ud=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},Zd=t("code",null,"栈",-1),$d=t("code",null,"数组",-1),tr=t("code",null,"双指针",-1),er=t("code",null,"2+",-1),or=t("td",{style:{"text-align":"center"}},"🔴",-1),lr={style:{"text-align":"center"}},nr={href:"https://leetcode.cn/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"1856",-1),dr=t("td",{style:{"text-align":"left"}},"子数组最小乘积的最大值",-1),rr=t("td",{style:{"text-align":"center"}},null,-1),cr={style:{"text-align":"left"}},ar=t("code",null,"栈",-1),ir=t("code",null,"数组",-1),hr=t("code",null,"前缀和",-1),ur=t("code",null,"1+",-1),gr=t("td",{style:{"text-align":"center"}},"🟠",-1),mr={style:{"text-align":"center"}},fr={href:"https://leetcode.cn/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},"1944",-1),xr=t("td",{style:{"text-align":"left"}},"队列中可以看到的人数",-1),br=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},vr=t("code",null,"栈",-1),wr=t("code",null,"数组",-1),Ir=t("code",null,"单调栈",-1),qr=t("td",{style:{"text-align":"center"}},"🔴",-1),zr={style:{"text-align":"center"}},jr={href:"https://leetcode.cn/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},"1950",-1),Lr=t("td",{style:{"text-align":"left"}},"所有子数组最小值中的最大值 🔒",-1),Br=t("td",{style:{"text-align":"center"}},null,-1),Nr={style:{"text-align":"left"}},Or=t("code",null,"栈",-1),Cr=t("code",null,"数组",-1),Er=t("code",null,"单调栈",-1),Mr=t("td",{style:{"text-align":"center"}},"🟠",-1),Qr={style:{"text-align":"center"}},Rr={href:"https://leetcode.cn/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},"1996",-1),Sr=t("td",{style:{"text-align":"left"}},"游戏中弱角色的数量",-1),Tr=t("td",{style:{"text-align":"center"}},null,-1),Xr={style:{"text-align":"left"}},Yr=t("code",null,"栈",-1),Dr=t("code",null,"贪心",-1),Fr=t("code",null,"数组",-1),Gr=t("code",null,"2+",-1),Hr=t("td",{style:{"text-align":"center"}},"🟠",-1),Jr={style:{"text-align":"center"}},Ur={href:"https://leetcode.cn/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},"2030",-1),$r=t("td",{style:{"text-align":"left"}},"含特定字母的最小子序列",-1),tc=t("td",{style:{"text-align":"center"}},null,-1),ec={style:{"text-align":"left"}},oc=t("code",null,"栈",-1),lc=t("code",null,"贪心",-1),nc=t("code",null,"字符串",-1),sc=t("code",null,"1+",-1),_c=t("td",{style:{"text-align":"center"}},"🔴",-1),dc={style:{"text-align":"center"}},rc={href:"https://leetcode.cn/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},cc={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},"2104",-1),ic=t("td",{style:{"text-align":"left"}},"子数组范围和",-1),hc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},gc=t("code",null,"栈",-1),mc=t("code",null,"数组",-1),fc=t("code",null,"单调栈",-1),yc=t("td",{style:{"text-align":"center"}},"🟠",-1),pc={style:{"text-align":"center"}},xc={href:"https://leetcode.cn/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},bc={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},kc=t("td",{style:{"text-align":"center"}},"2281",-1),vc=t("td",{style:{"text-align":"left"}},"巫师的总力量和",-1),wc=t("td",{style:{"text-align":"center"}},null,-1),Ic={style:{"text-align":"left"}},qc=t("code",null,"栈",-1),zc=t("code",null,"数组",-1),jc=t("code",null,"前缀和",-1),Vc=t("code",null,"1+",-1),Kc=t("td",{style:{"text-align":"center"}},"🔴",-1),Lc={style:{"text-align":"center"}},Bc={href:"https://leetcode.cn/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},Nc={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},Oc=t("td",{style:{"text-align":"center"}},"2282",-1),Cc=t("td",{style:{"text-align":"left"}},"在一个网格中可以看到的人数 🔒",-1),Ec=t("td",{style:{"text-align":"center"}},null,-1),Mc={style:{"text-align":"left"}},Qc=t("code",null,"栈",-1),Rc=t("code",null,"数组",-1),Ac=t("code",null,"矩阵",-1),Pc=t("code",null,"1+",-1),Sc=t("td",{style:{"text-align":"center"}},"🟠",-1),Tc={style:{"text-align":"center"}},Xc={href:"https://leetcode.cn/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Yc={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Dc=t("td",{style:{"text-align":"center"}},"2289",-1),Fc=t("td",{style:{"text-align":"left"}},"使数组按非递减顺序排列",-1),Gc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},Jc=t("code",null,"栈",-1),Uc=t("code",null,"数组",-1),Wc=t("code",null,"链表",-1),Zc=t("code",null,"1+",-1),$c=t("td",{style:{"text-align":"center"}},"🟠",-1),ta={style:{"text-align":"center"}},ea={href:"https://leetcode.cn/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},oa={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},"2297",-1),na=t("td",{style:{"text-align":"left"}},"跳跃游戏 VIII 🔒",-1),sa=t("td",{style:{"text-align":"center"}},null,-1),_a={style:{"text-align":"left"}},da=t("code",null,"栈",-1),ra=t("code",null,"图",-1),ca=t("code",null,"数组",-1),aa=t("code",null,"3+",-1),ia=t("td",{style:{"text-align":"center"}},"🟠",-1),ha={style:{"text-align":"center"}},ua={href:"https://leetcode.cn/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},ga={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"2334",-1),fa=t("td",{style:{"text-align":"left"}},"元素值大于变化阈值的子数组",-1),ya=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},xa=t("code",null,"栈",-1),ba=t("code",null,"并查集",-1),ka=t("code",null,"数组",-1),va=t("code",null,"1+",-1),wa=t("td",{style:{"text-align":"center"}},"🔴",-1),Ia={style:{"text-align":"center"}},qa={href:"https://leetcode.cn/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},za={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},"2345",-1),Va=t("td",{style:{"text-align":"left"}},"寻找可见山的数量 🔒",-1),Ka=t("td",{style:{"text-align":"center"}},null,-1),La={style:{"text-align":"left"}},Ba=t("code",null,"栈",-1),Na=t("code",null,"数组",-1),Oa=t("code",null,"排序",-1),Ca=t("code",null,"1+",-1),Ea=t("td",{style:{"text-align":"center"}},"🟠",-1),Ma={style:{"text-align":"center"}},Qa={href:"https://leetcode.cn/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},Ra={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},"2355",-1),Pa=t("td",{style:{"text-align":"left"}},"你能拿走的最大图书数量 🔒",-1),Sa=t("td",{style:{"text-align":"center"}},null,-1),Ta={style:{"text-align":"left"}},Xa=t("code",null,"栈",-1),Ya=t("code",null,"数组",-1),Da=t("code",null,"动态规划",-1),Fa=t("code",null,"1+",-1),Ga=t("td",{style:{"text-align":"center"}},"🔴",-1),Ha={style:{"text-align":"center"}},Ja={href:"https://leetcode.cn/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},Ua={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},"2454",-1),Za=t("td",{style:{"text-align":"left"}},"下一个更大元素 IV",-1),$a=t("td",{style:{"text-align":"center"}},null,-1),ti={style:{"text-align":"left"}},ei=t("code",null,"栈",-1),oi=t("code",null,"数组",-1),li=t("code",null,"二分查找",-1),ni=t("code",null,"3+",-1),si=t("td",{style:{"text-align":"center"}},"🔴",-1),_i={style:{"text-align":"center"}},di={href:"https://leetcode.cn/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},ri={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},"2487",-1),ai=t("td",{style:{"text-align":"left"}},"从链表中移除节点",-1),ii=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},ui=t("code",null,"栈",-1),gi=t("code",null,"递归",-1),mi=t("code",null,"链表",-1),fi=t("code",null,"1+",-1),yi=t("td",{style:{"text-align":"center"}},"🟠",-1),pi={style:{"text-align":"center"}},xi={href:"https://leetcode.cn/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},bi={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"2617",-1),vi=t("td",{style:{"text-align":"left"}},"网格图中最少访问的格子数",-1),wi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},qi=t("code",null,"栈",-1),zi=t("code",null,"广度优先搜索",-1),ji=t("code",null,"并查集",-1),Vi=t("code",null,"5+",-1),Ki=t("td",{style:{"text-align":"center"}},"🔴",-1),Li={style:{"text-align":"center"}},Bi={href:"https://leetcode.cn/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ni={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Oi=t("td",{style:{"text-align":"center"}},"2736",-1),Ci=t("td",{style:{"text-align":"left"}},"最大和查询",-1),Ei=t("td",{style:{"text-align":"center"}},null,-1),Mi={style:{"text-align":"left"}},Qi=t("code",null,"栈",-1),Ri=t("code",null,"树状数组",-1),Ai=t("code",null,"线段树",-1),Pi=t("code",null,"4+",-1),Si=t("td",{style:{"text-align":"center"}},"🔴",-1),Ti={style:{"text-align":"center"}},Xi={href:"https://leetcode.cn/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Yi={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Di=t("td",{style:{"text-align":"center"}},"2818",-1),Fi=t("td",{style:{"text-align":"left"}},"操作使得分最大",-1),Gi=t("td",{style:{"text-align":"center"}},null,-1),Hi={style:{"text-align":"left"}},Ji=t("code",null,"栈",-1),Ui=t("code",null,"贪心",-1),Wi=t("code",null,"数组",-1),Zi=t("code",null,"3+",-1),$i=t("td",{style:{"text-align":"center"}},"🔴",-1),th={style:{"text-align":"center"}},eh={href:"https://leetcode.cn/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},oh={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},"2832",-1),nh=t("td",{style:{"text-align":"left"}},"每个元素为最大值的最大范围 🔒",-1),sh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},dh=t("code",null,"栈",-1),rh=t("code",null,"数组",-1),ch=t("code",null,"单调栈",-1),ah=t("td",{style:{"text-align":"center"}},"🟠",-1),ih={style:{"text-align":"center"}},hh={href:"https://leetcode.cn/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},uh={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},"2863",-1),mh=t("td",{style:{"text-align":"left"}},"最长半递减子数组的长度 🔒",-1),fh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},ph=t("code",null,"栈",-1),xh=t("code",null,"数组",-1),bh=t("code",null,"排序",-1),kh=t("code",null,"1+",-1),vh=t("td",{style:{"text-align":"center"}},"🟠",-1),wh={style:{"text-align":"center"}},Ih={href:"https://leetcode.cn/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},qh={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},zh=t("td",{style:{"text-align":"center"}},"2865",-1),jh=t("td",{style:{"text-align":"left"}},"美丽塔 I",-1),Vh=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Lh=t("code",null,"栈",-1),Bh=t("code",null,"数组",-1),Nh=t("code",null,"单调栈",-1),Oh=t("td",{style:{"text-align":"center"}},"🟠",-1),Ch={style:{"text-align":"center"}},Eh={href:"https://leetcode.cn/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},Mh={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},"2866",-1),Rh=t("td",{style:{"text-align":"left"}},"美丽塔 II",-1),Ah=t("td",{style:{"text-align":"center"}},null,-1),Ph={style:{"text-align":"left"}},Sh=t("code",null,"栈",-1),Th=t("code",null,"数组",-1),Xh=t("code",null,"单调栈",-1),Yh=t("td",{style:{"text-align":"center"}},"🟠",-1),Dh={style:{"text-align":"center"}},Fh={href:"https://leetcode.cn/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Gh={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},"2940",-1),Jh=t("td",{style:{"text-align":"left"}},"找到 Alice 和 Bob 可以相遇的建筑",-1),Uh={style:{"text-align":"center"}},Wh={style:{"text-align":"left"}},Zh=t("code",null,"栈",-1),$h=t("code",null,"树状数组",-1),t1=t("code",null,"线段树",-1),e1=t("code",null,"4+",-1),o1=t("td",{style:{"text-align":"center"}},"🔴",-1),l1={style:{"text-align":"center"}},n1={href:"https://leetcode.cn/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},s1={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},"2945",-1),d1=t("td",{style:{"text-align":"left"}},"找到最大非递减数组的长度",-1),r1=t("td",{style:{"text-align":"center"}},null,-1),c1={style:{"text-align":"left"}},a1=t("code",null,"栈",-1),i1=t("code",null,"队列",-1),h1=t("code",null,"数组",-1),u1=t("code",null,"4+",-1),g1=t("td",{style:{"text-align":"center"}},"🔴",-1),m1={style:{"text-align":"center"}},f1={href:"https://leetcode.cn/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},y1={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},p1=t("td",{style:{"text-align":"center"}},"3113",-1),x1=t("td",{style:{"text-align":"left"}},"边界元素是最大值的子数组数目",-1),b1=t("td",{style:{"text-align":"center"}},null,-1),k1={style:{"text-align":"left"}},v1=t("code",null,"栈",-1),w1=t("code",null,"数组",-1),I1=t("code",null,"二分查找",-1),q1=t("code",null,"1+",-1),z1=t("td",{style:{"text-align":"center"}},"🔴",-1),j1={style:{"text-align":"center"}},V1={href:"https://leetcode.cn/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},K1={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},L1=t("td",{style:{"text-align":"center"}},"3205",-1),B1=t("td",{style:{"text-align":"left"}},"最大数组跳跃得分 I 🔒",-1),N1=t("td",{style:{"text-align":"center"}},null,-1),O1={style:{"text-align":"left"}},C1=t("code",null,"栈",-1),E1=t("code",null,"贪心",-1),M1=t("code",null,"数组",-1),Q1=t("code",null,"2+",-1),R1=t("td",{style:{"text-align":"center"}},"🟠",-1),A1={style:{"text-align":"center"}},P1={href:"https://leetcode.cn/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},S1={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},T1=t("td",{style:{"text-align":"center"}},"3221",-1),X1=t("td",{style:{"text-align":"left"}},"最大数组跳跃得分 II 🔒",-1),Y1=t("td",{style:{"text-align":"center"}},null,-1),D1={style:{"text-align":"left"}},F1=t("code",null,"栈",-1),G1=t("code",null,"贪心",-1),H1=t("code",null,"数组",-1),J1=t("code",null,"1+",-1),U1=t("td",{style:{"text-align":"center"}},"🟠",-1),W1={style:{"text-align":"center"}},Z1={href:"https://leetcode.cn/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},$1={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},tu=t("td",{style:{"text-align":"center"}},"3229",-1),eu=t("td",{style:{"text-align":"left"}},"使数组等于目标数组所需的最少操作次数",-1),ou=t("td",{style:{"text-align":"center"}},null,-1),lu={style:{"text-align":"left"}},nu=t("code",null,"栈",-1),su=t("code",null,"贪心",-1),_u=t("code",null,"数组",-1),du=t("code",null,"2+",-1),ru=t("td",{style:{"text-align":"center"}},"🔴",-1),cu={style:{"text-align":"center"}},au={href:"https://leetcode.cn/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},iu={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},hu=t("td",{style:{"text-align":"center"}},"3359",-1),uu=t("td",{style:{"text-align":"left"}},"查找最大元素不超过 K 的有序子矩阵 🔒",-1),gu=t("td",{style:{"text-align":"center"}},null,-1),mu={style:{"text-align":"left"}},fu=t("code",null,"栈",-1),yu=t("code",null,"数组",-1),pu=t("code",null,"矩阵",-1),xu=t("code",null,"1+",-1),bu=t("td",{style:{"text-align":"center"}},"🔴",-1),ku={style:{"text-align":"center"}},vu={href:"https://leetcode.cn/problems/find-sorted-submatrices-with-maximum-element-at-most-k",target:"_blank",rel:"noopener noreferrer"},wu={href:"https://leetcode.com/problems/find-sorted-submatrices-with-maximum-element-at-most-k",target:"_blank",rel:"noopener noreferrer"},Iu=t("td",{style:{"text-align":"center"}},"3420",-1),qu=t("td",{style:{"text-align":"left"}},"统计 K 次操作以内得到非递减子数组的数目",-1),zu=t("td",{style:{"text-align":"center"}},null,-1),ju={style:{"text-align":"left"}},Vu=t("code",null,"栈",-1),Ku=t("code",null,"线段树",-1),Lu=t("code",null,"队列",-1),Bu=t("code",null,"4+",-1),Nu=t("td",{style:{"text-align":"center"}},"🔴",-1),Ou={style:{"text-align":"center"}},Cu={href:"https://leetcode.cn/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Eu={href:"https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Mu=t("td",{style:{"text-align":"center"}},"3430",-1),Qu=t("td",{style:{"text-align":"left"}},"最多 K 个元素的子数组的最值之和",-1),Ru=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Pu=t("code",null,"栈",-1),Su=t("code",null,"数组",-1),Tu=t("code",null,"数学",-1),Xu=t("code",null,"1+",-1),Yu=t("td",{style:{"text-align":"center"}},"🔴",-1),Du={style:{"text-align":"center"}},Fu={href:"https://leetcode.cn/problems/maximum-and-minimum-sums-of-at-most-size-k-subarrays",target:"_blank",rel:"noopener noreferrer"},Gu={href:"https://leetcode.com/problems/maximum-and-minimum-sums-of-at-most-size-k-subarrays",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),Ju=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),Uu={style:{"text-align":"center"}},Wu={style:{"text-align":"left"}},Zu=t("code",null,"栈",-1),$u=t("code",null,"树",-1),tg=t("code",null,"二叉搜索树",-1),eg=t("code",null,"4+",-1),og=t("td",{style:{"text-align":"center"}},"🟠",-1),lg={style:{"text-align":"center"}},ng={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},sg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),_g=t("td",{style:{"text-align":"left"}},"每日温度",-1),dg={style:{"text-align":"center"}},rg={style:{"text-align":"left"}},cg=t("code",null,"栈",-1),ag=t("code",null,"数组",-1),ig=t("code",null,"单调栈",-1),hg=t("td",{style:{"text-align":"center"}},"🟠",-1),ug={style:{"text-align":"center"}},gg={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},mg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),fg=t("td",{style:{"text-align":"left"}},"直方图最大矩形面积",-1),yg={style:{"text-align":"center"}},pg={style:{"text-align":"left"}},xg=t("code",null,"栈",-1),bg=t("code",null,"数组",-1),kg=t("code",null,"单调栈",-1),vg=t("td",{style:{"text-align":"center"}},"🔴",-1),wg={style:{"text-align":"center"}},Ig={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},qg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),zg=t("td",{style:{"text-align":"left"}},"矩阵中最大的矩形",-1),jg={style:{"text-align":"center"}},Vg={style:{"text-align":"left"}},Kg=t("code",null,"栈",-1),Lg=t("code",null,"数组",-1),Bg=t("code",null,"动态规划",-1),Ng=t("code",null,"2+",-1),Og=t("td",{style:{"text-align":"center"}},"🔴",-1),Cg={style:{"text-align":"center"}},Eg={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Mg=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Qg=t("td",{style:{"text-align":"left"}},"栈排序",-1),Rg=t("td",{style:{"text-align":"center"}},null,-1),Ag={style:{"text-align":"left"}},Pg=t("code",null,"栈",-1),Sg=t("code",null,"设计",-1),Tg=t("code",null,"单调栈",-1),Xg=t("td",{style:{"text-align":"center"}},"🟠",-1),Yg={style:{"text-align":"center"}},Dg={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Fg=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),Gg=t("td",{style:{"text-align":"left"}},"部分排序",-1),Hg=t("td",{style:{"text-align":"center"}},null,-1),Jg={style:{"text-align":"left"}},Ug=t("code",null,"栈",-1),Wg=t("code",null,"贪心",-1),Zg=t("code",null,"数组",-1),$g=t("code",null,"3+",-1),tm=t("td",{style:{"text-align":"center"}},"🟠",-1),em={style:{"text-align":"center"}},om={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},lm=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),nm=t("td",{style:{"text-align":"left"}},"直方图的水量",-1),sm=t("td",{style:{"text-align":"center"}},null,-1),_m={style:{"text-align":"left"}},dm=t("code",null,"栈",-1),rm=t("code",null,"数组",-1),cm=t("code",null,"双指针",-1),am=t("code",null,"2+",-1),im=t("td",{style:{"text-align":"center"}},"🔴",-1),hm={style:{"text-align":"center"}},um={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"};function gm(mm,fm){const l=_("RouterLink"),s=_("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[u,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),b,e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[T]),_:1})]),X,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ut]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),mt,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Kt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Nt]),_:1})])]),Ot,a(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Et,Mt,t("td",Qt,[o(l,{to:"/problem/0042.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[At]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Pt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[St]),_:1}),e(),Tt]),Xt,t("td",Yt,[t("a",Dt,[e("🀄️"),o(s)]),e(),t("a",Ft,[e("🔗"),o(s)])])]),t("tr",null,[Gt,Ht,t("td",Jt,[o(l,{to:"/problem/0084.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ut,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Wt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[$t]),_:1})]),te,t("td",ee,[t("a",oe,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[ne,se,t("td",_e,[o(l,{to:"/problem/0085.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",de,[o(l,{to:"/tag/stack.html"},{default:n(()=>[re]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ae]),_:1}),e(),ie]),he,t("td",ue,[t("a",ge,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[fe,ye,pe,t("td",xe,[o(l,{to:"/tag/stack.html"},{default:n(()=>[be]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ve]),_:1}),e(),we]),Ie,t("td",qe,[t("a",ze,[e("🀄️"),o(s)]),e(),t("a",je,[e("🔗"),o(s)])])]),t("tr",null,[Ve,Ke,t("td",Le,[o(l,{to:"/problem/0316.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Be,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ne]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Oe]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ce]),_:1}),e(),Ee]),Me,t("td",Qe,[t("a",Re,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[Pe,Se,Te,t("td",Xe,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ye]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[De]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Fe]),_:1}),e(),Ge]),He,t("td",Je,[t("a",Ue,[e("🀄️"),o(s)]),e(),t("a",We,[e("🔗"),o(s)])])]),t("tr",null,[Ze,$e,t("td",to,[o(l,{to:"/problem/0402.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",eo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[oo]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[no]),_:1}),e(),so]),_o,t("td",ro,[t("a",co,[e("🀄️"),o(s)]),e(),t("a",ao,[e("🔗"),o(s)])])]),t("tr",null,[io,ho,t("td",uo,[o(l,{to:"/problem/0456.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",go,[o(l,{to:"/tag/stack.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fo]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[yo]),_:1}),e(),po]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[wo,Io,t("td",qo,[o(l,{to:"/problem/0496.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Vo]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Ko]),_:1}),e(),Lo]),Bo,t("td",No,[t("a",Oo,[e("🀄️"),o(s)]),e(),t("a",Co,[e("🔗"),o(s)])])]),t("tr",null,[Eo,Mo,t("td",Qo,[o(l,{to:"/problem/0503.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ro,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ao]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Po]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[So]),_:1})]),To,t("td",Xo,[t("a",Yo,[e("🀄️"),o(s)]),e(),t("a",Do,[e("🔗"),o(s)])])]),t("tr",null,[Fo,Go,Ho,t("td",Jo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Uo]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Wo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zo]),_:1}),e(),$o]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",_l,[o(l,{to:"/problem/0654.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[rl]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[al]),_:1}),e(),il]),hl,t("td",ul,[t("a",gl,[e("🀄️"),o(s)]),e(),t("a",ml,[e("🔗"),o(s)])])]),t("tr",null,[fl,yl,t("td",pl,[o(l,{to:"/problem/0739.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[bl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[vl]),_:1})]),wl,t("td",Il,[t("a",ql,[e("🀄️"),o(s)]),e(),t("a",zl,[e("🔗"),o(s)])])]),t("tr",null,[jl,Vl,Kl,t("td",Ll,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Bl]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Nl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ol]),_:1}),e(),Cl]),El,t("td",Ml,[t("a",Ql,[e("🀄️"),o(s)]),e(),t("a",Rl,[e("🔗"),o(s)])])]),t("tr",null,[Al,Pl,t("td",Sl,[o(l,{to:"/problem/0769.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Xl]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Yl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Dl]),_:1}),e(),Fl]),Gl,t("td",Hl,[t("a",Jl,[e("🀄️"),o(s)]),e(),t("a",Ul,[e("🔗"),o(s)])])]),t("tr",null,[Wl,Zl,$l,t("td",tn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[en]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[ln]),_:1}),e(),nn]),sn,t("td",_n,[t("a",dn,[e("🀄️"),o(s)]),e(),t("a",rn,[e("🔗"),o(s)])])]),t("tr",null,[cn,an,t("td",hn,[o(l,{to:"/problem/0901.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",un,[o(l,{to:"/tag/stack.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[mn]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[fn]),_:1}),e(),yn]),pn,t("td",xn,[t("a",bn,[e("🀄️"),o(s)]),e(),t("a",kn,[e("🔗"),o(s)])])]),t("tr",null,[vn,wn,In,t("td",qn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vn]),_:1}),e(),Kn]),Ln,t("td",Bn,[t("a",Nn,[e("🀄️"),o(s)]),e(),t("a",On,[e("🔗"),o(s)])])]),t("tr",null,[Cn,En,t("td",Mn,[o(l,{to:"/problem/0962.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Qn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[An]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Pn]),_:1})]),Sn,t("td",Tn,[t("a",Xn,[e("🀄️"),o(s)]),e(),t("a",Yn,[e("🔗"),o(s)])])]),t("tr",null,[Dn,Fn,Gn,t("td",Hn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Jn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Un]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Wn]),_:1}),e(),Zn]),$n,t("td",ts,[t("a",es,[e("🀄️"),o(s)]),e(),t("a",os,[e("🔗"),o(s)])])]),t("tr",null,[ls,ns,t("td",ss,[o(l,{to:"/problem/1008.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_s,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ds]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rs]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[cs]),_:1}),e(),as]),is,t("td",hs,[t("a",us,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[ms,fs,ys,t("td",ps,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bs]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[ks]),_:1}),e(),vs]),ws,t("td",Is,[t("a",qs,[e("🀄️"),o(s)]),e(),t("a",zs,[e("🔗"),o(s)])])]),t("tr",null,[js,Vs,Ks,t("td",Ls,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Bs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ns]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Os]),_:1})]),Cs,t("td",Es,[t("a",Ms,[e("🀄️"),o(s)]),e(),t("a",Qs,[e("🔗"),o(s)])])]),t("tr",null,[Rs,As,t("td",Ps,[o(l,{to:"/problem/1081.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ss,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ts]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Xs]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ys]),_:1}),e(),Ds]),Fs,t("td",Gs,[t("a",Hs,[e("🀄️"),o(s)]),e(),t("a",Js,[e("🔗"),o(s)])])]),t("tr",null,[Us,Ws,Zs,t("td",$s,[o(l,{to:"/tag/stack.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[e_]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[o_]),_:1}),e(),l_]),n_,t("td",s_,[t("a",__,[e("🀄️"),o(s)]),e(),t("a",d_,[e("🔗"),o(s)])])]),t("tr",null,[r_,c_,a_,t("td",i_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[h_]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[u_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[g_]),_:1}),e(),m_]),f_,t("td",y_,[t("a",p_,[e("🀄️"),o(s)]),e(),t("a",x_,[e("🔗"),o(s)])])]),t("tr",null,[b_,k_,t("td",v_,[o(l,{to:"/problem/1475.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",w_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[I_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[q_]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[z_]),_:1})]),j_,t("td",V_,[t("a",K_,[e("🀄️"),o(s)]),e(),t("a",L_,[e("🔗"),o(s)])])]),t("tr",null,[B_,N_,O_,t("td",C_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[E_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[M_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Q_]),_:1}),e(),R_]),A_,t("td",P_,[t("a",S_,[e("🀄️"),o(s)]),e(),t("a",T_,[e("🔗"),o(s)])])]),t("tr",null,[X_,Y_,D_,t("td",F_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[G_]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[H_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[J_]),_:1}),e(),U_]),W_,t("td",Z_,[t("a",$_,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,t("td",ld,[o(l,{to:"/problem/1574.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[sd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_d]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dd]),_:1}),e(),rd]),cd,t("td",ad,[t("a",id,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[ud,gd,md,t("td",fd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[pd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xd]),_:1}),e(),bd]),kd,t("td",vd,[t("a",wd,[e("🀄️"),o(s)]),e(),t("a",Id,[e("🔗"),o(s)])])]),t("tr",null,[qd,zd,jd,t("td",Vd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Kd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Bd]),_:1})]),Nd,t("td",Od,[t("a",Cd,[e("🀄️"),o(s)]),e(),t("a",Ed,[e("🔗"),o(s)])])]),t("tr",null,[Md,Qd,Rd,t("td",Ad,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Pd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Sd]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Td]),_:1}),e(),Xd]),Yd,t("td",Dd,[t("a",Fd,[e("🀄️"),o(s)]),e(),t("a",Gd,[e("🔗"),o(s)])])]),t("tr",null,[Hd,Jd,Ud,t("td",Wd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[tr]),_:1}),e(),er]),or,t("td",lr,[t("a",nr,[e("🀄️"),o(s)]),e(),t("a",sr,[e("🔗"),o(s)])])]),t("tr",null,[_r,dr,rr,t("td",cr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ar]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ir]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[hr]),_:1}),e(),ur]),gr,t("td",mr,[t("a",fr,[e("🀄️"),o(s)]),e(),t("a",yr,[e("🔗"),o(s)])])]),t("tr",null,[pr,xr,br,t("td",kr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[vr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wr]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Ir]),_:1})]),qr,t("td",zr,[t("a",jr,[e("🀄️"),o(s)]),e(),t("a",Vr,[e("🔗"),o(s)])])]),t("tr",null,[Kr,Lr,Br,t("td",Nr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Or]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Cr]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Er]),_:1})]),Mr,t("td",Qr,[t("a",Rr,[e("🀄️"),o(s)]),e(),t("a",Ar,[e("🔗"),o(s)])])]),t("tr",null,[Pr,Sr,Tr,t("td",Xr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yr]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Dr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Fr]),_:1}),e(),Gr]),Hr,t("td",Jr,[t("a",Ur,[e("🀄️"),o(s)]),e(),t("a",Wr,[e("🔗"),o(s)])])]),t("tr",null,[Zr,$r,tc,t("td",ec,[o(l,{to:"/tag/stack.html"},{default:n(()=>[oc]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[lc]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[nc]),_:1}),e(),sc]),_c,t("td",dc,[t("a",rc,[e("🀄️"),o(s)]),e(),t("a",cc,[e("🔗"),o(s)])])]),t("tr",null,[ac,ic,hc,t("td",uc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[gc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[fc]),_:1})]),yc,t("td",pc,[t("a",xc,[e("🀄️"),o(s)]),e(),t("a",bc,[e("🔗"),o(s)])])]),t("tr",null,[kc,vc,wc,t("td",Ic,[o(l,{to:"/tag/stack.html"},{default:n(()=>[qc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zc]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[jc]),_:1}),e(),Vc]),Kc,t("td",Lc,[t("a",Bc,[e("🀄️"),o(s)]),e(),t("a",Nc,[e("🔗"),o(s)])])]),t("tr",null,[Oc,Cc,Ec,t("td",Mc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Qc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Rc]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Ac]),_:1}),e(),Pc]),Sc,t("td",Tc,[t("a",Xc,[e("🀄️"),o(s)]),e(),t("a",Yc,[e("🔗"),o(s)])])]),t("tr",null,[Dc,Fc,Gc,t("td",Hc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Jc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Uc]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Wc]),_:1}),e(),Zc]),$c,t("td",ta,[t("a",ea,[e("🀄️"),o(s)]),e(),t("a",oa,[e("🔗"),o(s)])])]),t("tr",null,[la,na,sa,t("td",_a,[o(l,{to:"/tag/stack.html"},{default:n(()=>[da]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ra]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ca]),_:1}),e(),aa]),ia,t("td",ha,[t("a",ua,[e("🀄️"),o(s)]),e(),t("a",ga,[e("🔗"),o(s)])])]),t("tr",null,[ma,fa,ya,t("td",pa,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xa]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[ba]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ka]),_:1}),e(),va]),wa,t("td",Ia,[t("a",qa,[e("🀄️"),o(s)]),e(),t("a",za,[e("🔗"),o(s)])])]),t("tr",null,[ja,Va,Ka,t("td",La,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ba]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Na]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Oa]),_:1}),e(),Ca]),Ea,t("td",Ma,[t("a",Qa,[e("🀄️"),o(s)]),e(),t("a",Ra,[e("🔗"),o(s)])])]),t("tr",null,[Aa,Pa,Sa,t("td",Ta,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Xa]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ya]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Da]),_:1}),e(),Fa]),Ga,t("td",Ha,[t("a",Ja,[e("🀄️"),o(s)]),e(),t("a",Ua,[e("🔗"),o(s)])])]),t("tr",null,[Wa,Za,$a,t("td",ti,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ei]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[li]),_:1}),e(),ni]),si,t("td",_i,[t("a",di,[e("🀄️"),o(s)]),e(),t("a",ri,[e("🔗"),o(s)])])]),t("tr",null,[ci,ai,ii,t("td",hi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ui]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[mi]),_:1}),e(),fi]),yi,t("td",pi,[t("a",xi,[e("🀄️"),o(s)]),e(),t("a",bi,[e("🔗"),o(s)])])]),t("tr",null,[ki,vi,wi,t("td",Ii,[o(l,{to:"/tag/stack.html"},{default:n(()=>[qi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[zi]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[ji]),_:1}),e(),Vi]),Ki,t("td",Li,[t("a",Bi,[e("🀄️"),o(s)]),e(),t("a",Ni,[e("🔗"),o(s)])])]),t("tr",null,[Oi,Ci,Ei,t("td",Mi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Qi]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Ri]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ai]),_:1}),e(),Pi]),Si,t("td",Ti,[t("a",Xi,[e("🀄️"),o(s)]),e(),t("a",Yi,[e("🔗"),o(s)])])]),t("tr",null,[Di,Fi,Gi,t("td",Hi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ji]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Ui]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wi]),_:1}),e(),Zi]),$i,t("td",th,[t("a",eh,[e("🀄️"),o(s)]),e(),t("a",oh,[e("🔗"),o(s)])])]),t("tr",null,[lh,nh,sh,t("td",_h,[o(l,{to:"/tag/stack.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[rh]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[ch]),_:1})]),ah,t("td",ih,[t("a",hh,[e("🀄️"),o(s)]),e(),t("a",uh,[e("🔗"),o(s)])])]),t("tr",null,[gh,mh,fh,t("td",yh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ph]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xh]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[bh]),_:1}),e(),kh]),vh,t("td",wh,[t("a",Ih,[e("🀄️"),o(s)]),e(),t("a",qh,[e("🔗"),o(s)])])]),t("tr",null,[zh,jh,Vh,t("td",Kh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Lh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Bh]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Nh]),_:1})]),Oh,t("td",Ch,[t("a",Eh,[e("🀄️"),o(s)]),e(),t("a",Mh,[e("🔗"),o(s)])])]),t("tr",null,[Qh,Rh,Ah,t("td",Ph,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Sh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Th]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Xh]),_:1})]),Yh,t("td",Dh,[t("a",Fh,[e("🀄️"),o(s)]),e(),t("a",Gh,[e("🔗"),o(s)])])]),t("tr",null,[Hh,Jh,t("td",Uh,[o(l,{to:"/problem/2940.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zh]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[$h]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[t1]),_:1}),e(),e1]),o1,t("td",l1,[t("a",n1,[e("🀄️"),o(s)]),e(),t("a",s1,[e("🔗"),o(s)])])]),t("tr",null,[_1,d1,r1,t("td",c1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[a1]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[i1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[h1]),_:1}),e(),u1]),g1,t("td",m1,[t("a",f1,[e("🀄️"),o(s)]),e(),t("a",y1,[e("🔗"),o(s)])])]),t("tr",null,[p1,x1,b1,t("td",k1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[v1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[w1]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[I1]),_:1}),e(),q1]),z1,t("td",j1,[t("a",V1,[e("🀄️"),o(s)]),e(),t("a",K1,[e("🔗"),o(s)])])]),t("tr",null,[L1,B1,N1,t("td",O1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[C1]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[E1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[M1]),_:1}),e(),Q1]),R1,t("td",A1,[t("a",P1,[e("🀄️"),o(s)]),e(),t("a",S1,[e("🔗"),o(s)])])]),t("tr",null,[T1,X1,Y1,t("td",D1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[F1]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[G1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[H1]),_:1}),e(),J1]),U1,t("td",W1,[t("a",Z1,[e("🀄️"),o(s)]),e(),t("a",$1,[e("🔗"),o(s)])])]),t("tr",null,[tu,eu,ou,t("td",lu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nu]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[su]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_u]),_:1}),e(),du]),ru,t("td",cu,[t("a",au,[e("🀄️"),o(s)]),e(),t("a",iu,[e("🔗"),o(s)])])]),t("tr",null,[hu,uu,gu,t("td",mu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[yu]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[pu]),_:1}),e(),xu]),bu,t("td",ku,[t("a",vu,[e("🀄️"),o(s)]),e(),t("a",wu,[e("🔗"),o(s)])])]),t("tr",null,[Iu,qu,zu,t("td",ju,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Vu]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ku]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Lu]),_:1}),e(),Bu]),Nu,t("td",Ou,[t("a",Cu,[e("🀄️"),o(s)]),e(),t("a",Eu,[e("🔗"),o(s)])])]),t("tr",null,[Mu,Qu,Ru,t("td",Au,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Pu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Su]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Tu]),_:1}),e(),Xu]),Yu,t("td",Du,[t("a",Fu,[e("🀄️"),o(s)]),e(),t("a",Gu,[e("🔗"),o(s)])])]),t("tr",null,[Hu,Ju,t("td",Uu,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zu]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[$u]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[tg]),_:1}),e(),eg]),og,t("td",lg,[t("a",ng,[e("🀄️"),o(s)])])]),t("tr",null,[sg,_g,t("td",dg,[o(l,{to:"/offer2/jz_offer_II_038.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",rg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[cg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ag]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[ig]),_:1})]),hg,t("td",ug,[t("a",gg,[e("🀄️"),o(s)])])]),t("tr",null,[mg,fg,t("td",yg,[o(l,{to:"/offer2/jz_offer_II_039.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bg]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[kg]),_:1})]),vg,t("td",wg,[t("a",Ig,[e("🀄️"),o(s)])])]),t("tr",null,[qg,zg,t("td",jg,[o(l,{to:"/offer2/jz_offer_II_040.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Kg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Lg]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Bg]),_:1}),e(),Ng]),Og,t("td",Cg,[t("a",Eg,[e("🀄️"),o(s)])])]),t("tr",null,[Mg,Qg,Rg,t("td",Ag,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Pg]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Sg]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Tg]),_:1})]),Xg,t("td",Yg,[t("a",Dg,[e("🀄️"),o(s)])])]),t("tr",null,[Fg,Gg,Hg,t("td",Jg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ug]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Wg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zg]),_:1}),e(),$g]),tm,t("td",em,[t("a",om,[e("🀄️"),o(s)])])]),t("tr",null,[lm,nm,sm,t("td",_m,[o(l,{to:"/tag/stack.html"},{default:n(()=>[dm]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[rm]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[cm]),_:1}),e(),am]),im,t("td",hm,[t("a",um,[e("🀄️"),o(s)])])])])])])}const pm=d(i,[["render",gm],["__file","monotonic-stack.html.vue"]]);export{pm as default};
