import{_ as d,r,o as _,c,a as t,d as o,w as n,b as e,f as a}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),e(" 深度优先搜索")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),u=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),x=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),E=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),F=t("code",null,"欧拉回路",-1),S=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),D=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),H=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),M=t("code",null,"枚举",-1),O=t("code",null,"递归",-1),P=t("code",null,"分治",-1),Q=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("span",{class:"blue"},"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ut=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),xt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Et=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Rt=t("td",{style:{"text-align":"center"}},"94",-1),Ft=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),St={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},Dt=t("code",null,"栈",-1),At=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),Ht=t("code",null,"1+",-1),Jt=t("td",{style:{"text-align":"center"}},"🟢",-1),Mt={style:{"text-align":"center"}},Ot={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},"98",-1),Ut=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"树",-1),Zt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"center"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"99",-1),re=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"深度优先搜索",-1),ie=t("code",null,"二叉搜索树",-1),he=t("code",null,"1+",-1),fe=t("td",{style:{"text-align":"center"}},"🟠",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"100",-1),ye=t("td",{style:{"text-align":"left"}},"相同的树",-1),be={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),we=t("code",null,"广度优先搜索",-1),Ie=t("code",null,"1+",-1),ze=t("td",{style:{"text-align":"center"}},"🟢",-1),qe={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},"101",-1),Ke=t("td",{style:{"text-align":"left"}},"对称二叉树",-1),Le={style:{"text-align":"center"}},Be={style:{"text-align":"left"}},Ce=t("code",null,"树",-1),Ee=t("code",null,"深度优先搜索",-1),Re=t("code",null,"广度优先搜索",-1),Fe=t("code",null,"1+",-1),Se=t("td",{style:{"text-align":"center"}},"🟢",-1),Te={style:{"text-align":"center"}},De={href:"https://leetcode.cn/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"104",-1),He=t("td",{style:{"text-align":"left"}},"二叉树的最大深度",-1),Je={style:{"text-align":"center"}},Me={style:{"text-align":"left"}},Oe=t("code",null,"树",-1),Pe=t("code",null,"深度优先搜索",-1),Qe=t("code",null,"广度优先搜索",-1),Ue=t("code",null,"1+",-1),We=t("td",{style:{"text-align":"center"}},"🟢",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"110",-1),to=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"树",-1),no=t("code",null,"深度优先搜索",-1),so=t("code",null,"二叉树",-1),ro=t("td",{style:{"text-align":"center"}},"🟢",-1),_o={style:{"text-align":"center"}},co={href:"https://leetcode.cn/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},"111",-1),ho=t("td",{style:{"text-align":"left"}},"二叉树的最小深度",-1),fo={style:{"text-align":"center"}},go={style:{"text-align":"left"}},uo=t("code",null,"树",-1),mo=t("code",null,"深度优先搜索",-1),po=t("code",null,"广度优先搜索",-1),yo=t("code",null,"1+",-1),bo=t("td",{style:{"text-align":"center"}},"🟢",-1),xo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"112",-1),Io=t("td",{style:{"text-align":"left"}},"路径总和",-1),zo={style:{"text-align":"center"}},qo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),No=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"广度优先搜索",-1),Ko=t("code",null,"1+",-1),Lo=t("td",{style:{"text-align":"center"}},"🟢",-1),Bo={style:{"text-align":"center"}},Co={href:"https://leetcode.cn/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},"113",-1),Fo=t("td",{style:{"text-align":"left"}},"路径总和 II",-1),So={style:{"text-align":"center"}},To={style:{"text-align":"left"}},Do=t("code",null,"树",-1),Ao=t("code",null,"深度优先搜索",-1),Go=t("code",null,"回溯",-1),Ho=t("code",null,"1+",-1),Jo=t("td",{style:{"text-align":"center"}},"🟠",-1),Mo={style:{"text-align":"center"}},Oo={href:"https://leetcode.cn/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},"114",-1),Uo=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),Wo={style:{"text-align":"center"}},Xo={style:{"text-align":"left"}},Yo=t("code",null,"栈",-1),Zo=t("code",null,"树",-1),$o=t("code",null,"深度优先搜索",-1),tl=t("code",null,"2+",-1),el=t("td",{style:{"text-align":"center"}},"🟠",-1),ol={style:{"text-align":"center"}},ll={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},sl=t("td",{style:{"text-align":"center"}},"116",-1),rl=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针",-1),dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},cl=t("code",null,"树",-1),al=t("code",null,"深度优先搜索",-1),il=t("code",null,"广度优先搜索",-1),hl=t("code",null,"2+",-1),fl=t("td",{style:{"text-align":"center"}},"🟠",-1),gl={style:{"text-align":"center"}},ul={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},ml={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},"117",-1),yl=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针 II",-1),bl={style:{"text-align":"center"}},xl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),vl=t("code",null,"深度优先搜索",-1),wl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"2+",-1),zl=t("td",{style:{"text-align":"center"}},"🟠",-1),ql={style:{"text-align":"center"}},jl={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},"124",-1),Kl=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),Ll={style:{"text-align":"center"}},Bl={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),El=t("code",null,"深度优先搜索",-1),Rl=t("code",null,"动态规划",-1),Fl=t("code",null,"1+",-1),Sl=t("td",{style:{"text-align":"center"}},"🔴",-1),Tl={style:{"text-align":"center"}},Dl={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},"129",-1),Hl=t("td",{style:{"text-align":"left"}},"求根节点到叶节点数字之和",-1),Jl={style:{"text-align":"center"}},Ml={style:{"text-align":"left"}},Ol=t("code",null,"树",-1),Pl=t("code",null,"深度优先搜索",-1),Ql=t("code",null,"二叉树",-1),Ul=t("td",{style:{"text-align":"center"}},"🟠",-1),Wl={style:{"text-align":"center"}},Xl={href:"https://leetcode.cn/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},"130",-1),$l=t("td",{style:{"text-align":"left"}},"被围绕的区域",-1),tn={style:{"text-align":"center"}},en={style:{"text-align":"left"}},on=t("code",null,"深度优先搜索",-1),ln=t("code",null,"广度优先搜索",-1),nn=t("code",null,"并查集",-1),sn=t("code",null,"2+",-1),rn=t("td",{style:{"text-align":"center"}},"🟠",-1),dn={style:{"text-align":"center"}},_n={href:"https://leetcode.cn/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},"133",-1),hn=t("td",{style:{"text-align":"left"}},"克隆图",-1),fn={style:{"text-align":"center"}},gn={style:{"text-align":"left"}},un=t("code",null,"深度优先搜索",-1),mn=t("code",null,"广度优先搜索",-1),pn=t("code",null,"图",-1),yn=t("code",null,"1+",-1),bn=t("td",{style:{"text-align":"center"}},"🟠",-1),xn={style:{"text-align":"center"}},kn={href:"https://leetcode.cn/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},"144",-1),In=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),zn={style:{"text-align":"center"}},qn={style:{"text-align":"left"}},jn=t("code",null,"栈",-1),Nn=t("code",null,"树",-1),Vn=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"1+",-1),Ln=t("td",{style:{"text-align":"center"}},"🟢",-1),Bn={style:{"text-align":"center"}},Cn={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},En={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},"145",-1),Fn=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),Sn={style:{"text-align":"center"}},Tn={style:{"text-align":"left"}},Dn=t("code",null,"栈",-1),An=t("code",null,"树",-1),Gn=t("code",null,"深度优先搜索",-1),Hn=t("code",null,"1+",-1),Jn=t("td",{style:{"text-align":"center"}},"🟢",-1),Mn={style:{"text-align":"center"}},On={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},"156",-1),Un=t("td",{style:{"text-align":"left"}},"上下翻转二叉树 🔒",-1),Wn={style:{"text-align":"center"}},Xn={style:{"text-align":"left"}},Yn=t("code",null,"树",-1),Zn=t("code",null,"深度优先搜索",-1),$n=t("code",null,"二叉树",-1),ts=t("td",{style:{"text-align":"center"}},"🟠",-1),es={style:{"text-align":"center"}},os={href:"https://leetcode.cn/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},"199",-1),ss=t("td",{style:{"text-align":"left"}},"二叉树的右视图",-1),rs={style:{"text-align":"center"}},ds={style:{"text-align":"left"}},_s=t("code",null,"树",-1),cs=t("code",null,"深度优先搜索",-1),as=t("code",null,"广度优先搜索",-1),is=t("code",null,"1+",-1),hs=t("td",{style:{"text-align":"center"}},"🟠",-1),fs={style:{"text-align":"center"}},gs={href:"https://leetcode.cn/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},us={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},"200",-1),ps=t("td",{style:{"text-align":"left"}},"岛屿数量",-1),ys={style:{"text-align":"center"}},bs={style:{"text-align":"left"}},xs=t("code",null,"深度优先搜索",-1),ks=t("code",null,"广度优先搜索",-1),vs=t("code",null,"并查集",-1),ws=t("code",null,"2+",-1),Is=t("td",{style:{"text-align":"center"}},"🟠",-1),zs={style:{"text-align":"center"}},qs={href:"https://leetcode.cn/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},js={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},"207",-1),Vs=t("td",{style:{"text-align":"left"}},"课程表",-1),Ks={style:{"text-align":"center"}},Ls={style:{"text-align":"left"}},Bs=t("code",null,"深度优先搜索",-1),Cs=t("code",null,"广度优先搜索",-1),Es=t("code",null,"图",-1),Rs=t("code",null,"1+",-1),Fs=t("td",{style:{"text-align":"center"}},"🟠",-1),Ss={style:{"text-align":"center"}},Ts={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Ds={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},"210",-1),Gs=t("td",{style:{"text-align":"left"}},"课程表 II",-1),Hs={style:{"text-align":"center"}},Js={style:{"text-align":"left"}},Ms=t("code",null,"深度优先搜索",-1),Os=t("code",null,"广度优先搜索",-1),Ps=t("code",null,"图",-1),Qs=t("code",null,"1+",-1),Us=t("td",{style:{"text-align":"center"}},"🟠",-1),Ws={style:{"text-align":"center"}},Xs={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Ys={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},"211",-1),$s=t("td",{style:{"text-align":"left"}},"添加与搜索单词 - 数据结构设计",-1),tr={style:{"text-align":"center"}},er={style:{"text-align":"left"}},or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"设计",-1),nr=t("code",null,"字典树",-1),sr=t("code",null,"1+",-1),rr=t("td",{style:{"text-align":"center"}},"🟠",-1),dr={style:{"text-align":"center"}},_r={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},"226",-1),ir=t("td",{style:{"text-align":"left"}},"翻转二叉树",-1),hr={style:{"text-align":"center"}},fr={style:{"text-align":"left"}},gr=t("code",null,"树",-1),ur=t("code",null,"深度优先搜索",-1),mr=t("code",null,"广度优先搜索",-1),pr=t("code",null,"1+",-1),yr=t("td",{style:{"text-align":"center"}},"🟢",-1),br={style:{"text-align":"center"}},xr={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},vr=t("td",{style:{"text-align":"center"}},"230",-1),wr=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),Ir={style:{"text-align":"center"}},zr={style:{"text-align":"left"}},qr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),Nr=t("code",null,"二叉搜索树",-1),Vr=t("code",null,"1+",-1),Kr=t("td",{style:{"text-align":"center"}},"🟠",-1),Lr={style:{"text-align":"center"}},Br={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Er=t("td",{style:{"text-align":"center"}},"235",-1),Rr=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Fr={style:{"text-align":"center"}},Sr={style:{"text-align":"left"}},Tr=t("code",null,"树",-1),Dr=t("code",null,"深度优先搜索",-1),Ar=t("code",null,"二叉搜索树",-1),Gr=t("code",null,"1+",-1),Hr=t("td",{style:{"text-align":"center"}},"🟠",-1),Jr={style:{"text-align":"center"}},Mr={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Or={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},"236",-1),Qr=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),Ur={style:{"text-align":"center"}},Wr={style:{"text-align":"left"}},Xr=t("code",null,"树",-1),Yr=t("code",null,"深度优先搜索",-1),Zr=t("code",null,"二叉树",-1),$r=t("td",{style:{"text-align":"center"}},"🟠",-1),td={style:{"text-align":"center"}},ed={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},od={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},"250",-1),nd=t("td",{style:{"text-align":"left"}},"统计同值子树 🔒",-1),sd=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},dd=t("code",null,"树",-1),_d=t("code",null,"深度优先搜索",-1),cd=t("code",null,"二叉树",-1),ad=t("td",{style:{"text-align":"center"}},"🟠",-1),id={style:{"text-align":"center"}},hd={href:"https://leetcode.cn/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},fd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},"257",-1),ud=t("td",{style:{"text-align":"left"}},"二叉树的所有路径",-1),md={style:{"text-align":"center"}},pd={style:{"text-align":"left"}},yd=t("code",null,"树",-1),bd=t("code",null,"深度优先搜索",-1),xd=t("code",null,"字符串",-1),kd=t("code",null,"2+",-1),vd=t("td",{style:{"text-align":"center"}},"🟢",-1),wd={style:{"text-align":"center"}},Id={href:"https://leetcode.cn/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},zd={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},"261",-1),jd=t("td",{style:{"text-align":"left"}},"以图判树 🔒",-1),Nd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Kd=t("code",null,"深度优先搜索",-1),Ld=t("code",null,"广度优先搜索",-1),Bd=t("code",null,"并查集",-1),Cd=t("code",null,"1+",-1),Ed=t("td",{style:{"text-align":"center"}},"🟠",-1),Rd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Sd={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},"269",-1),Dd=t("td",{style:{"text-align":"left"}},"火星词典 🔒",-1),Ad=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Hd=t("code",null,"深度优先搜索",-1),Jd=t("code",null,"广度优先搜索",-1),Md=t("code",null,"图",-1),Od=t("code",null,"3+",-1),Pd=t("td",{style:{"text-align":"center"}},"🔴",-1),Qd={style:{"text-align":"center"}},Ud={href:"https://leetcode.cn/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Wd={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},"270",-1),Yd=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Zd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"树",-1),e_=t("code",null,"深度优先搜索",-1),o_=t("code",null,"二叉搜索树",-1),l_=t("code",null,"2+",-1),n_=t("td",{style:{"text-align":"center"}},"🟢",-1),s_={style:{"text-align":"center"}},r_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},d_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"272",-1),c_=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),a_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},h_=t("code",null,"栈",-1),f_=t("code",null,"树",-1),g_=t("code",null,"深度优先搜索",-1),u_=t("code",null,"4+",-1),m_=t("td",{style:{"text-align":"center"}},"🔴",-1),p_={style:{"text-align":"center"}},y_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},b_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},"285",-1),k_=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),v_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},I_=t("code",null,"树",-1),z_=t("code",null,"深度优先搜索",-1),q_=t("code",null,"二叉搜索树",-1),j_=t("code",null,"1+",-1),N_=t("td",{style:{"text-align":"center"}},"🟠",-1),V_={style:{"text-align":"center"}},K_={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},L_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},"297",-1),C_=t("td",{style:{"text-align":"left"}},"二叉树的序列化与反序列化",-1),E_={style:{"text-align":"center"}},R_={style:{"text-align":"left"}},F_=t("code",null,"树",-1),S_=t("code",null,"深度优先搜索",-1),T_=t("code",null,"广度优先搜索",-1),D_=t("code",null,"3+",-1),A_=t("td",{style:{"text-align":"center"}},"🔴",-1),G_={style:{"text-align":"center"}},H_={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},J_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},"298",-1),O_=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 🔒",-1),P_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},U_=t("code",null,"树",-1),W_=t("code",null,"深度优先搜索",-1),X_=t("code",null,"二叉树",-1),Y_=t("td",{style:{"text-align":"center"}},"🟠",-1),Z_={style:{"text-align":"center"}},$_={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},tc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},ec=t("td",{style:{"text-align":"center"}},"302",-1),oc=t("td",{style:{"text-align":"left"}},"包含全部黑色像素的最小矩形 🔒",-1),lc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},sc=t("code",null,"深度优先搜索",-1),rc=t("code",null,"广度优先搜索",-1),dc=t("code",null,"数组",-1),_c=t("code",null,"2+",-1),cc=t("td",{style:{"text-align":"center"}},"🔴",-1),ac={style:{"text-align":"center"}},ic={href:"https://leetcode.cn/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},hc={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},"310",-1),gc=t("td",{style:{"text-align":"left"}},"最小高度树",-1),uc={style:{"text-align":"center"}},mc={style:{"text-align":"left"}},pc=t("code",null,"深度优先搜索",-1),yc=t("code",null,"广度优先搜索",-1),bc=t("code",null,"图",-1),xc=t("code",null,"1+",-1),kc=t("td",{style:{"text-align":"center"}},"🟠",-1),vc={style:{"text-align":"center"}},wc={href:"https://leetcode.cn/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Ic={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},"314",-1),qc=t("td",{style:{"text-align":"left"}},"二叉树的垂直遍历 🔒",-1),jc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Vc=t("code",null,"树",-1),Kc=t("code",null,"深度优先搜索",-1),Lc=t("code",null,"广度优先搜索",-1),Bc=t("code",null,"3+",-1),Cc=t("td",{style:{"text-align":"center"}},"🟠",-1),Ec={style:{"text-align":"center"}},Rc={href:"https://leetcode.cn/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Fc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Sc=t("td",{style:{"text-align":"center"}},"323",-1),Tc=t("td",{style:{"text-align":"left"}},"无向图中连通分量的数目 🔒",-1),Dc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Gc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"广度优先搜索",-1),Jc=t("code",null,"并查集",-1),Mc=t("code",null,"1+",-1),Oc=t("td",{style:{"text-align":"center"}},"🟠",-1),Pc={style:{"text-align":"center"}},Qc={href:"https://leetcode.cn/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Uc={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Wc=t("td",{style:{"text-align":"center"}},"329",-1),Xc=t("td",{style:{"text-align":"left"}},"矩阵中的最长递增路径",-1),Yc={style:{"text-align":"center"}},Zc={style:{"text-align":"left"}},$c=t("code",null,"深度优先搜索",-1),ta=t("code",null,"广度优先搜索",-1),ea=t("code",null,"图",-1),oa=t("code",null,"5+",-1),la=t("td",{style:{"text-align":"center"}},"🔴",-1),na={style:{"text-align":"center"}},sa={href:"https://leetcode.cn/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},ra={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},"332",-1),_a=t("td",{style:{"text-align":"left"}},"重新安排行程",-1),ca=t("td",{style:{"text-align":"center"}},null,-1),aa={style:{"text-align":"left"}},ia=t("code",null,"深度优先搜索",-1),ha=t("code",null,"图",-1),fa=t("code",null,"欧拉回路",-1),ga=t("td",{style:{"text-align":"center"}},"🔴",-1),ua={style:{"text-align":"center"}},ma={href:"https://leetcode.cn/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},pa={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},"333",-1),ba=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),xa=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},va=t("code",null,"树",-1),wa=t("code",null,"深度优先搜索",-1),Ia=t("code",null,"二叉搜索树",-1),za=t("code",null,"2+",-1),qa=t("td",{style:{"text-align":"center"}},"🟠",-1),ja={style:{"text-align":"center"}},Na={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Va={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},"337",-1),La=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),Ba={style:{"text-align":"center"}},Ca={style:{"text-align":"left"}},Ea=t("code",null,"树",-1),Ra=t("code",null,"深度优先搜索",-1),Fa=t("code",null,"动态规划",-1),Sa=t("code",null,"1+",-1),Ta=t("td",{style:{"text-align":"center"}},"🟠",-1),Da={style:{"text-align":"center"}},Aa={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ga={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ha=t("td",{style:{"text-align":"center"}},"339",-1),Ja=t("td",{style:{"text-align":"left"}},"嵌套列表加权和 🔒",-1),Ma=t("td",{style:{"text-align":"center"}},null,-1),Oa={style:{"text-align":"left"}},Pa=t("code",null,"深度优先搜索",-1),Qa=t("code",null,"广度优先搜索",-1),Ua=t("td",{style:{"text-align":"center"}},"🟠",-1),Wa={style:{"text-align":"center"}},Xa={href:"https://leetcode.cn/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Ya={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Za=t("td",{style:{"text-align":"center"}},"341",-1),$a=t("td",{style:{"text-align":"left"}},"扁平化嵌套列表迭代器",-1),ti={style:{"text-align":"center"}},ei={style:{"text-align":"left"}},oi=t("code",null,"栈",-1),li=t("code",null,"树",-1),ni=t("code",null,"深度优先搜索",-1),si=t("code",null,"3+",-1),ri=t("td",{style:{"text-align":"center"}},"🟠",-1),di={style:{"text-align":"center"}},_i={href:"https://leetcode.cn/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},ci={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},"364",-1),ii=t("td",{style:{"text-align":"left"}},"嵌套列表加权和 II 🔒",-1),hi=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),ui=t("code",null,"深度优先搜索",-1),mi=t("code",null,"广度优先搜索",-1),pi=t("td",{style:{"text-align":"center"}},"🟠",-1),yi={style:{"text-align":"center"}},bi={href:"https://leetcode.cn/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},xi={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"365",-1),vi=t("td",{style:{"text-align":"left"}},"水壶问题",-1),wi={style:{"text-align":"center"}},Ii={style:{"text-align":"left"}},zi=t("code",null,"深度优先搜索",-1),qi=t("code",null,"广度优先搜索",-1),ji=t("code",null,"数学",-1),Ni=t("td",{style:{"text-align":"center"}},"🟠",-1),Vi={style:{"text-align":"center"}},Ki={href:"https://leetcode.cn/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Li={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},"366",-1),Ci=t("td",{style:{"text-align":"left"}},"寻找二叉树的叶子节点 🔒",-1),Ei={style:{"text-align":"center"}},Ri={style:{"text-align":"left"}},Fi=t("code",null,"树",-1),Si=t("code",null,"深度优先搜索",-1),Ti=t("code",null,"二叉树",-1),Di=t("td",{style:{"text-align":"center"}},"🟠",-1),Ai={style:{"text-align":"center"}},Gi={href:"https://leetcode.cn/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},"385",-1),Mi=t("td",{style:{"text-align":"left"}},"迷你语法分析器",-1),Oi={style:{"text-align":"center"}},Pi={style:{"text-align":"left"}},Qi=t("code",null,"栈",-1),Ui=t("code",null,"深度优先搜索",-1),Wi=t("code",null,"字符串",-1),Xi=t("td",{style:{"text-align":"center"}},"🟠",-1),Yi={style:{"text-align":"center"}},Zi={href:"https://leetcode.cn/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},$i={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},th=t("td",{style:{"text-align":"center"}},"386",-1),eh=t("td",{style:{"text-align":"left"}},"字典序排数",-1),oh={style:{"text-align":"center"}},lh={style:{"text-align":"left"}},nh=t("code",null,"深度优先搜索",-1),sh=t("code",null,"字典树",-1),rh=t("td",{style:{"text-align":"center"}},"🟠",-1),dh={style:{"text-align":"center"}},_h={href:"https://leetcode.cn/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ch={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ah=t("td",{style:{"text-align":"center"}},"388",-1),ih=t("td",{style:{"text-align":"left"}},"文件的最长绝对路径",-1),hh={style:{"text-align":"center"}},fh={style:{"text-align":"left"}},gh=t("code",null,"栈",-1),uh=t("code",null,"深度优先搜索",-1),mh=t("code",null,"字符串",-1),ph=t("td",{style:{"text-align":"center"}},"🟠",-1),yh={style:{"text-align":"center"}},bh={href:"https://leetcode.cn/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},xh={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},"399",-1),vh=t("td",{style:{"text-align":"left"}},"除法求值",-1),wh={style:{"text-align":"center"}},Ih={style:{"text-align":"left"}},zh=t("code",null,"深度优先搜索",-1),qh=t("code",null,"广度优先搜索",-1),jh=t("code",null,"并查集",-1),Nh=t("code",null,"4+",-1),Vh=t("td",{style:{"text-align":"center"}},"🟠",-1),Kh={style:{"text-align":"center"}},Lh={href:"https://leetcode.cn/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Bh={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Ch=t("td",{style:{"text-align":"center"}},"404",-1),Eh=t("td",{style:{"text-align":"left"}},"左叶子之和",-1),Rh={style:{"text-align":"center"}},Fh={style:{"text-align":"left"}},Sh=t("code",null,"树",-1),Th=t("code",null,"深度优先搜索",-1),Dh=t("code",null,"广度优先搜索",-1),Ah=t("code",null,"1+",-1),Gh=t("td",{style:{"text-align":"center"}},"🟢",-1),Hh={style:{"text-align":"center"}},Jh={href:"https://leetcode.cn/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Mh={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Oh=t("td",{style:{"text-align":"center"}},"417",-1),Ph=t("td",{style:{"text-align":"left"}},"太平洋大西洋水流问题",-1),Qh={style:{"text-align":"center"}},Uh={style:{"text-align":"left"}},Wh=t("code",null,"深度优先搜索",-1),Xh=t("code",null,"广度优先搜索",-1),Yh=t("code",null,"数组",-1),Zh=t("code",null,"1+",-1),$h=t("td",{style:{"text-align":"center"}},"🟠",-1),t1={style:{"text-align":"center"}},e1={href:"https://leetcode.cn/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},o1={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},"419",-1),n1=t("td",{style:{"text-align":"left"}},"棋盘上的战舰",-1),s1={style:{"text-align":"center"}},r1={style:{"text-align":"left"}},d1=t("code",null,"深度优先搜索",-1),_1=t("code",null,"数组",-1),c1=t("code",null,"矩阵",-1),a1=t("td",{style:{"text-align":"center"}},"🟠",-1),i1={style:{"text-align":"center"}},h1={href:"https://leetcode.cn/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},f1={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},g1=t("td",{style:{"text-align":"center"}},"426",-1),u1=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),m1={style:{"text-align":"center"}},p1={style:{"text-align":"left"}},y1=t("code",null,"栈",-1),b1=t("code",null,"树",-1),x1=t("code",null,"深度优先搜索",-1),k1=t("code",null,"4+",-1),v1=t("td",{style:{"text-align":"center"}},"🟠",-1),w1={style:{"text-align":"center"}},I1={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},z1={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},q1=t("td",{style:{"text-align":"center"}},"428",-1),j1=t("td",{style:{"text-align":"left"}},"序列化和反序列化 N 叉树 🔒",-1),N1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},K1=t("code",null,"树",-1),L1=t("code",null,"深度优先搜索",-1),B1=t("code",null,"广度优先搜索",-1),C1=t("code",null,"1+",-1),E1=t("td",{style:{"text-align":"center"}},"🔴",-1),R1={style:{"text-align":"center"}},F1={href:"https://leetcode.cn/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},S1={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},T1=t("td",{style:{"text-align":"center"}},"430",-1),D1=t("td",{style:{"text-align":"left"}},"扁平化多级双向链表",-1),A1={style:{"text-align":"center"}},G1={style:{"text-align":"left"}},H1=t("code",null,"深度优先搜索",-1),J1=t("code",null,"链表",-1),M1=t("code",null,"双向链表",-1),O1=t("td",{style:{"text-align":"center"}},"🟠",-1),P1={style:{"text-align":"center"}},Q1={href:"https://leetcode.cn/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},U1={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},W1=t("td",{style:{"text-align":"center"}},"431",-1),X1=t("td",{style:{"text-align":"left"}},"将 N 叉树编码为二叉树 🔒",-1),Y1=t("td",{style:{"text-align":"center"}},null,-1),Z1={style:{"text-align":"left"}},$1=t("code",null,"树",-1),tf=t("code",null,"深度优先搜索",-1),ef=t("code",null,"广度优先搜索",-1),of=t("code",null,"2+",-1),lf=t("td",{style:{"text-align":"center"}},"🔴",-1),nf={style:{"text-align":"center"}},sf={href:"https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},rf={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},df=t("td",{style:{"text-align":"center"}},"437",-1),_f=t("td",{style:{"text-align":"left"}},"路径总和 III",-1),cf={style:{"text-align":"center"}},af={style:{"text-align":"left"}},hf=t("code",null,"树",-1),ff=t("code",null,"深度优先搜索",-1),gf=t("code",null,"二叉树",-1),uf=t("td",{style:{"text-align":"center"}},"🟠",-1),mf={style:{"text-align":"center"}},pf={href:"https://leetcode.cn/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},yf={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},bf=t("td",{style:{"text-align":"center"}},"449",-1),xf=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),kf={style:{"text-align":"center"}},vf={style:{"text-align":"left"}},wf=t("code",null,"树",-1),If=t("code",null,"深度优先搜索",-1),zf=t("code",null,"广度优先搜索",-1),qf=t("code",null,"4+",-1),jf=t("td",{style:{"text-align":"center"}},"🟠",-1),Nf={style:{"text-align":"center"}},Vf={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Kf={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},"463",-1),Bf=t("td",{style:{"text-align":"left"}},"岛屿的周长",-1),Cf={style:{"text-align":"center"}},Ef={style:{"text-align":"left"}},Rf=t("code",null,"深度优先搜索",-1),Ff=t("code",null,"广度优先搜索",-1),Sf=t("code",null,"数组",-1),Tf=t("code",null,"1+",-1),Df=t("td",{style:{"text-align":"center"}},"🟢",-1),Af={style:{"text-align":"center"}},Gf={href:"https://leetcode.cn/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Hf={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},"472",-1),Mf=t("td",{style:{"text-align":"left"}},"连接词",-1),Of=t("td",{style:{"text-align":"center"}},null,-1),Pf={style:{"text-align":"left"}},Qf=t("code",null,"深度优先搜索",-1),Uf=t("code",null,"字典树",-1),Wf=t("code",null,"数组",-1),Xf=t("code",null,"2+",-1),Yf=t("td",{style:{"text-align":"center"}},"🔴",-1),Zf={style:{"text-align":"center"}},$f={href:"https://leetcode.cn/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},tg={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},eg=t("td",{style:{"text-align":"center"}},"490",-1),og=t("td",{style:{"text-align":"left"}},"迷宫 🔒",-1),lg=t("td",{style:{"text-align":"center"}},null,-1),ng={style:{"text-align":"left"}},sg=t("code",null,"深度优先搜索",-1),rg=t("code",null,"广度优先搜索",-1),dg=t("code",null,"数组",-1),_g=t("code",null,"1+",-1),cg=t("td",{style:{"text-align":"center"}},"🟠",-1),ag={style:{"text-align":"center"}},ig={href:"https://leetcode.cn/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},hg={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},"499",-1),gg=t("td",{style:{"text-align":"left"}},"迷宫 III 🔒",-1),ug=t("td",{style:{"text-align":"center"}},null,-1),mg={style:{"text-align":"left"}},pg=t("code",null,"深度优先搜索",-1),yg=t("code",null,"广度优先搜索",-1),bg=t("code",null,"图",-1),xg=t("code",null,"5+",-1),kg=t("td",{style:{"text-align":"center"}},"🔴",-1),vg={style:{"text-align":"center"}},wg={href:"https://leetcode.cn/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Ig={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},zg=t("td",{style:{"text-align":"center"}},"501",-1),qg=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),jg={style:{"text-align":"center"}},Ng={style:{"text-align":"left"}},Vg=t("code",null,"树",-1),Kg=t("code",null,"深度优先搜索",-1),Lg=t("code",null,"二叉搜索树",-1),Bg=t("code",null,"1+",-1),Cg=t("td",{style:{"text-align":"center"}},"🟢",-1),Eg={style:{"text-align":"center"}},Rg={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Fg={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},"505",-1),Tg=t("td",{style:{"text-align":"left"}},"迷宫 II 🔒",-1),Dg=t("td",{style:{"text-align":"center"}},null,-1),Ag={style:{"text-align":"left"}},Gg=t("code",null,"深度优先搜索",-1),Hg=t("code",null,"广度优先搜索",-1),Jg=t("code",null,"图",-1),Mg=t("code",null,"4+",-1),Og=t("td",{style:{"text-align":"center"}},"🟠",-1),Pg={style:{"text-align":"center"}},Qg={href:"https://leetcode.cn/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Ug={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Wg=t("td",{style:{"text-align":"center"}},"508",-1),Xg=t("td",{style:{"text-align":"left"}},"出现次数最多的子树元素和",-1),Yg=t("td",{style:{"text-align":"center"}},null,-1),Zg={style:{"text-align":"left"}},$g=t("code",null,"树",-1),tu=t("code",null,"深度优先搜索",-1),eu=t("code",null,"哈希表",-1),ou=t("code",null,"1+",-1),lu=t("td",{style:{"text-align":"center"}},"🟠",-1),nu={style:{"text-align":"center"}},su={href:"https://leetcode.cn/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ru={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},"513",-1),_u=t("td",{style:{"text-align":"left"}},"找树左下角的值",-1),cu=t("td",{style:{"text-align":"center"}},null,-1),au={style:{"text-align":"left"}},iu=t("code",null,"树",-1),hu=t("code",null,"深度优先搜索",-1),fu=t("code",null,"广度优先搜索",-1),gu=t("code",null,"1+",-1),uu=t("td",{style:{"text-align":"center"}},"🟠",-1),mu={style:{"text-align":"center"}},pu={href:"https://leetcode.cn/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},yu={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},"514",-1),xu=t("td",{style:{"text-align":"left"}},"自由之路",-1),ku={style:{"text-align":"center"}},vu={style:{"text-align":"left"}},wu=t("code",null,"深度优先搜索",-1),Iu=t("code",null,"广度优先搜索",-1),zu=t("code",null,"字符串",-1),qu=t("code",null,"1+",-1),ju=t("td",{style:{"text-align":"center"}},"🔴",-1),Nu={style:{"text-align":"center"}},Vu={href:"https://leetcode.cn/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Ku={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Lu=t("td",{style:{"text-align":"center"}},"515",-1),Bu=t("td",{style:{"text-align":"left"}},"在每个树行中找最大值",-1),Cu={style:{"text-align":"center"}},Eu={style:{"text-align":"left"}},Ru=t("code",null,"树",-1),Fu=t("code",null,"深度优先搜索",-1),Su=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"1+",-1),Du=t("td",{style:{"text-align":"center"}},"🟠",-1),Au={style:{"text-align":"center"}},Gu={href:"https://leetcode.cn/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Hu={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Ju=t("td",{style:{"text-align":"center"}},"529",-1),Mu=t("td",{style:{"text-align":"left"}},"扫雷游戏",-1),Ou=t("td",{style:{"text-align":"center"}},null,-1),Pu={style:{"text-align":"left"}},Qu=t("code",null,"深度优先搜索",-1),Uu=t("code",null,"广度优先搜索",-1),Wu=t("code",null,"数组",-1),Xu=t("code",null,"1+",-1),Yu=t("td",{style:{"text-align":"center"}},"🟠",-1),Zu={style:{"text-align":"center"}},$u={href:"https://leetcode.cn/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},tm={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},em=t("td",{style:{"text-align":"center"}},"530",-1),om=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),lm={style:{"text-align":"center"}},nm={style:{"text-align":"left"}},sm=t("code",null,"树",-1),rm=t("code",null,"深度优先搜索",-1),dm=t("code",null,"广度优先搜索",-1),_m=t("code",null,"2+",-1),cm=t("td",{style:{"text-align":"center"}},"🟢",-1),am={style:{"text-align":"center"}},im={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},hm={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},fm=t("td",{style:{"text-align":"center"}},"536",-1),gm=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),um=t("td",{style:{"text-align":"center"}},null,-1),mm={style:{"text-align":"left"}},pm=t("code",null,"栈",-1),ym=t("code",null,"树",-1),bm=t("code",null,"深度优先搜索",-1),xm=t("code",null,"2+",-1),km=t("td",{style:{"text-align":"center"}},"🟠",-1),vm={style:{"text-align":"center"}},wm={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Im={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},zm=t("td",{style:{"text-align":"center"}},"538",-1),qm=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),jm=t("td",{style:{"text-align":"center"}},null,-1),Nm={style:{"text-align":"left"}},Vm=t("code",null,"树",-1),Km=t("code",null,"深度优先搜索",-1),Lm=t("code",null,"二叉搜索树",-1),Bm=t("code",null,"1+",-1),Cm=t("td",{style:{"text-align":"center"}},"🟠",-1),Em={style:{"text-align":"center"}},Rm={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Fm={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Sm=t("td",{style:{"text-align":"center"}},"543",-1),Tm=t("td",{style:{"text-align":"left"}},"二叉树的直径",-1),Dm={style:{"text-align":"center"}},Am={style:{"text-align":"left"}},Gm=t("code",null,"树",-1),Hm=t("code",null,"深度优先搜索",-1),Jm=t("code",null,"二叉树",-1),Mm=t("td",{style:{"text-align":"center"}},"🟢",-1),Om={style:{"text-align":"center"}},Pm={href:"https://leetcode.cn/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qm={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Um=t("td",{style:{"text-align":"center"}},"545",-1),Wm=t("td",{style:{"text-align":"left"}},"二叉树的边界 🔒",-1),Xm=t("td",{style:{"text-align":"center"}},null,-1),Ym={style:{"text-align":"left"}},Zm=t("code",null,"树",-1),$m=t("code",null,"深度优先搜索",-1),tp=t("code",null,"二叉树",-1),ep=t("td",{style:{"text-align":"center"}},"🟠",-1),op={style:{"text-align":"center"}},lp={href:"https://leetcode.cn/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},np={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},"547",-1),rp=t("td",{style:{"text-align":"left"}},"省份数量",-1),dp={style:{"text-align":"center"}},_p={style:{"text-align":"left"}},cp=t("code",null,"深度优先搜索",-1),ap=t("code",null,"广度优先搜索",-1),ip=t("code",null,"并查集",-1),hp=t("code",null,"1+",-1),fp=t("td",{style:{"text-align":"center"}},"🟠",-1),gp={style:{"text-align":"center"}},up={href:"https://leetcode.cn/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},mp={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},pp=t("td",{style:{"text-align":"center"}},"549",-1),yp=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 II 🔒",-1),bp=t("td",{style:{"text-align":"center"}},null,-1),xp={style:{"text-align":"left"}},kp=t("code",null,"树",-1),vp=t("code",null,"深度优先搜索",-1),wp=t("code",null,"二叉树",-1),Ip=t("td",{style:{"text-align":"center"}},"🟠",-1),zp={style:{"text-align":"center"}},qp={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},jp={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Np=t("td",{style:{"text-align":"center"}},"559",-1),Vp=t("td",{style:{"text-align":"left"}},"N 叉树的最大深度",-1),Kp={style:{"text-align":"center"}},Lp={style:{"text-align":"left"}},Bp=t("code",null,"树",-1),Cp=t("code",null,"深度优先搜索",-1),Ep=t("code",null,"广度优先搜索",-1),Rp=t("td",{style:{"text-align":"center"}},"🟢",-1),Fp={style:{"text-align":"center"}},Sp={href:"https://leetcode.cn/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Tp={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Dp=t("td",{style:{"text-align":"center"}},"563",-1),Ap=t("td",{style:{"text-align":"left"}},"二叉树的坡度",-1),Gp={style:{"text-align":"center"}},Hp={style:{"text-align":"left"}},Jp=t("code",null,"树",-1),Mp=t("code",null,"深度优先搜索",-1),Op=t("code",null,"二叉树",-1),Pp=t("td",{style:{"text-align":"center"}},"🟢",-1),Qp={style:{"text-align":"center"}},Up={href:"https://leetcode.cn/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Wp={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Xp=t("td",{style:{"text-align":"center"}},"565",-1),Yp=t("td",{style:{"text-align":"left"}},"数组嵌套",-1),Zp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},t2=t("code",null,"深度优先搜索",-1),e2=t("code",null,"数组",-1),o2=t("td",{style:{"text-align":"center"}},"🟠",-1),l2={style:{"text-align":"center"}},n2={href:"https://leetcode.cn/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},s2={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},r2=t("td",{style:{"text-align":"center"}},"572",-1),d2=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),_2={style:{"text-align":"center"}},c2={style:{"text-align":"left"}},a2=t("code",null,"树",-1),i2=t("code",null,"深度优先搜索",-1),h2=t("code",null,"二叉树",-1),f2=t("code",null,"2+",-1),g2=t("td",{style:{"text-align":"center"}},"🟢",-1),u2={style:{"text-align":"center"}},m2={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},p2={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},y2=t("td",{style:{"text-align":"center"}},"582",-1),b2=t("td",{style:{"text-align":"left"}},"杀掉进程 🔒",-1),x2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},v2=t("code",null,"树",-1),w2=t("code",null,"深度优先搜索",-1),I2=t("code",null,"广度优先搜索",-1),z2=t("code",null,"2+",-1),q2=t("td",{style:{"text-align":"center"}},"🟠",-1),j2={style:{"text-align":"center"}},N2={href:"https://leetcode.cn/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},V2={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},"589",-1),L2=t("td",{style:{"text-align":"left"}},"N 叉树的前序遍历",-1),B2={style:{"text-align":"center"}},C2={style:{"text-align":"left"}},E2=t("code",null,"栈",-1),R2=t("code",null,"树",-1),F2=t("code",null,"深度优先搜索",-1),S2=t("td",{style:{"text-align":"center"}},"🟢",-1),T2={style:{"text-align":"center"}},D2={href:"https://leetcode.cn/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},A2={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},"590",-1),H2=t("td",{style:{"text-align":"left"}},"N 叉树的后序遍历",-1),J2={style:{"text-align":"center"}},M2={style:{"text-align":"left"}},O2=t("code",null,"栈",-1),P2=t("code",null,"树",-1),Q2=t("code",null,"深度优先搜索",-1),U2=t("td",{style:{"text-align":"center"}},"🟢",-1),W2={style:{"text-align":"center"}},X2={href:"https://leetcode.cn/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Y2={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Z2=t("td",{style:{"text-align":"center"}},"606",-1),$2=t("td",{style:{"text-align":"left"}},"根据二叉树创建字符串",-1),ty=t("td",{style:{"text-align":"center"}},null,-1),ey={style:{"text-align":"left"}},oy=t("code",null,"树",-1),ly=t("code",null,"深度优先搜索",-1),ny=t("code",null,"字符串",-1),sy=t("code",null,"1+",-1),ry=t("td",{style:{"text-align":"center"}},"🟠",-1),dy={style:{"text-align":"center"}},_y={href:"https://leetcode.cn/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},cy={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},ay=t("td",{style:{"text-align":"center"}},"617",-1),iy=t("td",{style:{"text-align":"left"}},"合并二叉树",-1),hy={style:{"text-align":"center"}},fy={style:{"text-align":"left"}},gy=t("code",null,"树",-1),uy=t("code",null,"深度优先搜索",-1),my=t("code",null,"广度优先搜索",-1),py=t("code",null,"1+",-1),yy=t("td",{style:{"text-align":"center"}},"🟢",-1),by={style:{"text-align":"center"}},xy={href:"https://leetcode.cn/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},ky={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},"623",-1),wy=t("td",{style:{"text-align":"left"}},"在二叉树中增加一行",-1),Iy=t("td",{style:{"text-align":"center"}},null,-1),zy={style:{"text-align":"left"}},qy=t("code",null,"树",-1),jy=t("code",null,"深度优先搜索",-1),Ny=t("code",null,"广度优先搜索",-1),Vy=t("code",null,"1+",-1),Ky=t("td",{style:{"text-align":"center"}},"🟠",-1),Ly={style:{"text-align":"center"}},By={href:"https://leetcode.cn/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Cy={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},"637",-1),Ry=t("td",{style:{"text-align":"left"}},"二叉树的层平均值",-1),Fy={style:{"text-align":"center"}},Sy={style:{"text-align":"left"}},Ty=t("code",null,"树",-1),Dy=t("code",null,"深度优先搜索",-1),Ay=t("code",null,"广度优先搜索",-1),Gy=t("code",null,"1+",-1),Hy=t("td",{style:{"text-align":"center"}},"🟢",-1),Jy={style:{"text-align":"center"}},My={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Oy={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},"642",-1),Qy=t("td",{style:{"text-align":"left"}},"设计搜索自动补全系统 🔒",-1),Uy=t("td",{style:{"text-align":"center"}},null,-1),Wy={style:{"text-align":"left"}},Xy=t("code",null,"深度优先搜索",-1),Yy=t("code",null,"设计",-1),Zy=t("code",null,"字典树",-1),$y=t("code",null,"4+",-1),tb=t("td",{style:{"text-align":"center"}},"🔴",-1),eb={style:{"text-align":"center"}},ob={href:"https://leetcode.cn/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},lb={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},nb=t("td",{style:{"text-align":"center"}},"652",-1),sb=t("td",{style:{"text-align":"left"}},"寻找重复的子树",-1),rb=t("td",{style:{"text-align":"center"}},null,-1),db={style:{"text-align":"left"}},_b=t("code",null,"树",-1),cb=t("code",null,"深度优先搜索",-1),ab=t("code",null,"哈希表",-1),ib=t("code",null,"1+",-1),hb=t("td",{style:{"text-align":"center"}},"🟠",-1),fb={style:{"text-align":"center"}},gb={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},ub={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},mb=t("td",{style:{"text-align":"center"}},"653",-1),pb=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),yb={style:{"text-align":"center"}},bb={style:{"text-align":"left"}},xb=t("code",null,"树",-1),kb=t("code",null,"深度优先搜索",-1),vb=t("code",null,"广度优先搜索",-1),wb=t("code",null,"4+",-1),Ib=t("td",{style:{"text-align":"center"}},"🟢",-1),zb={style:{"text-align":"center"}},qb={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},jb={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Nb=t("td",{style:{"text-align":"center"}},"655",-1),Vb=t("td",{style:{"text-align":"left"}},"输出二叉树",-1),Kb=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Bb=t("code",null,"树",-1),Cb=t("code",null,"深度优先搜索",-1),Eb=t("code",null,"广度优先搜索",-1),Rb=t("code",null,"1+",-1),Fb=t("td",{style:{"text-align":"center"}},"🟠",-1),Sb={style:{"text-align":"center"}},Tb={href:"https://leetcode.cn/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Db={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},"662",-1),Gb=t("td",{style:{"text-align":"left"}},"二叉树最大宽度",-1),Hb={style:{"text-align":"center"}},Jb={style:{"text-align":"left"}},Mb=t("code",null,"树",-1),Ob=t("code",null,"深度优先搜索",-1),Pb=t("code",null,"广度优先搜索",-1),Qb=t("code",null,"1+",-1),Ub=t("td",{style:{"text-align":"center"}},"🟠",-1),Wb={style:{"text-align":"center"}},Xb={href:"https://leetcode.cn/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yb={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zb=t("td",{style:{"text-align":"center"}},"663",-1),$b=t("td",{style:{"text-align":"left"}},"均匀树划分 🔒",-1),t3=t("td",{style:{"text-align":"center"}},null,-1),e3={style:{"text-align":"left"}},o3=t("code",null,"树",-1),l3=t("code",null,"深度优先搜索",-1),n3=t("code",null,"二叉树",-1),s3=t("td",{style:{"text-align":"center"}},"🟠",-1),r3={style:{"text-align":"center"}},d3={href:"https://leetcode.cn/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},_3={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},c3=t("td",{style:{"text-align":"center"}},"666",-1),a3=t("td",{style:{"text-align":"left"}},"路径总和 IV 🔒",-1),i3=t("td",{style:{"text-align":"center"}},null,-1),h3={style:{"text-align":"left"}},f3=t("code",null,"树",-1),g3=t("code",null,"深度优先搜索",-1),u3=t("code",null,"数组",-1),m3=t("code",null,"2+",-1),p3=t("td",{style:{"text-align":"center"}},"🟠",-1),y3={style:{"text-align":"center"}},b3={href:"https://leetcode.cn/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},x3={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},"669",-1),v3=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),w3=t("td",{style:{"text-align":"center"}},null,-1),I3={style:{"text-align":"left"}},z3=t("code",null,"树",-1),q3=t("code",null,"深度优先搜索",-1),j3=t("code",null,"二叉搜索树",-1),N3=t("code",null,"1+",-1),V3=t("td",{style:{"text-align":"center"}},"🟠",-1),K3={style:{"text-align":"center"}},L3={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},B3={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},"671",-1),E3=t("td",{style:{"text-align":"left"}},"二叉树中第二小的节点",-1),R3={style:{"text-align":"center"}},F3={style:{"text-align":"left"}},S3=t("code",null,"树",-1),T3=t("code",null,"深度优先搜索",-1),D3=t("code",null,"二叉树",-1),A3=t("td",{style:{"text-align":"center"}},"🟢",-1),G3={style:{"text-align":"center"}},H3={href:"https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},J3={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},M3=t("td",{style:{"text-align":"center"}},"672",-1),O3=t("td",{style:{"text-align":"left"}},"灯泡开关 Ⅱ",-1),P3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},U3=t("code",null,"位运算",-1),W3=t("code",null,"深度优先搜索",-1),X3=t("code",null,"广度优先搜索",-1),Y3=t("code",null,"1+",-1),Z3=t("td",{style:{"text-align":"center"}},"🟠",-1),$3={style:{"text-align":"center"}},tx={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},ex={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},ox=t("td",{style:{"text-align":"center"}},"676",-1),lx=t("td",{style:{"text-align":"left"}},"实现一个魔法字典",-1),nx=t("td",{style:{"text-align":"center"}},null,-1),sx={style:{"text-align":"left"}},rx=t("code",null,"深度优先搜索",-1),dx=t("code",null,"设计",-1),_x=t("code",null,"字典树",-1),cx=t("code",null,"2+",-1),ax=t("td",{style:{"text-align":"center"}},"🟠",-1),ix={style:{"text-align":"center"}},hx={href:"https://leetcode.cn/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},fx={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},gx=t("td",{style:{"text-align":"center"}},"684",-1),ux=t("td",{style:{"text-align":"left"}},"冗余连接",-1),mx={style:{"text-align":"center"}},px={style:{"text-align":"left"}},yx=t("code",null,"深度优先搜索",-1),bx=t("code",null,"广度优先搜索",-1),xx=t("code",null,"并查集",-1),kx=t("code",null,"1+",-1),vx=t("td",{style:{"text-align":"center"}},"🟠",-1),wx={style:{"text-align":"center"}},Ix={href:"https://leetcode.cn/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},zx={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},qx=t("td",{style:{"text-align":"center"}},"685",-1),jx=t("td",{style:{"text-align":"left"}},"冗余连接 II",-1),Nx=t("td",{style:{"text-align":"center"}},null,-1),Vx={style:{"text-align":"left"}},Kx=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"广度优先搜索",-1),Bx=t("code",null,"并查集",-1),Cx=t("code",null,"1+",-1),Ex=t("td",{style:{"text-align":"center"}},"🔴",-1),Rx={style:{"text-align":"center"}},Fx={href:"https://leetcode.cn/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Sx={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},"687",-1),Dx=t("td",{style:{"text-align":"left"}},"最长同值路径",-1),Ax=t("td",{style:{"text-align":"center"}},null,-1),Gx={style:{"text-align":"left"}},Hx=t("code",null,"树",-1),Jx=t("code",null,"深度优先搜索",-1),Mx=t("code",null,"二叉树",-1),Ox=t("td",{style:{"text-align":"center"}},"🟠",-1),Px={style:{"text-align":"center"}},Qx={href:"https://leetcode.cn/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Ux={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},"690",-1),Xx=t("td",{style:{"text-align":"left"}},"员工的重要性",-1),Yx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},$x=t("code",null,"树",-1),t4=t("code",null,"深度优先搜索",-1),e4=t("code",null,"广度优先搜索",-1),o4=t("code",null,"2+",-1),l4=t("td",{style:{"text-align":"center"}},"🟠",-1),n4={style:{"text-align":"center"}},s4={href:"https://leetcode.cn/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},r4={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},d4=t("td",{style:{"text-align":"center"}},"694",-1),_4=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 🔒",-1),c4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},i4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"广度优先搜索",-1),f4=t("code",null,"并查集",-1),g4=t("code",null,"2+",-1),u4=t("td",{style:{"text-align":"center"}},"🟠",-1),m4={style:{"text-align":"center"}},p4={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},y4={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},b4=t("td",{style:{"text-align":"center"}},"695",-1),x4=t("td",{style:{"text-align":"left"}},"岛屿的最大面积",-1),k4={style:{"text-align":"center"}},v4={style:{"text-align":"left"}},w4=t("code",null,"深度优先搜索",-1),I4=t("code",null,"广度优先搜索",-1),z4=t("code",null,"并查集",-1),q4=t("code",null,"2+",-1),j4=t("td",{style:{"text-align":"center"}},"🟠",-1),N4={style:{"text-align":"center"}},V4={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},K4={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},"711",-1),B4=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 II 🔒",-1),C4=t("td",{style:{"text-align":"center"}},null,-1),E4={style:{"text-align":"left"}},R4=t("code",null,"深度优先搜索",-1),F4=t("code",null,"广度优先搜索",-1),S4=t("code",null,"并查集",-1),T4=t("code",null,"2+",-1),D4=t("td",{style:{"text-align":"center"}},"🔴",-1),A4={style:{"text-align":"center"}},G4={href:"https://leetcode.cn/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},H4={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},J4=t("td",{style:{"text-align":"center"}},"721",-1),M4=t("td",{style:{"text-align":"left"}},"账户合并",-1),O4=t("td",{style:{"text-align":"center"}},null,-1),P4={style:{"text-align":"left"}},Q4=t("code",null,"深度优先搜索",-1),U4=t("code",null,"广度优先搜索",-1),W4=t("code",null,"并查集",-1),X4=t("code",null,"4+",-1),Y4=t("td",{style:{"text-align":"center"}},"🟠",-1),Z4={style:{"text-align":"center"}},$4={href:"https://leetcode.cn/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},t5={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},"733",-1),o5=t("td",{style:{"text-align":"left"}},"图像渲染",-1),l5={style:{"text-align":"center"}},n5={style:{"text-align":"left"}},s5=t("code",null,"深度优先搜索",-1),r5=t("code",null,"广度优先搜索",-1),d5=t("code",null,"数组",-1),_5=t("code",null,"1+",-1),c5=t("td",{style:{"text-align":"center"}},"🟢",-1),a5={style:{"text-align":"center"}},i5={href:"https://leetcode.cn/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},h5={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},f5=t("td",{style:{"text-align":"center"}},"737",-1),g5=t("td",{style:{"text-align":"left"}},"句子相似性 II 🔒",-1),u5=t("td",{style:{"text-align":"center"}},null,-1),m5={style:{"text-align":"left"}},p5=t("code",null,"深度优先搜索",-1),y5=t("code",null,"广度优先搜索",-1),b5=t("code",null,"并查集",-1),x5=t("code",null,"3+",-1),k5=t("td",{style:{"text-align":"center"}},"🟠",-1),v5={style:{"text-align":"center"}},w5={href:"https://leetcode.cn/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},I5={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},z5=t("td",{style:{"text-align":"center"}},"742",-1),q5=t("td",{style:{"text-align":"left"}},"二叉树最近的叶节点 🔒",-1),j5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},V5=t("code",null,"树",-1),K5=t("code",null,"深度优先搜索",-1),L5=t("code",null,"广度优先搜索",-1),B5=t("code",null,"1+",-1),C5=t("td",{style:{"text-align":"center"}},"🟠",-1),E5={style:{"text-align":"center"}},R5={href:"https://leetcode.cn/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},F5={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},S5=t("td",{style:{"text-align":"center"}},"743",-1),T5=t("td",{style:{"text-align":"left"}},"网络延迟时间",-1),D5=t("td",{style:{"text-align":"center"}},null,-1),A5={style:{"text-align":"left"}},G5=t("code",null,"深度优先搜索",-1),H5=t("code",null,"广度优先搜索",-1),J5=t("code",null,"图",-1),M5=t("code",null,"2+",-1),O5=t("td",{style:{"text-align":"center"}},"🟠",-1),P5={style:{"text-align":"center"}},Q5={href:"https://leetcode.cn/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},U5={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},W5=t("td",{style:{"text-align":"center"}},"749",-1),X5=t("td",{style:{"text-align":"left"}},"隔离病毒",-1),Y5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},$5=t("code",null,"深度优先搜索",-1),t0=t("code",null,"广度优先搜索",-1),e0=t("code",null,"数组",-1),o0=t("code",null,"2+",-1),l0=t("td",{style:{"text-align":"center"}},"🔴",-1),n0={style:{"text-align":"center"}},s0={href:"https://leetcode.cn/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},r0={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},d0=t("td",{style:{"text-align":"center"}},"753",-1),_0=t("td",{style:{"text-align":"left"}},"破解保险箱",-1),c0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},i0=t("code",null,"深度优先搜索",-1),h0=t("code",null,"图",-1),f0=t("code",null,"欧拉回路",-1),g0=t("td",{style:{"text-align":"center"}},"🔴",-1),u0={style:{"text-align":"center"}},m0={href:"https://leetcode.cn/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},p0={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},y0=t("td",{style:{"text-align":"center"}},"756",-1),b0=t("td",{style:{"text-align":"left"}},"金字塔转换矩阵",-1),x0=t("td",{style:{"text-align":"center"}},null,-1),k0={style:{"text-align":"left"}},v0=t("code",null,"位运算",-1),w0=t("code",null,"深度优先搜索",-1),I0=t("code",null,"广度优先搜索",-1),z0=t("td",{style:{"text-align":"center"}},"🟠",-1),q0={style:{"text-align":"center"}},j0={href:"https://leetcode.cn/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},N0={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},"765",-1),K0=t("td",{style:{"text-align":"left"}},"情侣牵手",-1),L0=t("td",{style:{"text-align":"center"}},null,-1),B0={style:{"text-align":"left"}},C0=t("code",null,"贪心",-1),E0=t("code",null,"深度优先搜索",-1),R0=t("code",null,"广度优先搜索",-1),F0=t("code",null,"2+",-1),S0=t("td",{style:{"text-align":"center"}},"🔴",-1),T0={style:{"text-align":"center"}},D0={href:"https://leetcode.cn/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},A0={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},"778",-1),H0=t("td",{style:{"text-align":"left"}},"水位上升的泳池中游泳",-1),J0=t("td",{style:{"text-align":"center"}},null,-1),M0={style:{"text-align":"left"}},O0=t("code",null,"深度优先搜索",-1),P0=t("code",null,"广度优先搜索",-1),Q0=t("code",null,"并查集",-1),U0=t("code",null,"4+",-1),W0=t("td",{style:{"text-align":"center"}},"🔴",-1),X0={style:{"text-align":"center"}},Y0={href:"https://leetcode.cn/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},Z0={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},$0=t("td",{style:{"text-align":"center"}},"783",-1),t6=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),e6={style:{"text-align":"center"}},o6={style:{"text-align":"left"}},l6=t("code",null,"树",-1),n6=t("code",null,"深度优先搜索",-1),s6=t("code",null,"广度优先搜索",-1),r6=t("code",null,"2+",-1),d6=t("td",{style:{"text-align":"center"}},"🟢",-1),_6={style:{"text-align":"center"}},c6={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},a6={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},i6=t("td",{style:{"text-align":"center"}},"785",-1),h6=t("td",{style:{"text-align":"left"}},"判断二分图",-1),f6=t("td",{style:{"text-align":"center"}},null,-1),g6={style:{"text-align":"left"}},u6=t("code",null,"深度优先搜索",-1),m6=t("code",null,"广度优先搜索",-1),p6=t("code",null,"并查集",-1),y6=t("code",null,"1+",-1),b6=t("td",{style:{"text-align":"center"}},"🟠",-1),x6={style:{"text-align":"center"}},k6={href:"https://leetcode.cn/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},v6={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},"787",-1),I6=t("td",{style:{"text-align":"left"}},"K 站中转内最便宜的航班",-1),z6=t("td",{style:{"text-align":"center"}},null,-1),q6={style:{"text-align":"left"}},j6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"广度优先搜索",-1),V6=t("code",null,"图",-1),K6=t("code",null,"3+",-1),L6=t("td",{style:{"text-align":"center"}},"🟠",-1),B6={style:{"text-align":"center"}},C6={href:"https://leetcode.cn/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},E6={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},R6=t("td",{style:{"text-align":"center"}},"797",-1),F6=t("td",{style:{"text-align":"left"}},"所有可能的路径",-1),S6=t("td",{style:{"text-align":"center"}},null,-1),T6={style:{"text-align":"left"}},D6=t("code",null,"深度优先搜索",-1),A6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"图",-1),H6=t("code",null,"1+",-1),J6=t("td",{style:{"text-align":"center"}},"🟠",-1),M6={style:{"text-align":"center"}},O6={href:"https://leetcode.cn/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},P6={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Q6=t("td",{style:{"text-align":"center"}},"802",-1),U6=t("td",{style:{"text-align":"left"}},"找到最终的安全状态",-1),W6={style:{"text-align":"center"}},X6={style:{"text-align":"left"}},Y6=t("code",null,"深度优先搜索",-1),Z6=t("code",null,"广度优先搜索",-1),$6=t("code",null,"图",-1),t7=t("code",null,"1+",-1),e7=t("td",{style:{"text-align":"center"}},"🟠",-1),o7={style:{"text-align":"center"}},l7={href:"https://leetcode.cn/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},n7={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},s7=t("td",{style:{"text-align":"center"}},"814",-1),r7=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"树",-1),a7=t("code",null,"深度优先搜索",-1),i7=t("code",null,"二叉树",-1),h7=t("td",{style:{"text-align":"center"}},"🟠",-1),f7={style:{"text-align":"center"}},g7={href:"https://leetcode.cn/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},u7={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},"827",-1),p7=t("td",{style:{"text-align":"left"}},"最大人工岛",-1),y7={style:{"text-align":"center"}},b7={style:{"text-align":"left"}},x7=t("code",null,"深度优先搜索",-1),k7=t("code",null,"广度优先搜索",-1),v7=t("code",null,"并查集",-1),w7=t("code",null,"2+",-1),I7=t("td",{style:{"text-align":"center"}},"🔴",-1),z7={style:{"text-align":"center"}},q7={href:"https://leetcode.cn/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},j7={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},"834",-1),V7=t("td",{style:{"text-align":"left"}},"树中距离之和",-1),K7=t("td",{style:{"text-align":"center"}},null,-1),L7={style:{"text-align":"left"}},B7=t("code",null,"树",-1),C7=t("code",null,"深度优先搜索",-1),E7=t("code",null,"图",-1),R7=t("code",null,"1+",-1),F7=t("td",{style:{"text-align":"center"}},"🔴",-1),S7={style:{"text-align":"center"}},T7={href:"https://leetcode.cn/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},D7={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},A7=t("td",{style:{"text-align":"center"}},"839",-1),G7=t("td",{style:{"text-align":"left"}},"相似字符串组",-1),H7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},M7=t("code",null,"深度优先搜索",-1),O7=t("code",null,"广度优先搜索",-1),P7=t("code",null,"并查集",-1),Q7=t("code",null,"3+",-1),U7=t("td",{style:{"text-align":"center"}},"🔴",-1),W7={style:{"text-align":"center"}},X7={href:"https://leetcode.cn/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},Y7={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},Z7=t("td",{style:{"text-align":"center"}},"841",-1),$7=t("td",{style:{"text-align":"left"}},"钥匙和房间",-1),t9={style:{"text-align":"center"}},e9={style:{"text-align":"left"}},o9=t("code",null,"深度优先搜索",-1),l9=t("code",null,"广度优先搜索",-1),n9=t("code",null,"图",-1),s9=t("td",{style:{"text-align":"center"}},"🟠",-1),r9={style:{"text-align":"center"}},d9={href:"https://leetcode.cn/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},_9={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},"851",-1),a9=t("td",{style:{"text-align":"left"}},"喧闹和富有",-1),i9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},f9=t("code",null,"深度优先搜索",-1),g9=t("code",null,"图",-1),u9=t("code",null,"拓扑排序",-1),m9=t("code",null,"1+",-1),p9=t("td",{style:{"text-align":"center"}},"🟠",-1),y9={style:{"text-align":"center"}},b9={href:"https://leetcode.cn/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},x9={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},"863",-1),v9=t("td",{style:{"text-align":"left"}},"二叉树中所有距离为 K 的结点",-1),w9=t("td",{style:{"text-align":"center"}},null,-1),I9={style:{"text-align":"left"}},z9=t("code",null,"树",-1),q9=t("code",null,"深度优先搜索",-1),j9=t("code",null,"广度优先搜索",-1),N9=t("code",null,"2+",-1),V9=t("td",{style:{"text-align":"center"}},"🟠",-1),K9={style:{"text-align":"center"}},L9={href:"https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},B9={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},"865",-1),E9=t("td",{style:{"text-align":"left"}},"具有所有最深节点的最小子树",-1),R9=t("td",{style:{"text-align":"center"}},null,-1),F9={style:{"text-align":"left"}},S9=t("code",null,"树",-1),T9=t("code",null,"深度优先搜索",-1),D9=t("code",null,"广度优先搜索",-1),A9=t("code",null,"2+",-1),G9=t("td",{style:{"text-align":"center"}},"🟠",-1),H9={style:{"text-align":"center"}},J9={href:"https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},M9={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},O9=t("td",{style:{"text-align":"center"}},"872",-1),P9=t("td",{style:{"text-align":"left"}},"叶子相似的树",-1),Q9={style:{"text-align":"center"}},U9={style:{"text-align":"left"}},W9=t("code",null,"树",-1),X9=t("code",null,"深度优先搜索",-1),Y9=t("code",null,"二叉树",-1),Z9=t("td",{style:{"text-align":"center"}},"🟢",-1),$9={style:{"text-align":"center"}},t8={href:"https://leetcode.cn/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},e8={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},o8=t("td",{style:{"text-align":"center"}},"886",-1),l8=t("td",{style:{"text-align":"left"}},"可能的二分法",-1),n8=t("td",{style:{"text-align":"center"}},null,-1),s8={style:{"text-align":"left"}},r8=t("code",null,"深度优先搜索",-1),d8=t("code",null,"广度优先搜索",-1),_8=t("code",null,"并查集",-1),c8=t("code",null,"1+",-1),a8=t("td",{style:{"text-align":"center"}},"🟠",-1),i8={style:{"text-align":"center"}},h8={href:"https://leetcode.cn/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},f8={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},g8=t("td",{style:{"text-align":"center"}},"897",-1),u8=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),m8={style:{"text-align":"center"}},p8={style:{"text-align":"left"}},y8=t("code",null,"栈",-1),b8=t("code",null,"树",-1),x8=t("code",null,"深度优先搜索",-1),k8=t("code",null,"2+",-1),v8=t("td",{style:{"text-align":"center"}},"🟢",-1),w8={style:{"text-align":"center"}},I8={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},z8={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},q8=t("td",{style:{"text-align":"center"}},"924",-1),j8=t("td",{style:{"text-align":"left"}},"尽量减少恶意软件的传播",-1),N8=t("td",{style:{"text-align":"center"}},null,-1),V8={style:{"text-align":"left"}},K8=t("code",null,"深度优先搜索",-1),L8=t("code",null,"广度优先搜索",-1),B8=t("code",null,"并查集",-1),C8=t("code",null,"3+",-1),E8=t("td",{style:{"text-align":"center"}},"🔴",-1),R8={style:{"text-align":"center"}},F8={href:"https://leetcode.cn/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},S8={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},"928",-1),D8=t("td",{style:{"text-align":"left"}},"尽量减少恶意软件的传播 II",-1),A8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},H8=t("code",null,"深度优先搜索",-1),J8=t("code",null,"广度优先搜索",-1),M8=t("code",null,"并查集",-1),O8=t("code",null,"3+",-1),P8=t("td",{style:{"text-align":"center"}},"🔴",-1),Q8={style:{"text-align":"center"}},U8={href:"https://leetcode.cn/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},W8={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},"934",-1),Y8=t("td",{style:{"text-align":"left"}},"最短的桥",-1),Z8=t("td",{style:{"text-align":"center"}},null,-1),$8={style:{"text-align":"left"}},tk=t("code",null,"深度优先搜索",-1),ek=t("code",null,"广度优先搜索",-1),ok=t("code",null,"数组",-1),lk=t("code",null,"1+",-1),nk=t("td",{style:{"text-align":"center"}},"🟠",-1),sk={style:{"text-align":"center"}},rk={href:"https://leetcode.cn/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},dk={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},"938",-1),ck=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),ak={style:{"text-align":"center"}},ik={style:{"text-align":"left"}},hk=t("code",null,"树",-1),fk=t("code",null,"深度优先搜索",-1),gk=t("code",null,"二叉搜索树",-1),uk=t("code",null,"1+",-1),mk=t("td",{style:{"text-align":"center"}},"🟢",-1),pk={style:{"text-align":"center"}},yk={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},bk={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},xk=t("td",{style:{"text-align":"center"}},"947",-1),kk=t("td",{style:{"text-align":"left"}},"移除最多的同行或同列石头",-1),vk=t("td",{style:{"text-align":"center"}},null,-1),wk={style:{"text-align":"left"}},Ik=t("code",null,"深度优先搜索",-1),zk=t("code",null,"并查集",-1),qk=t("code",null,"图",-1),jk=t("code",null,"1+",-1),Nk=t("td",{style:{"text-align":"center"}},"🟠",-1),Vk={style:{"text-align":"center"}},Kk={href:"https://leetcode.cn/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Lk={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Bk=t("td",{style:{"text-align":"center"}},"951",-1),Ck=t("td",{style:{"text-align":"left"}},"翻转等价二叉树",-1),Ek={style:{"text-align":"center"}},Rk={style:{"text-align":"left"}},Fk=t("code",null,"树",-1),Sk=t("code",null,"深度优先搜索",-1),Tk=t("code",null,"二叉树",-1),Dk=t("td",{style:{"text-align":"center"}},"🟠",-1),Ak={style:{"text-align":"center"}},Gk={href:"https://leetcode.cn/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Hk={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Jk=t("td",{style:{"text-align":"center"}},"959",-1),Mk=t("td",{style:{"text-align":"left"}},"由斜杠划分区域",-1),Ok=t("td",{style:{"text-align":"center"}},null,-1),Pk={style:{"text-align":"left"}},Qk=t("code",null,"深度优先搜索",-1),Uk=t("code",null,"广度优先搜索",-1),Wk=t("code",null,"并查集",-1),Xk=t("code",null,"3+",-1),Yk=t("td",{style:{"text-align":"center"}},"🟠",-1),Zk={style:{"text-align":"center"}},$k={href:"https://leetcode.cn/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},tv={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},ev=t("td",{style:{"text-align":"center"}},"965",-1),ov=t("td",{style:{"text-align":"left"}},"单值二叉树",-1),lv={style:{"text-align":"center"}},nv={style:{"text-align":"left"}},sv=t("code",null,"树",-1),rv=t("code",null,"深度优先搜索",-1),dv=t("code",null,"广度优先搜索",-1),_v=t("code",null,"1+",-1),cv=t("td",{style:{"text-align":"center"}},"🟢",-1),av={style:{"text-align":"center"}},iv={href:"https://leetcode.cn/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},hv={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},fv=t("td",{style:{"text-align":"center"}},"968",-1),gv=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),uv=t("td",{style:{"text-align":"center"}},null,-1),mv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),yv=t("code",null,"深度优先搜索",-1),bv=t("code",null,"动态规划",-1),xv=t("code",null,"1+",-1),kv=t("td",{style:{"text-align":"center"}},"🔴",-1),vv={style:{"text-align":"center"}},wv={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Iv={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},zv=t("td",{style:{"text-align":"center"}},"971",-1),qv=t("td",{style:{"text-align":"left"}},"翻转二叉树以匹配先序遍历",-1),jv=t("td",{style:{"text-align":"center"}},null,-1),Nv={style:{"text-align":"left"}},Vv=t("code",null,"树",-1),Kv=t("code",null,"深度优先搜索",-1),Lv=t("code",null,"二叉树",-1),Bv=t("td",{style:{"text-align":"center"}},"🟠",-1),Cv={style:{"text-align":"center"}},Ev={href:"https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Rv={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Fv=t("td",{style:{"text-align":"center"}},"979",-1),Sv=t("td",{style:{"text-align":"left"}},"在二叉树中分配硬币",-1),Tv=t("td",{style:{"text-align":"center"}},null,-1),Dv={style:{"text-align":"left"}},Av=t("code",null,"树",-1),Gv=t("code",null,"深度优先搜索",-1),Hv=t("code",null,"二叉树",-1),Jv=t("td",{style:{"text-align":"center"}},"🟠",-1),Mv={style:{"text-align":"center"}},Ov={href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pv={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},"987",-1),Uv=t("td",{style:{"text-align":"left"}},"二叉树的垂序遍历",-1),Wv=t("td",{style:{"text-align":"center"}},null,-1),Xv={style:{"text-align":"left"}},Yv=t("code",null,"树",-1),Zv=t("code",null,"深度优先搜索",-1),$v=t("code",null,"广度优先搜索",-1),tw=t("code",null,"3+",-1),ew=t("td",{style:{"text-align":"center"}},"🔴",-1),ow={style:{"text-align":"center"}},lw={href:"https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},nw={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sw=t("td",{style:{"text-align":"center"}},"988",-1),rw=t("td",{style:{"text-align":"left"}},"从叶结点开始的最小字符串",-1),dw=t("td",{style:{"text-align":"center"}},null,-1),_w={style:{"text-align":"left"}},cw=t("code",null,"树",-1),aw=t("code",null,"深度优先搜索",-1),iw=t("code",null,"字符串",-1),hw=t("code",null,"2+",-1),fw=t("td",{style:{"text-align":"center"}},"🟠",-1),gw={style:{"text-align":"center"}},uw={href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},mw={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},pw=t("td",{style:{"text-align":"center"}},"993",-1),yw=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点",-1),bw={style:{"text-align":"center"}},xw={style:{"text-align":"left"}},kw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),ww=t("code",null,"广度优先搜索",-1),Iw=t("code",null,"1+",-1),zw=t("td",{style:{"text-align":"center"}},"🟢",-1),qw={style:{"text-align":"center"}},jw={href:"https://leetcode.cn/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nw={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vw=t("td",{style:{"text-align":"center"}},"1020",-1),Kw=t("td",{style:{"text-align":"left"}},"飞地的数量",-1),Lw=t("td",{style:{"text-align":"center"}},null,-1),Bw={style:{"text-align":"left"}},Cw=t("code",null,"深度优先搜索",-1),Ew=t("code",null,"广度优先搜索",-1),Rw=t("code",null,"并查集",-1),Fw=t("code",null,"2+",-1),Sw=t("td",{style:{"text-align":"center"}},"🟠",-1),Tw={style:{"text-align":"center"}},Dw={href:"https://leetcode.cn/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Aw={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},"1022",-1),Hw=t("td",{style:{"text-align":"left"}},"从根到叶的二进制数之和",-1),Jw={style:{"text-align":"center"}},Mw={style:{"text-align":"left"}},Ow=t("code",null,"树",-1),Pw=t("code",null,"深度优先搜索",-1),Qw=t("code",null,"二叉树",-1),Uw=t("td",{style:{"text-align":"center"}},"🟢",-1),Ww={style:{"text-align":"center"}},Xw={href:"https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Yw={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Zw=t("td",{style:{"text-align":"center"}},"1026",-1),$w=t("td",{style:{"text-align":"left"}},"节点与其祖先之间的最大差值",-1),tI=t("td",{style:{"text-align":"center"}},null,-1),eI={style:{"text-align":"left"}},oI=t("code",null,"树",-1),lI=t("code",null,"深度优先搜索",-1),nI=t("code",null,"二叉树",-1),sI=t("td",{style:{"text-align":"center"}},"🟠",-1),rI={style:{"text-align":"center"}},dI={href:"https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},_I={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},cI=t("td",{style:{"text-align":"center"}},"1028",-1),aI=t("td",{style:{"text-align":"left"}},"从先序遍历还原二叉树",-1),iI={style:{"text-align":"center"}},hI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),uI=t("code",null,"字符串",-1),mI=t("code",null,"1+",-1),pI=t("td",{style:{"text-align":"center"}},"🔴",-1),yI={style:{"text-align":"center"}},bI={href:"https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},xI={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},kI=t("td",{style:{"text-align":"center"}},"1034",-1),vI=t("td",{style:{"text-align":"left"}},"边界着色",-1),wI=t("td",{style:{"text-align":"center"}},null,-1),II={style:{"text-align":"left"}},zI=t("code",null,"深度优先搜索",-1),qI=t("code",null,"广度优先搜索",-1),jI=t("code",null,"数组",-1),NI=t("code",null,"1+",-1),VI=t("td",{style:{"text-align":"center"}},"🟠",-1),KI={style:{"text-align":"center"}},LI={href:"https://leetcode.cn/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},BI={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},CI=t("td",{style:{"text-align":"center"}},"1036",-1),EI=t("td",{style:{"text-align":"left"}},"逃离大迷宫",-1),RI=t("td",{style:{"text-align":"center"}},null,-1),FI={style:{"text-align":"left"}},SI=t("code",null,"深度优先搜索",-1),TI=t("code",null,"广度优先搜索",-1),DI=t("code",null,"数组",-1),AI=t("code",null,"1+",-1),GI=t("td",{style:{"text-align":"center"}},"🔴",-1),HI={style:{"text-align":"center"}},JI={href:"https://leetcode.cn/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},MI={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},OI=t("td",{style:{"text-align":"center"}},"1038",-1),PI=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),QI=t("td",{style:{"text-align":"center"}},null,-1),UI={style:{"text-align":"left"}},WI=t("code",null,"树",-1),XI=t("code",null,"深度优先搜索",-1),YI=t("code",null,"二叉搜索树",-1),ZI=t("code",null,"1+",-1),$I=t("td",{style:{"text-align":"center"}},"🟠",-1),tz={style:{"text-align":"center"}},ez={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},oz={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},lz=t("td",{style:{"text-align":"center"}},"1042",-1),nz=t("td",{style:{"text-align":"left"}},"不邻接植花",-1),sz=t("td",{style:{"text-align":"center"}},null,-1),rz={style:{"text-align":"left"}},dz=t("code",null,"深度优先搜索",-1),_z=t("code",null,"广度优先搜索",-1),cz=t("code",null,"图",-1),az=t("td",{style:{"text-align":"center"}},"🟠",-1),iz={style:{"text-align":"center"}},hz={href:"https://leetcode.cn/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},fz={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},"1080",-1),uz=t("td",{style:{"text-align":"left"}},"根到叶路径上的不足节点",-1),mz=t("td",{style:{"text-align":"center"}},null,-1),pz={style:{"text-align":"left"}},yz=t("code",null,"树",-1),bz=t("code",null,"深度优先搜索",-1),xz=t("code",null,"二叉树",-1),kz=t("td",{style:{"text-align":"center"}},"🟠",-1),vz={style:{"text-align":"center"}},wz={href:"https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Iz={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},zz=t("td",{style:{"text-align":"center"}},"1102",-1),qz=t("td",{style:{"text-align":"left"}},"得分最高的路径 🔒",-1),jz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Vz=t("code",null,"深度优先搜索",-1),Kz=t("code",null,"广度优先搜索",-1),Lz=t("code",null,"并查集",-1),Bz=t("code",null,"4+",-1),Cz=t("td",{style:{"text-align":"center"}},"🟠",-1),Ez={style:{"text-align":"center"}},Rz={href:"https://leetcode.cn/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Fz={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Sz=t("td",{style:{"text-align":"center"}},"1110",-1),Tz=t("td",{style:{"text-align":"left"}},"删点成林",-1),Dz=t("td",{style:{"text-align":"center"}},null,-1),Az={style:{"text-align":"left"}},Gz=t("code",null,"树",-1),Hz=t("code",null,"深度优先搜索",-1),Jz=t("code",null,"数组",-1),Mz=t("code",null,"2+",-1),Oz=t("td",{style:{"text-align":"center"}},"🟠",-1),Pz={style:{"text-align":"center"}},Qz={href:"https://leetcode.cn/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Uz={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Wz=t("td",{style:{"text-align":"center"}},"1120",-1),Xz=t("td",{style:{"text-align":"left"}},"子树的最大平均值 🔒",-1),Yz=t("td",{style:{"text-align":"center"}},null,-1),Zz={style:{"text-align":"left"}},$z=t("code",null,"树",-1),tq=t("code",null,"深度优先搜索",-1),eq=t("code",null,"二叉树",-1),oq=t("td",{style:{"text-align":"center"}},"🟠",-1),lq={style:{"text-align":"center"}},nq={href:"https://leetcode.cn/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},sq={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},rq=t("td",{style:{"text-align":"center"}},"1123",-1),dq=t("td",{style:{"text-align":"left"}},"最深叶节点的最近公共祖先",-1),_q=t("td",{style:{"text-align":"center"}},null,-1),cq={style:{"text-align":"left"}},aq=t("code",null,"树",-1),iq=t("code",null,"深度优先搜索",-1),hq=t("code",null,"广度优先搜索",-1),fq=t("code",null,"2+",-1),gq=t("td",{style:{"text-align":"center"}},"🟠",-1),uq={style:{"text-align":"center"}},mq={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},pq={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},yq=t("td",{style:{"text-align":"center"}},"1145",-1),bq=t("td",{style:{"text-align":"left"}},"二叉树着色游戏",-1),xq=t("td",{style:{"text-align":"center"}},null,-1),kq={style:{"text-align":"left"}},vq=t("code",null,"树",-1),wq=t("code",null,"深度优先搜索",-1),Iq=t("code",null,"二叉树",-1),zq=t("td",{style:{"text-align":"center"}},"🟠",-1),qq={style:{"text-align":"center"}},jq={href:"https://leetcode.cn/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Nq={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Vq=t("td",{style:{"text-align":"center"}},"1161",-1),Kq=t("td",{style:{"text-align":"left"}},"最大层内元素和",-1),Lq={style:{"text-align":"center"}},Bq={style:{"text-align":"left"}},Cq=t("code",null,"树",-1),Eq=t("code",null,"深度优先搜索",-1),Rq=t("code",null,"广度优先搜索",-1),Fq=t("code",null,"1+",-1),Sq=t("td",{style:{"text-align":"center"}},"🟠",-1),Tq={style:{"text-align":"center"}},Dq={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Aq={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},"1192",-1),Hq=t("td",{style:{"text-align":"left"}},"查找集群内的关键连接",-1),Jq=t("td",{style:{"text-align":"center"}},null,-1),Mq={style:{"text-align":"left"}},Oq=t("code",null,"深度优先搜索",-1),Pq=t("code",null,"图",-1),Qq=t("code",null,"双连通分量",-1),Uq=t("td",{style:{"text-align":"center"}},"🔴",-1),Wq={style:{"text-align":"center"}},Xq={href:"https://leetcode.cn/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},Yq={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},Zq=t("td",{style:{"text-align":"center"}},"1202",-1),$q=t("td",{style:{"text-align":"left"}},"交换字符串中的元素",-1),tj=t("td",{style:{"text-align":"center"}},null,-1),ej={style:{"text-align":"left"}},oj=t("code",null,"深度优先搜索",-1),lj=t("code",null,"广度优先搜索",-1),nj=t("code",null,"并查集",-1),sj=t("code",null,"4+",-1),rj=t("td",{style:{"text-align":"center"}},"🟠",-1),dj={style:{"text-align":"center"}},_j={href:"https://leetcode.cn/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},cj={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},aj=t("td",{style:{"text-align":"center"}},"1203",-1),ij=t("td",{style:{"text-align":"left"}},"项目管理",-1),hj=t("td",{style:{"text-align":"center"}},null,-1),fj={style:{"text-align":"left"}},gj=t("code",null,"深度优先搜索",-1),uj=t("code",null,"广度优先搜索",-1),mj=t("code",null,"图",-1),pj=t("code",null,"1+",-1),yj=t("td",{style:{"text-align":"center"}},"🔴",-1),bj={style:{"text-align":"center"}},xj={href:"https://leetcode.cn/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},kj={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},vj=t("td",{style:{"text-align":"center"}},"1214",-1),wj=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),Ij=t("td",{style:{"text-align":"center"}},null,-1),zj={style:{"text-align":"left"}},qj=t("code",null,"栈",-1),jj=t("code",null,"树",-1),Nj=t("code",null,"深度优先搜索",-1),Vj=t("code",null,"4+",-1),Kj=t("td",{style:{"text-align":"center"}},"🟠",-1),Lj={style:{"text-align":"center"}},Bj={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Cj={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},"1233",-1),Rj=t("td",{style:{"text-align":"left"}},"删除子文件夹",-1),Fj={style:{"text-align":"center"}},Sj={style:{"text-align":"left"}},Tj=t("code",null,"深度优先搜索",-1),Dj=t("code",null,"字典树",-1),Aj=t("code",null,"数组",-1),Gj=t("code",null,"1+",-1),Hj=t("td",{style:{"text-align":"center"}},"🟠",-1),Jj={style:{"text-align":"center"}},Mj={href:"https://leetcode.cn/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},Oj={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},Pj=t("td",{style:{"text-align":"center"}},"1236",-1),Qj=t("td",{style:{"text-align":"left"}},"网络爬虫 🔒",-1),Uj=t("td",{style:{"text-align":"center"}},null,-1),Wj={style:{"text-align":"left"}},Xj=t("code",null,"深度优先搜索",-1),Yj=t("code",null,"广度优先搜索",-1),Zj=t("code",null,"字符串",-1),$j=t("code",null,"1+",-1),tN=t("td",{style:{"text-align":"center"}},"🟠",-1),eN={style:{"text-align":"center"}},oN={href:"https://leetcode.cn/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},lN={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},nN=t("td",{style:{"text-align":"center"}},"1242",-1),sN=t("td",{style:{"text-align":"left"}},"多线程网页爬虫 🔒",-1),rN=t("td",{style:{"text-align":"center"}},null,-1),dN={style:{"text-align":"left"}},_N=t("code",null,"深度优先搜索",-1),cN=t("code",null,"广度优先搜索",-1),aN=t("code",null,"多线程",-1),iN=t("td",{style:{"text-align":"center"}},"🟠",-1),hN={style:{"text-align":"center"}},fN={href:"https://leetcode.cn/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},gN={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},uN=t("td",{style:{"text-align":"center"}},"1245",-1),mN=t("td",{style:{"text-align":"left"}},"树的直径 🔒",-1),pN=t("td",{style:{"text-align":"center"}},null,-1),yN={style:{"text-align":"left"}},bN=t("code",null,"树",-1),xN=t("code",null,"深度优先搜索",-1),kN=t("code",null,"广度优先搜索",-1),vN=t("code",null,"2+",-1),wN=t("td",{style:{"text-align":"center"}},"🟠",-1),IN={style:{"text-align":"center"}},zN={href:"https://leetcode.cn/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},qN={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},jN=t("td",{style:{"text-align":"center"}},"1254",-1),NN=t("td",{style:{"text-align":"left"}},"统计封闭岛屿的数目",-1),VN=t("td",{style:{"text-align":"center"}},null,-1),KN={style:{"text-align":"left"}},LN=t("code",null,"深度优先搜索",-1),BN=t("code",null,"广度优先搜索",-1),CN=t("code",null,"并查集",-1),EN=t("code",null,"2+",-1),RN=t("td",{style:{"text-align":"center"}},"🟠",-1),FN={style:{"text-align":"center"}},SN={href:"https://leetcode.cn/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},TN={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},DN=t("td",{style:{"text-align":"center"}},"1257",-1),AN=t("td",{style:{"text-align":"left"}},"最小公共区域 🔒",-1),GN=t("td",{style:{"text-align":"center"}},null,-1),HN={style:{"text-align":"left"}},JN=t("code",null,"树",-1),MN=t("code",null,"深度优先搜索",-1),ON=t("code",null,"广度优先搜索",-1),PN=t("code",null,"3+",-1),QN=t("td",{style:{"text-align":"center"}},"🟠",-1),UN={style:{"text-align":"center"}},WN={href:"https://leetcode.cn/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},XN={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},YN=t("td",{style:{"text-align":"center"}},"1261",-1),ZN=t("td",{style:{"text-align":"left"}},"在受污染的二叉树中查找元素",-1),$N={style:{"text-align":"center"}},tV={style:{"text-align":"left"}},eV=t("code",null,"树",-1),oV=t("code",null,"深度优先搜索",-1),lV=t("code",null,"广度优先搜索",-1),nV=t("code",null,"3+",-1),sV=t("td",{style:{"text-align":"center"}},"🟠",-1),rV={style:{"text-align":"center"}},dV={href:"https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},_V={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},cV=t("td",{style:{"text-align":"center"}},"1267",-1),aV=t("td",{style:{"text-align":"left"}},"统计参与通信的服务器",-1),iV={style:{"text-align":"center"}},hV={style:{"text-align":"left"}},fV=t("code",null,"深度优先搜索",-1),gV=t("code",null,"广度优先搜索",-1),uV=t("code",null,"并查集",-1),mV=t("code",null,"3+",-1),pV=t("td",{style:{"text-align":"center"}},"🟠",-1),yV={style:{"text-align":"center"}},bV={href:"https://leetcode.cn/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},xV={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},kV=t("td",{style:{"text-align":"center"}},"1273",-1),vV=t("td",{style:{"text-align":"left"}},"删除树节点 🔒",-1),wV=t("td",{style:{"text-align":"center"}},null,-1),IV={style:{"text-align":"left"}},zV=t("code",null,"树",-1),qV=t("code",null,"深度优先搜索",-1),jV=t("code",null,"广度优先搜索",-1),NV=t("code",null,"1+",-1),VV=t("td",{style:{"text-align":"center"}},"🟠",-1),KV={style:{"text-align":"center"}},LV={href:"https://leetcode.cn/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},BV={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},"1302",-1),EV=t("td",{style:{"text-align":"left"}},"层数最深叶子节点的和",-1),RV=t("td",{style:{"text-align":"center"}},null,-1),FV={style:{"text-align":"left"}},SV=t("code",null,"树",-1),TV=t("code",null,"深度优先搜索",-1),DV=t("code",null,"广度优先搜索",-1),AV=t("code",null,"1+",-1),GV=t("td",{style:{"text-align":"center"}},"🟠",-1),HV={style:{"text-align":"center"}},JV={href:"https://leetcode.cn/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},MV={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},OV=t("td",{style:{"text-align":"center"}},"1305",-1),PV=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),QV=t("td",{style:{"text-align":"center"}},null,-1),UV={style:{"text-align":"left"}},WV=t("code",null,"树",-1),XV=t("code",null,"深度优先搜索",-1),YV=t("code",null,"二叉搜索树",-1),ZV=t("code",null,"2+",-1),$V=t("td",{style:{"text-align":"center"}},"🟠",-1),tK={style:{"text-align":"center"}},eK={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},oK={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},lK=t("td",{style:{"text-align":"center"}},"1306",-1),nK=t("td",{style:{"text-align":"left"}},"跳跃游戏 III",-1),sK=t("td",{style:{"text-align":"center"}},null,-1),rK={style:{"text-align":"left"}},dK=t("code",null,"深度优先搜索",-1),_K=t("code",null,"广度优先搜索",-1),cK=t("code",null,"数组",-1),aK=t("td",{style:{"text-align":"center"}},"🟠",-1),iK={style:{"text-align":"center"}},hK={href:"https://leetcode.cn/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},fK={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},gK=t("td",{style:{"text-align":"center"}},"1315",-1),uK=t("td",{style:{"text-align":"left"}},"祖父节点值为偶数的节点和",-1),mK=t("td",{style:{"text-align":"center"}},null,-1),pK={style:{"text-align":"left"}},yK=t("code",null,"树",-1),bK=t("code",null,"深度优先搜索",-1),xK=t("code",null,"广度优先搜索",-1),kK=t("code",null,"1+",-1),vK=t("td",{style:{"text-align":"center"}},"🟠",-1),wK={style:{"text-align":"center"}},IK={href:"https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},zK={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},qK=t("td",{style:{"text-align":"center"}},"1319",-1),jK=t("td",{style:{"text-align":"left"}},"连通网络的操作次数",-1),NK=t("td",{style:{"text-align":"center"}},null,-1),VK={style:{"text-align":"left"}},KK=t("code",null,"深度优先搜索",-1),LK=t("code",null,"广度优先搜索",-1),BK=t("code",null,"并查集",-1),CK=t("code",null,"1+",-1),EK=t("td",{style:{"text-align":"center"}},"🟠",-1),RK={style:{"text-align":"center"}},FK={href:"https://leetcode.cn/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},SK={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},TK=t("td",{style:{"text-align":"center"}},"1325",-1),DK=t("td",{style:{"text-align":"left"}},"删除给定值的叶子节点",-1),AK=t("td",{style:{"text-align":"center"}},null,-1),GK={style:{"text-align":"left"}},HK=t("code",null,"树",-1),JK=t("code",null,"深度优先搜索",-1),MK=t("code",null,"二叉树",-1),OK=t("td",{style:{"text-align":"center"}},"🟠",-1),PK={style:{"text-align":"center"}},QK={href:"https://leetcode.cn/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},UK={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},"1339",-1),XK=t("td",{style:{"text-align":"left"}},"分裂二叉树的最大乘积",-1),YK=t("td",{style:{"text-align":"center"}},null,-1),ZK={style:{"text-align":"left"}},$K=t("code",null,"树",-1),tL=t("code",null,"深度优先搜索",-1),eL=t("code",null,"二叉树",-1),oL=t("td",{style:{"text-align":"center"}},"🟠",-1),lL={style:{"text-align":"center"}},nL={href:"https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},sL={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},"1361",-1),dL=t("td",{style:{"text-align":"left"}},"验证二叉树",-1),_L=t("td",{style:{"text-align":"center"}},null,-1),cL={style:{"text-align":"left"}},aL=t("code",null,"树",-1),iL=t("code",null,"深度优先搜索",-1),hL=t("code",null,"广度优先搜索",-1),fL=t("code",null,"3+",-1),gL=t("td",{style:{"text-align":"center"}},"🟠",-1),uL={style:{"text-align":"center"}},mL={href:"https://leetcode.cn/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},pL={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},yL=t("td",{style:{"text-align":"center"}},"1367",-1),bL=t("td",{style:{"text-align":"left"}},"二叉树中的链表",-1),xL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},vL=t("code",null,"树",-1),wL=t("code",null,"深度优先搜索",-1),IL=t("code",null,"链表",-1),zL=t("code",null,"1+",-1),qL=t("td",{style:{"text-align":"center"}},"🟠",-1),jL={style:{"text-align":"center"}},NL={href:"https://leetcode.cn/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},VL={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},KL=t("td",{style:{"text-align":"center"}},"1372",-1),LL=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),BL={style:{"text-align":"center"}},CL={style:{"text-align":"left"}},EL=t("code",null,"树",-1),RL=t("code",null,"深度优先搜索",-1),FL=t("code",null,"动态规划",-1),SL=t("code",null,"1+",-1),TL=t("td",{style:{"text-align":"center"}},"🟠",-1),DL={style:{"text-align":"center"}},AL={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},GL={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},HL=t("td",{style:{"text-align":"center"}},"1373",-1),JL=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),ML=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},PL=t("code",null,"树",-1),QL=t("code",null,"深度优先搜索",-1),UL=t("code",null,"二叉搜索树",-1),WL=t("code",null,"2+",-1),XL=t("td",{style:{"text-align":"center"}},"🔴",-1),YL={style:{"text-align":"center"}},ZL={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$L={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},tB=t("td",{style:{"text-align":"center"}},"1376",-1),eB=t("td",{style:{"text-align":"left"}},"通知所有员工所需的时间",-1),oB=t("td",{style:{"text-align":"center"}},null,-1),lB={style:{"text-align":"left"}},nB=t("code",null,"树",-1),sB=t("code",null,"深度优先搜索",-1),rB=t("code",null,"广度优先搜索",-1),dB=t("td",{style:{"text-align":"center"}},"🟠",-1),_B={style:{"text-align":"center"}},cB={href:"https://leetcode.cn/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},aB={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},"1377",-1),hB=t("td",{style:{"text-align":"left"}},"T 秒后青蛙的位置",-1),fB=t("td",{style:{"text-align":"center"}},null,-1),gB={style:{"text-align":"left"}},uB=t("code",null,"树",-1),mB=t("code",null,"深度优先搜索",-1),pB=t("code",null,"广度优先搜索",-1),yB=t("code",null,"1+",-1),bB=t("td",{style:{"text-align":"center"}},"🔴",-1),xB={style:{"text-align":"center"}},kB={href:"https://leetcode.cn/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},vB={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},wB=t("td",{style:{"text-align":"center"}},"1379",-1),IB=t("td",{style:{"text-align":"left"}},"找出克隆二叉树中的相同节点",-1),zB={style:{"text-align":"center"}},qB={style:{"text-align":"left"}},jB=t("code",null,"树",-1),NB=t("code",null,"深度优先搜索",-1),VB=t("code",null,"广度优先搜索",-1),KB=t("code",null,"1+",-1),LB=t("td",{style:{"text-align":"center"}},"🟢",-1),BB={style:{"text-align":"center"}},CB={href:"https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},EB={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},RB=t("td",{style:{"text-align":"center"}},"1382",-1),FB=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),SB=t("td",{style:{"text-align":"center"}},null,-1),TB={style:{"text-align":"left"}},DB=t("code",null,"贪心",-1),AB=t("code",null,"树",-1),GB=t("code",null,"深度优先搜索",-1),HB=t("code",null,"3+",-1),JB=t("td",{style:{"text-align":"center"}},"🟠",-1),MB={style:{"text-align":"center"}},OB={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},PB={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},QB=t("td",{style:{"text-align":"center"}},"1391",-1),UB=t("td",{style:{"text-align":"left"}},"检查网格中是否存在有效路径",-1),WB=t("td",{style:{"text-align":"center"}},null,-1),XB={style:{"text-align":"left"}},YB=t("code",null,"深度优先搜索",-1),ZB=t("code",null,"广度优先搜索",-1),$B=t("code",null,"并查集",-1),tC=t("code",null,"2+",-1),eC=t("td",{style:{"text-align":"center"}},"🟠",-1),oC={style:{"text-align":"center"}},lC={href:"https://leetcode.cn/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},nC={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},sC=t("td",{style:{"text-align":"center"}},"1430",-1),rC=t("td",{style:{"text-align":"left"}},"判断给定的序列是否是二叉树从根到叶的路径 🔒",-1),dC=t("td",{style:{"text-align":"center"}},null,-1),_C={style:{"text-align":"left"}},cC=t("code",null,"树",-1),aC=t("code",null,"深度优先搜索",-1),iC=t("code",null,"广度优先搜索",-1),hC=t("code",null,"1+",-1),fC=t("td",{style:{"text-align":"center"}},"🟠",-1),gC={style:{"text-align":"center"}},uC={href:"https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},mC={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},pC=t("td",{style:{"text-align":"center"}},"1443",-1),yC=t("td",{style:{"text-align":"left"}},"收集树上所有苹果的最少时间",-1),bC=t("td",{style:{"text-align":"center"}},null,-1),xC={style:{"text-align":"left"}},kC=t("code",null,"树",-1),vC=t("code",null,"深度优先搜索",-1),wC=t("code",null,"广度优先搜索",-1),IC=t("code",null,"1+",-1),zC=t("td",{style:{"text-align":"center"}},"🟠",-1),qC={style:{"text-align":"center"}},jC={href:"https://leetcode.cn/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},NC={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},VC=t("td",{style:{"text-align":"center"}},"1448",-1),KC=t("td",{style:{"text-align":"left"}},"统计二叉树中好节点的数目",-1),LC={style:{"text-align":"center"}},BC={style:{"text-align":"left"}},CC=t("code",null,"树",-1),EC=t("code",null,"深度优先搜索",-1),RC=t("code",null,"广度优先搜索",-1),FC=t("code",null,"1+",-1),SC=t("td",{style:{"text-align":"center"}},"🟠",-1),TC={style:{"text-align":"center"}},DC={href:"https://leetcode.cn/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},AC={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},GC=t("td",{style:{"text-align":"center"}},"1457",-1),HC=t("td",{style:{"text-align":"left"}},"二叉树中的伪回文路径",-1),JC=t("td",{style:{"text-align":"center"}},null,-1),MC={style:{"text-align":"left"}},OC=t("code",null,"位运算",-1),PC=t("code",null,"树",-1),QC=t("code",null,"深度优先搜索",-1),UC=t("code",null,"2+",-1),WC=t("td",{style:{"text-align":"center"}},"🟠",-1),XC={style:{"text-align":"center"}},YC={href:"https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZC={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},$C=t("td",{style:{"text-align":"center"}},"1462",-1),tE=t("td",{style:{"text-align":"left"}},"课程表 IV",-1),eE={style:{"text-align":"center"}},oE={style:{"text-align":"left"}},lE=t("code",null,"深度优先搜索",-1),nE=t("code",null,"广度优先搜索",-1),sE=t("code",null,"图",-1),rE=t("code",null,"1+",-1),dE=t("td",{style:{"text-align":"center"}},"🟠",-1),_E={style:{"text-align":"center"}},cE={href:"https://leetcode.cn/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},aE={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},iE=t("td",{style:{"text-align":"center"}},"1466",-1),hE=t("td",{style:{"text-align":"left"}},"重新规划路线",-1),fE={style:{"text-align":"center"}},gE={style:{"text-align":"left"}},uE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"广度优先搜索",-1),pE=t("code",null,"图",-1),yE=t("td",{style:{"text-align":"center"}},"🟠",-1),bE={style:{"text-align":"center"}},xE={href:"https://leetcode.cn/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},kE={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},vE=t("td",{style:{"text-align":"center"}},"1469",-1),wE=t("td",{style:{"text-align":"left"}},"寻找所有的独生节点 🔒",-1),IE=t("td",{style:{"text-align":"center"}},null,-1),zE={style:{"text-align":"left"}},qE=t("code",null,"树",-1),jE=t("code",null,"深度优先搜索",-1),NE=t("code",null,"广度优先搜索",-1),VE=t("code",null,"1+",-1),KE=t("td",{style:{"text-align":"center"}},"🟢",-1),LE={style:{"text-align":"center"}},BE={href:"https://leetcode.cn/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},CE={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},EE=t("td",{style:{"text-align":"center"}},"1483",-1),RE=t("td",{style:{"text-align":"left"}},"树节点的第 K 个祖先",-1),FE=t("td",{style:{"text-align":"center"}},null,-1),SE={style:{"text-align":"left"}},TE=t("code",null,"树",-1),DE=t("code",null,"深度优先搜索",-1),AE=t("code",null,"广度优先搜索",-1),GE=t("code",null,"3+",-1),HE=t("td",{style:{"text-align":"center"}},"🔴",-1),JE={style:{"text-align":"center"}},ME={href:"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},OE={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},PE=t("td",{style:{"text-align":"center"}},"1485",-1),QE=t("td",{style:{"text-align":"left"}},"克隆含随机指针的二叉树 🔒",-1),UE=t("td",{style:{"text-align":"center"}},null,-1),WE={style:{"text-align":"left"}},XE=t("code",null,"树",-1),YE=t("code",null,"深度优先搜索",-1),ZE=t("code",null,"广度优先搜索",-1),$E=t("code",null,"2+",-1),tR=t("td",{style:{"text-align":"center"}},"🟠",-1),eR={style:{"text-align":"center"}},oR={href:"https://leetcode.cn/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},lR={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},nR=t("td",{style:{"text-align":"center"}},"1490",-1),sR=t("td",{style:{"text-align":"left"}},"克隆 N 叉树 🔒",-1),rR=t("td",{style:{"text-align":"center"}},null,-1),dR={style:{"text-align":"left"}},_R=t("code",null,"树",-1),cR=t("code",null,"深度优先搜索",-1),aR=t("code",null,"广度优先搜索",-1),iR=t("code",null,"1+",-1),hR=t("td",{style:{"text-align":"center"}},"🟠",-1),fR={style:{"text-align":"center"}},gR={href:"https://leetcode.cn/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},uR={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mR=t("td",{style:{"text-align":"center"}},"1506",-1),pR=t("td",{style:{"text-align":"left"}},"找到 N 叉树的根节点 🔒",-1),yR=t("td",{style:{"text-align":"center"}},null,-1),bR={style:{"text-align":"left"}},xR=t("code",null,"位运算",-1),kR=t("code",null,"树",-1),vR=t("code",null,"深度优先搜索",-1),wR=t("code",null,"1+",-1),IR=t("td",{style:{"text-align":"center"}},"🟠",-1),zR={style:{"text-align":"center"}},qR={href:"https://leetcode.cn/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},jR={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},NR=t("td",{style:{"text-align":"center"}},"1516",-1),VR=t("td",{style:{"text-align":"left"}},"移动 N 叉树的子树 🔒",-1),KR=t("td",{style:{"text-align":"center"}},null,-1),LR={style:{"text-align":"left"}},BR=t("code",null,"树",-1),CR=t("code",null,"深度优先搜索",-1),ER=t("td",{style:{"text-align":"center"}},"🔴",-1),RR={style:{"text-align":"center"}},FR={href:"https://leetcode.cn/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},SR={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},TR=t("td",{style:{"text-align":"center"}},"1519",-1),DR=t("td",{style:{"text-align":"left"}},"子树中标签相同的节点数",-1),AR=t("td",{style:{"text-align":"center"}},null,-1),GR={style:{"text-align":"left"}},HR=t("code",null,"树",-1),JR=t("code",null,"深度优先搜索",-1),MR=t("code",null,"广度优先搜索",-1),OR=t("code",null,"2+",-1),PR=t("td",{style:{"text-align":"center"}},"🟠",-1),QR={style:{"text-align":"center"}},UR={href:"https://leetcode.cn/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},WR={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},XR=t("td",{style:{"text-align":"center"}},"1522",-1),YR=t("td",{style:{"text-align":"left"}},"N 叉树的直径 🔒",-1),ZR={style:{"text-align":"center"}},$R={style:{"text-align":"left"}},tF=t("code",null,"树",-1),eF=t("code",null,"深度优先搜索",-1),oF=t("td",{style:{"text-align":"center"}},"🟠",-1),lF={style:{"text-align":"center"}},nF={href:"https://leetcode.cn/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},sF={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},rF=t("td",{style:{"text-align":"center"}},"1530",-1),dF=t("td",{style:{"text-align":"left"}},"好叶子节点对的数量",-1),_F=t("td",{style:{"text-align":"center"}},null,-1),cF={style:{"text-align":"left"}},aF=t("code",null,"树",-1),iF=t("code",null,"深度优先搜索",-1),hF=t("code",null,"二叉树",-1),fF=t("td",{style:{"text-align":"center"}},"🟠",-1),gF={style:{"text-align":"center"}},uF={href:"https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},mF={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},pF=t("td",{style:{"text-align":"center"}},"1559",-1),yF=t("td",{style:{"text-align":"left"}},"二维网格图中探测环",-1),bF=t("td",{style:{"text-align":"center"}},null,-1),xF={style:{"text-align":"left"}},kF=t("code",null,"深度优先搜索",-1),vF=t("code",null,"广度优先搜索",-1),wF=t("code",null,"并查集",-1),IF=t("code",null,"2+",-1),zF=t("td",{style:{"text-align":"center"}},"🟠",-1),qF={style:{"text-align":"center"}},jF={href:"https://leetcode.cn/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},NF={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},VF=t("td",{style:{"text-align":"center"}},"1568",-1),KF=t("td",{style:{"text-align":"left"}},"使陆地分离的最少天数",-1),LF=t("td",{style:{"text-align":"center"}},null,-1),BF={style:{"text-align":"left"}},CF=t("code",null,"深度优先搜索",-1),EF=t("code",null,"广度优先搜索",-1),RF=t("code",null,"数组",-1),FF=t("code",null,"2+",-1),SF=t("td",{style:{"text-align":"center"}},"🔴",-1),TF={style:{"text-align":"center"}},DF={href:"https://leetcode.cn/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},AF={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},GF=t("td",{style:{"text-align":"center"}},"1600",-1),HF=t("td",{style:{"text-align":"left"}},"王位继承顺序",-1),JF=t("td",{style:{"text-align":"center"}},null,-1),MF={style:{"text-align":"left"}},OF=t("code",null,"树",-1),PF=t("code",null,"深度优先搜索",-1),QF=t("code",null,"设计",-1),UF=t("code",null,"1+",-1),WF=t("td",{style:{"text-align":"center"}},"🟠",-1),XF={style:{"text-align":"center"}},YF={href:"https://leetcode.cn/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},ZF={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},$F=t("td",{style:{"text-align":"center"}},"1612",-1),tS=t("td",{style:{"text-align":"left"}},"检查两棵二叉表达式树是否等价 🔒",-1),eS=t("td",{style:{"text-align":"center"}},null,-1),oS={style:{"text-align":"left"}},lS=t("code",null,"树",-1),nS=t("code",null,"深度优先搜索",-1),sS=t("code",null,"哈希表",-1),rS=t("code",null,"2+",-1),dS=t("td",{style:{"text-align":"center"}},"🟠",-1),_S={style:{"text-align":"center"}},cS={href:"https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},aS={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},iS=t("td",{style:{"text-align":"center"}},"1625",-1),hS=t("td",{style:{"text-align":"left"}},"执行操作后字典序最小的字符串",-1),fS=t("td",{style:{"text-align":"center"}},null,-1),gS={style:{"text-align":"left"}},uS=t("code",null,"深度优先搜索",-1),mS=t("code",null,"广度优先搜索",-1),pS=t("code",null,"字符串",-1),yS=t("code",null,"1+",-1),bS=t("td",{style:{"text-align":"center"}},"🟠",-1),xS={style:{"text-align":"center"}},kS={href:"https://leetcode.cn/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},vS={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},wS=t("td",{style:{"text-align":"center"}},"1631",-1),IS=t("td",{style:{"text-align":"left"}},"最小体力消耗路径",-1),zS=t("td",{style:{"text-align":"center"}},null,-1),qS={style:{"text-align":"left"}},jS=t("code",null,"深度优先搜索",-1),NS=t("code",null,"广度优先搜索",-1),VS=t("code",null,"并查集",-1),KS=t("code",null,"4+",-1),LS=t("td",{style:{"text-align":"center"}},"🟠",-1),BS={style:{"text-align":"center"}},CS={href:"https://leetcode.cn/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},ES={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},RS=t("td",{style:{"text-align":"center"}},"1644",-1),FS=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 II 🔒",-1),SS=t("td",{style:{"text-align":"center"}},null,-1),TS={style:{"text-align":"left"}},DS=t("code",null,"树",-1),AS=t("code",null,"深度优先搜索",-1),GS=t("code",null,"二叉树",-1),HS=t("td",{style:{"text-align":"center"}},"🟠",-1),JS={style:{"text-align":"center"}},MS={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},OS={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},PS=t("td",{style:{"text-align":"center"}},"1660",-1),QS=t("td",{style:{"text-align":"left"}},"纠正二叉树 🔒",-1),US=t("td",{style:{"text-align":"center"}},null,-1),WS={style:{"text-align":"left"}},XS=t("code",null,"树",-1),YS=t("code",null,"深度优先搜索",-1),ZS=t("code",null,"广度优先搜索",-1),$S=t("code",null,"2+",-1),tT=t("td",{style:{"text-align":"center"}},"🟠",-1),eT={style:{"text-align":"center"}},oT={href:"https://leetcode.cn/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lT={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},nT=t("td",{style:{"text-align":"center"}},"1666",-1),sT=t("td",{style:{"text-align":"left"}},"改变二叉树的根节点 🔒",-1),rT=t("td",{style:{"text-align":"center"}},null,-1),dT={style:{"text-align":"left"}},_T=t("code",null,"树",-1),cT=t("code",null,"深度优先搜索",-1),aT=t("code",null,"二叉树",-1),iT=t("td",{style:{"text-align":"center"}},"🟠",-1),hT={style:{"text-align":"center"}},fT={href:"https://leetcode.cn/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},gT={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},uT=t("td",{style:{"text-align":"center"}},"1676",-1),mT=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 IV 🔒",-1),pT=t("td",{style:{"text-align":"center"}},null,-1),yT={style:{"text-align":"left"}},bT=t("code",null,"树",-1),xT=t("code",null,"深度优先搜索",-1),kT=t("code",null,"哈希表",-1),vT=t("code",null,"1+",-1),wT=t("td",{style:{"text-align":"center"}},"🟠",-1),IT={style:{"text-align":"center"}},zT={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},qT={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},jT=t("td",{style:{"text-align":"center"}},"1722",-1),NT=t("td",{style:{"text-align":"left"}},"执行交换操作后的最小汉明距离",-1),VT=t("td",{style:{"text-align":"center"}},null,-1),KT={style:{"text-align":"left"}},LT=t("code",null,"深度优先搜索",-1),BT=t("code",null,"并查集",-1),CT=t("code",null,"数组",-1),ET=t("td",{style:{"text-align":"center"}},"🟠",-1),RT={style:{"text-align":"center"}},FT={href:"https://leetcode.cn/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},ST={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},TT=t("td",{style:{"text-align":"center"}},"1740",-1),DT=t("td",{style:{"text-align":"left"}},"找到二叉树中的距离 🔒",-1),AT=t("td",{style:{"text-align":"center"}},null,-1),GT={style:{"text-align":"left"}},HT=t("code",null,"树",-1),JT=t("code",null,"深度优先搜索",-1),MT=t("code",null,"广度优先搜索",-1),OT=t("code",null,"2+",-1),PT=t("td",{style:{"text-align":"center"}},"🟠",-1),QT={style:{"text-align":"center"}},UT={href:"https://leetcode.cn/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},WT={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},XT=t("td",{style:{"text-align":"center"}},"1743",-1),YT=t("td",{style:{"text-align":"left"}},"从相邻元素对还原数组",-1),ZT=t("td",{style:{"text-align":"center"}},null,-1),$T={style:{"text-align":"left"}},tD=t("code",null,"深度优先搜索",-1),eD=t("code",null,"数组",-1),oD=t("code",null,"哈希表",-1),lD=t("td",{style:{"text-align":"center"}},"🟠",-1),nD={style:{"text-align":"center"}},sD={href:"https://leetcode.cn/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},rD={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},dD=t("td",{style:{"text-align":"center"}},"1766",-1),_D=t("td",{style:{"text-align":"left"}},"互质树",-1),cD=t("td",{style:{"text-align":"center"}},null,-1),aD={style:{"text-align":"left"}},iD=t("code",null,"树",-1),hD=t("code",null,"深度优先搜索",-1),fD=t("code",null,"数组",-1),gD=t("code",null,"2+",-1),uD=t("td",{style:{"text-align":"center"}},"🔴",-1),mD={style:{"text-align":"center"}},pD={href:"https://leetcode.cn/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},yD={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},bD=t("td",{style:{"text-align":"center"}},"1778",-1),xD=t("td",{style:{"text-align":"left"}},"未知网格中的最短路径 🔒",-1),kD=t("td",{style:{"text-align":"center"}},null,-1),vD={style:{"text-align":"left"}},wD=t("code",null,"深度优先搜索",-1),ID=t("code",null,"广度优先搜索",-1),zD=t("code",null,"图",-1),qD=t("code",null,"1+",-1),jD=t("td",{style:{"text-align":"center"}},"🟠",-1),ND={style:{"text-align":"center"}},VD={href:"https://leetcode.cn/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},KD={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},LD=t("td",{style:{"text-align":"center"}},"1810",-1),BD=t("td",{style:{"text-align":"left"}},"隐藏网格下的最小消耗路径 🔒",-1),CD=t("td",{style:{"text-align":"center"}},null,-1),ED={style:{"text-align":"left"}},RD=t("code",null,"深度优先搜索",-1),FD=t("code",null,"广度优先搜索",-1),SD=t("code",null,"图",-1),TD=t("code",null,"2+",-1),DD=t("td",{style:{"text-align":"center"}},"🟠",-1),AD={style:{"text-align":"center"}},GD={href:"https://leetcode.cn/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},HD={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},JD=t("td",{style:{"text-align":"center"}},"1820",-1),MD=t("td",{style:{"text-align":"left"}},"最多邀请的个数 🔒",-1),OD=t("td",{style:{"text-align":"center"}},null,-1),PD={style:{"text-align":"left"}},QD=t("code",null,"深度优先搜索",-1),UD=t("code",null,"图",-1),WD=t("code",null,"数组",-1),XD=t("code",null,"1+",-1),YD=t("td",{style:{"text-align":"center"}},"🟠",-1),ZD={style:{"text-align":"center"}},$D={href:"https://leetcode.cn/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},tA={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},eA=t("td",{style:{"text-align":"center"}},"1858",-1),oA=t("td",{style:{"text-align":"left"}},"包含所有前缀的最长单词 🔒",-1),lA=t("td",{style:{"text-align":"center"}},null,-1),nA={style:{"text-align":"left"}},sA=t("code",null,"深度优先搜索",-1),rA=t("code",null,"字典树",-1),dA=t("td",{style:{"text-align":"center"}},"🟠",-1),_A={style:{"text-align":"center"}},cA={href:"https://leetcode.cn/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},aA={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},iA=t("td",{style:{"text-align":"center"}},"1905",-1),hA=t("td",{style:{"text-align":"left"}},"统计子岛屿",-1),fA=t("td",{style:{"text-align":"center"}},null,-1),gA={style:{"text-align":"left"}},uA=t("code",null,"深度优先搜索",-1),mA=t("code",null,"广度优先搜索",-1),pA=t("code",null,"并查集",-1),yA=t("code",null,"2+",-1),bA=t("td",{style:{"text-align":"center"}},"🟠",-1),xA={style:{"text-align":"center"}},kA={href:"https://leetcode.cn/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},vA={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},"1932",-1),IA=t("td",{style:{"text-align":"left"}},"合并多棵二叉搜索树",-1),zA=t("td",{style:{"text-align":"center"}},null,-1),qA={style:{"text-align":"left"}},jA=t("code",null,"树",-1),NA=t("code",null,"深度优先搜索",-1),VA=t("code",null,"哈希表",-1),KA=t("code",null,"2+",-1),LA=t("td",{style:{"text-align":"center"}},"🔴",-1),BA={style:{"text-align":"center"}},CA={href:"https://leetcode.cn/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},EA={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},RA=t("td",{style:{"text-align":"center"}},"1938",-1),FA=t("td",{style:{"text-align":"left"}},"查询最大基因差",-1),SA=t("td",{style:{"text-align":"center"}},null,-1),TA={style:{"text-align":"left"}},DA=t("code",null,"位运算",-1),AA=t("code",null,"深度优先搜索",-1),GA=t("code",null,"字典树",-1),HA=t("code",null,"2+",-1),JA=t("td",{style:{"text-align":"center"}},"🔴",-1),MA={style:{"text-align":"center"}},OA={href:"https://leetcode.cn/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},PA={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},QA=t("td",{style:{"text-align":"center"}},"1970",-1),UA=t("td",{style:{"text-align":"left"}},"你能穿过矩阵的最后一天",-1),WA=t("td",{style:{"text-align":"center"}},null,-1),XA={style:{"text-align":"left"}},YA=t("code",null,"深度优先搜索",-1),ZA=t("code",null,"广度优先搜索",-1),$A=t("code",null,"并查集",-1),tG=t("code",null,"3+",-1),eG=t("td",{style:{"text-align":"center"}},"🔴",-1),oG={style:{"text-align":"center"}},lG={href:"https://leetcode.cn/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},nG={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},sG=t("td",{style:{"text-align":"center"}},"1971",-1),rG=t("td",{style:{"text-align":"left"}},"寻找图中是否存在路径",-1),dG={style:{"text-align":"center"}},_G={style:{"text-align":"left"}},cG=t("code",null,"深度优先搜索",-1),aG=t("code",null,"广度优先搜索",-1),iG=t("code",null,"并查集",-1),hG=t("code",null,"1+",-1),fG=t("td",{style:{"text-align":"center"}},"🟢",-1),gG={style:{"text-align":"center"}},uG={href:"https://leetcode.cn/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},mG={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},pG=t("td",{style:{"text-align":"center"}},"1973",-1),yG=t("td",{style:{"text-align":"left"}},"值等于子节点值之和的节点数量 🔒",-1),bG=t("td",{style:{"text-align":"center"}},null,-1),xG={style:{"text-align":"left"}},kG=t("code",null,"树",-1),vG=t("code",null,"深度优先搜索",-1),wG=t("code",null,"二叉树",-1),IG=t("td",{style:{"text-align":"center"}},"🟠",-1),zG={style:{"text-align":"center"}},qG={href:"https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},jG={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},NG=t("td",{style:{"text-align":"center"}},"1992",-1),VG=t("td",{style:{"text-align":"left"}},"找到所有的农场组",-1),KG=t("td",{style:{"text-align":"center"}},null,-1),LG={style:{"text-align":"left"}},BG=t("code",null,"深度优先搜索",-1),CG=t("code",null,"广度优先搜索",-1),EG=t("code",null,"数组",-1),RG=t("code",null,"1+",-1),FG=t("td",{style:{"text-align":"center"}},"🟠",-1),SG={style:{"text-align":"center"}},TG={href:"https://leetcode.cn/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},DG={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},AG=t("td",{style:{"text-align":"center"}},"1993",-1),GG=t("td",{style:{"text-align":"left"}},"树上的操作",-1),HG=t("td",{style:{"text-align":"center"}},null,-1),JG={style:{"text-align":"left"}},MG=t("code",null,"树",-1),OG=t("code",null,"深度优先搜索",-1),PG=t("code",null,"广度优先搜索",-1),QG=t("code",null,"3+",-1),UG=t("td",{style:{"text-align":"center"}},"🟠",-1),WG={style:{"text-align":"center"}},XG={href:"https://leetcode.cn/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},YG={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},ZG=t("td",{style:{"text-align":"center"}},"2003",-1),$G=t("td",{style:{"text-align":"left"}},"每棵子树内缺失的最小基因值",-1),tH=t("td",{style:{"text-align":"center"}},null,-1),eH={style:{"text-align":"left"}},oH=t("code",null,"树",-1),lH=t("code",null,"深度优先搜索",-1),nH=t("code",null,"并查集",-1),sH=t("code",null,"1+",-1),rH=t("td",{style:{"text-align":"center"}},"🔴",-1),dH={style:{"text-align":"center"}},_H={href:"https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},cH={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},aH=t("td",{style:{"text-align":"center"}},"2049",-1),iH=t("td",{style:{"text-align":"left"}},"统计最高分的节点数目",-1),hH=t("td",{style:{"text-align":"center"}},null,-1),fH={style:{"text-align":"left"}},gH=t("code",null,"树",-1),uH=t("code",null,"深度优先搜索",-1),mH=t("code",null,"数组",-1),pH=t("code",null,"1+",-1),yH=t("td",{style:{"text-align":"center"}},"🟠",-1),bH={style:{"text-align":"center"}},xH={href:"https://leetcode.cn/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},kH={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},vH=t("td",{style:{"text-align":"center"}},"2092",-1),wH=t("td",{style:{"text-align":"left"}},"找出知晓秘密的所有专家",-1),IH=t("td",{style:{"text-align":"center"}},null,-1),zH={style:{"text-align":"left"}},qH=t("code",null,"深度优先搜索",-1),jH=t("code",null,"广度优先搜索",-1),NH=t("code",null,"并查集",-1),VH=t("code",null,"2+",-1),KH=t("td",{style:{"text-align":"center"}},"🔴",-1),LH={style:{"text-align":"center"}},BH={href:"https://leetcode.cn/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},CH={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},EH=t("td",{style:{"text-align":"center"}},"2096",-1),RH=t("td",{style:{"text-align":"left"}},"从二叉树一个节点到另一个节点每一步的方向",-1),FH=t("td",{style:{"text-align":"center"}},null,-1),SH={style:{"text-align":"left"}},TH=t("code",null,"树",-1),DH=t("code",null,"深度优先搜索",-1),AH=t("code",null,"字符串",-1),GH=t("code",null,"1+",-1),HH=t("td",{style:{"text-align":"center"}},"🟠",-1),JH={style:{"text-align":"center"}},MH={href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},OH={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},PH=t("td",{style:{"text-align":"center"}},"2097",-1),QH=t("td",{style:{"text-align":"left"}},"合法重新排列数对",-1),UH={style:{"text-align":"center"}},WH={style:{"text-align":"left"}},XH=t("code",null,"深度优先搜索",-1),YH=t("code",null,"图",-1),ZH=t("code",null,"欧拉回路",-1),$H=t("td",{style:{"text-align":"center"}},"🔴",-1),tJ={style:{"text-align":"center"}},eJ={href:"https://leetcode.cn/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},oJ={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},lJ=t("td",{style:{"text-align":"center"}},"2101",-1),nJ=t("td",{style:{"text-align":"left"}},"引爆最多的炸弹",-1),sJ=t("td",{style:{"text-align":"center"}},null,-1),rJ={style:{"text-align":"left"}},dJ=t("code",null,"深度优先搜索",-1),_J=t("code",null,"广度优先搜索",-1),cJ=t("code",null,"图",-1),aJ=t("code",null,"3+",-1),iJ=t("td",{style:{"text-align":"center"}},"🟠",-1),hJ={style:{"text-align":"center"}},fJ={href:"https://leetcode.cn/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},gJ={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},uJ=t("td",{style:{"text-align":"center"}},"2127",-1),mJ=t("td",{style:{"text-align":"left"}},"参加会议的最多员工数",-1),pJ=t("td",{style:{"text-align":"center"}},null,-1),yJ={style:{"text-align":"left"}},bJ=t("code",null,"深度优先搜索",-1),xJ=t("code",null,"图",-1),kJ=t("code",null,"拓扑排序",-1),vJ=t("td",{style:{"text-align":"center"}},"🔴",-1),wJ={style:{"text-align":"center"}},IJ={href:"https://leetcode.cn/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},zJ={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},qJ=t("td",{style:{"text-align":"center"}},"2192",-1),jJ=t("td",{style:{"text-align":"left"}},"有向无环图中一个节点的所有祖先",-1),NJ=t("td",{style:{"text-align":"center"}},null,-1),VJ={style:{"text-align":"left"}},KJ=t("code",null,"深度优先搜索",-1),LJ=t("code",null,"广度优先搜索",-1),BJ=t("code",null,"图",-1),CJ=t("code",null,"1+",-1),EJ=t("td",{style:{"text-align":"center"}},"🟠",-1),RJ={style:{"text-align":"center"}},FJ={href:"https://leetcode.cn/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},SJ={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},TJ=t("td",{style:{"text-align":"center"}},"2204",-1),DJ=t("td",{style:{"text-align":"left"}},"无向图中到环的距离 🔒",-1),AJ=t("td",{style:{"text-align":"center"}},null,-1),GJ={style:{"text-align":"left"}},HJ=t("code",null,"深度优先搜索",-1),JJ=t("code",null,"广度优先搜索",-1),MJ=t("code",null,"并查集",-1),OJ=t("code",null,"1+",-1),PJ=t("td",{style:{"text-align":"center"}},"🔴",-1),QJ={style:{"text-align":"center"}},UJ={href:"https://leetcode.cn/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},WJ={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},XJ=t("td",{style:{"text-align":"center"}},"2246",-1),YJ=t("td",{style:{"text-align":"left"}},"相邻字符不同的最长路径",-1),ZJ=t("td",{style:{"text-align":"center"}},null,-1),$J={style:{"text-align":"left"}},tM=t("code",null,"树",-1),eM=t("code",null,"深度优先搜索",-1),oM=t("code",null,"图",-1),lM=t("code",null,"3+",-1),nM=t("td",{style:{"text-align":"center"}},"🔴",-1),sM={style:{"text-align":"center"}},rM={href:"https://leetcode.cn/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},dM={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},_M=t("td",{style:{"text-align":"center"}},"2265",-1),cM=t("td",{style:{"text-align":"left"}},"统计值等于子树平均值的节点数",-1),aM=t("td",{style:{"text-align":"center"}},null,-1),iM={style:{"text-align":"left"}},hM=t("code",null,"树",-1),fM=t("code",null,"深度优先搜索",-1),gM=t("code",null,"二叉树",-1),uM=t("td",{style:{"text-align":"center"}},"🟠",-1),mM={style:{"text-align":"center"}},pM={href:"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},yM={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},bM=t("td",{style:{"text-align":"center"}},"2277",-1),xM=t("td",{style:{"text-align":"left"}},"树中最接近路径的节点 🔒",-1),kM=t("td",{style:{"text-align":"center"}},null,-1),vM={style:{"text-align":"left"}},wM=t("code",null,"树",-1),IM=t("code",null,"深度优先搜索",-1),zM=t("code",null,"广度优先搜索",-1),qM=t("code",null,"1+",-1),jM=t("td",{style:{"text-align":"center"}},"🔴",-1),NM={style:{"text-align":"center"}},VM={href:"https://leetcode.cn/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},KM={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},LM=t("td",{style:{"text-align":"center"}},"2307",-1),BM=t("td",{style:{"text-align":"left"}},"检查方程中的矛盾之处 🔒",-1),CM=t("td",{style:{"text-align":"center"}},null,-1),EM={style:{"text-align":"left"}},RM=t("code",null,"深度优先搜索",-1),FM=t("code",null,"并查集",-1),SM=t("code",null,"图",-1),TM=t("code",null,"1+",-1),DM=t("td",{style:{"text-align":"center"}},"🔴",-1),AM={style:{"text-align":"center"}},GM={href:"https://leetcode.cn/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},HM={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},"2313",-1),MM=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),OM=t("td",{style:{"text-align":"center"}},null,-1),PM={style:{"text-align":"left"}},QM=t("code",null,"树",-1),UM=t("code",null,"深度优先搜索",-1),WM=t("code",null,"动态规划",-1),XM=t("code",null,"1+",-1),YM=t("td",{style:{"text-align":"center"}},"🔴",-1),ZM={style:{"text-align":"center"}},$M={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},tO={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},eO=t("td",{style:{"text-align":"center"}},"2316",-1),oO=t("td",{style:{"text-align":"left"}},"统计无向图中无法互相到达点对数",-1),lO=t("td",{style:{"text-align":"center"}},null,-1),nO={style:{"text-align":"left"}},sO=t("code",null,"深度优先搜索",-1),rO=t("code",null,"广度优先搜索",-1),dO=t("code",null,"并查集",-1),_O=t("code",null,"1+",-1),cO=t("td",{style:{"text-align":"center"}},"🟠",-1),aO={style:{"text-align":"center"}},iO={href:"https://leetcode.cn/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},hO={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},fO=t("td",{style:{"text-align":"center"}},"2322",-1),gO=t("td",{style:{"text-align":"left"}},"从树中删除边的最小分数",-1),uO=t("td",{style:{"text-align":"center"}},null,-1),mO={style:{"text-align":"left"}},pO=t("code",null,"位运算",-1),yO=t("code",null,"树",-1),bO=t("code",null,"深度优先搜索",-1),xO=t("code",null,"1+",-1),kO=t("td",{style:{"text-align":"center"}},"🔴",-1),vO={style:{"text-align":"center"}},wO={href:"https://leetcode.cn/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},IO={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},zO=t("td",{style:{"text-align":"center"}},"2328",-1),qO=t("td",{style:{"text-align":"left"}},"网格图中递增路径的数目",-1),jO=t("td",{style:{"text-align":"center"}},null,-1),NO={style:{"text-align":"left"}},VO=t("code",null,"深度优先搜索",-1),KO=t("code",null,"广度优先搜索",-1),LO=t("code",null,"图",-1),BO=t("code",null,"5+",-1),CO=t("td",{style:{"text-align":"center"}},"🔴",-1),EO={style:{"text-align":"center"}},RO={href:"https://leetcode.cn/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},FO={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},SO=t("td",{style:{"text-align":"center"}},"2331",-1),TO=t("td",{style:{"text-align":"left"}},"计算布尔二叉树的值",-1),DO={style:{"text-align":"center"}},AO={style:{"text-align":"left"}},GO=t("code",null,"树",-1),HO=t("code",null,"深度优先搜索",-1),JO=t("code",null,"二叉树",-1),MO=t("td",{style:{"text-align":"center"}},"🟢",-1),OO={style:{"text-align":"center"}},PO={href:"https://leetcode.cn/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},QO={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},"2359",-1),WO=t("td",{style:{"text-align":"left"}},"找到离给定两个节点最近的节点",-1),XO=t("td",{style:{"text-align":"center"}},null,-1),YO={style:{"text-align":"left"}},ZO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"图",-1),tP=t("td",{style:{"text-align":"center"}},"🟠",-1),eP={style:{"text-align":"center"}},oP={href:"https://leetcode.cn/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},lP={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},nP=t("td",{style:{"text-align":"center"}},"2360",-1),sP=t("td",{style:{"text-align":"left"}},"图中的最长环",-1),rP=t("td",{style:{"text-align":"center"}},null,-1),dP={style:{"text-align":"left"}},_P=t("code",null,"深度优先搜索",-1),cP=t("code",null,"图",-1),aP=t("code",null,"拓扑排序",-1),iP=t("td",{style:{"text-align":"center"}},"🔴",-1),hP={style:{"text-align":"center"}},fP={href:"https://leetcode.cn/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},gP={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},uP=t("td",{style:{"text-align":"center"}},"2368",-1),mP=t("td",{style:{"text-align":"left"}},"受限条件下可到达节点的数目",-1),pP=t("td",{style:{"text-align":"center"}},null,-1),yP={style:{"text-align":"left"}},bP=t("code",null,"树",-1),xP=t("code",null,"深度优先搜索",-1),kP=t("code",null,"广度优先搜索",-1),vP=t("code",null,"4+",-1),wP=t("td",{style:{"text-align":"center"}},"🟠",-1),IP={style:{"text-align":"center"}},zP={href:"https://leetcode.cn/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},qP={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},jP=t("td",{style:{"text-align":"center"}},"2378",-1),NP=t("td",{style:{"text-align":"left"}},"选择边来最大化树的得分 🔒",-1),VP=t("td",{style:{"text-align":"center"}},null,-1),KP={style:{"text-align":"left"}},LP=t("code",null,"树",-1),BP=t("code",null,"深度优先搜索",-1),CP=t("code",null,"动态规划",-1),EP=t("td",{style:{"text-align":"center"}},"🟠",-1),RP={style:{"text-align":"center"}},FP={href:"https://leetcode.cn/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},SP={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},TP=t("td",{style:{"text-align":"center"}},"2385",-1),DP=t("td",{style:{"text-align":"left"}},"感染二叉树需要的总时间",-1),AP=t("td",{style:{"text-align":"center"}},null,-1),GP={style:{"text-align":"left"}},HP=t("code",null,"树",-1),JP=t("code",null,"深度优先搜索",-1),MP=t("code",null,"广度优先搜索",-1),OP=t("code",null,"2+",-1),PP=t("td",{style:{"text-align":"center"}},"🟠",-1),QP={style:{"text-align":"center"}},UP={href:"https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},WP={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},XP=t("td",{style:{"text-align":"center"}},"2415",-1),YP=t("td",{style:{"text-align":"left"}},"反转二叉树的奇数层",-1),ZP={style:{"text-align":"center"}},$P={style:{"text-align":"left"}},tQ=t("code",null,"树",-1),eQ=t("code",null,"深度优先搜索",-1),oQ=t("code",null,"广度优先搜索",-1),lQ=t("code",null,"1+",-1),nQ=t("td",{style:{"text-align":"center"}},"🟠",-1),sQ={style:{"text-align":"center"}},rQ={href:"https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},dQ={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},_Q=t("td",{style:{"text-align":"center"}},"2440",-1),cQ=t("td",{style:{"text-align":"left"}},"创建价值相同的连通块",-1),aQ=t("td",{style:{"text-align":"center"}},null,-1),iQ={style:{"text-align":"left"}},hQ=t("code",null,"树",-1),fQ=t("code",null,"深度优先搜索",-1),gQ=t("code",null,"数组",-1),uQ=t("code",null,"2+",-1),mQ=t("td",{style:{"text-align":"center"}},"🔴",-1),pQ={style:{"text-align":"center"}},yQ={href:"https://leetcode.cn/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},bQ={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},xQ=t("td",{style:{"text-align":"center"}},"2445",-1),kQ=t("td",{style:{"text-align":"left"}},"值为 1 的节点数 🔒",-1),vQ=t("td",{style:{"text-align":"center"}},null,-1),wQ={style:{"text-align":"left"}},IQ=t("code",null,"树",-1),zQ=t("code",null,"深度优先搜索",-1),qQ=t("code",null,"广度优先搜索",-1),jQ=t("code",null,"1+",-1),NQ=t("td",{style:{"text-align":"center"}},"🟠",-1),VQ={style:{"text-align":"center"}},KQ={href:"https://leetcode.cn/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},LQ={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},BQ=t("td",{style:{"text-align":"center"}},"2458",-1),CQ=t("td",{style:{"text-align":"left"}},"移除子树后的二叉树高度",-1),EQ={style:{"text-align":"center"}},RQ={style:{"text-align":"left"}},FQ=t("code",null,"树",-1),SQ=t("code",null,"深度优先搜索",-1),TQ=t("code",null,"广度优先搜索",-1),DQ=t("code",null,"2+",-1),AQ=t("td",{style:{"text-align":"center"}},"🔴",-1),GQ={style:{"text-align":"center"}},HQ={href:"https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},JQ={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},MQ=t("td",{style:{"text-align":"center"}},"2467",-1),OQ=t("td",{style:{"text-align":"left"}},"树上最大得分和路径",-1),PQ={style:{"text-align":"center"}},QQ={style:{"text-align":"left"}},UQ=t("code",null,"树",-1),WQ=t("code",null,"深度优先搜索",-1),XQ=t("code",null,"广度优先搜索",-1),YQ=t("code",null,"2+",-1),ZQ=t("td",{style:{"text-align":"center"}},"🟠",-1),$Q={style:{"text-align":"center"}},tU={href:"https://leetcode.cn/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},eU={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},oU=t("td",{style:{"text-align":"center"}},"2476",-1),lU=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),nU=t("td",{style:{"text-align":"center"}},null,-1),sU={style:{"text-align":"left"}},rU=t("code",null,"树",-1),dU=t("code",null,"深度优先搜索",-1),_U=t("code",null,"二叉搜索树",-1),cU=t("code",null,"3+",-1),aU=t("td",{style:{"text-align":"center"}},"🟠",-1),iU={style:{"text-align":"center"}},hU={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fU={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},gU=t("td",{style:{"text-align":"center"}},"2477",-1),uU=t("td",{style:{"text-align":"left"}},"到达首都的最少油耗",-1),mU=t("td",{style:{"text-align":"center"}},null,-1),pU={style:{"text-align":"left"}},yU=t("code",null,"树",-1),bU=t("code",null,"深度优先搜索",-1),xU=t("code",null,"广度优先搜索",-1),kU=t("code",null,"1+",-1),vU=t("td",{style:{"text-align":"center"}},"🟠",-1),wU={style:{"text-align":"center"}},IU={href:"https://leetcode.cn/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},zU={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},qU=t("td",{style:{"text-align":"center"}},"2479",-1),jU=t("td",{style:{"text-align":"left"}},"两个不重叠子树的最大异或值 🔒",-1),NU=t("td",{style:{"text-align":"center"}},null,-1),VU={style:{"text-align":"left"}},KU=t("code",null,"树",-1),LU=t("code",null,"深度优先搜索",-1),BU=t("code",null,"图",-1),CU=t("code",null,"1+",-1),EU=t("td",{style:{"text-align":"center"}},"🔴",-1),RU={style:{"text-align":"center"}},FU={href:"https://leetcode.cn/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},SU={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},TU=t("td",{style:{"text-align":"center"}},"2492",-1),DU=t("td",{style:{"text-align":"left"}},"两个城市间路径的最小分数",-1),AU=t("td",{style:{"text-align":"center"}},null,-1),GU={style:{"text-align":"left"}},HU=t("code",null,"深度优先搜索",-1),JU=t("code",null,"广度优先搜索",-1),MU=t("code",null,"并查集",-1),OU=t("code",null,"1+",-1),PU=t("td",{style:{"text-align":"center"}},"🟠",-1),QU={style:{"text-align":"center"}},UU={href:"https://leetcode.cn/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},WU={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},XU=t("td",{style:{"text-align":"center"}},"2538",-1),YU=t("td",{style:{"text-align":"left"}},"最大价值和与最小价值和的差值",-1),ZU=t("td",{style:{"text-align":"center"}},null,-1),$U={style:{"text-align":"left"}},tW=t("code",null,"树",-1),eW=t("code",null,"深度优先搜索",-1),oW=t("code",null,"数组",-1),lW=t("code",null,"1+",-1),nW=t("td",{style:{"text-align":"center"}},"🔴",-1),sW={style:{"text-align":"center"}},rW={href:"https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},dW={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},_W=t("td",{style:{"text-align":"center"}},"2556",-1),cW=t("td",{style:{"text-align":"left"}},"二进制矩阵中翻转最多一次使路径不连通",-1),aW=t("td",{style:{"text-align":"center"}},null,-1),iW={style:{"text-align":"left"}},hW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"广度优先搜索",-1),gW=t("code",null,"数组",-1),uW=t("code",null,"2+",-1),mW=t("td",{style:{"text-align":"center"}},"🟠",-1),pW={style:{"text-align":"center"}},yW={href:"https://leetcode.cn/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},bW={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},xW=t("td",{style:{"text-align":"center"}},"2581",-1),kW=t("td",{style:{"text-align":"left"}},"统计可能的树根数目",-1),vW=t("td",{style:{"text-align":"center"}},null,-1),wW={style:{"text-align":"left"}},IW=t("code",null,"树",-1),zW=t("code",null,"深度优先搜索",-1),qW=t("code",null,"数组",-1),jW=t("code",null,"2+",-1),NW=t("td",{style:{"text-align":"center"}},"🔴",-1),VW={style:{"text-align":"center"}},KW={href:"https://leetcode.cn/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},LW={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},BW=t("td",{style:{"text-align":"center"}},"2596",-1),CW=t("td",{style:{"text-align":"left"}},"检查骑士巡视方案",-1),EW=t("td",{style:{"text-align":"center"}},null,-1),RW={style:{"text-align":"left"}},FW=t("code",null,"深度优先搜索",-1),SW=t("code",null,"广度优先搜索",-1),TW=t("code",null,"数组",-1),DW=t("code",null,"2+",-1),AW=t("td",{style:{"text-align":"center"}},"🟠",-1),GW={style:{"text-align":"center"}},HW={href:"https://leetcode.cn/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},JW={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},MW=t("td",{style:{"text-align":"center"}},"2641",-1),OW=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点 II",-1),PW={style:{"text-align":"center"}},QW={style:{"text-align":"left"}},UW=t("code",null,"树",-1),WW=t("code",null,"深度优先搜索",-1),XW=t("code",null,"广度优先搜索",-1),YW=t("code",null,"2+",-1),ZW=t("td",{style:{"text-align":"center"}},"🟠",-1),$W={style:{"text-align":"center"}},tX={href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},eX={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},oX=t("td",{style:{"text-align":"center"}},"2646",-1),lX=t("td",{style:{"text-align":"left"}},"最小化旅行的价格总和",-1),nX=t("td",{style:{"text-align":"center"}},null,-1),sX={style:{"text-align":"left"}},rX=t("code",null,"树",-1),dX=t("code",null,"深度优先搜索",-1),_X=t("code",null,"图",-1),cX=t("code",null,"2+",-1),aX=t("td",{style:{"text-align":"center"}},"🔴",-1),iX={style:{"text-align":"center"}},hX={href:"https://leetcode.cn/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},fX={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},gX=t("td",{style:{"text-align":"center"}},"2658",-1),uX=t("td",{style:{"text-align":"left"}},"网格图中鱼的最大数目",-1),mX={style:{"text-align":"center"}},pX={style:{"text-align":"left"}},yX=t("code",null,"深度优先搜索",-1),bX=t("code",null,"广度优先搜索",-1),xX=t("code",null,"并查集",-1),kX=t("code",null,"2+",-1),vX=t("td",{style:{"text-align":"center"}},"🟠",-1),wX={style:{"text-align":"center"}},IX={href:"https://leetcode.cn/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},zX={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},qX=t("td",{style:{"text-align":"center"}},"2685",-1),jX=t("td",{style:{"text-align":"left"}},"统计完全连通分量的数量",-1),NX={style:{"text-align":"center"}},VX={style:{"text-align":"left"}},KX=t("code",null,"深度优先搜索",-1),LX=t("code",null,"广度优先搜索",-1),BX=t("code",null,"图",-1),CX=t("td",{style:{"text-align":"center"}},"🟠",-1),EX={style:{"text-align":"center"}},RX={href:"https://leetcode.cn/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},FX={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},SX=t("td",{style:{"text-align":"center"}},"2689",-1),TX=t("td",{style:{"text-align":"left"}},"从 Rope 树中提取第 K 个字符 🔒",-1),DX=t("td",{style:{"text-align":"center"}},null,-1),AX={style:{"text-align":"left"}},GX=t("code",null,"树",-1),HX=t("code",null,"深度优先搜索",-1),JX=t("code",null,"二叉树",-1),MX=t("td",{style:{"text-align":"center"}},"🟢",-1),OX={style:{"text-align":"center"}},PX={href:"https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},QX={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},UX=t("td",{style:{"text-align":"center"}},"2764",-1),WX=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),XX=t("td",{style:{"text-align":"center"}},null,-1),YX={style:{"text-align":"left"}},ZX=t("code",null,"栈",-1),$X=t("code",null,"树",-1),tY=t("code",null,"深度优先搜索",-1),eY=t("code",null,"1+",-1),oY=t("td",{style:{"text-align":"center"}},"🟠",-1),lY={style:{"text-align":"center"}},nY={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},sY={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},rY=t("td",{style:{"text-align":"center"}},"2773",-1),dY=t("td",{style:{"text-align":"left"}},"特殊二叉树的高度 🔒",-1),_Y=t("td",{style:{"text-align":"center"}},null,-1),cY={style:{"text-align":"left"}},aY=t("code",null,"树",-1),iY=t("code",null,"深度优先搜索",-1),hY=t("code",null,"广度优先搜索",-1),fY=t("code",null,"1+",-1),gY=t("td",{style:{"text-align":"center"}},"🟠",-1),uY={style:{"text-align":"center"}},mY={href:"https://leetcode.cn/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},pY={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},yY=t("td",{style:{"text-align":"center"}},"2791",-1),bY=t("td",{style:{"text-align":"left"}},"树中可以形成回文的路径数",-1),xY=t("td",{style:{"text-align":"center"}},null,-1),kY={style:{"text-align":"left"}},vY=t("code",null,"位运算",-1),wY=t("code",null,"树",-1),IY=t("code",null,"深度优先搜索",-1),zY=t("code",null,"2+",-1),qY=t("td",{style:{"text-align":"center"}},"🔴",-1),jY={style:{"text-align":"center"}},NY={href:"https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},VY={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},KY=t("td",{style:{"text-align":"center"}},"2792",-1),LY=t("td",{style:{"text-align":"left"}},"计算足够大的节点数 🔒",-1),BY=t("td",{style:{"text-align":"center"}},null,-1),CY={style:{"text-align":"left"}},EY=t("code",null,"树",-1),RY=t("code",null,"深度优先搜索",-1),FY=t("code",null,"分治",-1),SY=t("code",null,"1+",-1),TY=t("td",{style:{"text-align":"center"}},"🔴",-1),DY={style:{"text-align":"center"}},AY={href:"https://leetcode.cn/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},GY={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},HY=t("td",{style:{"text-align":"center"}},"2852",-1),JY=t("td",{style:{"text-align":"left"}},"所有单元格的远离程度之和 🔒",-1),MY=t("td",{style:{"text-align":"center"}},null,-1),OY={style:{"text-align":"left"}},PY=t("code",null,"深度优先搜索",-1),QY=t("code",null,"广度优先搜索",-1),UY=t("code",null,"并查集",-1),WY=t("code",null,"3+",-1),XY=t("td",{style:{"text-align":"center"}},"🟠",-1),YY={style:{"text-align":"center"}},ZY={href:"https://leetcode.cn/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},$Y={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},tZ=t("td",{style:{"text-align":"center"}},"2858",-1),eZ=t("td",{style:{"text-align":"left"}},"可以到达每一个节点的最少边反转次数",-1),oZ=t("td",{style:{"text-align":"center"}},null,-1),lZ={style:{"text-align":"left"}},nZ=t("code",null,"深度优先搜索",-1),sZ=t("code",null,"广度优先搜索",-1),rZ=t("code",null,"图",-1),dZ=t("code",null,"1+",-1),_Z=t("td",{style:{"text-align":"center"}},"🔴",-1),cZ={style:{"text-align":"center"}},aZ={href:"https://leetcode.cn/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},iZ={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},hZ=t("td",{style:{"text-align":"center"}},"2867",-1),fZ=t("td",{style:{"text-align":"left"}},"统计树中的合法路径数目",-1),gZ=t("td",{style:{"text-align":"center"}},null,-1),uZ={style:{"text-align":"left"}},mZ=t("code",null,"树",-1),pZ=t("code",null,"深度优先搜索",-1),yZ=t("code",null,"数学",-1),bZ=t("code",null,"2+",-1),xZ=t("td",{style:{"text-align":"center"}},"🔴",-1),kZ={style:{"text-align":"center"}},vZ={href:"https://leetcode.cn/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},wZ={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},IZ=t("td",{style:{"text-align":"center"}},"2872",-1),zZ=t("td",{style:{"text-align":"left"}},"可以被 K 整除连通块的最大数目",-1),qZ={style:{"text-align":"center"}},jZ={style:{"text-align":"left"}},NZ=t("code",null,"树",-1),VZ=t("code",null,"深度优先搜索",-1),KZ=t("td",{style:{"text-align":"center"}},"🔴",-1),LZ={style:{"text-align":"center"}},BZ={href:"https://leetcode.cn/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},CZ={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},EZ=t("td",{style:{"text-align":"center"}},"2920",-1),RZ=t("td",{style:{"text-align":"left"}},"收集所有金币可获得的最大积分",-1),FZ=t("td",{style:{"text-align":"center"}},null,-1),SZ={style:{"text-align":"left"}},TZ=t("code",null,"位运算",-1),DZ=t("code",null,"树",-1),AZ=t("code",null,"深度优先搜索",-1),GZ=t("code",null,"2+",-1),HZ=t("td",{style:{"text-align":"center"}},"🔴",-1),JZ={style:{"text-align":"center"}},MZ={href:"https://leetcode.cn/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},OZ={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},PZ=t("td",{style:{"text-align":"center"}},"2925",-1),QZ=t("td",{style:{"text-align":"left"}},"在树上执行操作以后得到的最大分数",-1),UZ=t("td",{style:{"text-align":"center"}},null,-1),WZ={style:{"text-align":"left"}},XZ=t("code",null,"树",-1),YZ=t("code",null,"深度优先搜索",-1),ZZ=t("code",null,"动态规划",-1),$Z=t("td",{style:{"text-align":"center"}},"🟠",-1),t$={style:{"text-align":"center"}},e$={href:"https://leetcode.cn/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},o$={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},l$=t("td",{style:{"text-align":"center"}},"2973",-1),n$=t("td",{style:{"text-align":"left"}},"树中每个节点放置的金币数目",-1),s$=t("td",{style:{"text-align":"center"}},null,-1),r$={style:{"text-align":"left"}},d$=t("code",null,"树",-1),_$=t("code",null,"深度优先搜索",-1),c$=t("code",null,"动态规划",-1),a$=t("code",null,"2+",-1),i$=t("td",{style:{"text-align":"center"}},"🔴",-1),h$={style:{"text-align":"center"}},f$={href:"https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},g$={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},u$=t("td",{style:{"text-align":"center"}},"3004",-1),m$=t("td",{style:{"text-align":"left"}},"相同颜色的最大子树 🔒",-1),p$=t("td",{style:{"text-align":"center"}},null,-1),y$={style:{"text-align":"left"}},b$=t("code",null,"树",-1),x$=t("code",null,"深度优先搜索",-1),k$=t("code",null,"数组",-1),v$=t("code",null,"1+",-1),w$=t("td",{style:{"text-align":"center"}},"🟠",-1),I$={style:{"text-align":"center"}},z$={href:"https://leetcode.cn/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},q$={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},j$=t("td",{style:{"text-align":"center"}},"3067",-1),N$=t("td",{style:{"text-align":"left"}},"在带权树网络中统计可连接服务器对数目",-1),V$=t("td",{style:{"text-align":"center"}},null,-1),K$={style:{"text-align":"left"}},L$=t("code",null,"树",-1),B$=t("code",null,"深度优先搜索",-1),C$=t("code",null,"数组",-1),E$=t("td",{style:{"text-align":"center"}},"🟠",-1),R$={style:{"text-align":"center"}},F$={href:"https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},S$={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},T$=t("td",{style:{"text-align":"center"}},"3123",-1),D$=t("td",{style:{"text-align":"left"}},"最短路径中的边",-1),A$=t("td",{style:{"text-align":"center"}},null,-1),G$={style:{"text-align":"left"}},H$=t("code",null,"深度优先搜索",-1),J$=t("code",null,"广度优先搜索",-1),M$=t("code",null,"图",-1),O$=t("code",null,"2+",-1),P$=t("td",{style:{"text-align":"center"}},"🔴",-1),Q$={style:{"text-align":"center"}},U$={href:"https://leetcode.cn/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},W$={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},X$=t("td",{style:{"text-align":"center"}},"3157",-1),Y$=t("td",{style:{"text-align":"left"}},"找到具有最小和的树的层数 🔒",-1),Z$=t("td",{style:{"text-align":"center"}},null,-1),$$={style:{"text-align":"left"}},ttt=t("code",null,"树",-1),ett=t("code",null,"深度优先搜索",-1),ott=t("code",null,"广度优先搜索",-1),ltt=t("code",null,"1+",-1),ntt=t("td",{style:{"text-align":"center"}},"🟠",-1),stt={style:{"text-align":"center"}},rtt={href:"https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},dtt={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},_tt=t("td",{style:{"text-align":"center"}},"3203",-1),ctt=t("td",{style:{"text-align":"left"}},"合并两棵树后的最小直径",-1),att={style:{"text-align":"center"}},itt={style:{"text-align":"left"}},htt=t("code",null,"树",-1),ftt=t("code",null,"深度优先搜索",-1),gtt=t("code",null,"广度优先搜索",-1),utt=t("code",null,"1+",-1),mtt=t("td",{style:{"text-align":"center"}},"🔴",-1),ptt={style:{"text-align":"center"}},ytt={href:"https://leetcode.cn/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},btt={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},xtt=t("td",{style:{"text-align":"center"}},"3235",-1),ktt=t("td",{style:{"text-align":"left"}},"判断矩形的两个角落是否可达",-1),vtt=t("td",{style:{"text-align":"center"}},null,-1),wtt={style:{"text-align":"left"}},Itt=t("code",null,"深度优先搜索",-1),ztt=t("code",null,"广度优先搜索",-1),qtt=t("code",null,"并查集",-1),jtt=t("code",null,"3+",-1),Ntt=t("td",{style:{"text-align":"center"}},"🔴",-1),Vtt={style:{"text-align":"center"}},Ktt={href:"https://leetcode.cn/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},Ltt={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},Btt=t("td",{style:{"text-align":"center"}},"3241",-1),Ctt=t("td",{style:{"text-align":"left"}},"标记所有节点需要的时间",-1),Ett=t("td",{style:{"text-align":"center"}},null,-1),Rtt={style:{"text-align":"left"}},Ftt=t("code",null,"树",-1),Stt=t("code",null,"深度优先搜索",-1),Ttt=t("code",null,"图",-1),Dtt=t("code",null,"1+",-1),Att=t("td",{style:{"text-align":"center"}},"🔴",-1),Gtt={style:{"text-align":"center"}},Htt={href:"https://leetcode.cn/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},Jtt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},Mtt=t("td",{style:{"text-align":"center"}},"3249",-1),Ott=t("td",{style:{"text-align":"left"}},"统计好节点的数目",-1),Ptt=t("td",{style:{"text-align":"center"}},null,-1),Qtt={style:{"text-align":"left"}},Utt=t("code",null,"树",-1),Wtt=t("code",null,"深度优先搜索",-1),Xtt=t("td",{style:{"text-align":"center"}},"🟠",-1),Ytt={style:{"text-align":"center"}},Ztt={href:"https://leetcode.cn/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},$tt={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},tet=t("td",{style:{"text-align":"center"}},"3310",-1),eet=t("td",{style:{"text-align":"left"}},"移除可疑的方法",-1),oet=t("td",{style:{"text-align":"center"}},null,-1),net={style:{"text-align":"left"}},set=t("code",null,"深度优先搜索",-1),ret=t("code",null,"广度优先搜索",-1),det=t("code",null,"图",-1),_et=t("td",{style:{"text-align":"center"}},"🟠",-1),cet={style:{"text-align":"center"}},aet={href:"https://leetcode.cn/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},iet={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},het=t("td",{style:{"text-align":"center"}},"3313",-1),fet=t("td",{style:{"text-align":"left"}},"查找树中最后标记的节点 🔒",-1),get=t("td",{style:{"text-align":"center"}},null,-1),uet={style:{"text-align":"left"}},met=t("code",null,"树",-1),pet=t("code",null,"深度优先搜索",-1),yet=t("td",{style:{"text-align":"center"}},"🔴",-1),bet={style:{"text-align":"center"}},xet={href:"https://leetcode.cn/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},ket={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},vet=t("td",{style:{"text-align":"center"}},"3319",-1),wet=t("td",{style:{"text-align":"left"}},"第 K 大的完美二叉子树的大小",-1),Iet={style:{"text-align":"center"}},zet={style:{"text-align":"left"}},qet=t("code",null,"树",-1),jet=t("code",null,"深度优先搜索",-1),Net=t("code",null,"二叉树",-1),Vet=t("code",null,"1+",-1),Ket=t("td",{style:{"text-align":"center"}},"🟠",-1),Let={style:{"text-align":"center"}},Bet={href:"https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cet={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eet=t("td",{style:{"text-align":"center"}},"3327",-1),Ret=t("td",{style:{"text-align":"left"}},"判断 DFS 字符串是否是回文串",-1),Fet=t("td",{style:{"text-align":"center"}},null,-1),Set={style:{"text-align":"left"}},Tet=t("code",null,"树",-1),Det=t("code",null,"深度优先搜索",-1),Aet=t("code",null,"数组",-1),Get=t("code",null,"3+",-1),Het=t("td",{style:{"text-align":"center"}},"🔴",-1),Jet={style:{"text-align":"center"}},Met={href:"https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},Oet={href:"https://leetcode.com/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"};function Pet(Qet,Uet){const l=r("RouterLink"),s=r("ExternalLinkIcon");return _(),c("div",null,[h,t("details",null,[f,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[u]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[H]),_:1})]),J,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),nt,e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[ft]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[gt]),_:1})]),ut,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Kt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Bt]),_:1})])]),Ct,a(" prettier-ignore "),t("table",null,[Et,t("tbody",null,[t("tr",null,[Rt,Ft,t("td",St,[o(l,{to:"/problem/0094.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Dt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[At]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gt]),_:1}),e(),Ht]),Jt,t("td",Mt,[t("a",Ot,[e("🀄️"),o(s)]),e(),t("a",Pt,[e("🔗"),o(s)])])]),t("tr",null,[Qt,Ut,t("td",Wt,[o(l,{to:"/problem/0098.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,re,t("td",de,[o(l,{to:"/problem/0099.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[ie]),_:1}),e(),he]),fe,t("td",ge,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[pe,ye,t("td",be,[o(l,{to:"/problem/0100.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ve]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[we]),_:1}),e(),Ie]),ze,t("td",qe,[t("a",je,[e("🀄️"),o(s)]),e(),t("a",Ne,[e("🔗"),o(s)])])]),t("tr",null,[Ve,Ke,t("td",Le,[o(l,{to:"/problem/0101.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Be,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ce]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ee]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Re]),_:1}),e(),Fe]),Se,t("td",Te,[t("a",De,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[Ge,He,t("td",Je,[o(l,{to:"/problem/0104.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Me,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Oe]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Qe]),_:1}),e(),Ue]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0110.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[so]),_:1})]),ro,t("td",_o,[t("a",co,[e("🀄️"),o(s)]),e(),t("a",ao,[e("🔗"),o(s)])])]),t("tr",null,[io,ho,t("td",fo,[o(l,{to:"/problem/0111.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",go,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[po]),_:1}),e(),yo]),bo,t("td",xo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[wo,Io,t("td",zo,[o(l,{to:"/problem/0112.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qo,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[No]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Vo]),_:1}),e(),Ko]),Lo,t("td",Bo,[t("a",Co,[e("🀄️"),o(s)]),e(),t("a",Eo,[e("🔗"),o(s)])])]),t("tr",null,[Ro,Fo,t("td",So,[o(l,{to:"/problem/0113.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",To,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Do]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ao]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[Go]),_:1}),e(),Ho]),Jo,t("td",Mo,[t("a",Oo,[e("🀄️"),o(s)]),e(),t("a",Po,[e("🔗"),o(s)])])]),t("tr",null,[Qo,Uo,t("td",Wo,[o(l,{to:"/problem/0114.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yo]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Zo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$o]),_:1}),e(),tl]),el,t("td",ol,[t("a",ll,[e("🀄️"),o(s)]),e(),t("a",nl,[e("🔗"),o(s)])])]),t("tr",null,[sl,rl,t("td",dl,[o(l,{to:"/problem/0116.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_l,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[al]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[il]),_:1}),e(),hl]),fl,t("td",gl,[t("a",ul,[e("🀄️"),o(s)]),e(),t("a",ml,[e("🔗"),o(s)])])]),t("tr",null,[pl,yl,t("td",bl,[o(l,{to:"/problem/0117.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[wl]),_:1}),e(),Il]),zl,t("td",ql,[t("a",jl,[e("🀄️"),o(s)]),e(),t("a",Nl,[e("🔗"),o(s)])])]),t("tr",null,[Vl,Kl,t("td",Ll,[o(l,{to:"/problem/0124.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bl,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[El]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Rl]),_:1}),e(),Fl]),Sl,t("td",Tl,[t("a",Dl,[e("🀄️"),o(s)]),e(),t("a",Al,[e("🔗"),o(s)])])]),t("tr",null,[Gl,Hl,t("td",Jl,[o(l,{to:"/problem/0129.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ml,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ol]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ql]),_:1})]),Ul,t("td",Wl,[t("a",Xl,[e("🀄️"),o(s)]),e(),t("a",Yl,[e("🔗"),o(s)])])]),t("tr",null,[Zl,$l,t("td",tn,[o(l,{to:"/problem/0130.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",en,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ln]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[nn]),_:1}),e(),sn]),rn,t("td",dn,[t("a",_n,[e("🀄️"),o(s)]),e(),t("a",cn,[e("🔗"),o(s)])])]),t("tr",null,[an,hn,t("td",fn,[o(l,{to:"/problem/0133.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gn,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[un]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mn]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[pn]),_:1}),e(),yn]),bn,t("td",xn,[t("a",kn,[e("🀄️"),o(s)]),e(),t("a",vn,[e("🔗"),o(s)])])]),t("tr",null,[wn,In,t("td",zn,[o(l,{to:"/problem/0144.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jn]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Nn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Vn]),_:1}),e(),Kn]),Ln,t("td",Bn,[t("a",Cn,[e("🀄️"),o(s)]),e(),t("a",En,[e("🔗"),o(s)])])]),t("tr",null,[Rn,Fn,t("td",Sn,[o(l,{to:"/problem/0145.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Tn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Dn]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[An]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gn]),_:1}),e(),Hn]),Jn,t("td",Mn,[t("a",On,[e("🀄️"),o(s)]),e(),t("a",Pn,[e("🔗"),o(s)])])]),t("tr",null,[Qn,Un,t("td",Wn,[o(l,{to:"/problem/0156.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zn]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[$n]),_:1})]),ts,t("td",es,[t("a",os,[e("🀄️"),o(s)]),e(),t("a",ls,[e("🔗"),o(s)])])]),t("tr",null,[ns,ss,t("td",rs,[o(l,{to:"/problem/0199.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ds,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_s]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[as]),_:1}),e(),is]),hs,t("td",fs,[t("a",gs,[e("🀄️"),o(s)]),e(),t("a",us,[e("🔗"),o(s)])])]),t("tr",null,[ms,ps,t("td",ys,[o(l,{to:"/problem/0200.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bs,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ks]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[vs]),_:1}),e(),ws]),Is,t("td",zs,[t("a",qs,[e("🀄️"),o(s)]),e(),t("a",js,[e("🔗"),o(s)])])]),t("tr",null,[Ns,Vs,t("td",Ks,[o(l,{to:"/problem/0207.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ls,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Bs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Cs]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Es]),_:1}),e(),Rs]),Fs,t("td",Ss,[t("a",Ts,[e("🀄️"),o(s)]),e(),t("a",Ds,[e("🔗"),o(s)])])]),t("tr",null,[As,Gs,t("td",Hs,[o(l,{to:"/problem/0210.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Js,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ms]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Os]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ps]),_:1}),e(),Qs]),Us,t("td",Ws,[t("a",Xs,[e("🀄️"),o(s)]),e(),t("a",Ys,[e("🔗"),o(s)])])]),t("tr",null,[Zs,$s,t("td",tr,[o(l,{to:"/problem/0211.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",er,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[or]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[lr]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[nr]),_:1}),e(),sr]),rr,t("td",dr,[t("a",_r,[e("🀄️"),o(s)]),e(),t("a",cr,[e("🔗"),o(s)])])]),t("tr",null,[ar,ir,t("td",hr,[o(l,{to:"/problem/0226.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ur]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mr]),_:1}),e(),pr]),yr,t("td",br,[t("a",xr,[e("🀄️"),o(s)]),e(),t("a",kr,[e("🔗"),o(s)])])]),t("tr",null,[vr,wr,t("td",Ir,[o(l,{to:"/problem/0230.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jr]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Nr]),_:1}),e(),Vr]),Kr,t("td",Lr,[t("a",Br,[e("🀄️"),o(s)]),e(),t("a",Cr,[e("🔗"),o(s)])])]),t("tr",null,[Er,Rr,t("td",Fr,[o(l,{to:"/problem/0235.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Tr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dr]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ar]),_:1}),e(),Gr]),Hr,t("td",Jr,[t("a",Mr,[e("🀄️"),o(s)]),e(),t("a",Or,[e("🔗"),o(s)])])]),t("tr",null,[Pr,Qr,t("td",Ur,[o(l,{to:"/problem/0236.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Wr,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Xr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Yr]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Zr]),_:1})]),$r,t("td",td,[t("a",ed,[e("🀄️"),o(s)]),e(),t("a",od,[e("🔗"),o(s)])])]),t("tr",null,[ld,nd,sd,t("td",rd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_d]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[cd]),_:1})]),ad,t("td",id,[t("a",hd,[e("🀄️"),o(s)]),e(),t("a",fd,[e("🔗"),o(s)])])]),t("tr",null,[gd,ud,t("td",md,[o(l,{to:"/problem/0257.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pd,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bd]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xd]),_:1}),e(),kd]),vd,t("td",wd,[t("a",Id,[e("🀄️"),o(s)]),e(),t("a",zd,[e("🔗"),o(s)])])]),t("tr",null,[qd,jd,Nd,t("td",Vd,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Bd]),_:1}),e(),Cd]),Ed,t("td",Rd,[t("a",Fd,[e("🀄️"),o(s)]),e(),t("a",Sd,[e("🔗"),o(s)])])]),t("tr",null,[Td,Dd,Ad,t("td",Gd,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Jd]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Md]),_:1}),e(),Od]),Pd,t("td",Qd,[t("a",Ud,[e("🀄️"),o(s)]),e(),t("a",Wd,[e("🔗"),o(s)])])]),t("tr",null,[Xd,Yd,Zd,t("td",$d,[o(l,{to:"/tag/tree.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[e_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[o_]),_:1}),e(),l_]),n_,t("td",s_,[t("a",r_,[e("🀄️"),o(s)]),e(),t("a",d_,[e("🔗"),o(s)])])]),t("tr",null,[__,c_,a_,t("td",i_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[h_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[f_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[g_]),_:1}),e(),u_]),m_,t("td",p_,[t("a",y_,[e("🀄️"),o(s)]),e(),t("a",b_,[e("🔗"),o(s)])])]),t("tr",null,[x_,k_,v_,t("td",w_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[I_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[z_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[q_]),_:1}),e(),j_]),N_,t("td",V_,[t("a",K_,[e("🀄️"),o(s)]),e(),t("a",L_,[e("🔗"),o(s)])])]),t("tr",null,[B_,C_,t("td",E_,[o(l,{to:"/problem/0297.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",R_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[F_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[S_]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[T_]),_:1}),e(),D_]),A_,t("td",G_,[t("a",H_,[e("🀄️"),o(s)]),e(),t("a",J_,[e("🔗"),o(s)])])]),t("tr",null,[M_,O_,P_,t("td",Q_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[U_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[W_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[X_]),_:1})]),Y_,t("td",Z_,[t("a",$_,[e("🀄️"),o(s)]),e(),t("a",tc,[e("🔗"),o(s)])])]),t("tr",null,[ec,oc,lc,t("td",nc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dc]),_:1}),e(),_c]),cc,t("td",ac,[t("a",ic,[e("🀄️"),o(s)]),e(),t("a",hc,[e("🔗"),o(s)])])]),t("tr",null,[fc,gc,t("td",uc,[o(l,{to:"/problem/0310.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yc]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[bc]),_:1}),e(),xc]),kc,t("td",vc,[t("a",wc,[e("🀄️"),o(s)]),e(),t("a",Ic,[e("🔗"),o(s)])])]),t("tr",null,[zc,qc,jc,t("td",Nc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Lc]),_:1}),e(),Bc]),Cc,t("td",Ec,[t("a",Rc,[e("🀄️"),o(s)]),e(),t("a",Fc,[e("🔗"),o(s)])])]),t("tr",null,[Sc,Tc,Dc,t("td",Ac,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Hc]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Jc]),_:1}),e(),Mc]),Oc,t("td",Pc,[t("a",Qc,[e("🀄️"),o(s)]),e(),t("a",Uc,[e("🔗"),o(s)])])]),t("tr",null,[Wc,Xc,t("td",Yc,[o(l,{to:"/problem/0329.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zc,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$c]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ta]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ea]),_:1}),e(),oa]),la,t("td",na,[t("a",sa,[e("🀄️"),o(s)]),e(),t("a",ra,[e("🔗"),o(s)])])]),t("tr",null,[da,_a,ca,t("td",aa,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ia]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[ha]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[fa]),_:1})]),ga,t("td",ua,[t("a",ma,[e("🀄️"),o(s)]),e(),t("a",pa,[e("🔗"),o(s)])])]),t("tr",null,[ya,ba,xa,t("td",ka,[o(l,{to:"/tag/tree.html"},{default:n(()=>[va]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wa]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ia]),_:1}),e(),za]),qa,t("td",ja,[t("a",Na,[e("🀄️"),o(s)]),e(),t("a",Va,[e("🔗"),o(s)])])]),t("tr",null,[Ka,La,t("td",Ba,[o(l,{to:"/problem/0337.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ca,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ea]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ra]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fa]),_:1}),e(),Sa]),Ta,t("td",Da,[t("a",Aa,[e("🀄️"),o(s)]),e(),t("a",Ga,[e("🔗"),o(s)])])]),t("tr",null,[Ha,Ja,Ma,t("td",Oa,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pa]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Qa]),_:1})]),Ua,t("td",Wa,[t("a",Xa,[e("🀄️"),o(s)]),e(),t("a",Ya,[e("🔗"),o(s)])])]),t("tr",null,[Za,$a,t("td",ti,[o(l,{to:"/problem/0341.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ei,[o(l,{to:"/tag/stack.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[li]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ni]),_:1}),e(),si]),ri,t("td",di,[t("a",_i,[e("🀄️"),o(s)]),e(),t("a",ci,[e("🔗"),o(s)])])]),t("tr",null,[ai,ii,hi,t("td",fi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ui]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mi]),_:1})]),pi,t("td",yi,[t("a",bi,[e("🀄️"),o(s)]),e(),t("a",xi,[e("🔗"),o(s)])])]),t("tr",null,[ki,vi,t("td",wi,[o(l,{to:"/problem/0365.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ii,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qi]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ji]),_:1})]),Ni,t("td",Vi,[t("a",Ki,[e("🀄️"),o(s)]),e(),t("a",Li,[e("🔗"),o(s)])])]),t("tr",null,[Bi,Ci,t("td",Ei,[o(l,{to:"/problem/0366.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ri,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Si]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Ti]),_:1})]),Di,t("td",Ai,[t("a",Gi,[e("🀄️"),o(s)]),e(),t("a",Hi,[e("🔗"),o(s)])])]),t("tr",null,[Ji,Mi,t("td",Oi,[o(l,{to:"/problem/0385.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Pi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Qi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ui]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Wi]),_:1})]),Xi,t("td",Yi,[t("a",Zi,[e("🀄️"),o(s)]),e(),t("a",$i,[e("🔗"),o(s)])])]),t("tr",null,[th,eh,t("td",oh,[o(l,{to:"/problem/0386.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lh,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nh]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[sh]),_:1})]),rh,t("td",dh,[t("a",_h,[e("🀄️"),o(s)]),e(),t("a",ch,[e("🔗"),o(s)])])]),t("tr",null,[ah,ih,t("td",hh,[o(l,{to:"/problem/0388.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[gh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uh]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[mh]),_:1})]),ph,t("td",yh,[t("a",bh,[e("🀄️"),o(s)]),e(),t("a",xh,[e("🔗"),o(s)])])]),t("tr",null,[kh,vh,t("td",wh,[o(l,{to:"/problem/0399.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ih,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qh]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[jh]),_:1}),e(),Nh]),Vh,t("td",Kh,[t("a",Lh,[e("🀄️"),o(s)]),e(),t("a",Bh,[e("🔗"),o(s)])])]),t("tr",null,[Ch,Eh,t("td",Rh,[o(l,{to:"/problem/0404.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Sh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Th]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Dh]),_:1}),e(),Ah]),Gh,t("td",Hh,[t("a",Jh,[e("🀄️"),o(s)]),e(),t("a",Mh,[e("🔗"),o(s)])])]),t("tr",null,[Oh,Ph,t("td",Qh,[o(l,{to:"/problem/0417.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Uh,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Xh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yh]),_:1}),e(),Zh]),$h,t("td",t1,[t("a",e1,[e("🀄️"),o(s)]),e(),t("a",o1,[e("🔗"),o(s)])])]),t("tr",null,[l1,n1,t("td",s1,[o(l,{to:"/problem/0419.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",r1,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[d1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_1]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[c1]),_:1})]),a1,t("td",i1,[t("a",h1,[e("🀄️"),o(s)]),e(),t("a",f1,[e("🔗"),o(s)])])]),t("tr",null,[g1,u1,t("td",m1,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",p1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[y1]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[b1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[x1]),_:1}),e(),k1]),v1,t("td",w1,[t("a",I1,[e("🀄️"),o(s)]),e(),t("a",z1,[e("🔗"),o(s)])])]),t("tr",null,[q1,j1,N1,t("td",V1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[K1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[L1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[B1]),_:1}),e(),C1]),E1,t("td",R1,[t("a",F1,[e("🀄️"),o(s)]),e(),t("a",S1,[e("🔗"),o(s)])])]),t("tr",null,[T1,D1,t("td",A1,[o(l,{to:"/problem/0430.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",G1,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[H1]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[J1]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[M1]),_:1})]),O1,t("td",P1,[t("a",Q1,[e("🀄️"),o(s)]),e(),t("a",U1,[e("🔗"),o(s)])])]),t("tr",null,[W1,X1,Y1,t("td",Z1,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ef]),_:1}),e(),of]),lf,t("td",nf,[t("a",sf,[e("🀄️"),o(s)]),e(),t("a",rf,[e("🔗"),o(s)])])]),t("tr",null,[df,_f,t("td",cf,[o(l,{to:"/problem/0437.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",af,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ff]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[gf]),_:1})]),uf,t("td",mf,[t("a",pf,[e("🀄️"),o(s)]),e(),t("a",yf,[e("🔗"),o(s)])])]),t("tr",null,[bf,xf,t("td",kf,[o(l,{to:"/problem/0449.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vf,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[If]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[zf]),_:1}),e(),qf]),jf,t("td",Nf,[t("a",Vf,[e("🀄️"),o(s)]),e(),t("a",Kf,[e("🔗"),o(s)])])]),t("tr",null,[Lf,Bf,t("td",Cf,[o(l,{to:"/problem/0463.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ef,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ff]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Sf]),_:1}),e(),Tf]),Df,t("td",Af,[t("a",Gf,[e("🀄️"),o(s)]),e(),t("a",Hf,[e("🔗"),o(s)])])]),t("tr",null,[Jf,Mf,Of,t("td",Pf,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qf]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Uf]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wf]),_:1}),e(),Xf]),Yf,t("td",Zf,[t("a",$f,[e("🀄️"),o(s)]),e(),t("a",tg,[e("🔗"),o(s)])])]),t("tr",null,[eg,og,lg,t("td",ng,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dg]),_:1}),e(),_g]),cg,t("td",ag,[t("a",ig,[e("🀄️"),o(s)]),e(),t("a",hg,[e("🔗"),o(s)])])]),t("tr",null,[fg,gg,ug,t("td",mg,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[yg]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[bg]),_:1}),e(),xg]),kg,t("td",vg,[t("a",wg,[e("🀄️"),o(s)]),e(),t("a",Ig,[e("🔗"),o(s)])])]),t("tr",null,[zg,qg,t("td",jg,[o(l,{to:"/problem/0501.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ng,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kg]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Lg]),_:1}),e(),Bg]),Cg,t("td",Eg,[t("a",Rg,[e("🀄️"),o(s)]),e(),t("a",Fg,[e("🔗"),o(s)])])]),t("tr",null,[Sg,Tg,Dg,t("td",Ag,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Hg]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Jg]),_:1}),e(),Mg]),Og,t("td",Pg,[t("a",Qg,[e("🀄️"),o(s)]),e(),t("a",Ug,[e("🔗"),o(s)])])]),t("tr",null,[Wg,Xg,Yg,t("td",Zg,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$g]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tu]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[eu]),_:1}),e(),ou]),lu,t("td",nu,[t("a",su,[e("🀄️"),o(s)]),e(),t("a",ru,[e("🔗"),o(s)])])]),t("tr",null,[du,_u,cu,t("td",au,[o(l,{to:"/tag/tree.html"},{default:n(()=>[iu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[hu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[fu]),_:1}),e(),gu]),uu,t("td",mu,[t("a",pu,[e("🀄️"),o(s)]),e(),t("a",yu,[e("🔗"),o(s)])])]),t("tr",null,[bu,xu,t("td",ku,[o(l,{to:"/problem/0514.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vu,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Iu]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[zu]),_:1}),e(),qu]),ju,t("td",Nu,[t("a",Vu,[e("🀄️"),o(s)]),e(),t("a",Ku,[e("🔗"),o(s)])])]),t("tr",null,[Lu,Bu,t("td",Cu,[o(l,{to:"/problem/0515.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Eu,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ru]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Su]),_:1}),e(),Tu]),Du,t("td",Au,[t("a",Gu,[e("🀄️"),o(s)]),e(),t("a",Hu,[e("🔗"),o(s)])])]),t("tr",null,[Ju,Mu,Ou,t("td",Pu,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Uu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wu]),_:1}),e(),Xu]),Yu,t("td",Zu,[t("a",$u,[e("🀄️"),o(s)]),e(),t("a",tm,[e("🔗"),o(s)])])]),t("tr",null,[em,om,t("td",lm,[o(l,{to:"/problem/0530.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[sm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rm]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[dm]),_:1}),e(),_m]),cm,t("td",am,[t("a",im,[e("🀄️"),o(s)]),e(),t("a",hm,[e("🔗"),o(s)])])]),t("tr",null,[fm,gm,um,t("td",mm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pm]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ym]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bm]),_:1}),e(),xm]),km,t("td",vm,[t("a",wm,[e("🀄️"),o(s)]),e(),t("a",Im,[e("🔗"),o(s)])])]),t("tr",null,[zm,qm,jm,t("td",Nm,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Km]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Lm]),_:1}),e(),Bm]),Cm,t("td",Em,[t("a",Rm,[e("🀄️"),o(s)]),e(),t("a",Fm,[e("🔗"),o(s)])])]),t("tr",null,[Sm,Tm,t("td",Dm,[o(l,{to:"/problem/0543.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Am,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hm]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Jm]),_:1})]),Mm,t("td",Om,[t("a",Pm,[e("🀄️"),o(s)]),e(),t("a",Qm,[e("🔗"),o(s)])])]),t("tr",null,[Um,Wm,Xm,t("td",Ym,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Zm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$m]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[tp]),_:1})]),ep,t("td",op,[t("a",lp,[e("🀄️"),o(s)]),e(),t("a",np,[e("🔗"),o(s)])])]),t("tr",null,[sp,rp,t("td",dp,[o(l,{to:"/problem/0547.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_p,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ap]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[ip]),_:1}),e(),hp]),fp,t("td",gp,[t("a",up,[e("🀄️"),o(s)]),e(),t("a",mp,[e("🔗"),o(s)])])]),t("tr",null,[pp,yp,bp,t("td",xp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[wp]),_:1})]),Ip,t("td",zp,[t("a",qp,[e("🀄️"),o(s)]),e(),t("a",jp,[e("🔗"),o(s)])])]),t("tr",null,[Np,Vp,t("td",Kp,[o(l,{to:"/problem/0559.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Lp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Bp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ep]),_:1})]),Rp,t("td",Fp,[t("a",Sp,[e("🀄️"),o(s)]),e(),t("a",Tp,[e("🔗"),o(s)])])]),t("tr",null,[Dp,Ap,t("td",Gp,[o(l,{to:"/problem/0563.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hp,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Op]),_:1})]),Pp,t("td",Qp,[t("a",Up,[e("🀄️"),o(s)]),e(),t("a",Wp,[e("🔗"),o(s)])])]),t("tr",null,[Xp,Yp,Zp,t("td",$p,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[e2]),_:1})]),o2,t("td",l2,[t("a",n2,[e("🀄️"),o(s)]),e(),t("a",s2,[e("🔗"),o(s)])])]),t("tr",null,[r2,d2,t("td",_2,[o(l,{to:"/problem/0572.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",c2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[a2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i2]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[h2]),_:1}),e(),f2]),g2,t("td",u2,[t("a",m2,[e("🀄️"),o(s)]),e(),t("a",p2,[e("🔗"),o(s)])])]),t("tr",null,[y2,b2,x2,t("td",k2,[o(l,{to:"/tag/tree.html"},{default:n(()=>[v2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[I2]),_:1}),e(),z2]),q2,t("td",j2,[t("a",N2,[e("🀄️"),o(s)]),e(),t("a",V2,[e("🔗"),o(s)])])]),t("tr",null,[K2,L2,t("td",B2,[o(l,{to:"/problem/0589.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",C2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[E2]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[R2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[F2]),_:1})]),S2,t("td",T2,[t("a",D2,[e("🀄️"),o(s)]),e(),t("a",A2,[e("🔗"),o(s)])])]),t("tr",null,[G2,H2,t("td",J2,[o(l,{to:"/problem/0590.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",M2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[O2]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[P2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q2]),_:1})]),U2,t("td",W2,[t("a",X2,[e("🀄️"),o(s)]),e(),t("a",Y2,[e("🔗"),o(s)])])]),t("tr",null,[Z2,$2,ty,t("td",ey,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ly]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ny]),_:1}),e(),sy]),ry,t("td",dy,[t("a",_y,[e("🀄️"),o(s)]),e(),t("a",cy,[e("🔗"),o(s)])])]),t("tr",null,[ay,iy,t("td",hy,[o(l,{to:"/problem/0617.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[my]),_:1}),e(),py]),yy,t("td",by,[t("a",xy,[e("🀄️"),o(s)]),e(),t("a",ky,[e("🔗"),o(s)])])]),t("tr",null,[vy,wy,Iy,t("td",zy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ny]),_:1}),e(),Vy]),Ky,t("td",Ly,[t("a",By,[e("🀄️"),o(s)]),e(),t("a",Cy,[e("🔗"),o(s)])])]),t("tr",null,[Ey,Ry,t("td",Fy,[o(l,{to:"/problem/0637.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sy,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ty]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ay]),_:1}),e(),Gy]),Hy,t("td",Jy,[t("a",My,[e("🀄️"),o(s)]),e(),t("a",Oy,[e("🔗"),o(s)])])]),t("tr",null,[Py,Qy,Uy,t("td",Wy,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xy]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Yy]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Zy]),_:1}),e(),$y]),tb,t("td",eb,[t("a",ob,[e("🀄️"),o(s)]),e(),t("a",lb,[e("🔗"),o(s)])])]),t("tr",null,[nb,sb,rb,t("td",db,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_b]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cb]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ab]),_:1}),e(),ib]),hb,t("td",fb,[t("a",gb,[e("🀄️"),o(s)]),e(),t("a",ub,[e("🔗"),o(s)])])]),t("tr",null,[mb,pb,t("td",yb,[o(l,{to:"/problem/0653.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[xb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vb]),_:1}),e(),wb]),Ib,t("td",zb,[t("a",qb,[e("🀄️"),o(s)]),e(),t("a",jb,[e("🔗"),o(s)])])]),t("tr",null,[Nb,Vb,Kb,t("td",Lb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Bb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Eb]),_:1}),e(),Rb]),Fb,t("td",Sb,[t("a",Tb,[e("🀄️"),o(s)]),e(),t("a",Db,[e("🔗"),o(s)])])]),t("tr",null,[Ab,Gb,t("td",Hb,[o(l,{to:"/problem/0662.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jb,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Mb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ob]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Pb]),_:1}),e(),Qb]),Ub,t("td",Wb,[t("a",Xb,[e("🀄️"),o(s)]),e(),t("a",Yb,[e("🔗"),o(s)])])]),t("tr",null,[Zb,$b,t3,t("td",e3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[o3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[l3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[n3]),_:1})]),s3,t("td",r3,[t("a",d3,[e("🀄️"),o(s)]),e(),t("a",_3,[e("🔗"),o(s)])])]),t("tr",null,[c3,a3,i3,t("td",h3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[f3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[g3]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[u3]),_:1}),e(),m3]),p3,t("td",y3,[t("a",b3,[e("🀄️"),o(s)]),e(),t("a",x3,[e("🔗"),o(s)])])]),t("tr",null,[k3,v3,w3,t("td",I3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[z3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[q3]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[j3]),_:1}),e(),N3]),V3,t("td",K3,[t("a",L3,[e("🀄️"),o(s)]),e(),t("a",B3,[e("🔗"),o(s)])])]),t("tr",null,[C3,E3,t("td",R3,[o(l,{to:"/problem/0671.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",F3,[o(l,{to:"/tag/tree.html"},{default:n(()=>[S3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[T3]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[D3]),_:1})]),A3,t("td",G3,[t("a",H3,[e("🀄️"),o(s)]),e(),t("a",J3,[e("🔗"),o(s)])])]),t("tr",null,[M3,O3,P3,t("td",Q3,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[U3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[W3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[X3]),_:1}),e(),Y3]),Z3,t("td",$3,[t("a",tx,[e("🀄️"),o(s)]),e(),t("a",ex,[e("🔗"),o(s)])])]),t("tr",null,[ox,lx,nx,t("td",sx,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rx]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[dx]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[_x]),_:1}),e(),cx]),ax,t("td",ix,[t("a",hx,[e("🀄️"),o(s)]),e(),t("a",fx,[e("🔗"),o(s)])])]),t("tr",null,[gx,ux,t("td",mx,[o(l,{to:"/problem/0684.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",px,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bx]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[xx]),_:1}),e(),kx]),vx,t("td",wx,[t("a",Ix,[e("🀄️"),o(s)]),e(),t("a",zx,[e("🔗"),o(s)])])]),t("tr",null,[qx,jx,Nx,t("td",Vx,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Lx]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Bx]),_:1}),e(),Cx]),Ex,t("td",Rx,[t("a",Fx,[e("🀄️"),o(s)]),e(),t("a",Sx,[e("🔗"),o(s)])])]),t("tr",null,[Tx,Dx,Ax,t("td",Gx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Hx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Jx]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Mx]),_:1})]),Ox,t("td",Px,[t("a",Qx,[e("🀄️"),o(s)]),e(),t("a",Ux,[e("🔗"),o(s)])])]),t("tr",null,[Wx,Xx,Yx,t("td",Zx,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$x]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[t4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[e4]),_:1}),e(),o4]),l4,t("td",n4,[t("a",s4,[e("🀄️"),o(s)]),e(),t("a",r4,[e("🔗"),o(s)])])]),t("tr",null,[d4,_4,c4,t("td",a4,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[h4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[f4]),_:1}),e(),g4]),u4,t("td",m4,[t("a",p4,[e("🀄️"),o(s)]),e(),t("a",y4,[e("🔗"),o(s)])])]),t("tr",null,[b4,x4,t("td",k4,[o(l,{to:"/problem/0695.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",v4,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[I4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[z4]),_:1}),e(),q4]),j4,t("td",N4,[t("a",V4,[e("🀄️"),o(s)]),e(),t("a",K4,[e("🔗"),o(s)])])]),t("tr",null,[L4,B4,C4,t("td",E4,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[R4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[F4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[S4]),_:1}),e(),T4]),D4,t("td",A4,[t("a",G4,[e("🀄️"),o(s)]),e(),t("a",H4,[e("🔗"),o(s)])])]),t("tr",null,[J4,M4,O4,t("td",P4,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Q4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[U4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[W4]),_:1}),e(),X4]),Y4,t("td",Z4,[t("a",$4,[e("🀄️"),o(s)]),e(),t("a",t5,[e("🔗"),o(s)])])]),t("tr",null,[e5,o5,t("td",l5,[o(l,{to:"/problem/0733.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",n5,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[r5]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[d5]),_:1}),e(),_5]),c5,t("td",a5,[t("a",i5,[e("🀄️"),o(s)]),e(),t("a",h5,[e("🔗"),o(s)])])]),t("tr",null,[f5,g5,u5,t("td",m5,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[p5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[y5]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[b5]),_:1}),e(),x5]),k5,t("td",v5,[t("a",w5,[e("🀄️"),o(s)]),e(),t("a",I5,[e("🔗"),o(s)])])]),t("tr",null,[z5,q5,j5,t("td",N5,[o(l,{to:"/tag/tree.html"},{default:n(()=>[V5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[K5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[L5]),_:1}),e(),B5]),C5,t("td",E5,[t("a",R5,[e("🀄️"),o(s)]),e(),t("a",F5,[e("🔗"),o(s)])])]),t("tr",null,[S5,T5,D5,t("td",A5,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[G5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[H5]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[J5]),_:1}),e(),M5]),O5,t("td",P5,[t("a",Q5,[e("🀄️"),o(s)]),e(),t("a",U5,[e("🔗"),o(s)])])]),t("tr",null,[W5,X5,Y5,t("td",Z5,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[t0]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[e0]),_:1}),e(),o0]),l0,t("td",n0,[t("a",s0,[e("🀄️"),o(s)]),e(),t("a",r0,[e("🔗"),o(s)])])]),t("tr",null,[d0,_0,c0,t("td",a0,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[i0]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[h0]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[f0]),_:1})]),g0,t("td",u0,[t("a",m0,[e("🀄️"),o(s)]),e(),t("a",p0,[e("🔗"),o(s)])])]),t("tr",null,[y0,b0,x0,t("td",k0,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[v0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[w0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[I0]),_:1})]),z0,t("td",q0,[t("a",j0,[e("🀄️"),o(s)]),e(),t("a",N0,[e("🔗"),o(s)])])]),t("tr",null,[V0,K0,L0,t("td",B0,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[C0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[E0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[R0]),_:1}),e(),F0]),S0,t("td",T0,[t("a",D0,[e("🀄️"),o(s)]),e(),t("a",A0,[e("🔗"),o(s)])])]),t("tr",null,[G0,H0,J0,t("td",M0,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[O0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[P0]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Q0]),_:1}),e(),U0]),W0,t("td",X0,[t("a",Y0,[e("🀄️"),o(s)]),e(),t("a",Z0,[e("🔗"),o(s)])])]),t("tr",null,[$0,t6,t("td",e6,[o(l,{to:"/problem/0783.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",o6,[o(l,{to:"/tag/tree.html"},{default:n(()=>[l6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[n6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[s6]),_:1}),e(),r6]),d6,t("td",_6,[t("a",c6,[e("🀄️"),o(s)]),e(),t("a",a6,[e("🔗"),o(s)])])]),t("tr",null,[i6,h6,f6,t("td",g6,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[u6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[m6]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[p6]),_:1}),e(),y6]),b6,t("td",x6,[t("a",k6,[e("🀄️"),o(s)]),e(),t("a",v6,[e("🔗"),o(s)])])]),t("tr",null,[w6,I6,z6,t("td",q6,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[j6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[N6]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[V6]),_:1}),e(),K6]),L6,t("td",B6,[t("a",C6,[e("🀄️"),o(s)]),e(),t("a",E6,[e("🔗"),o(s)])])]),t("tr",null,[R6,F6,S6,t("td",T6,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[D6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[A6]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[G6]),_:1}),e(),H6]),J6,t("td",M6,[t("a",O6,[e("🀄️"),o(s)]),e(),t("a",P6,[e("🔗"),o(s)])])]),t("tr",null,[Q6,U6,t("td",W6,[o(l,{to:"/problem/0802.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",X6,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Y6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Z6]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$6]),_:1}),e(),t7]),e7,t("td",o7,[t("a",l7,[e("🀄️"),o(s)]),e(),t("a",n7,[e("🔗"),o(s)])])]),t("tr",null,[s7,r7,d7,t("td",_7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[c7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[a7]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[i7]),_:1})]),h7,t("td",f7,[t("a",g7,[e("🀄️"),o(s)]),e(),t("a",u7,[e("🔗"),o(s)])])]),t("tr",null,[m7,p7,t("td",y7,[o(l,{to:"/problem/0827.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",b7,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[x7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[k7]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[v7]),_:1}),e(),w7]),I7,t("td",z7,[t("a",q7,[e("🀄️"),o(s)]),e(),t("a",j7,[e("🔗"),o(s)])])]),t("tr",null,[N7,V7,K7,t("td",L7,[o(l,{to:"/tag/tree.html"},{default:n(()=>[B7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[C7]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[E7]),_:1}),e(),R7]),F7,t("td",S7,[t("a",T7,[e("🀄️"),o(s)]),e(),t("a",D7,[e("🔗"),o(s)])])]),t("tr",null,[A7,G7,H7,t("td",J7,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[M7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[O7]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[P7]),_:1}),e(),Q7]),U7,t("td",W7,[t("a",X7,[e("🀄️"),o(s)]),e(),t("a",Y7,[e("🔗"),o(s)])])]),t("tr",null,[Z7,$7,t("td",t9,[o(l,{to:"/problem/0841.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",e9,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[o9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[l9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[n9]),_:1})]),s9,t("td",r9,[t("a",d9,[e("🀄️"),o(s)]),e(),t("a",_9,[e("🔗"),o(s)])])]),t("tr",null,[c9,a9,i9,t("td",h9,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[f9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[g9]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[u9]),_:1}),e(),m9]),p9,t("td",y9,[t("a",b9,[e("🀄️"),o(s)]),e(),t("a",x9,[e("🔗"),o(s)])])]),t("tr",null,[k9,v9,w9,t("td",I9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[z9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[q9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[j9]),_:1}),e(),N9]),V9,t("td",K9,[t("a",L9,[e("🀄️"),o(s)]),e(),t("a",B9,[e("🔗"),o(s)])])]),t("tr",null,[C9,E9,R9,t("td",F9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[S9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[T9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[D9]),_:1}),e(),A9]),G9,t("td",H9,[t("a",J9,[e("🀄️"),o(s)]),e(),t("a",M9,[e("🔗"),o(s)])])]),t("tr",null,[O9,P9,t("td",Q9,[o(l,{to:"/problem/0872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",U9,[o(l,{to:"/tag/tree.html"},{default:n(()=>[W9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[X9]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Y9]),_:1})]),Z9,t("td",$9,[t("a",t8,[e("🀄️"),o(s)]),e(),t("a",e8,[e("🔗"),o(s)])])]),t("tr",null,[o8,l8,n8,t("td",s8,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[r8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[d8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[_8]),_:1}),e(),c8]),a8,t("td",i8,[t("a",h8,[e("🀄️"),o(s)]),e(),t("a",f8,[e("🔗"),o(s)])])]),t("tr",null,[g8,u8,t("td",m8,[o(l,{to:"/problem/0897.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",p8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[y8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[b8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[x8]),_:1}),e(),k8]),v8,t("td",w8,[t("a",I8,[e("🀄️"),o(s)]),e(),t("a",z8,[e("🔗"),o(s)])])]),t("tr",null,[q8,j8,N8,t("td",V8,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[K8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[L8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[B8]),_:1}),e(),C8]),E8,t("td",R8,[t("a",F8,[e("🀄️"),o(s)]),e(),t("a",S8,[e("🔗"),o(s)])])]),t("tr",null,[T8,D8,A8,t("td",G8,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[H8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[J8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[M8]),_:1}),e(),O8]),P8,t("td",Q8,[t("a",U8,[e("🀄️"),o(s)]),e(),t("a",W8,[e("🔗"),o(s)])])]),t("tr",null,[X8,Y8,Z8,t("td",$8,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ek]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ok]),_:1}),e(),lk]),nk,t("td",sk,[t("a",rk,[e("🀄️"),o(s)]),e(),t("a",dk,[e("🔗"),o(s)])])]),t("tr",null,[_k,ck,t("td",ak,[o(l,{to:"/problem/0938.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ik,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fk]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[gk]),_:1}),e(),uk]),mk,t("td",pk,[t("a",yk,[e("🀄️"),o(s)]),e(),t("a",bk,[e("🔗"),o(s)])])]),t("tr",null,[xk,kk,vk,t("td",wk,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ik]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[zk]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[qk]),_:1}),e(),jk]),Nk,t("td",Vk,[t("a",Kk,[e("🀄️"),o(s)]),e(),t("a",Lk,[e("🔗"),o(s)])])]),t("tr",null,[Bk,Ck,t("td",Ek,[o(l,{to:"/problem/0951.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rk,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Fk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sk]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Tk]),_:1})]),Dk,t("td",Ak,[t("a",Gk,[e("🀄️"),o(s)]),e(),t("a",Hk,[e("🔗"),o(s)])])]),t("tr",null,[Jk,Mk,Ok,t("td",Pk,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Qk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Uk]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Wk]),_:1}),e(),Xk]),Yk,t("td",Zk,[t("a",$k,[e("🀄️"),o(s)]),e(),t("a",tv,[e("🔗"),o(s)])])]),t("tr",null,[ev,ov,t("td",lv,[o(l,{to:"/problem/0965.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",nv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[sv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[dv]),_:1}),e(),_v]),cv,t("td",av,[t("a",iv,[e("🀄️"),o(s)]),e(),t("a",hv,[e("🔗"),o(s)])])]),t("tr",null,[fv,gv,uv,t("td",mv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[pv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yv]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bv]),_:1}),e(),xv]),kv,t("td",vv,[t("a",wv,[e("🀄️"),o(s)]),e(),t("a",Iv,[e("🔗"),o(s)])])]),t("tr",null,[zv,qv,jv,t("td",Nv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Vv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Kv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Lv]),_:1})]),Bv,t("td",Cv,[t("a",Ev,[e("🀄️"),o(s)]),e(),t("a",Rv,[e("🔗"),o(s)])])]),t("tr",null,[Fv,Sv,Tv,t("td",Dv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Av]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Gv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Hv]),_:1})]),Jv,t("td",Mv,[t("a",Ov,[e("🀄️"),o(s)]),e(),t("a",Pv,[e("🔗"),o(s)])])]),t("tr",null,[Qv,Uv,Wv,t("td",Xv,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Yv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$v]),_:1}),e(),tw]),ew,t("td",ow,[t("a",lw,[e("🀄️"),o(s)]),e(),t("a",nw,[e("🔗"),o(s)])])]),t("tr",null,[sw,rw,dw,t("td",_w,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aw]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[iw]),_:1}),e(),hw]),fw,t("td",gw,[t("a",uw,[e("🀄️"),o(s)]),e(),t("a",mw,[e("🔗"),o(s)])])]),t("tr",null,[pw,yw,t("td",bw,[o(l,{to:"/problem/0993.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ww]),_:1}),e(),Iw]),zw,t("td",qw,[t("a",jw,[e("🀄️"),o(s)]),e(),t("a",Nw,[e("🔗"),o(s)])])]),t("tr",null,[Vw,Kw,Lw,t("td",Bw,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ew]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Rw]),_:1}),e(),Fw]),Sw,t("td",Tw,[t("a",Dw,[e("🀄️"),o(s)]),e(),t("a",Aw,[e("🔗"),o(s)])])]),t("tr",null,[Gw,Hw,t("td",Jw,[o(l,{to:"/problem/1022.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mw,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ow]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pw]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Qw]),_:1})]),Uw,t("td",Ww,[t("a",Xw,[e("🀄️"),o(s)]),e(),t("a",Yw,[e("🔗"),o(s)])])]),t("tr",null,[Zw,$w,tI,t("td",eI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lI]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[nI]),_:1})]),sI,t("td",rI,[t("a",dI,[e("🀄️"),o(s)]),e(),t("a",_I,[e("🔗"),o(s)])])]),t("tr",null,[cI,aI,t("td",iI,[o(l,{to:"/problem/1028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[fI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gI]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[uI]),_:1}),e(),mI]),pI,t("td",yI,[t("a",bI,[e("🀄️"),o(s)]),e(),t("a",xI,[e("🔗"),o(s)])])]),t("tr",null,[kI,vI,wI,t("td",II,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jI]),_:1}),e(),NI]),VI,t("td",KI,[t("a",LI,[e("🀄️"),o(s)]),e(),t("a",BI,[e("🔗"),o(s)])])]),t("tr",null,[CI,EI,RI,t("td",FI,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[SI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[TI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[DI]),_:1}),e(),AI]),GI,t("td",HI,[t("a",JI,[e("🀄️"),o(s)]),e(),t("a",MI,[e("🔗"),o(s)])])]),t("tr",null,[OI,PI,QI,t("td",UI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[WI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XI]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[YI]),_:1}),e(),ZI]),$I,t("td",tz,[t("a",ez,[e("🀄️"),o(s)]),e(),t("a",oz,[e("🔗"),o(s)])])]),t("tr",null,[lz,nz,sz,t("td",rz,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_z]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[cz]),_:1})]),az,t("td",iz,[t("a",hz,[e("🀄️"),o(s)]),e(),t("a",fz,[e("🔗"),o(s)])])]),t("tr",null,[gz,uz,mz,t("td",pz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bz]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[xz]),_:1})]),kz,t("td",vz,[t("a",wz,[e("🀄️"),o(s)]),e(),t("a",Iz,[e("🔗"),o(s)])])]),t("tr",null,[zz,qz,jz,t("td",Nz,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Vz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Kz]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Lz]),_:1}),e(),Bz]),Cz,t("td",Ez,[t("a",Rz,[e("🀄️"),o(s)]),e(),t("a",Fz,[e("🔗"),o(s)])])]),t("tr",null,[Sz,Tz,Dz,t("td",Az,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Gz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Hz]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jz]),_:1}),e(),Mz]),Oz,t("td",Pz,[t("a",Qz,[e("🀄️"),o(s)]),e(),t("a",Uz,[e("🔗"),o(s)])])]),t("tr",null,[Wz,Xz,Yz,t("td",Zz,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$z]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[eq]),_:1})]),oq,t("td",lq,[t("a",nq,[e("🀄️"),o(s)]),e(),t("a",sq,[e("🔗"),o(s)])])]),t("tr",null,[rq,dq,_q,t("td",cq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hq]),_:1}),e(),fq]),gq,t("td",uq,[t("a",mq,[e("🀄️"),o(s)]),e(),t("a",pq,[e("🔗"),o(s)])])]),t("tr",null,[yq,bq,xq,t("td",kq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wq]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Iq]),_:1})]),zq,t("td",qq,[t("a",jq,[e("🀄️"),o(s)]),e(),t("a",Nq,[e("🔗"),o(s)])])]),t("tr",null,[Vq,Kq,t("td",Lq,[o(l,{to:"/problem/1161.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bq,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Eq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Rq]),_:1}),e(),Fq]),Sq,t("td",Tq,[t("a",Dq,[e("🀄️"),o(s)]),e(),t("a",Aq,[e("🔗"),o(s)])])]),t("tr",null,[Gq,Hq,Jq,t("td",Mq,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Oq]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Pq]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[Qq]),_:1})]),Uq,t("td",Wq,[t("a",Xq,[e("🀄️"),o(s)]),e(),t("a",Yq,[e("🔗"),o(s)])])]),t("tr",null,[Zq,$q,tj,t("td",ej,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oj]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[lj]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[nj]),_:1}),e(),sj]),rj,t("td",dj,[t("a",_j,[e("🀄️"),o(s)]),e(),t("a",cj,[e("🔗"),o(s)])])]),t("tr",null,[aj,ij,hj,t("td",fj,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gj]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[uj]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[mj]),_:1}),e(),pj]),yj,t("td",bj,[t("a",xj,[e("🀄️"),o(s)]),e(),t("a",kj,[e("🔗"),o(s)])])]),t("tr",null,[vj,wj,Ij,t("td",zj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[qj]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[jj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Nj]),_:1}),e(),Vj]),Kj,t("td",Lj,[t("a",Bj,[e("🀄️"),o(s)]),e(),t("a",Cj,[e("🔗"),o(s)])])]),t("tr",null,[Ej,Rj,t("td",Fj,[o(l,{to:"/problem/1233.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sj,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tj]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Dj]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Aj]),_:1}),e(),Gj]),Hj,t("td",Jj,[t("a",Mj,[e("🀄️"),o(s)]),e(),t("a",Oj,[e("🔗"),o(s)])])]),t("tr",null,[Pj,Qj,Uj,t("td",Wj,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Xj]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Yj]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Zj]),_:1}),e(),$j]),tN,t("td",eN,[t("a",oN,[e("🀄️"),o(s)]),e(),t("a",lN,[e("🔗"),o(s)])])]),t("tr",null,[nN,sN,rN,t("td",dN,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_N]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[cN]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[aN]),_:1})]),iN,t("td",hN,[t("a",fN,[e("🀄️"),o(s)]),e(),t("a",gN,[e("🔗"),o(s)])])]),t("tr",null,[uN,mN,pN,t("td",yN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kN]),_:1}),e(),vN]),wN,t("td",IN,[t("a",zN,[e("🀄️"),o(s)]),e(),t("a",qN,[e("🔗"),o(s)])])]),t("tr",null,[jN,NN,VN,t("td",KN,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[BN]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[CN]),_:1}),e(),EN]),RN,t("td",FN,[t("a",SN,[e("🀄️"),o(s)]),e(),t("a",TN,[e("🔗"),o(s)])])]),t("tr",null,[DN,AN,GN,t("td",HN,[o(l,{to:"/tag/tree.html"},{default:n(()=>[JN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[MN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ON]),_:1}),e(),PN]),QN,t("td",UN,[t("a",WN,[e("🀄️"),o(s)]),e(),t("a",XN,[e("🔗"),o(s)])])]),t("tr",null,[YN,ZN,t("td",$N,[o(l,{to:"/problem/1261.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[eV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[oV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[lV]),_:1}),e(),nV]),sV,t("td",rV,[t("a",dV,[e("🀄️"),o(s)]),e(),t("a",_V,[e("🔗"),o(s)])])]),t("tr",null,[cV,aV,t("td",iV,[o(l,{to:"/problem/1267.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hV,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gV]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[uV]),_:1}),e(),mV]),pV,t("td",yV,[t("a",bV,[e("🀄️"),o(s)]),e(),t("a",xV,[e("🔗"),o(s)])])]),t("tr",null,[kV,vV,wV,t("td",IV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jV]),_:1}),e(),NV]),VV,t("td",KV,[t("a",LV,[e("🀄️"),o(s)]),e(),t("a",BV,[e("🔗"),o(s)])])]),t("tr",null,[CV,EV,RV,t("td",FV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[SV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[TV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[DV]),_:1}),e(),AV]),GV,t("td",HV,[t("a",JV,[e("🀄️"),o(s)]),e(),t("a",MV,[e("🔗"),o(s)])])]),t("tr",null,[OV,PV,QV,t("td",UV,[o(l,{to:"/tag/tree.html"},{default:n(()=>[WV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XV]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[YV]),_:1}),e(),ZV]),$V,t("td",tK,[t("a",eK,[e("🀄️"),o(s)]),e(),t("a",oK,[e("🔗"),o(s)])])]),t("tr",null,[lK,nK,sK,t("td",rK,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_K]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cK]),_:1})]),aK,t("td",iK,[t("a",hK,[e("🀄️"),o(s)]),e(),t("a",fK,[e("🔗"),o(s)])])]),t("tr",null,[gK,uK,mK,t("td",pK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[xK]),_:1}),e(),kK]),vK,t("td",wK,[t("a",IK,[e("🀄️"),o(s)]),e(),t("a",zK,[e("🔗"),o(s)])])]),t("tr",null,[qK,jK,NK,t("td",VK,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LK]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[BK]),_:1}),e(),CK]),EK,t("td",RK,[t("a",FK,[e("🀄️"),o(s)]),e(),t("a",SK,[e("🔗"),o(s)])])]),t("tr",null,[TK,DK,AK,t("td",GK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JK]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[MK]),_:1})]),OK,t("td",PK,[t("a",QK,[e("🀄️"),o(s)]),e(),t("a",UK,[e("🔗"),o(s)])])]),t("tr",null,[WK,XK,YK,t("td",ZK,[o(l,{to:"/tag/tree.html"},{default:n(()=>[$K]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tL]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[eL]),_:1})]),oL,t("td",lL,[t("a",nL,[e("🀄️"),o(s)]),e(),t("a",sL,[e("🔗"),o(s)])])]),t("tr",null,[rL,dL,_L,t("td",cL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hL]),_:1}),e(),fL]),gL,t("td",uL,[t("a",mL,[e("🀄️"),o(s)]),e(),t("a",pL,[e("🔗"),o(s)])])]),t("tr",null,[yL,bL,xL,t("td",kL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wL]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[IL]),_:1}),e(),zL]),qL,t("td",jL,[t("a",NL,[e("🀄️"),o(s)]),e(),t("a",VL,[e("🔗"),o(s)])])]),t("tr",null,[KL,LL,t("td",BL,[o(l,{to:"/problem/1372.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",CL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[FL]),_:1}),e(),SL]),TL,t("td",DL,[t("a",AL,[e("🀄️"),o(s)]),e(),t("a",GL,[e("🔗"),o(s)])])]),t("tr",null,[HL,JL,ML,t("td",OL,[o(l,{to:"/tag/tree.html"},{default:n(()=>[PL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[QL]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[UL]),_:1}),e(),WL]),XL,t("td",YL,[t("a",ZL,[e("🀄️"),o(s)]),e(),t("a",$L,[e("🔗"),o(s)])])]),t("tr",null,[tB,eB,oB,t("td",lB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[nB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rB]),_:1})]),dB,t("td",_B,[t("a",cB,[e("🀄️"),o(s)]),e(),t("a",aB,[e("🔗"),o(s)])])]),t("tr",null,[iB,hB,fB,t("td",gB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[uB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[mB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[pB]),_:1}),e(),yB]),bB,t("td",xB,[t("a",kB,[e("🀄️"),o(s)]),e(),t("a",vB,[e("🔗"),o(s)])])]),t("tr",null,[wB,IB,t("td",zB,[o(l,{to:"/problem/1379.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qB,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[NB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[VB]),_:1}),e(),KB]),LB,t("td",BB,[t("a",CB,[e("🀄️"),o(s)]),e(),t("a",EB,[e("🔗"),o(s)])])]),t("tr",null,[RB,FB,SB,t("td",TB,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[DB]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[AB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[GB]),_:1}),e(),HB]),JB,t("td",MB,[t("a",OB,[e("🀄️"),o(s)]),e(),t("a",PB,[e("🔗"),o(s)])])]),t("tr",null,[QB,UB,WB,t("td",XB,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ZB]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[$B]),_:1}),e(),tC]),eC,t("td",oC,[t("a",lC,[e("🀄️"),o(s)]),e(),t("a",nC,[e("🔗"),o(s)])])]),t("tr",null,[sC,rC,dC,t("td",_C,[o(l,{to:"/tag/tree.html"},{default:n(()=>[cC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[iC]),_:1}),e(),hC]),fC,t("td",gC,[t("a",uC,[e("🀄️"),o(s)]),e(),t("a",mC,[e("🔗"),o(s)])])]),t("tr",null,[pC,yC,bC,t("td",xC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[wC]),_:1}),e(),IC]),zC,t("td",qC,[t("a",jC,[e("🀄️"),o(s)]),e(),t("a",NC,[e("🔗"),o(s)])])]),t("tr",null,[VC,KC,t("td",LC,[o(l,{to:"/problem/1448.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",BC,[o(l,{to:"/tag/tree.html"},{default:n(()=>[CC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[EC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[RC]),_:1}),e(),FC]),SC,t("td",TC,[t("a",DC,[e("🀄️"),o(s)]),e(),t("a",AC,[e("🔗"),o(s)])])]),t("tr",null,[GC,HC,JC,t("td",MC,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[OC]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[PC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[QC]),_:1}),e(),UC]),WC,t("td",XC,[t("a",YC,[e("🀄️"),o(s)]),e(),t("a",ZC,[e("🔗"),o(s)])])]),t("tr",null,[$C,tE,t("td",eE,[o(l,{to:"/problem/1462.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oE,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nE]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[sE]),_:1}),e(),rE]),dE,t("td",_E,[t("a",cE,[e("🀄️"),o(s)]),e(),t("a",aE,[e("🔗"),o(s)])])]),t("tr",null,[iE,hE,t("td",fE,[o(l,{to:"/problem/1466.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",gE,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mE]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[pE]),_:1})]),yE,t("td",bE,[t("a",xE,[e("🀄️"),o(s)]),e(),t("a",kE,[e("🔗"),o(s)])])]),t("tr",null,[vE,wE,IE,t("td",zE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[NE]),_:1}),e(),VE]),KE,t("td",LE,[t("a",BE,[e("🀄️"),o(s)]),e(),t("a",CE,[e("🔗"),o(s)])])]),t("tr",null,[EE,RE,FE,t("td",SE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[AE]),_:1}),e(),GE]),HE,t("td",JE,[t("a",ME,[e("🀄️"),o(s)]),e(),t("a",OE,[e("🔗"),o(s)])])]),t("tr",null,[PE,QE,UE,t("td",WE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ZE]),_:1}),e(),$E]),tR,t("td",eR,[t("a",oR,[e("🀄️"),o(s)]),e(),t("a",lR,[e("🔗"),o(s)])])]),t("tr",null,[nR,sR,rR,t("td",dR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_R]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cR]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[aR]),_:1}),e(),iR]),hR,t("td",fR,[t("a",gR,[e("🀄️"),o(s)]),e(),t("a",uR,[e("🔗"),o(s)])])]),t("tr",null,[mR,pR,yR,t("td",bR,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[xR]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[kR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vR]),_:1}),e(),wR]),IR,t("td",zR,[t("a",qR,[e("🀄️"),o(s)]),e(),t("a",jR,[e("🔗"),o(s)])])]),t("tr",null,[NR,VR,KR,t("td",LR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[BR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[CR]),_:1})]),ER,t("td",RR,[t("a",FR,[e("🀄️"),o(s)]),e(),t("a",SR,[e("🔗"),o(s)])])]),t("tr",null,[TR,DR,AR,t("td",GR,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JR]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MR]),_:1}),e(),OR]),PR,t("td",QR,[t("a",UR,[e("🀄️"),o(s)]),e(),t("a",WR,[e("🔗"),o(s)])])]),t("tr",null,[XR,YR,t("td",ZR,[o(l,{to:"/problem/1522.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$R,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eF]),_:1})]),oF,t("td",lF,[t("a",nF,[e("🀄️"),o(s)]),e(),t("a",sF,[e("🔗"),o(s)])])]),t("tr",null,[rF,dF,_F,t("td",cF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iF]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[hF]),_:1})]),fF,t("td",gF,[t("a",uF,[e("🀄️"),o(s)]),e(),t("a",mF,[e("🔗"),o(s)])])]),t("tr",null,[pF,yF,bF,t("td",xF,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[kF]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[vF]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[wF]),_:1}),e(),IF]),zF,t("td",qF,[t("a",jF,[e("🀄️"),o(s)]),e(),t("a",NF,[e("🔗"),o(s)])])]),t("tr",null,[VF,KF,LF,t("td",BF,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[CF]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[EF]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[RF]),_:1}),e(),FF]),SF,t("td",TF,[t("a",DF,[e("🀄️"),o(s)]),e(),t("a",AF,[e("🔗"),o(s)])])]),t("tr",null,[GF,HF,JF,t("td",MF,[o(l,{to:"/tag/tree.html"},{default:n(()=>[OF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PF]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[QF]),_:1}),e(),UF]),WF,t("td",XF,[t("a",YF,[e("🀄️"),o(s)]),e(),t("a",ZF,[e("🔗"),o(s)])])]),t("tr",null,[$F,tS,eS,t("td",oS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[lS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nS]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[sS]),_:1}),e(),rS]),dS,t("td",_S,[t("a",cS,[e("🀄️"),o(s)]),e(),t("a",aS,[e("🔗"),o(s)])])]),t("tr",null,[iS,hS,fS,t("td",gS,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uS]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mS]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[pS]),_:1}),e(),yS]),bS,t("td",xS,[t("a",kS,[e("🀄️"),o(s)]),e(),t("a",vS,[e("🔗"),o(s)])])]),t("tr",null,[wS,IS,zS,t("td",qS,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jS]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[NS]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[VS]),_:1}),e(),KS]),LS,t("td",BS,[t("a",CS,[e("🀄️"),o(s)]),e(),t("a",ES,[e("🔗"),o(s)])])]),t("tr",null,[RS,FS,SS,t("td",TS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[DS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AS]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[GS]),_:1})]),HS,t("td",JS,[t("a",MS,[e("🀄️"),o(s)]),e(),t("a",OS,[e("🔗"),o(s)])])]),t("tr",null,[PS,QS,US,t("td",WS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YS]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ZS]),_:1}),e(),$S]),tT,t("td",eT,[t("a",oT,[e("🀄️"),o(s)]),e(),t("a",lT,[e("🔗"),o(s)])])]),t("tr",null,[nT,sT,rT,t("td",dT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_T]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cT]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[aT]),_:1})]),iT,t("td",hT,[t("a",fT,[e("🀄️"),o(s)]),e(),t("a",gT,[e("🔗"),o(s)])])]),t("tr",null,[uT,mT,pT,t("td",yT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xT]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[kT]),_:1}),e(),vT]),wT,t("td",IT,[t("a",zT,[e("🀄️"),o(s)]),e(),t("a",qT,[e("🔗"),o(s)])])]),t("tr",null,[jT,NT,VT,t("td",KT,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LT]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[BT]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[CT]),_:1})]),ET,t("td",RT,[t("a",FT,[e("🀄️"),o(s)]),e(),t("a",ST,[e("🔗"),o(s)])])]),t("tr",null,[TT,DT,AT,t("td",GT,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MT]),_:1}),e(),OT]),PT,t("td",QT,[t("a",UT,[e("🀄️"),o(s)]),e(),t("a",WT,[e("🔗"),o(s)])])]),t("tr",null,[XT,YT,ZT,t("td",$T,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tD]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[eD]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[oD]),_:1})]),lD,t("td",nD,[t("a",sD,[e("🀄️"),o(s)]),e(),t("a",rD,[e("🔗"),o(s)])])]),t("tr",null,[dD,_D,cD,t("td",aD,[o(l,{to:"/tag/tree.html"},{default:n(()=>[iD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[hD]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fD]),_:1}),e(),gD]),uD,t("td",mD,[t("a",pD,[e("🀄️"),o(s)]),e(),t("a",yD,[e("🔗"),o(s)])])]),t("tr",null,[bD,xD,kD,t("td",vD,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[wD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ID]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[zD]),_:1}),e(),qD]),jD,t("td",ND,[t("a",VD,[e("🀄️"),o(s)]),e(),t("a",KD,[e("🔗"),o(s)])])]),t("tr",null,[LD,BD,CD,t("td",ED,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[FD]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[SD]),_:1}),e(),TD]),DD,t("td",AD,[t("a",GD,[e("🀄️"),o(s)]),e(),t("a",HD,[e("🔗"),o(s)])])]),t("tr",null,[JD,MD,OD,t("td",PD,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[QD]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[UD]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[WD]),_:1}),e(),XD]),YD,t("td",ZD,[t("a",$D,[e("🀄️"),o(s)]),e(),t("a",tA,[e("🔗"),o(s)])])]),t("tr",null,[eA,oA,lA,t("td",nA,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sA]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[rA]),_:1})]),dA,t("td",_A,[t("a",cA,[e("🀄️"),o(s)]),e(),t("a",aA,[e("🔗"),o(s)])])]),t("tr",null,[iA,hA,fA,t("td",gA,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uA]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[mA]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[pA]),_:1}),e(),yA]),bA,t("td",xA,[t("a",kA,[e("🀄️"),o(s)]),e(),t("a",vA,[e("🔗"),o(s)])])]),t("tr",null,[wA,IA,zA,t("td",qA,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[NA]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[VA]),_:1}),e(),KA]),LA,t("td",BA,[t("a",CA,[e("🀄️"),o(s)]),e(),t("a",EA,[e("🔗"),o(s)])])]),t("tr",null,[RA,FA,SA,t("td",TA,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[DA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AA]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[GA]),_:1}),e(),HA]),JA,t("td",MA,[t("a",OA,[e("🀄️"),o(s)]),e(),t("a",PA,[e("🔗"),o(s)])])]),t("tr",null,[QA,UA,WA,t("td",XA,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YA]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ZA]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[$A]),_:1}),e(),tG]),eG,t("td",oG,[t("a",lG,[e("🀄️"),o(s)]),e(),t("a",nG,[e("🔗"),o(s)])])]),t("tr",null,[sG,rG,t("td",dG,[o(l,{to:"/problem/1971.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_G,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[aG]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[iG]),_:1}),e(),hG]),fG,t("td",gG,[t("a",uG,[e("🀄️"),o(s)]),e(),t("a",mG,[e("🔗"),o(s)])])]),t("tr",null,[pG,yG,bG,t("td",xG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[kG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vG]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[wG]),_:1})]),IG,t("td",zG,[t("a",qG,[e("🀄️"),o(s)]),e(),t("a",jG,[e("🔗"),o(s)])])]),t("tr",null,[NG,VG,KG,t("td",LG,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[BG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[CG]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[EG]),_:1}),e(),RG]),FG,t("td",SG,[t("a",TG,[e("🀄️"),o(s)]),e(),t("a",DG,[e("🔗"),o(s)])])]),t("tr",null,[AG,GG,HG,t("td",JG,[o(l,{to:"/tag/tree.html"},{default:n(()=>[MG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[OG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[PG]),_:1}),e(),QG]),UG,t("td",WG,[t("a",XG,[e("🀄️"),o(s)]),e(),t("a",YG,[e("🔗"),o(s)])])]),t("tr",null,[ZG,$G,tH,t("td",eH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lH]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[nH]),_:1}),e(),sH]),rH,t("td",dH,[t("a",_H,[e("🀄️"),o(s)]),e(),t("a",cH,[e("🔗"),o(s)])])]),t("tr",null,[aH,iH,hH,t("td",fH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[gH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[uH]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mH]),_:1}),e(),pH]),yH,t("td",bH,[t("a",xH,[e("🀄️"),o(s)]),e(),t("a",kH,[e("🔗"),o(s)])])]),t("tr",null,[vH,wH,IH,t("td",zH,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qH]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jH]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[NH]),_:1}),e(),VH]),KH,t("td",LH,[t("a",BH,[e("🀄️"),o(s)]),e(),t("a",CH,[e("🔗"),o(s)])])]),t("tr",null,[EH,RH,FH,t("td",SH,[o(l,{to:"/tag/tree.html"},{default:n(()=>[TH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[DH]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[AH]),_:1}),e(),GH]),HH,t("td",JH,[t("a",MH,[e("🀄️"),o(s)]),e(),t("a",OH,[e("🔗"),o(s)])])]),t("tr",null,[PH,QH,t("td",UH,[o(l,{to:"/problem/2097.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",WH,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XH]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[YH]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[ZH]),_:1})]),$H,t("td",tJ,[t("a",eJ,[e("🀄️"),o(s)]),e(),t("a",oJ,[e("🔗"),o(s)])])]),t("tr",null,[lJ,nJ,sJ,t("td",rJ,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dJ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_J]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[cJ]),_:1}),e(),aJ]),iJ,t("td",hJ,[t("a",fJ,[e("🀄️"),o(s)]),e(),t("a",gJ,[e("🔗"),o(s)])])]),t("tr",null,[uJ,mJ,pJ,t("td",yJ,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bJ]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[xJ]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[kJ]),_:1})]),vJ,t("td",wJ,[t("a",IJ,[e("🀄️"),o(s)]),e(),t("a",zJ,[e("🔗"),o(s)])])]),t("tr",null,[qJ,jJ,NJ,t("td",VJ,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KJ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LJ]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[BJ]),_:1}),e(),CJ]),EJ,t("td",RJ,[t("a",FJ,[e("🀄️"),o(s)]),e(),t("a",SJ,[e("🔗"),o(s)])])]),t("tr",null,[TJ,DJ,AJ,t("td",GJ,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HJ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[JJ]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[MJ]),_:1}),e(),OJ]),PJ,t("td",QJ,[t("a",UJ,[e("🀄️"),o(s)]),e(),t("a",WJ,[e("🔗"),o(s)])])]),t("tr",null,[XJ,YJ,ZJ,t("td",$J,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eM]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[oM]),_:1}),e(),lM]),nM,t("td",sM,[t("a",rM,[e("🀄️"),o(s)]),e(),t("a",dM,[e("🔗"),o(s)])])]),t("tr",null,[_M,cM,aM,t("td",iM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fM]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[gM]),_:1})]),uM,t("td",mM,[t("a",pM,[e("🀄️"),o(s)]),e(),t("a",yM,[e("🔗"),o(s)])])]),t("tr",null,[bM,xM,kM,t("td",vM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[IM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[zM]),_:1}),e(),qM]),jM,t("td",NM,[t("a",VM,[e("🀄️"),o(s)]),e(),t("a",KM,[e("🔗"),o(s)])])]),t("tr",null,[LM,BM,CM,t("td",EM,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RM]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[FM]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[SM]),_:1}),e(),TM]),DM,t("td",AM,[t("a",GM,[e("🀄️"),o(s)]),e(),t("a",HM,[e("🔗"),o(s)])])]),t("tr",null,[JM,MM,OM,t("td",PM,[o(l,{to:"/tag/tree.html"},{default:n(()=>[QM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[UM]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WM]),_:1}),e(),XM]),YM,t("td",ZM,[t("a",$M,[e("🀄️"),o(s)]),e(),t("a",tO,[e("🔗"),o(s)])])]),t("tr",null,[eO,oO,lO,t("td",nO,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[sO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[rO]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[dO]),_:1}),e(),_O]),cO,t("td",aO,[t("a",iO,[e("🀄️"),o(s)]),e(),t("a",hO,[e("🔗"),o(s)])])]),t("tr",null,[fO,gO,uO,t("td",mO,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[pO]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[yO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bO]),_:1}),e(),xO]),kO,t("td",vO,[t("a",wO,[e("🀄️"),o(s)]),e(),t("a",IO,[e("🔗"),o(s)])])]),t("tr",null,[zO,qO,jO,t("td",NO,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[VO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[KO]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[LO]),_:1}),e(),BO]),CO,t("td",EO,[t("a",RO,[e("🀄️"),o(s)]),e(),t("a",FO,[e("🔗"),o(s)])])]),t("tr",null,[SO,TO,t("td",DO,[o(l,{to:"/problem/2331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",AO,[o(l,{to:"/tag/tree.html"},{default:n(()=>[GO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HO]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[JO]),_:1})]),MO,t("td",OO,[t("a",PO,[e("🀄️"),o(s)]),e(),t("a",QO,[e("🔗"),o(s)])])]),t("tr",null,[UO,WO,XO,t("td",YO,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ZO]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[$O]),_:1})]),tP,t("td",eP,[t("a",oP,[e("🀄️"),o(s)]),e(),t("a",lP,[e("🔗"),o(s)])])]),t("tr",null,[nP,sP,rP,t("td",dP,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_P]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[cP]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[aP]),_:1})]),iP,t("td",hP,[t("a",fP,[e("🀄️"),o(s)]),e(),t("a",gP,[e("🔗"),o(s)])])]),t("tr",null,[uP,mP,pP,t("td",yP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[bP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[kP]),_:1}),e(),vP]),wP,t("td",IP,[t("a",zP,[e("🀄️"),o(s)]),e(),t("a",qP,[e("🔗"),o(s)])])]),t("tr",null,[jP,NP,VP,t("td",KP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[LP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[BP]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[CP]),_:1})]),EP,t("td",RP,[t("a",FP,[e("🀄️"),o(s)]),e(),t("a",SP,[e("🔗"),o(s)])])]),t("tr",null,[TP,DP,AP,t("td",GP,[o(l,{to:"/tag/tree.html"},{default:n(()=>[HP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MP]),_:1}),e(),OP]),PP,t("td",QP,[t("a",UP,[e("🀄️"),o(s)]),e(),t("a",WP,[e("🔗"),o(s)])])]),t("tr",null,[XP,YP,t("td",ZP,[o(l,{to:"/problem/2415.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$P,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[oQ]),_:1}),e(),lQ]),nQ,t("td",sQ,[t("a",rQ,[e("🀄️"),o(s)]),e(),t("a",dQ,[e("🔗"),o(s)])])]),t("tr",null,[_Q,cQ,aQ,t("td",iQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[fQ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gQ]),_:1}),e(),uQ]),mQ,t("td",pQ,[t("a",yQ,[e("🀄️"),o(s)]),e(),t("a",bQ,[e("🔗"),o(s)])])]),t("tr",null,[xQ,kQ,vQ,t("td",wQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qQ]),_:1}),e(),jQ]),NQ,t("td",VQ,[t("a",KQ,[e("🀄️"),o(s)]),e(),t("a",LQ,[e("🔗"),o(s)])])]),t("tr",null,[BQ,CQ,t("td",EQ,[o(l,{to:"/problem/2458.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[FQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[SQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[TQ]),_:1}),e(),DQ]),AQ,t("td",GQ,[t("a",HQ,[e("🀄️"),o(s)]),e(),t("a",JQ,[e("🔗"),o(s)])])]),t("tr",null,[MQ,OQ,t("td",PQ,[o(l,{to:"/problem/2467.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",QQ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[UQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[WQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XQ]),_:1}),e(),YQ]),ZQ,t("td",$Q,[t("a",tU,[e("🀄️"),o(s)]),e(),t("a",eU,[e("🔗"),o(s)])])]),t("tr",null,[oU,lU,nU,t("td",sU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dU]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[_U]),_:1}),e(),cU]),aU,t("td",iU,[t("a",hU,[e("🀄️"),o(s)]),e(),t("a",fU,[e("🔗"),o(s)])])]),t("tr",null,[gU,uU,mU,t("td",pU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[yU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[bU]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[xU]),_:1}),e(),kU]),vU,t("td",wU,[t("a",IU,[e("🀄️"),o(s)]),e(),t("a",zU,[e("🔗"),o(s)])])]),t("tr",null,[qU,jU,NU,t("td",VU,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[LU]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[BU]),_:1}),e(),CU]),EU,t("td",RU,[t("a",FU,[e("🀄️"),o(s)]),e(),t("a",SU,[e("🔗"),o(s)])])]),t("tr",null,[TU,DU,AU,t("td",GU,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HU]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[JU]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[MU]),_:1}),e(),OU]),PU,t("td",QU,[t("a",UU,[e("🀄️"),o(s)]),e(),t("a",WU,[e("🔗"),o(s)])])]),t("tr",null,[XU,YU,ZU,t("td",$U,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eW]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[oW]),_:1}),e(),lW]),nW,t("td",sW,[t("a",rW,[e("🀄️"),o(s)]),e(),t("a",dW,[e("🔗"),o(s)])])]),t("tr",null,[_W,cW,aW,t("td",iW,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[hW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[fW]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gW]),_:1}),e(),uW]),mW,t("td",pW,[t("a",yW,[e("🀄️"),o(s)]),e(),t("a",bW,[e("🔗"),o(s)])])]),t("tr",null,[xW,kW,vW,t("td",wW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[zW]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qW]),_:1}),e(),jW]),NW,t("td",VW,[t("a",KW,[e("🀄️"),o(s)]),e(),t("a",LW,[e("🔗"),o(s)])])]),t("tr",null,[BW,CW,EW,t("td",RW,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[SW]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[TW]),_:1}),e(),DW]),AW,t("td",GW,[t("a",HW,[e("🀄️"),o(s)]),e(),t("a",JW,[e("🔗"),o(s)])])]),t("tr",null,[MW,OW,t("td",PW,[o(l,{to:"/problem/2641.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",QW,[o(l,{to:"/tag/tree.html"},{default:n(()=>[UW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[WW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XW]),_:1}),e(),YW]),ZW,t("td",$W,[t("a",tX,[e("🀄️"),o(s)]),e(),t("a",eX,[e("🔗"),o(s)])])]),t("tr",null,[oX,lX,nX,t("td",sX,[o(l,{to:"/tag/tree.html"},{default:n(()=>[rX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[dX]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[_X]),_:1}),e(),cX]),aX,t("td",iX,[t("a",hX,[e("🀄️"),o(s)]),e(),t("a",fX,[e("🔗"),o(s)])])]),t("tr",null,[gX,uX,t("td",mX,[o(l,{to:"/problem/2658.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pX,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[yX]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bX]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[xX]),_:1}),e(),kX]),vX,t("td",wX,[t("a",IX,[e("🀄️"),o(s)]),e(),t("a",zX,[e("🔗"),o(s)])])]),t("tr",null,[qX,jX,t("td",NX,[o(l,{to:"/problem/2685.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",VX,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[KX]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[LX]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[BX]),_:1})]),CX,t("td",EX,[t("a",RX,[e("🀄️"),o(s)]),e(),t("a",FX,[e("🔗"),o(s)])])]),t("tr",null,[SX,TX,DX,t("td",AX,[o(l,{to:"/tag/tree.html"},{default:n(()=>[GX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[HX]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[JX]),_:1})]),MX,t("td",OX,[t("a",PX,[e("🀄️"),o(s)]),e(),t("a",QX,[e("🔗"),o(s)])])]),t("tr",null,[UX,WX,XX,t("td",YX,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ZX]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[$X]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[tY]),_:1}),e(),eY]),oY,t("td",lY,[t("a",nY,[e("🀄️"),o(s)]),e(),t("a",sY,[e("🔗"),o(s)])])]),t("tr",null,[rY,dY,_Y,t("td",cY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[aY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[iY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hY]),_:1}),e(),fY]),gY,t("td",uY,[t("a",mY,[e("🀄️"),o(s)]),e(),t("a",pY,[e("🔗"),o(s)])])]),t("tr",null,[yY,bY,xY,t("td",kY,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[vY]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[wY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[IY]),_:1}),e(),zY]),qY,t("td",jY,[t("a",NY,[e("🀄️"),o(s)]),e(),t("a",VY,[e("🔗"),o(s)])])]),t("tr",null,[KY,LY,BY,t("td",CY,[o(l,{to:"/tag/tree.html"},{default:n(()=>[EY]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[RY]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[FY]),_:1}),e(),SY]),TY,t("td",DY,[t("a",AY,[e("🀄️"),o(s)]),e(),t("a",GY,[e("🔗"),o(s)])])]),t("tr",null,[HY,JY,MY,t("td",OY,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[PY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[QY]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[UY]),_:1}),e(),WY]),XY,t("td",YY,[t("a",ZY,[e("🀄️"),o(s)]),e(),t("a",$Y,[e("🔗"),o(s)])])]),t("tr",null,[tZ,eZ,oZ,t("td",lZ,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nZ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sZ]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[rZ]),_:1}),e(),dZ]),_Z,t("td",cZ,[t("a",aZ,[e("🀄️"),o(s)]),e(),t("a",iZ,[e("🔗"),o(s)])])]),t("tr",null,[hZ,fZ,gZ,t("td",uZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[mZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pZ]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[yZ]),_:1}),e(),bZ]),xZ,t("td",kZ,[t("a",vZ,[e("🀄️"),o(s)]),e(),t("a",wZ,[e("🔗"),o(s)])])]),t("tr",null,[IZ,zZ,t("td",qZ,[o(l,{to:"/problem/2872.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",jZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[NZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[VZ]),_:1})]),KZ,t("td",LZ,[t("a",BZ,[e("🀄️"),o(s)]),e(),t("a",CZ,[e("🔗"),o(s)])])]),t("tr",null,[EZ,RZ,FZ,t("td",SZ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[TZ]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[DZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[AZ]),_:1}),e(),GZ]),HZ,t("td",JZ,[t("a",MZ,[e("🀄️"),o(s)]),e(),t("a",OZ,[e("🔗"),o(s)])])]),t("tr",null,[PZ,QZ,UZ,t("td",WZ,[o(l,{to:"/tag/tree.html"},{default:n(()=>[XZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[YZ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ZZ]),_:1})]),$Z,t("td",t$,[t("a",e$,[e("🀄️"),o(s)]),e(),t("a",o$,[e("🔗"),o(s)])])]),t("tr",null,[l$,n$,s$,t("td",r$,[o(l,{to:"/tag/tree.html"},{default:n(()=>[d$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[c$]),_:1}),e(),a$]),i$,t("td",h$,[t("a",f$,[e("🀄️"),o(s)]),e(),t("a",g$,[e("🔗"),o(s)])])]),t("tr",null,[u$,m$,p$,t("td",y$,[o(l,{to:"/tag/tree.html"},{default:n(()=>[b$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[x$]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[k$]),_:1}),e(),v$]),w$,t("td",I$,[t("a",z$,[e("🀄️"),o(s)]),e(),t("a",q$,[e("🔗"),o(s)])])]),t("tr",null,[j$,N$,V$,t("td",K$,[o(l,{to:"/tag/tree.html"},{default:n(()=>[L$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[B$]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[C$]),_:1})]),E$,t("td",R$,[t("a",F$,[e("🀄️"),o(s)]),e(),t("a",S$,[e("🔗"),o(s)])])]),t("tr",null,[T$,D$,A$,t("td",G$,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[H$]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[J$]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[M$]),_:1}),e(),O$]),P$,t("td",Q$,[t("a",U$,[e("🀄️"),o(s)]),e(),t("a",W$,[e("🔗"),o(s)])])]),t("tr",null,[X$,Y$,Z$,t("td",$$,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ttt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ett]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ott]),_:1}),e(),ltt]),ntt,t("td",stt,[t("a",rtt,[e("🀄️"),o(s)]),e(),t("a",dtt,[e("🔗"),o(s)])])]),t("tr",null,[_tt,ctt,t("td",att,[o(l,{to:"/problem/3203.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",itt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[htt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ftt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[gtt]),_:1}),e(),utt]),mtt,t("td",ptt,[t("a",ytt,[e("🀄️"),o(s)]),e(),t("a",btt,[e("🔗"),o(s)])])]),t("tr",null,[xtt,ktt,vtt,t("td",wtt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Itt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ztt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[qtt]),_:1}),e(),jtt]),Ntt,t("td",Vtt,[t("a",Ktt,[e("🀄️"),o(s)]),e(),t("a",Ltt,[e("🔗"),o(s)])])]),t("tr",null,[Btt,Ctt,Ett,t("td",Rtt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Ftt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Stt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[Ttt]),_:1}),e(),Dtt]),Att,t("td",Gtt,[t("a",Htt,[e("🀄️"),o(s)]),e(),t("a",Jtt,[e("🔗"),o(s)])])]),t("tr",null,[Mtt,Ott,Ptt,t("td",Qtt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Utt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Wtt]),_:1})]),Xtt,t("td",Ytt,[t("a",Ztt,[e("🀄️"),o(s)]),e(),t("a",$tt,[e("🔗"),o(s)])])]),t("tr",null,[tet,eet,oet,t("td",net,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[set]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ret]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[det]),_:1})]),_et,t("td",cet,[t("a",aet,[e("🀄️"),o(s)]),e(),t("a",iet,[e("🔗"),o(s)])])]),t("tr",null,[het,fet,get,t("td",uet,[o(l,{to:"/tag/tree.html"},{default:n(()=>[met]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pet]),_:1})]),yet,t("td",bet,[t("a",xet,[e("🀄️"),o(s)]),e(),t("a",ket,[e("🔗"),o(s)])])]),t("tr",null,[vet,wet,t("td",Iet,[o(l,{to:"/problem/3319.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zet,[o(l,{to:"/tag/tree.html"},{default:n(()=>[qet]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[jet]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[Net]),_:1}),e(),Vet]),Ket,t("td",Let,[t("a",Bet,[e("🀄️"),o(s)]),e(),t("a",Cet,[e("🔗"),o(s)])])]),t("tr",null,[Eet,Ret,Fet,t("td",Set,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Tet]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Det]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Aet]),_:1}),e(),Get]),Het,t("td",Jet,[t("a",Met,[e("🀄️"),o(s)]),e(),t("a",Oet,[e("🔗"),o(s)])])])])])])}const Xet=d(i,[["render",Pet],["__file","depth-first-search.html.vue"]]);export{Xet as default};
