import{_ as d,r as _,o as r,c,a as t,d as o,w as n,b as e,f as a}from"./app-B5EG-zH0.js";const i={},h=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),e(" 栈")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("span",{class:"blue"},"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),M=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),C=t("code",null,"强连通分量",-1),E=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),Z=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),Y=t("code",null,"递归",-1),A=t("code",null,"分治",-1),P=t("code",null,"回溯",-1),D=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),H=t("code",null,"排序",-1),J=t("code",null,"桶排序",-1),W=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Mt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"center"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Ct=t("td",{style:{"text-align":"center"}},"20",-1),Et=t("td",{style:{"text-align":"left"}},"有效的括号",-1),Qt={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},Zt=t("code",null,"栈",-1),Gt=t("code",null,"字符串",-1),St=t("td",{style:{"text-align":"center"}},"🟢",-1),Tt={style:{"text-align":"center"}},Ut={href:"https://leetcode.cn/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},"32",-1),At=t("td",{style:{"text-align":"left"}},"最长有效括号",-1),Pt={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Ft=t("code",null,"栈",-1),Ht=t("code",null,"字符串",-1),Jt=t("code",null,"动态规划",-1),Wt=t("td",{style:{"text-align":"center"}},"🔴",-1),$t={style:{"text-align":"center"}},te={href:"https://leetcode.cn/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},oe=t("td",{style:{"text-align":"center"}},"42",-1),le=t("td",{style:{"text-align":"left"}},"接雨水",-1),ne={style:{"text-align":"center"}},se={style:{"text-align":"left"}},_e=t("code",null,"栈",-1),de=t("code",null,"数组",-1),re=t("code",null,"双指针",-1),ce=t("code",null,"2+",-1),ae=t("td",{style:{"text-align":"center"}},"🔴",-1),ie={style:{"text-align":"center"}},he={href:"https://leetcode.cn/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},"71",-1),fe=t("td",{style:{"text-align":"left"}},"简化路径",-1),me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),xe=t("code",null,"字符串",-1),be=t("td",{style:{"text-align":"center"}},"🟠",-1),ke={style:{"text-align":"center"}},ve={href:"https://leetcode.cn/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},we={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},"84",-1),qe=t("td",{style:{"text-align":"left"}},"柱状图中最大的矩形",-1),ze={style:{"text-align":"center"}},je={style:{"text-align":"left"}},Oe=t("code",null,"栈",-1),Ne=t("code",null,"数组",-1),Le=t("code",null,"单调栈",-1),Be=t("td",{style:{"text-align":"center"}},"🔴",-1),Me={style:{"text-align":"center"}},Ve={href:"https://leetcode.cn/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",{style:{"text-align":"center"}},"85",-1),Ee=t("td",{style:{"text-align":"left"}},"最大矩形",-1),Qe={style:{"text-align":"center"}},Re={style:{"text-align":"left"}},Ze=t("code",null,"栈",-1),Ge=t("code",null,"数组",-1),Se=t("code",null,"动态规划",-1),Te=t("code",null,"2+",-1),Ue=t("td",{style:{"text-align":"center"}},"🔴",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},"94",-1),De=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),Fe={style:{"text-align":"center"}},He={style:{"text-align":"left"}},Je=t("code",null,"栈",-1),We=t("code",null,"树",-1),$e=t("code",null,"深度优先搜索",-1),to=t("code",null,"1+",-1),eo=t("td",{style:{"text-align":"center"}},"🟢",-1),oo={style:{"text-align":"center"}},lo={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},no={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},"114",-1),_o=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),ro={style:{"text-align":"center"}},co={style:{"text-align":"left"}},ao=t("code",null,"栈",-1),io=t("code",null,"树",-1),ho=t("code",null,"深度优先搜索",-1),go=t("code",null,"2+",-1),uo=t("td",{style:{"text-align":"center"}},"🟠",-1),fo={style:{"text-align":"center"}},mo={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},yo={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},"143",-1),xo=t("td",{style:{"text-align":"left"}},"重排链表",-1),bo={style:{"text-align":"center"}},ko={style:{"text-align":"left"}},vo=t("code",null,"栈",-1),wo=t("code",null,"递归",-1),Io=t("code",null,"链表",-1),qo=t("code",null,"1+",-1),zo=t("td",{style:{"text-align":"center"}},"🟠",-1),jo={style:{"text-align":"center"}},Oo={href:"https://leetcode.cn/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},No={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},"144",-1),Bo=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),Mo={style:{"text-align":"center"}},Vo={style:{"text-align":"left"}},Ko=t("code",null,"栈",-1),Co=t("code",null,"树",-1),Eo=t("code",null,"深度优先搜索",-1),Qo=t("code",null,"1+",-1),Ro=t("td",{style:{"text-align":"center"}},"🟢",-1),Zo={style:{"text-align":"center"}},Go={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},So={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},"145",-1),Uo=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),Xo={style:{"text-align":"center"}},Yo={style:{"text-align":"left"}},Ao=t("code",null,"栈",-1),Po=t("code",null,"树",-1),Do=t("code",null,"深度优先搜索",-1),Fo=t("code",null,"1+",-1),Ho=t("td",{style:{"text-align":"center"}},"🟢",-1),Jo={style:{"text-align":"center"}},Wo={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},$o={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},"150",-1),el=t("td",{style:{"text-align":"left"}},"逆波兰表达式求值",-1),ol={style:{"text-align":"center"}},ll={style:{"text-align":"left"}},nl=t("code",null,"栈",-1),sl=t("code",null,"数组",-1),_l=t("code",null,"数学",-1),dl=t("td",{style:{"text-align":"center"}},"🟠",-1),rl={style:{"text-align":"center"}},cl={href:"https://leetcode.cn/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},al={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},"155",-1),hl=t("td",{style:{"text-align":"left"}},"最小栈",-1),gl={style:{"text-align":"center"}},ul={style:{"text-align":"left"}},fl=t("code",null,"栈",-1),ml=t("code",null,"设计",-1),yl=t("td",{style:{"text-align":"center"}},"🟠",-1),pl={style:{"text-align":"center"}},xl={href:"https://leetcode.cn/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},bl={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},"173",-1),vl=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),wl={style:{"text-align":"center"}},Il={style:{"text-align":"left"}},ql=t("code",null,"栈",-1),zl=t("code",null,"树",-1),jl=t("code",null,"设计",-1),Ol=t("code",null,"3+",-1),Nl=t("td",{style:{"text-align":"center"}},"🟠",-1),Ll={style:{"text-align":"center"}},Bl={href:"https://leetcode.cn/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},"224",-1),Kl=t("td",{style:{"text-align":"left"}},"基本计算器",-1),Cl={style:{"text-align":"center"}},El={style:{"text-align":"left"}},Ql=t("code",null,"栈",-1),Rl=t("code",null,"递归",-1),Zl=t("code",null,"数学",-1),Gl=t("code",null,"1+",-1),Sl=t("td",{style:{"text-align":"center"}},"🔴",-1),Tl={style:{"text-align":"center"}},Ul={href:"https://leetcode.cn/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},Xl={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},"225",-1),Al=t("td",{style:{"text-align":"left"}},"用队列实现栈",-1),Pl={style:{"text-align":"center"}},Dl={style:{"text-align":"left"}},Fl=t("code",null,"栈",-1),Hl=t("code",null,"设计",-1),Jl=t("code",null,"队列",-1),Wl=t("td",{style:{"text-align":"center"}},"🟢",-1),$l={style:{"text-align":"center"}},tn={href:"https://leetcode.cn/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},en={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},"227",-1),ln=t("td",{style:{"text-align":"left"}},"基本计算器 II",-1),nn={style:{"text-align":"center"}},sn={style:{"text-align":"left"}},_n=t("code",null,"栈",-1),dn=t("code",null,"数学",-1),rn=t("code",null,"字符串",-1),cn=t("td",{style:{"text-align":"center"}},"🟠",-1),an={style:{"text-align":"center"}},hn={href:"https://leetcode.cn/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},"232",-1),fn=t("td",{style:{"text-align":"left"}},"用栈实现队列",-1),mn={style:{"text-align":"center"}},yn={style:{"text-align":"left"}},pn=t("code",null,"栈",-1),xn=t("code",null,"设计",-1),bn=t("code",null,"队列",-1),kn=t("td",{style:{"text-align":"center"}},"🟢",-1),vn={style:{"text-align":"center"}},wn={href:"https://leetcode.cn/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},In={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},"234",-1),zn=t("td",{style:{"text-align":"left"}},"回文链表",-1),jn={style:{"text-align":"center"}},On={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),Ln=t("code",null,"递归",-1),Bn=t("code",null,"链表",-1),Mn=t("code",null,"1+",-1),Vn=t("td",{style:{"text-align":"center"}},"🟢",-1),Kn={style:{"text-align":"center"}},Cn={href:"https://leetcode.cn/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},En={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},"255",-1),Rn=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),Zn=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Sn=t("code",null,"栈",-1),Tn=t("code",null,"树",-1),Un=t("code",null,"二叉搜索树",-1),Xn=t("code",null,"4+",-1),Yn=t("td",{style:{"text-align":"center"}},"🟠",-1),An={style:{"text-align":"center"}},Pn={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},"272",-1),Hn=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),Jn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},$n=t("code",null,"栈",-1),ts=t("code",null,"树",-1),es=t("code",null,"深度优先搜索",-1),os=t("code",null,"4+",-1),ls=t("td",{style:{"text-align":"center"}},"🔴",-1),ns={style:{"text-align":"center"}},ss={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},_s={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},ds=t("td",{style:{"text-align":"center"}},"316",-1),rs=t("td",{style:{"text-align":"left"}},"去除重复字母",-1),cs={style:{"text-align":"center"}},as={style:{"text-align":"left"}},is=t("code",null,"栈",-1),hs=t("code",null,"贪心",-1),gs=t("code",null,"字符串",-1),us=t("code",null,"1+",-1),fs=t("td",{style:{"text-align":"center"}},"🟠",-1),ms={style:{"text-align":"center"}},ys={href:"https://leetcode.cn/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},"321",-1),bs=t("td",{style:{"text-align":"left"}},"拼接最大数",-1),ks=t("td",{style:{"text-align":"center"}},null,-1),vs={style:{"text-align":"left"}},ws=t("code",null,"栈",-1),Is=t("code",null,"贪心",-1),qs=t("code",null,"数组",-1),zs=t("code",null,"2+",-1),js=t("td",{style:{"text-align":"center"}},"🔴",-1),Os={style:{"text-align":"center"}},Ns={href:"https://leetcode.cn/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Ls={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},"331",-1),Ms=t("td",{style:{"text-align":"left"}},"验证二叉树的前序序列化",-1),Vs={style:{"text-align":"center"}},Ks={style:{"text-align":"left"}},Cs=t("code",null,"栈",-1),Es=t("code",null,"树",-1),Qs=t("code",null,"字符串",-1),Rs=t("code",null,"1+",-1),Zs=t("td",{style:{"text-align":"center"}},"🟠",-1),Gs={style:{"text-align":"center"}},Ss={href:"https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ts={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},"341",-1),Xs=t("td",{style:{"text-align":"left"}},"扁平化嵌套列表迭代器",-1),Ys={style:{"text-align":"center"}},As={style:{"text-align":"left"}},Ps=t("code",null,"栈",-1),Ds=t("code",null,"树",-1),Fs=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"3+",-1),Js=t("td",{style:{"text-align":"center"}},"🟠",-1),Ws={style:{"text-align":"center"}},$s={href:"https://leetcode.cn/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},t_={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},"364",-1),o_=t("td",{style:{"text-align":"left"}},"嵌套列表加权和 II 🔒",-1),l_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},s_=t("code",null,"栈",-1),__=t("code",null,"深度优先搜索",-1),d_=t("code",null,"广度优先搜索",-1),r_=t("td",{style:{"text-align":"center"}},"🟠",-1),c_={style:{"text-align":"center"}},a_={href:"https://leetcode.cn/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},i_={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},"385",-1),g_=t("td",{style:{"text-align":"left"}},"迷你语法分析器",-1),u_={style:{"text-align":"center"}},f_={style:{"text-align":"left"}},m_=t("code",null,"栈",-1),y_=t("code",null,"深度优先搜索",-1),p_=t("code",null,"字符串",-1),x_=t("td",{style:{"text-align":"center"}},"🟠",-1),b_={style:{"text-align":"center"}},k_={href:"https://leetcode.cn/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},v_={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},w_=t("td",{style:{"text-align":"center"}},"388",-1),I_=t("td",{style:{"text-align":"left"}},"文件的最长绝对路径",-1),q_={style:{"text-align":"center"}},z_={style:{"text-align":"left"}},j_=t("code",null,"栈",-1),O_=t("code",null,"深度优先搜索",-1),N_=t("code",null,"字符串",-1),L_=t("td",{style:{"text-align":"center"}},"🟠",-1),B_={style:{"text-align":"center"}},M_={href:"https://leetcode.cn/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},V_={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},"394",-1),C_=t("td",{style:{"text-align":"left"}},"字符串解码",-1),E_={style:{"text-align":"center"}},Q_={style:{"text-align":"left"}},R_=t("code",null,"栈",-1),Z_=t("code",null,"递归",-1),G_=t("code",null,"字符串",-1),S_=t("td",{style:{"text-align":"center"}},"🟠",-1),T_={style:{"text-align":"center"}},U_={href:"https://leetcode.cn/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},X_={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},"402",-1),A_=t("td",{style:{"text-align":"left"}},"移掉 K 位数字",-1),P_={style:{"text-align":"center"}},D_={style:{"text-align":"left"}},F_=t("code",null,"栈",-1),H_=t("code",null,"贪心",-1),J_=t("code",null,"字符串",-1),W_=t("code",null,"1+",-1),$_=t("td",{style:{"text-align":"center"}},"🟠",-1),td={style:{"text-align":"center"}},ed={href:"https://leetcode.cn/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},od={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},"426",-1),nd=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),sd={style:{"text-align":"center"}},_d={style:{"text-align":"left"}},dd=t("code",null,"栈",-1),rd=t("code",null,"树",-1),cd=t("code",null,"深度优先搜索",-1),ad=t("code",null,"4+",-1),id=t("td",{style:{"text-align":"center"}},"🟠",-1),hd={style:{"text-align":"center"}},gd={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ud={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},"439",-1),md=t("td",{style:{"text-align":"left"}},"三元表达式解析器 🔒",-1),yd=t("td",{style:{"text-align":"center"}},null,-1),pd={style:{"text-align":"left"}},xd=t("code",null,"栈",-1),bd=t("code",null,"递归",-1),kd=t("code",null,"字符串",-1),vd=t("td",{style:{"text-align":"center"}},"🟠",-1),wd={style:{"text-align":"center"}},Id={href:"https://leetcode.cn/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},qd={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},"445",-1),jd=t("td",{style:{"text-align":"left"}},"两数相加 II",-1),Od={style:{"text-align":"center"}},Nd={style:{"text-align":"left"}},Ld=t("code",null,"栈",-1),Bd=t("code",null,"链表",-1),Md=t("code",null,"数学",-1),Vd=t("td",{style:{"text-align":"center"}},"🟠",-1),Kd={style:{"text-align":"center"}},Cd={href:"https://leetcode.cn/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},Ed={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},"456",-1),Rd=t("td",{style:{"text-align":"left"}},"132 模式",-1),Zd={style:{"text-align":"center"}},Gd={style:{"text-align":"left"}},Sd=t("code",null,"栈",-1),Td=t("code",null,"数组",-1),Ud=t("code",null,"二分查找",-1),Xd=t("code",null,"2+",-1),Yd=t("td",{style:{"text-align":"center"}},"🟠",-1),Ad={style:{"text-align":"center"}},Pd={href:"https://leetcode.cn/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},Dd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"484",-1),Hd=t("td",{style:{"text-align":"left"}},"寻找排列 🔒",-1),Jd=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},$d=t("code",null,"栈",-1),tr=t("code",null,"贪心",-1),er=t("code",null,"数组",-1),or=t("code",null,"1+",-1),lr=t("td",{style:{"text-align":"center"}},"🟠",-1),nr={style:{"text-align":"center"}},sr={href:"https://leetcode.cn/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},"488",-1),rr=t("td",{style:{"text-align":"left"}},"祖玛游戏",-1),cr=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},ir=t("code",null,"栈",-1),hr=t("code",null,"广度优先搜索",-1),gr=t("code",null,"记忆化搜索",-1),ur=t("code",null,"2+",-1),fr=t("td",{style:{"text-align":"center"}},"🔴",-1),mr={style:{"text-align":"center"}},yr={href:"https://leetcode.cn/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},xr=t("td",{style:{"text-align":"center"}},"496",-1),br=t("td",{style:{"text-align":"left"}},"下一个更大元素 I",-1),kr={style:{"text-align":"center"}},vr={style:{"text-align":"left"}},wr=t("code",null,"栈",-1),Ir=t("code",null,"数组",-1),qr=t("code",null,"哈希表",-1),zr=t("code",null,"1+",-1),jr=t("td",{style:{"text-align":"center"}},"🟢",-1),Or={style:{"text-align":"center"}},Nr={href:"https://leetcode.cn/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},Br=t("td",{style:{"text-align":"center"}},"503",-1),Mr=t("td",{style:{"text-align":"left"}},"下一个更大元素 II",-1),Vr={style:{"text-align":"center"}},Kr={style:{"text-align":"left"}},Cr=t("code",null,"栈",-1),Er=t("code",null,"数组",-1),Qr=t("code",null,"单调栈",-1),Rr=t("td",{style:{"text-align":"center"}},"🟠",-1),Zr={style:{"text-align":"center"}},Gr={href:"https://leetcode.cn/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},Sr={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},Tr=t("td",{style:{"text-align":"center"}},"536",-1),Ur=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),Xr=t("td",{style:{"text-align":"center"}},null,-1),Yr={style:{"text-align":"left"}},Ar=t("code",null,"栈",-1),Pr=t("code",null,"树",-1),Dr=t("code",null,"深度优先搜索",-1),Fr=t("code",null,"2+",-1),Hr=t("td",{style:{"text-align":"center"}},"🟠",-1),Jr={style:{"text-align":"center"}},Wr={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},$r={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},tc=t("td",{style:{"text-align":"center"}},"581",-1),ec=t("td",{style:{"text-align":"left"}},"最短无序连续子数组",-1),oc=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},nc=t("code",null,"栈",-1),sc=t("code",null,"贪心",-1),_c=t("code",null,"数组",-1),dc=t("code",null,"3+",-1),rc=t("td",{style:{"text-align":"center"}},"🟠",-1),cc={style:{"text-align":"center"}},ac={href:"https://leetcode.cn/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},ic={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},"589",-1),gc=t("td",{style:{"text-align":"left"}},"N 叉树的前序遍历",-1),uc={style:{"text-align":"center"}},fc={style:{"text-align":"left"}},mc=t("code",null,"栈",-1),yc=t("code",null,"树",-1),pc=t("code",null,"深度优先搜索",-1),xc=t("td",{style:{"text-align":"center"}},"🟢",-1),bc={style:{"text-align":"center"}},kc={href:"https://leetcode.cn/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},vc={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},"590",-1),Ic=t("td",{style:{"text-align":"left"}},"N 叉树的后序遍历",-1),qc={style:{"text-align":"center"}},zc={style:{"text-align":"left"}},jc=t("code",null,"栈",-1),Oc=t("code",null,"树",-1),Nc=t("code",null,"深度优先搜索",-1),Lc=t("td",{style:{"text-align":"center"}},"🟢",-1),Bc={style:{"text-align":"center"}},Mc={href:"https://leetcode.cn/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Vc={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},"591",-1),Cc=t("td",{style:{"text-align":"left"}},"标签验证器",-1),Ec=t("td",{style:{"text-align":"center"}},null,-1),Qc={style:{"text-align":"left"}},Rc=t("code",null,"栈",-1),Zc=t("code",null,"字符串",-1),Gc=t("td",{style:{"text-align":"center"}},"🔴",-1),Sc={style:{"text-align":"center"}},Tc={href:"https://leetcode.cn/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},Uc={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},"636",-1),Yc=t("td",{style:{"text-align":"left"}},"函数的独占时间",-1),Ac=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Dc=t("code",null,"栈",-1),Fc=t("code",null,"数组",-1),Hc=t("td",{style:{"text-align":"center"}},"🟠",-1),Jc={style:{"text-align":"center"}},Wc={href:"https://leetcode.cn/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},$c={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},ta=t("td",{style:{"text-align":"center"}},"654",-1),ea=t("td",{style:{"text-align":"left"}},"最大二叉树",-1),oa={style:{"text-align":"center"}},la={style:{"text-align":"left"}},na=t("code",null,"栈",-1),sa=t("code",null,"树",-1),_a=t("code",null,"数组",-1),da=t("code",null,"3+",-1),ra=t("td",{style:{"text-align":"center"}},"🟠",-1),ca={style:{"text-align":"center"}},aa={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},ia={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},ha=t("td",{style:{"text-align":"center"}},"678",-1),ga=t("td",{style:{"text-align":"left"}},"有效的括号字符串",-1),ua={style:{"text-align":"center"}},fa={style:{"text-align":"left"}},ma=t("code",null,"栈",-1),ya=t("code",null,"贪心",-1),pa=t("code",null,"字符串",-1),xa=t("code",null,"1+",-1),ba=t("td",{style:{"text-align":"center"}},"🟠",-1),ka={style:{"text-align":"center"}},va={href:"https://leetcode.cn/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},wa={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},"682",-1),qa=t("td",{style:{"text-align":"left"}},"棒球比赛",-1),za={style:{"text-align":"center"}},ja={style:{"text-align":"left"}},Oa=t("code",null,"栈",-1),Na=t("code",null,"数组",-1),La=t("code",null,"模拟",-1),Ba=t("td",{style:{"text-align":"center"}},"🟢",-1),Ma={style:{"text-align":"center"}},Va={href:"https://leetcode.cn/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},Ka={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},Ca=t("td",{style:{"text-align":"center"}},"716",-1),Ea=t("td",{style:{"text-align":"left"}},"最大栈 🔒",-1),Qa=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Za=t("code",null,"栈",-1),Ga=t("code",null,"设计",-1),Sa=t("code",null,"链表",-1),Ta=t("code",null,"2+",-1),Ua=t("td",{style:{"text-align":"center"}},"🔴",-1),Xa={style:{"text-align":"center"}},Ya={href:"https://leetcode.cn/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Aa={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},"726",-1),Da=t("td",{style:{"text-align":"left"}},"原子的数量",-1),Fa=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},Ja=t("code",null,"栈",-1),Wa=t("code",null,"哈希表",-1),$a=t("code",null,"字符串",-1),ti=t("code",null,"1+",-1),ei=t("td",{style:{"text-align":"center"}},"🔴",-1),oi={style:{"text-align":"center"}},li={href:"https://leetcode.cn/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},ni={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},si=t("td",{style:{"text-align":"center"}},"735",-1),_i=t("td",{style:{"text-align":"left"}},"小行星碰撞",-1),di={style:{"text-align":"center"}},ri={style:{"text-align":"left"}},ci=t("code",null,"栈",-1),ai=t("code",null,"数组",-1),ii=t("code",null,"模拟",-1),hi=t("td",{style:{"text-align":"center"}},"🟠",-1),gi={style:{"text-align":"center"}},ui={href:"https://leetcode.cn/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},fi={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},"736",-1),yi=t("td",{style:{"text-align":"left"}},"Lisp 语法解析",-1),pi=t("td",{style:{"text-align":"center"}},null,-1),xi={style:{"text-align":"left"}},bi=t("code",null,"栈",-1),ki=t("code",null,"递归",-1),vi=t("code",null,"哈希表",-1),wi=t("code",null,"1+",-1),Ii=t("td",{style:{"text-align":"center"}},"🔴",-1),qi={style:{"text-align":"center"}},zi={href:"https://leetcode.cn/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},ji={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},Oi=t("td",{style:{"text-align":"center"}},"739",-1),Ni=t("td",{style:{"text-align":"left"}},"每日温度",-1),Li={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Mi=t("code",null,"栈",-1),Vi=t("code",null,"数组",-1),Ki=t("code",null,"单调栈",-1),Ci=t("td",{style:{"text-align":"center"}},"🟠",-1),Ei={style:{"text-align":"center"}},Qi={href:"https://leetcode.cn/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Ri={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},"768",-1),Gi=t("td",{style:{"text-align":"left"}},"最多能完成排序的块 II",-1),Si=t("td",{style:{"text-align":"center"}},null,-1),Ti={style:{"text-align":"left"}},Ui=t("code",null,"栈",-1),Xi=t("code",null,"贪心",-1),Yi=t("code",null,"数组",-1),Ai=t("code",null,"2+",-1),Pi=t("td",{style:{"text-align":"center"}},"🔴",-1),Di={style:{"text-align":"center"}},Fi={href:"https://leetcode.cn/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Hi={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},"769",-1),Wi=t("td",{style:{"text-align":"left"}},"最多能完成排序的块",-1),$i={style:{"text-align":"center"}},t1={style:{"text-align":"left"}},e1=t("code",null,"栈",-1),o1=t("code",null,"贪心",-1),l1=t("code",null,"数组",-1),n1=t("code",null,"2+",-1),s1=t("td",{style:{"text-align":"center"}},"🟠",-1),_1={style:{"text-align":"center"}},d1={href:"https://leetcode.cn/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},r1={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},c1=t("td",{style:{"text-align":"center"}},"770",-1),a1=t("td",{style:{"text-align":"left"}},"基本计算器 IV",-1),i1=t("td",{style:{"text-align":"center"}},null,-1),h1={style:{"text-align":"left"}},g1=t("code",null,"栈",-1),u1=t("code",null,"递归",-1),f1=t("code",null,"哈希表",-1),m1=t("code",null,"2+",-1),y1=t("td",{style:{"text-align":"center"}},"🔴",-1),p1={style:{"text-align":"center"}},x1={href:"https://leetcode.cn/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},b1={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},k1=t("td",{style:{"text-align":"center"}},"772",-1),v1=t("td",{style:{"text-align":"left"}},"基本计算器 III 🔒",-1),w1={style:{"text-align":"center"}},I1={style:{"text-align":"left"}},q1=t("code",null,"栈",-1),z1=t("code",null,"递归",-1),j1=t("code",null,"数学",-1),O1=t("code",null,"1+",-1),N1=t("td",{style:{"text-align":"center"}},"🔴",-1),L1={style:{"text-align":"center"}},B1={href:"https://leetcode.cn/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},M1={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},"844",-1),K1=t("td",{style:{"text-align":"left"}},"比较含退格的字符串",-1),C1={style:{"text-align":"center"}},E1={style:{"text-align":"left"}},Q1=t("code",null,"栈",-1),R1=t("code",null,"双指针",-1),Z1=t("code",null,"字符串",-1),G1=t("code",null,"1+",-1),S1=t("td",{style:{"text-align":"center"}},"🟢",-1),T1={style:{"text-align":"center"}},U1={href:"https://leetcode.cn/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},X1={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},"853",-1),A1=t("td",{style:{"text-align":"left"}},"车队",-1),P1=t("td",{style:{"text-align":"center"}},null,-1),D1={style:{"text-align":"left"}},F1=t("code",null,"栈",-1),H1=t("code",null,"数组",-1),J1=t("code",null,"排序",-1),W1=t("code",null,"1+",-1),$1=t("td",{style:{"text-align":"center"}},"🟠",-1),th={style:{"text-align":"center"}},eh={href:"https://leetcode.cn/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},oh={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},"856",-1),nh=t("td",{style:{"text-align":"left"}},"括号的分数",-1),sh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},dh=t("code",null,"栈",-1),rh=t("code",null,"字符串",-1),ch=t("td",{style:{"text-align":"center"}},"🟠",-1),ah={style:{"text-align":"center"}},ih={href:"https://leetcode.cn/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},hh={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},"880",-1),uh=t("td",{style:{"text-align":"left"}},"索引处的解码字符串",-1),fh={style:{"text-align":"center"}},mh={style:{"text-align":"left"}},yh=t("code",null,"栈",-1),ph=t("code",null,"字符串",-1),xh=t("td",{style:{"text-align":"center"}},"🟠",-1),bh={style:{"text-align":"center"}},kh={href:"https://leetcode.cn/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},vh={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},"895",-1),Ih=t("td",{style:{"text-align":"left"}},"最大频率栈",-1),qh=t("td",{style:{"text-align":"center"}},null,-1),zh={style:{"text-align":"left"}},jh=t("code",null,"栈",-1),Oh=t("code",null,"设计",-1),Nh=t("code",null,"哈希表",-1),Lh=t("code",null,"1+",-1),Bh=t("td",{style:{"text-align":"center"}},"🔴",-1),Mh={style:{"text-align":"center"}},Vh={href:"https://leetcode.cn/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},Kh={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},Ch=t("td",{style:{"text-align":"center"}},"897",-1),Eh=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),Qh={style:{"text-align":"center"}},Rh={style:{"text-align":"left"}},Zh=t("code",null,"栈",-1),Gh=t("code",null,"树",-1),Sh=t("code",null,"深度优先搜索",-1),Th=t("code",null,"2+",-1),Uh=t("td",{style:{"text-align":"center"}},"🟢",-1),Xh={style:{"text-align":"center"}},Yh={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Ah={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},"901",-1),Dh=t("td",{style:{"text-align":"left"}},"股票价格跨度",-1),Fh={style:{"text-align":"center"}},Hh={style:{"text-align":"left"}},Jh=t("code",null,"栈",-1),Wh=t("code",null,"设计",-1),$h=t("code",null,"数据流",-1),tg=t("code",null,"1+",-1),eg=t("td",{style:{"text-align":"center"}},"🟠",-1),og={style:{"text-align":"center"}},lg={href:"https://leetcode.cn/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},ng={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},sg=t("td",{style:{"text-align":"center"}},"907",-1),_g=t("td",{style:{"text-align":"left"}},"子数组的最小值之和",-1),dg=t("td",{style:{"text-align":"center"}},null,-1),rg={style:{"text-align":"left"}},cg=t("code",null,"栈",-1),ag=t("code",null,"数组",-1),ig=t("code",null,"动态规划",-1),hg=t("code",null,"1+",-1),gg=t("td",{style:{"text-align":"center"}},"🟠",-1),ug={style:{"text-align":"center"}},fg={href:"https://leetcode.cn/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},mg={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},"921",-1),pg=t("td",{style:{"text-align":"left"}},"使括号有效的最少添加",-1),xg={style:{"text-align":"center"}},bg={style:{"text-align":"left"}},kg=t("code",null,"栈",-1),vg=t("code",null,"贪心",-1),wg=t("code",null,"字符串",-1),Ig=t("td",{style:{"text-align":"center"}},"🟠",-1),qg={style:{"text-align":"center"}},zg={href:"https://leetcode.cn/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},jg={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},Og=t("td",{style:{"text-align":"center"}},"936",-1),Ng=t("td",{style:{"text-align":"left"}},"戳印序列",-1),Lg=t("td",{style:{"text-align":"center"}},null,-1),Bg={style:{"text-align":"left"}},Mg=t("code",null,"栈",-1),Vg=t("code",null,"贪心",-1),Kg=t("code",null,"队列",-1),Cg=t("code",null,"1+",-1),Eg=t("td",{style:{"text-align":"center"}},"🔴",-1),Qg={style:{"text-align":"center"}},Rg={href:"https://leetcode.cn/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Zg={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Gg=t("td",{style:{"text-align":"center"}},"946",-1),Sg=t("td",{style:{"text-align":"left"}},"验证栈序列",-1),Tg={style:{"text-align":"center"}},Ug={style:{"text-align":"left"}},Xg=t("code",null,"栈",-1),Yg=t("code",null,"数组",-1),Ag=t("code",null,"模拟",-1),Pg=t("td",{style:{"text-align":"center"}},"🟠",-1),Dg={style:{"text-align":"center"}},Fg={href:"https://leetcode.cn/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},Hg={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},"962",-1),Wg=t("td",{style:{"text-align":"left"}},"最大宽度坡",-1),$g={style:{"text-align":"center"}},tu={style:{"text-align":"left"}},eu=t("code",null,"栈",-1),ou=t("code",null,"数组",-1),lu=t("code",null,"单调栈",-1),nu=t("td",{style:{"text-align":"center"}},"🟠",-1),su={style:{"text-align":"center"}},_u={href:"https://leetcode.cn/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},du={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},"975",-1),cu=t("td",{style:{"text-align":"left"}},"奇偶跳",-1),au=t("td",{style:{"text-align":"center"}},null,-1),iu={style:{"text-align":"left"}},hu=t("code",null,"栈",-1),gu=t("code",null,"数组",-1),uu=t("code",null,"动态规划",-1),fu=t("code",null,"2+",-1),mu=t("td",{style:{"text-align":"center"}},"🔴",-1),yu={style:{"text-align":"center"}},pu={href:"https://leetcode.cn/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},xu={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},"1003",-1),ku=t("td",{style:{"text-align":"left"}},"检查替换后的词是否有效",-1),vu=t("td",{style:{"text-align":"center"}},null,-1),wu={style:{"text-align":"left"}},Iu=t("code",null,"栈",-1),qu=t("code",null,"字符串",-1),zu=t("td",{style:{"text-align":"center"}},"🟠",-1),ju={style:{"text-align":"center"}},Ou={href:"https://leetcode.cn/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Nu={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Lu=t("td",{style:{"text-align":"center"}},"1006",-1),Bu=t("td",{style:{"text-align":"left"}},"笨阶乘",-1),Mu=t("td",{style:{"text-align":"center"}},null,-1),Vu={style:{"text-align":"left"}},Ku=t("code",null,"栈",-1),Cu=t("code",null,"数学",-1),Eu=t("code",null,"模拟",-1),Qu=t("td",{style:{"text-align":"center"}},"🟠",-1),Ru={style:{"text-align":"center"}},Zu={href:"https://leetcode.cn/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},Gu={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},Su=t("td",{style:{"text-align":"center"}},"1008",-1),Tu=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),Uu={style:{"text-align":"center"}},Xu={style:{"text-align":"left"}},Yu=t("code",null,"栈",-1),Au=t("code",null,"树",-1),Pu=t("code",null,"二叉搜索树",-1),Du=t("code",null,"3+",-1),Fu=t("td",{style:{"text-align":"center"}},"🟠",-1),Hu={style:{"text-align":"center"}},Ju={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Wu={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},$u=t("td",{style:{"text-align":"center"}},"1019",-1),tf=t("td",{style:{"text-align":"left"}},"链表中的下一个更大节点",-1),ef=t("td",{style:{"text-align":"center"}},null,-1),of={style:{"text-align":"left"}},lf=t("code",null,"栈",-1),nf=t("code",null,"数组",-1),sf=t("code",null,"链表",-1),_f=t("code",null,"1+",-1),df=t("td",{style:{"text-align":"center"}},"🟠",-1),rf={style:{"text-align":"center"}},cf={href:"https://leetcode.cn/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},af={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},"1021",-1),gf=t("td",{style:{"text-align":"left"}},"删除最外层的括号",-1),uf={style:{"text-align":"center"}},ff={style:{"text-align":"left"}},mf=t("code",null,"栈",-1),yf=t("code",null,"字符串",-1),pf=t("td",{style:{"text-align":"center"}},"🟢",-1),xf={style:{"text-align":"center"}},bf={href:"https://leetcode.cn/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},kf={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},vf=t("td",{style:{"text-align":"center"}},"1047",-1),wf=t("td",{style:{"text-align":"left"}},"删除字符串中的所有相邻重复项",-1),If={style:{"text-align":"center"}},qf={style:{"text-align":"left"}},zf=t("code",null,"栈",-1),jf=t("code",null,"字符串",-1),Of=t("td",{style:{"text-align":"center"}},"🟢",-1),Nf={style:{"text-align":"center"}},Lf={href:"https://leetcode.cn/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Bf={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},"1063",-1),Vf=t("td",{style:{"text-align":"left"}},"有效子数组的数目 🔒",-1),Kf=t("td",{style:{"text-align":"center"}},null,-1),Cf={style:{"text-align":"left"}},Ef=t("code",null,"栈",-1),Qf=t("code",null,"数组",-1),Rf=t("code",null,"单调栈",-1),Zf=t("td",{style:{"text-align":"center"}},"🔴",-1),Gf={style:{"text-align":"center"}},Sf={href:"https://leetcode.cn/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Tf={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Uf=t("td",{style:{"text-align":"center"}},"1081",-1),Xf=t("td",{style:{"text-align":"left"}},"不同字符的最小子序列",-1),Yf={style:{"text-align":"center"}},Af={style:{"text-align":"left"}},Pf=t("code",null,"栈",-1),Df=t("code",null,"贪心",-1),Ff=t("code",null,"字符串",-1),Hf=t("code",null,"1+",-1),Jf=t("td",{style:{"text-align":"center"}},"🟠",-1),Wf={style:{"text-align":"center"}},$f={href:"https://leetcode.cn/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},tm={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},em=t("td",{style:{"text-align":"center"}},"1096",-1),om=t("td",{style:{"text-align":"left"}},"花括号展开 II",-1),lm=t("td",{style:{"text-align":"center"}},null,-1),nm={style:{"text-align":"left"}},sm=t("code",null,"栈",-1),_m=t("code",null,"广度优先搜索",-1),dm=t("code",null,"字符串",-1),rm=t("code",null,"1+",-1),cm=t("td",{style:{"text-align":"center"}},"🔴",-1),am={style:{"text-align":"center"}},im={href:"https://leetcode.cn/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},hm={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},gm=t("td",{style:{"text-align":"center"}},"1106",-1),um=t("td",{style:{"text-align":"left"}},"解析布尔表达式",-1),fm={style:{"text-align":"center"}},mm={style:{"text-align":"left"}},ym=t("code",null,"栈",-1),pm=t("code",null,"递归",-1),xm=t("code",null,"字符串",-1),bm=t("td",{style:{"text-align":"center"}},"🔴",-1),km={style:{"text-align":"center"}},vm={href:"https://leetcode.cn/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},wm={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},"1111",-1),qm=t("td",{style:{"text-align":"left"}},"有效括号的嵌套深度",-1),zm=t("td",{style:{"text-align":"center"}},null,-1),jm={style:{"text-align":"left"}},Om=t("code",null,"栈",-1),Nm=t("code",null,"字符串",-1),Lm=t("td",{style:{"text-align":"center"}},"🟠",-1),Bm={style:{"text-align":"center"}},Mm={href:"https://leetcode.cn/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},Vm={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},Km=t("td",{style:{"text-align":"center"}},"1124",-1),Cm=t("td",{style:{"text-align":"left"}},"表现良好的最长时间段",-1),Em=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Rm=t("code",null,"栈",-1),Zm=t("code",null,"数组",-1),Gm=t("code",null,"哈希表",-1),Sm=t("code",null,"2+",-1),Tm=t("td",{style:{"text-align":"center"}},"🟠",-1),Um={style:{"text-align":"center"}},Xm={href:"https://leetcode.cn/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Ym={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},"1130",-1),Pm=t("td",{style:{"text-align":"left"}},"叶值的最小代价生成树",-1),Dm=t("td",{style:{"text-align":"center"}},null,-1),Fm={style:{"text-align":"left"}},Hm=t("code",null,"栈",-1),Jm=t("code",null,"贪心",-1),Wm=t("code",null,"数组",-1),$m=t("code",null,"2+",-1),ty=t("td",{style:{"text-align":"center"}},"🟠",-1),ey={style:{"text-align":"center"}},oy={href:"https://leetcode.cn/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},ly={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},ny=t("td",{style:{"text-align":"center"}},"1172",-1),sy=t("td",{style:{"text-align":"left"}},"餐盘栈",-1),_y=t("td",{style:{"text-align":"center"}},null,-1),dy={style:{"text-align":"left"}},ry=t("code",null,"栈",-1),cy=t("code",null,"设计",-1),ay=t("code",null,"哈希表",-1),iy=t("code",null,"1+",-1),hy=t("td",{style:{"text-align":"center"}},"🔴",-1),gy={style:{"text-align":"center"}},uy={href:"https://leetcode.cn/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},fy={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},my=t("td",{style:{"text-align":"center"}},"1190",-1),yy=t("td",{style:{"text-align":"left"}},"反转每对括号间的子串",-1),py={style:{"text-align":"center"}},xy={style:{"text-align":"left"}},by=t("code",null,"栈",-1),ky=t("code",null,"字符串",-1),vy=t("td",{style:{"text-align":"center"}},"🟠",-1),wy={style:{"text-align":"center"}},Iy={href:"https://leetcode.cn/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},qy={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},zy=t("td",{style:{"text-align":"center"}},"1209",-1),jy=t("td",{style:{"text-align":"left"}},"删除字符串中的所有相邻重复项 II",-1),Oy=t("td",{style:{"text-align":"center"}},null,-1),Ny={style:{"text-align":"left"}},Ly=t("code",null,"栈",-1),By=t("code",null,"字符串",-1),My=t("td",{style:{"text-align":"center"}},"🟠",-1),Vy={style:{"text-align":"center"}},Ky={href:"https://leetcode.cn/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},Cy={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},"1214",-1),Qy=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),Ry=t("td",{style:{"text-align":"center"}},null,-1),Zy={style:{"text-align":"left"}},Gy=t("code",null,"栈",-1),Sy=t("code",null,"树",-1),Ty=t("code",null,"深度优先搜索",-1),Uy=t("code",null,"4+",-1),Xy=t("td",{style:{"text-align":"center"}},"🟠",-1),Yy={style:{"text-align":"center"}},Ay={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Py={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},"1249",-1),Fy=t("td",{style:{"text-align":"left"}},"移除无效的括号",-1),Hy=t("td",{style:{"text-align":"center"}},null,-1),Jy={style:{"text-align":"left"}},Wy=t("code",null,"栈",-1),$y=t("code",null,"字符串",-1),tp=t("td",{style:{"text-align":"center"}},"🟠",-1),ep={style:{"text-align":"center"}},op={href:"https://leetcode.cn/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},lp={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},"1265",-1),sp=t("td",{style:{"text-align":"left"}},"逆序打印不可变链表 🔒",-1),_p=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},rp=t("code",null,"栈",-1),cp=t("code",null,"递归",-1),ap=t("code",null,"链表",-1),ip=t("code",null,"1+",-1),hp=t("td",{style:{"text-align":"center"}},"🟠",-1),gp={style:{"text-align":"center"}},up={href:"https://leetcode.cn/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},fp={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},mp=t("td",{style:{"text-align":"center"}},"1381",-1),yp=t("td",{style:{"text-align":"left"}},"设计一个支持增量操作的栈",-1),pp={style:{"text-align":"center"}},xp={style:{"text-align":"left"}},bp=t("code",null,"栈",-1),kp=t("code",null,"设计",-1),vp=t("code",null,"数组",-1),wp=t("td",{style:{"text-align":"center"}},"🟠",-1),Ip={style:{"text-align":"center"}},qp={href:"https://leetcode.cn/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},zp={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},jp=t("td",{style:{"text-align":"center"}},"1441",-1),Op=t("td",{style:{"text-align":"left"}},"用栈操作构建数组",-1),Np={style:{"text-align":"center"}},Lp={style:{"text-align":"left"}},Bp=t("code",null,"栈",-1),Mp=t("code",null,"数组",-1),Vp=t("code",null,"模拟",-1),Kp=t("td",{style:{"text-align":"center"}},"🟠",-1),Cp={style:{"text-align":"center"}},Ep={href:"https://leetcode.cn/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},Qp={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},Rp=t("td",{style:{"text-align":"center"}},"1472",-1),Zp=t("td",{style:{"text-align":"left"}},"设计浏览器历史记录",-1),Gp={style:{"text-align":"center"}},Sp={style:{"text-align":"left"}},Tp=t("code",null,"栈",-1),Up=t("code",null,"设计",-1),Xp=t("code",null,"数组",-1),Yp=t("code",null,"3+",-1),Ap=t("td",{style:{"text-align":"center"}},"🟠",-1),Pp={style:{"text-align":"center"}},Dp={href:"https://leetcode.cn/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Fp={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Hp=t("td",{style:{"text-align":"center"}},"1475",-1),Jp=t("td",{style:{"text-align":"left"}},"商品折扣后的最终价格",-1),Wp={style:{"text-align":"center"}},$p={style:{"text-align":"left"}},tx=t("code",null,"栈",-1),ex=t("code",null,"数组",-1),ox=t("code",null,"单调栈",-1),lx=t("td",{style:{"text-align":"center"}},"🟢",-1),nx={style:{"text-align":"center"}},sx={href:"https://leetcode.cn/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},_x={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},dx=t("td",{style:{"text-align":"center"}},"1504",-1),rx=t("td",{style:{"text-align":"left"}},"统计全 1 子矩形",-1),cx=t("td",{style:{"text-align":"center"}},null,-1),ax={style:{"text-align":"left"}},ix=t("code",null,"栈",-1),hx=t("code",null,"数组",-1),gx=t("code",null,"动态规划",-1),ux=t("code",null,"2+",-1),fx=t("td",{style:{"text-align":"center"}},"🟠",-1),mx={style:{"text-align":"center"}},yx={href:"https://leetcode.cn/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},px={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},"1526",-1),bx=t("td",{style:{"text-align":"left"}},"形成目标数组的子数组最少增加次数",-1),kx=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},wx=t("code",null,"栈",-1),Ix=t("code",null,"贪心",-1),qx=t("code",null,"数组",-1),zx=t("code",null,"2+",-1),jx=t("td",{style:{"text-align":"center"}},"🔴",-1),Ox={style:{"text-align":"center"}},Nx={href:"https://leetcode.cn/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Lx={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},"1541",-1),Mx=t("td",{style:{"text-align":"left"}},"平衡括号字符串的最少插入次数",-1),Vx=t("td",{style:{"text-align":"center"}},null,-1),Kx={style:{"text-align":"left"}},Cx=t("code",null,"栈",-1),Ex=t("code",null,"贪心",-1),Qx=t("code",null,"字符串",-1),Rx=t("td",{style:{"text-align":"center"}},"🟠",-1),Zx={style:{"text-align":"center"}},Gx={href:"https://leetcode.cn/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},Sx={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},"1544",-1),Ux=t("td",{style:{"text-align":"left"}},"整理字符串",-1),Xx={style:{"text-align":"center"}},Yx={style:{"text-align":"left"}},Ax=t("code",null,"栈",-1),Px=t("code",null,"字符串",-1),Dx=t("td",{style:{"text-align":"center"}},"🟢",-1),Fx={style:{"text-align":"center"}},Hx={href:"https://leetcode.cn/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},Jx={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},"1574",-1),$x=t("td",{style:{"text-align":"left"}},"删除最短的子数组使剩余数组有序",-1),t2={style:{"text-align":"center"}},e2={style:{"text-align":"left"}},o2=t("code",null,"栈",-1),l2=t("code",null,"数组",-1),n2=t("code",null,"双指针",-1),s2=t("code",null,"2+",-1),_2=t("td",{style:{"text-align":"center"}},"🟠",-1),d2={style:{"text-align":"center"}},r2={href:"https://leetcode.cn/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},c2={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},"1586",-1),i2=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器 II 🔒",-1),h2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},u2=t("code",null,"栈",-1),f2=t("code",null,"树",-1),m2=t("code",null,"设计",-1),y2=t("code",null,"3+",-1),p2=t("td",{style:{"text-align":"center"}},"🟠",-1),x2={style:{"text-align":"center"}},b2={href:"https://leetcode.cn/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},k2={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},"1597",-1),w2=t("td",{style:{"text-align":"left"}},"根据中缀表达式构造二叉表达式树 🔒",-1),I2=t("td",{style:{"text-align":"center"}},null,-1),q2={style:{"text-align":"left"}},z2=t("code",null,"栈",-1),j2=t("code",null,"树",-1),O2=t("code",null,"字符串",-1),N2=t("code",null,"1+",-1),L2=t("td",{style:{"text-align":"center"}},"🔴",-1),B2={style:{"text-align":"center"}},M2={href:"https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},V2={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},"1598",-1),C2=t("td",{style:{"text-align":"left"}},"文件夹操作日志搜集器",-1),E2={style:{"text-align":"center"}},Q2={style:{"text-align":"left"}},R2=t("code",null,"栈",-1),Z2=t("code",null,"数组",-1),G2=t("code",null,"字符串",-1),S2=t("td",{style:{"text-align":"center"}},"🟢",-1),T2={style:{"text-align":"center"}},U2={href:"https://leetcode.cn/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},X2={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},Y2=t("td",{style:{"text-align":"center"}},"1614",-1),A2=t("td",{style:{"text-align":"left"}},"括号的最大嵌套深度",-1),P2={style:{"text-align":"center"}},D2={style:{"text-align":"left"}},F2=t("code",null,"栈",-1),H2=t("code",null,"字符串",-1),J2=t("td",{style:{"text-align":"center"}},"🟢",-1),W2={style:{"text-align":"center"}},$2={href:"https://leetcode.cn/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},tb={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},"1628",-1),ob=t("td",{style:{"text-align":"left"}},"设计带解析函数的表达式树 🔒",-1),lb=t("td",{style:{"text-align":"center"}},null,-1),nb={style:{"text-align":"left"}},sb=t("code",null,"栈",-1),_b=t("code",null,"树",-1),db=t("code",null,"设计",-1),rb=t("code",null,"3+",-1),cb=t("td",{style:{"text-align":"center"}},"🟠",-1),ab={style:{"text-align":"center"}},ib={href:"https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},hb={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},"1653",-1),ub=t("td",{style:{"text-align":"left"}},"使字符串平衡的最少删除次数",-1),fb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"栈",-1),pb=t("code",null,"字符串",-1),xb=t("code",null,"动态规划",-1),bb=t("td",{style:{"text-align":"center"}},"🟠",-1),kb={style:{"text-align":"center"}},vb={href:"https://leetcode.cn/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},wb={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},Ib=t("td",{style:{"text-align":"center"}},"1673",-1),qb=t("td",{style:{"text-align":"left"}},"找出最具竞争力的子序列",-1),zb=t("td",{style:{"text-align":"center"}},null,-1),jb={style:{"text-align":"left"}},Ob=t("code",null,"栈",-1),Nb=t("code",null,"贪心",-1),Lb=t("code",null,"数组",-1),Bb=t("code",null,"1+",-1),Mb=t("td",{style:{"text-align":"center"}},"🟠",-1),Vb={style:{"text-align":"center"}},Kb={href:"https://leetcode.cn/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Cb={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},"1700",-1),Qb=t("td",{style:{"text-align":"left"}},"无法吃午餐的学生数量",-1),Rb={style:{"text-align":"center"}},Zb={style:{"text-align":"left"}},Gb=t("code",null,"栈",-1),Sb=t("code",null,"队列",-1),Tb=t("code",null,"数组",-1),Ub=t("code",null,"1+",-1),Xb=t("td",{style:{"text-align":"center"}},"🟢",-1),Yb={style:{"text-align":"center"}},Ab={href:"https://leetcode.cn/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Pb={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},"1717",-1),Fb=t("td",{style:{"text-align":"left"}},"删除子字符串的最大得分",-1),Hb=t("td",{style:{"text-align":"center"}},null,-1),Jb={style:{"text-align":"left"}},Wb=t("code",null,"栈",-1),$b=t("code",null,"贪心",-1),t0=t("code",null,"字符串",-1),e0=t("td",{style:{"text-align":"center"}},"🟠",-1),o0={style:{"text-align":"center"}},l0={href:"https://leetcode.cn/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},n0={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},"1756",-1),_0=t("td",{style:{"text-align":"left"}},"设计最近使用（MRU）队列 🔒",-1),d0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},c0=t("code",null,"栈",-1),a0=t("code",null,"设计",-1),i0=t("code",null,"树状数组",-1),h0=t("code",null,"3+",-1),g0=t("td",{style:{"text-align":"center"}},"🟠",-1),u0={style:{"text-align":"center"}},f0={href:"https://leetcode.cn/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},m0={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},y0=t("td",{style:{"text-align":"center"}},"1762",-1),p0=t("td",{style:{"text-align":"left"}},"能看到海景的建筑物 🔒",-1),x0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},k0=t("code",null,"栈",-1),v0=t("code",null,"数组",-1),w0=t("code",null,"单调栈",-1),I0=t("td",{style:{"text-align":"center"}},"🟠",-1),q0={style:{"text-align":"center"}},z0={href:"https://leetcode.cn/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},j0={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},"1776",-1),N0=t("td",{style:{"text-align":"left"}},"车队 II",-1),L0=t("td",{style:{"text-align":"center"}},null,-1),B0={style:{"text-align":"left"}},M0=t("code",null,"栈",-1),V0=t("code",null,"数组",-1),K0=t("code",null,"数学",-1),C0=t("code",null,"2+",-1),E0=t("td",{style:{"text-align":"center"}},"🔴",-1),Q0={style:{"text-align":"center"}},R0={href:"https://leetcode.cn/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Z0={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},"1793",-1),S0=t("td",{style:{"text-align":"left"}},"好子数组的最大分数",-1),T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},X0=t("code",null,"栈",-1),Y0=t("code",null,"数组",-1),A0=t("code",null,"双指针",-1),P0=t("code",null,"2+",-1),D0=t("td",{style:{"text-align":"center"}},"🔴",-1),F0={style:{"text-align":"center"}},H0={href:"https://leetcode.cn/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},J0={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},"1856",-1),$0=t("td",{style:{"text-align":"left"}},"子数组最小乘积的最大值",-1),t3=t("td",{style:{"text-align":"center"}},null,-1),e3={style:{"text-align":"left"}},o3=t("code",null,"栈",-1),l3=t("code",null,"数组",-1),n3=t("code",null,"前缀和",-1),s3=t("code",null,"1+",-1),_3=t("td",{style:{"text-align":"center"}},"🟠",-1),d3={style:{"text-align":"center"}},r3={href:"https://leetcode.cn/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},c3={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},a3=t("td",{style:{"text-align":"center"}},"1896",-1),i3=t("td",{style:{"text-align":"left"}},"反转表达式值的最少操作次数",-1),h3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},u3=t("code",null,"栈",-1),f3=t("code",null,"数学",-1),m3=t("code",null,"字符串",-1),y3=t("code",null,"1+",-1),p3=t("td",{style:{"text-align":"center"}},"🔴",-1),x3={style:{"text-align":"center"}},b3={href:"https://leetcode.cn/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},k3={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},"1910",-1),w3=t("td",{style:{"text-align":"left"}},"删除一个字符串中所有出现的给定子字符串",-1),I3={style:{"text-align":"center"}},q3={style:{"text-align":"left"}},z3=t("code",null,"栈",-1),j3=t("code",null,"字符串",-1),O3=t("code",null,"模拟",-1),N3=t("td",{style:{"text-align":"center"}},"🟠",-1),L3={style:{"text-align":"center"}},B3={href:"https://leetcode.cn/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},M3={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},V3=t("td",{style:{"text-align":"center"}},"1944",-1),K3=t("td",{style:{"text-align":"left"}},"队列中可以看到的人数",-1),C3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},Q3=t("code",null,"栈",-1),R3=t("code",null,"数组",-1),Z3=t("code",null,"单调栈",-1),G3=t("td",{style:{"text-align":"center"}},"🔴",-1),S3={style:{"text-align":"center"}},T3={href:"https://leetcode.cn/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},U3={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},"1950",-1),Y3=t("td",{style:{"text-align":"left"}},"所有子数组最小值中的最大值 🔒",-1),A3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},D3=t("code",null,"栈",-1),F3=t("code",null,"数组",-1),H3=t("code",null,"单调栈",-1),J3=t("td",{style:{"text-align":"center"}},"🟠",-1),W3={style:{"text-align":"center"}},$3={href:"https://leetcode.cn/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},t4={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},e4=t("td",{style:{"text-align":"center"}},"1963",-1),o4=t("td",{style:{"text-align":"left"}},"使字符串平衡的最小交换次数",-1),l4={style:{"text-align":"center"}},n4={style:{"text-align":"left"}},s4=t("code",null,"栈",-1),_4=t("code",null,"贪心",-1),d4=t("code",null,"双指针",-1),r4=t("code",null,"1+",-1),c4=t("td",{style:{"text-align":"center"}},"🟠",-1),a4={style:{"text-align":"center"}},i4={href:"https://leetcode.cn/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},h4={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},g4=t("td",{style:{"text-align":"center"}},"1996",-1),u4=t("td",{style:{"text-align":"left"}},"游戏中弱角色的数量",-1),f4=t("td",{style:{"text-align":"center"}},null,-1),m4={style:{"text-align":"left"}},y4=t("code",null,"栈",-1),p4=t("code",null,"贪心",-1),x4=t("code",null,"数组",-1),b4=t("code",null,"2+",-1),k4=t("td",{style:{"text-align":"center"}},"🟠",-1),v4={style:{"text-align":"center"}},w4={href:"https://leetcode.cn/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},I4={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},"2000",-1),z4=t("td",{style:{"text-align":"left"}},"反转单词前缀",-1),j4={style:{"text-align":"center"}},O4={style:{"text-align":"left"}},N4=t("code",null,"栈",-1),L4=t("code",null,"双指针",-1),B4=t("code",null,"字符串",-1),M4=t("td",{style:{"text-align":"center"}},"🟢",-1),V4={style:{"text-align":"center"}},K4={href:"https://leetcode.cn/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},C4={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},"2019",-1),Q4=t("td",{style:{"text-align":"left"}},"解出数学表达式的学生分数",-1),R4=t("td",{style:{"text-align":"center"}},null,-1),Z4={style:{"text-align":"left"}},G4=t("code",null,"栈",-1),S4=t("code",null,"记忆化搜索",-1),T4=t("code",null,"数组",-1),U4=t("code",null,"3+",-1),X4=t("td",{style:{"text-align":"center"}},"🔴",-1),Y4={style:{"text-align":"center"}},A4={href:"https://leetcode.cn/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},P4={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},"2030",-1),F4=t("td",{style:{"text-align":"left"}},"含特定字母的最小子序列",-1),H4=t("td",{style:{"text-align":"center"}},null,-1),J4={style:{"text-align":"left"}},W4=t("code",null,"栈",-1),$4=t("code",null,"贪心",-1),t5=t("code",null,"字符串",-1),e5=t("code",null,"1+",-1),o5=t("td",{style:{"text-align":"center"}},"🔴",-1),l5={style:{"text-align":"center"}},n5={href:"https://leetcode.cn/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},s5={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},"2104",-1),d5=t("td",{style:{"text-align":"left"}},"子数组范围和",-1),r5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},a5=t("code",null,"栈",-1),i5=t("code",null,"数组",-1),h5=t("code",null,"单调栈",-1),g5=t("td",{style:{"text-align":"center"}},"🟠",-1),u5={style:{"text-align":"center"}},f5={href:"https://leetcode.cn/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},m5={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},"2116",-1),p5=t("td",{style:{"text-align":"left"}},"判断一个括号字符串是否有效",-1),x5={style:{"text-align":"center"}},b5={style:{"text-align":"left"}},k5=t("code",null,"栈",-1),v5=t("code",null,"贪心",-1),w5=t("code",null,"字符串",-1),I5=t("td",{style:{"text-align":"center"}},"🟠",-1),q5={style:{"text-align":"center"}},z5={href:"https://leetcode.cn/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},j5={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},O5=t("td",{style:{"text-align":"center"}},"2130",-1),N5=t("td",{style:{"text-align":"left"}},"链表最大孪生和",-1),L5={style:{"text-align":"center"}},B5={style:{"text-align":"left"}},M5=t("code",null,"栈",-1),V5=t("code",null,"链表",-1),K5=t("code",null,"双指针",-1),C5=t("td",{style:{"text-align":"center"}},"🟠",-1),E5={style:{"text-align":"center"}},Q5={href:"https://leetcode.cn/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},R5={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},Z5=t("td",{style:{"text-align":"center"}},"2197",-1),G5=t("td",{style:{"text-align":"left"}},"替换数组中的非互质数",-1),S5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},U5=t("code",null,"栈",-1),X5=t("code",null,"数组",-1),Y5=t("code",null,"数学",-1),A5=t("code",null,"1+",-1),P5=t("td",{style:{"text-align":"center"}},"🔴",-1),D5={style:{"text-align":"center"}},F5={href:"https://leetcode.cn/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},H5={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},J5=t("td",{style:{"text-align":"center"}},"2211",-1),W5=t("td",{style:{"text-align":"left"}},"统计道路上的碰撞次数",-1),$5=t("td",{style:{"text-align":"center"}},null,-1),t6={style:{"text-align":"left"}},e6=t("code",null,"栈",-1),o6=t("code",null,"字符串",-1),l6=t("code",null,"模拟",-1),n6=t("td",{style:{"text-align":"center"}},"🟠",-1),s6={style:{"text-align":"center"}},_6={href:"https://leetcode.cn/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},d6={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},"2216",-1),c6=t("td",{style:{"text-align":"left"}},"美化数组的最少删除数",-1),a6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},h6=t("code",null,"栈",-1),g6=t("code",null,"贪心",-1),u6=t("code",null,"数组",-1),f6=t("td",{style:{"text-align":"center"}},"🟠",-1),m6={style:{"text-align":"center"}},y6={href:"https://leetcode.cn/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},p6={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},"2254",-1),b6=t("td",{style:{"text-align":"left"}},"设计视频共享平台 🔒",-1),k6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},w6=t("code",null,"栈",-1),I6=t("code",null,"设计",-1),q6=t("code",null,"哈希表",-1),z6=t("code",null,"1+",-1),j6=t("td",{style:{"text-align":"center"}},"🔴",-1),O6={style:{"text-align":"center"}},N6={href:"https://leetcode.cn/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},L6={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},"2281",-1),M6=t("td",{style:{"text-align":"left"}},"巫师的总力量和",-1),V6=t("td",{style:{"text-align":"center"}},null,-1),K6={style:{"text-align":"left"}},C6=t("code",null,"栈",-1),E6=t("code",null,"数组",-1),Q6=t("code",null,"前缀和",-1),R6=t("code",null,"1+",-1),Z6=t("td",{style:{"text-align":"center"}},"🔴",-1),G6={style:{"text-align":"center"}},S6={href:"https://leetcode.cn/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},T6={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},"2282",-1),X6=t("td",{style:{"text-align":"left"}},"在一个网格中可以看到的人数 🔒",-1),Y6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},P6=t("code",null,"栈",-1),D6=t("code",null,"数组",-1),F6=t("code",null,"矩阵",-1),H6=t("code",null,"1+",-1),J6=t("td",{style:{"text-align":"center"}},"🟠",-1),W6={style:{"text-align":"center"}},$6={href:"https://leetcode.cn/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},t9={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},"2289",-1),o9=t("td",{style:{"text-align":"left"}},"使数组按非递减顺序排列",-1),l9=t("td",{style:{"text-align":"center"}},null,-1),n9={style:{"text-align":"left"}},s9=t("code",null,"栈",-1),_9=t("code",null,"数组",-1),d9=t("code",null,"链表",-1),r9=t("code",null,"1+",-1),c9=t("td",{style:{"text-align":"center"}},"🟠",-1),a9={style:{"text-align":"center"}},i9={href:"https://leetcode.cn/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},h9={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},g9=t("td",{style:{"text-align":"center"}},"2296",-1),u9=t("td",{style:{"text-align":"left"}},"设计一个文本编辑器",-1),f9=t("td",{style:{"text-align":"center"}},null,-1),m9={style:{"text-align":"left"}},y9=t("code",null,"栈",-1),p9=t("code",null,"设计",-1),x9=t("code",null,"链表",-1),b9=t("code",null,"3+",-1),k9=t("td",{style:{"text-align":"center"}},"🔴",-1),v9={style:{"text-align":"center"}},w9={href:"https://leetcode.cn/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},I9={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},"2297",-1),z9=t("td",{style:{"text-align":"left"}},"跳跃游戏 VIII 🔒",-1),j9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},N9=t("code",null,"栈",-1),L9=t("code",null,"图",-1),B9=t("code",null,"数组",-1),M9=t("code",null,"3+",-1),V9=t("td",{style:{"text-align":"center"}},"🟠",-1),K9={style:{"text-align":"center"}},C9={href:"https://leetcode.cn/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},E9={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Q9=t("td",{style:{"text-align":"center"}},"2334",-1),R9=t("td",{style:{"text-align":"left"}},"元素值大于变化阈值的子数组",-1),Z9=t("td",{style:{"text-align":"center"}},null,-1),G9={style:{"text-align":"left"}},S9=t("code",null,"栈",-1),T9=t("code",null,"并查集",-1),U9=t("code",null,"数组",-1),X9=t("code",null,"1+",-1),Y9=t("td",{style:{"text-align":"center"}},"🔴",-1),A9={style:{"text-align":"center"}},P9={href:"https://leetcode.cn/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},D9={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},F9=t("td",{style:{"text-align":"center"}},"2345",-1),H9=t("td",{style:{"text-align":"left"}},"寻找可见山的数量 🔒",-1),J9=t("td",{style:{"text-align":"center"}},null,-1),W9={style:{"text-align":"left"}},$9=t("code",null,"栈",-1),t7=t("code",null,"数组",-1),e7=t("code",null,"排序",-1),o7=t("code",null,"1+",-1),l7=t("td",{style:{"text-align":"center"}},"🟠",-1),n7={style:{"text-align":"center"}},s7={href:"https://leetcode.cn/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},_7={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},"2355",-1),r7=t("td",{style:{"text-align":"left"}},"你能拿走的最大图书数量 🔒",-1),c7=t("td",{style:{"text-align":"center"}},null,-1),a7={style:{"text-align":"left"}},i7=t("code",null,"栈",-1),h7=t("code",null,"数组",-1),g7=t("code",null,"动态规划",-1),u7=t("code",null,"1+",-1),f7=t("td",{style:{"text-align":"center"}},"🔴",-1),m7={style:{"text-align":"center"}},y7={href:"https://leetcode.cn/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},p7={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},x7=t("td",{style:{"text-align":"center"}},"2375",-1),b7=t("td",{style:{"text-align":"left"}},"根据模式串构造最小数字",-1),k7={style:{"text-align":"center"}},v7={style:{"text-align":"left"}},w7=t("code",null,"栈",-1),I7=t("code",null,"贪心",-1),q7=t("code",null,"字符串",-1),z7=t("code",null,"1+",-1),j7=t("td",{style:{"text-align":"center"}},"🟠",-1),O7={style:{"text-align":"center"}},N7={href:"https://leetcode.cn/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},L7={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},B7=t("td",{style:{"text-align":"center"}},"2390",-1),M7=t("td",{style:{"text-align":"left"}},"从字符串中移除星号",-1),V7={style:{"text-align":"center"}},K7={style:{"text-align":"left"}},C7=t("code",null,"栈",-1),E7=t("code",null,"字符串",-1),Q7=t("code",null,"模拟",-1),R7=t("td",{style:{"text-align":"center"}},"🟠",-1),Z7={style:{"text-align":"center"}},G7={href:"https://leetcode.cn/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},S7={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},T7=t("td",{style:{"text-align":"center"}},"2434",-1),U7=t("td",{style:{"text-align":"left"}},"使用机器人打印字典序最小的字符串",-1),X7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},A7=t("code",null,"栈",-1),P7=t("code",null,"贪心",-1),D7=t("code",null,"哈希表",-1),F7=t("code",null,"1+",-1),H7=t("td",{style:{"text-align":"center"}},"🟠",-1),J7={style:{"text-align":"center"}},W7={href:"https://leetcode.cn/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},$7={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},"2454",-1),e8=t("td",{style:{"text-align":"left"}},"下一个更大元素 IV",-1),o8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},n8=t("code",null,"栈",-1),s8=t("code",null,"数组",-1),_8=t("code",null,"二分查找",-1),d8=t("code",null,"3+",-1),r8=t("td",{style:{"text-align":"center"}},"🔴",-1),c8={style:{"text-align":"center"}},a8={href:"https://leetcode.cn/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},i8={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},h8=t("td",{style:{"text-align":"center"}},"2487",-1),g8=t("td",{style:{"text-align":"left"}},"从链表中移除节点",-1),u8=t("td",{style:{"text-align":"center"}},null,-1),f8={style:{"text-align":"left"}},m8=t("code",null,"栈",-1),y8=t("code",null,"递归",-1),p8=t("code",null,"链表",-1),x8=t("code",null,"1+",-1),b8=t("td",{style:{"text-align":"center"}},"🟠",-1),k8={style:{"text-align":"center"}},v8={href:"https://leetcode.cn/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},w8={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},"2589",-1),q8=t("td",{style:{"text-align":"left"}},"完成所有任务的最少时间",-1),z8=t("td",{style:{"text-align":"center"}},null,-1),j8={style:{"text-align":"left"}},O8=t("code",null,"栈",-1),N8=t("code",null,"贪心",-1),L8=t("code",null,"数组",-1),B8=t("code",null,"2+",-1),M8=t("td",{style:{"text-align":"center"}},"🔴",-1),V8={style:{"text-align":"center"}},K8={href:"https://leetcode.cn/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},C8={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},E8=t("td",{style:{"text-align":"center"}},"2617",-1),Q8=t("td",{style:{"text-align":"left"}},"网格图中最少访问的格子数",-1),R8=t("td",{style:{"text-align":"center"}},null,-1),Z8={style:{"text-align":"left"}},G8=t("code",null,"栈",-1),S8=t("code",null,"广度优先搜索",-1),T8=t("code",null,"并查集",-1),U8=t("code",null,"5+",-1),X8=t("td",{style:{"text-align":"center"}},"🔴",-1),Y8={style:{"text-align":"center"}},A8={href:"https://leetcode.cn/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},P8={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},D8=t("td",{style:{"text-align":"center"}},"2645",-1),F8=t("td",{style:{"text-align":"left"}},"构造有效字符串的最少插入数",-1),H8=t("td",{style:{"text-align":"center"}},null,-1),J8={style:{"text-align":"left"}},W8=t("code",null,"栈",-1),$8=t("code",null,"贪心",-1),tk=t("code",null,"字符串",-1),ek=t("code",null,"1+",-1),ok=t("td",{style:{"text-align":"center"}},"🟠",-1),lk={style:{"text-align":"center"}},nk={href:"https://leetcode.cn/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},sk={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},"2696",-1),dk=t("td",{style:{"text-align":"left"}},"删除子串后的字符串最小长度",-1),rk={style:{"text-align":"center"}},ck={style:{"text-align":"left"}},ak=t("code",null,"栈",-1),ik=t("code",null,"字符串",-1),hk=t("code",null,"模拟",-1),gk=t("td",{style:{"text-align":"center"}},"🟢",-1),uk={style:{"text-align":"center"}},fk={href:"https://leetcode.cn/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},mk={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},yk=t("td",{style:{"text-align":"center"}},"2736",-1),pk=t("td",{style:{"text-align":"left"}},"最大和查询",-1),xk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"栈",-1),vk=t("code",null,"树状数组",-1),wk=t("code",null,"线段树",-1),Ik=t("code",null,"4+",-1),qk=t("td",{style:{"text-align":"center"}},"🔴",-1),zk={style:{"text-align":"center"}},jk={href:"https://leetcode.cn/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Ok={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Nk=t("td",{style:{"text-align":"center"}},"2751",-1),Lk=t("td",{style:{"text-align":"left"}},"机器人碰撞",-1),Bk=t("td",{style:{"text-align":"center"}},null,-1),Mk={style:{"text-align":"left"}},Vk=t("code",null,"栈",-1),Kk=t("code",null,"数组",-1),Ck=t("code",null,"排序",-1),Ek=t("code",null,"1+",-1),Qk=t("td",{style:{"text-align":"center"}},"🔴",-1),Rk={style:{"text-align":"center"}},Zk={href:"https://leetcode.cn/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},Gk={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},Sk=t("td",{style:{"text-align":"center"}},"2764",-1),Tk=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),Uk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},Yk=t("code",null,"栈",-1),Ak=t("code",null,"树",-1),Pk=t("code",null,"深度优先搜索",-1),Dk=t("code",null,"1+",-1),Fk=t("td",{style:{"text-align":"center"}},"🟠",-1),Hk={style:{"text-align":"center"}},Jk={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wk={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},$k=t("td",{style:{"text-align":"center"}},"2813",-1),tv=t("td",{style:{"text-align":"left"}},"子序列最大优雅度",-1),ev=t("td",{style:{"text-align":"center"}},null,-1),ov={style:{"text-align":"left"}},lv=t("code",null,"栈",-1),nv=t("code",null,"贪心",-1),sv=t("code",null,"数组",-1),_v=t("code",null,"3+",-1),dv=t("td",{style:{"text-align":"center"}},"🔴",-1),rv={style:{"text-align":"center"}},cv={href:"https://leetcode.cn/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},av={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},"2816",-1),hv=t("td",{style:{"text-align":"left"}},"翻倍以链表形式表示的数字",-1),gv=t("td",{style:{"text-align":"center"}},null,-1),uv={style:{"text-align":"left"}},fv=t("code",null,"栈",-1),mv=t("code",null,"链表",-1),yv=t("code",null,"数学",-1),pv=t("td",{style:{"text-align":"center"}},"🟠",-1),xv={style:{"text-align":"center"}},bv={href:"https://leetcode.cn/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},kv={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},vv=t("td",{style:{"text-align":"center"}},"2818",-1),wv=t("td",{style:{"text-align":"left"}},"操作使得分最大",-1),Iv=t("td",{style:{"text-align":"center"}},null,-1),qv={style:{"text-align":"left"}},zv=t("code",null,"栈",-1),jv=t("code",null,"贪心",-1),Ov=t("code",null,"数组",-1),Nv=t("code",null,"3+",-1),Lv=t("td",{style:{"text-align":"center"}},"🔴",-1),Bv={style:{"text-align":"center"}},Mv={href:"https://leetcode.cn/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},Vv={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},Kv=t("td",{style:{"text-align":"center"}},"2832",-1),Cv=t("td",{style:{"text-align":"left"}},"每个元素为最大值的最大范围 🔒",-1),Ev=t("td",{style:{"text-align":"center"}},null,-1),Qv={style:{"text-align":"left"}},Rv=t("code",null,"栈",-1),Zv=t("code",null,"数组",-1),Gv=t("code",null,"单调栈",-1),Sv=t("td",{style:{"text-align":"center"}},"🟠",-1),Tv={style:{"text-align":"center"}},Uv={href:"https://leetcode.cn/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},Xv={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},Yv=t("td",{style:{"text-align":"center"}},"2863",-1),Av=t("td",{style:{"text-align":"left"}},"最长半递减子数组的长度 🔒",-1),Pv=t("td",{style:{"text-align":"center"}},null,-1),Dv={style:{"text-align":"left"}},Fv=t("code",null,"栈",-1),Hv=t("code",null,"数组",-1),Jv=t("code",null,"排序",-1),Wv=t("code",null,"1+",-1),$v=t("td",{style:{"text-align":"center"}},"🟠",-1),tw={style:{"text-align":"center"}},ew={href:"https://leetcode.cn/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},ow={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},"2865",-1),nw=t("td",{style:{"text-align":"left"}},"美丽塔 I",-1),sw=t("td",{style:{"text-align":"center"}},null,-1),_w={style:{"text-align":"left"}},dw=t("code",null,"栈",-1),rw=t("code",null,"数组",-1),cw=t("code",null,"单调栈",-1),aw=t("td",{style:{"text-align":"center"}},"🟠",-1),iw={style:{"text-align":"center"}},hw={href:"https://leetcode.cn/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},gw={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},uw=t("td",{style:{"text-align":"center"}},"2866",-1),fw=t("td",{style:{"text-align":"left"}},"美丽塔 II",-1),mw=t("td",{style:{"text-align":"center"}},null,-1),yw={style:{"text-align":"left"}},pw=t("code",null,"栈",-1),xw=t("code",null,"数组",-1),bw=t("code",null,"单调栈",-1),kw=t("td",{style:{"text-align":"center"}},"🟠",-1),vw={style:{"text-align":"center"}},ww={href:"https://leetcode.cn/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Iw={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},qw=t("td",{style:{"text-align":"center"}},"2940",-1),zw=t("td",{style:{"text-align":"left"}},"找到 Alice 和 Bob 可以相遇的建筑",-1),jw={style:{"text-align":"center"}},Ow={style:{"text-align":"left"}},Nw=t("code",null,"栈",-1),Lw=t("code",null,"树状数组",-1),Bw=t("code",null,"线段树",-1),Mw=t("code",null,"4+",-1),Vw=t("td",{style:{"text-align":"center"}},"🔴",-1),Kw={style:{"text-align":"center"}},Cw={href:"https://leetcode.cn/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Ew={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Qw=t("td",{style:{"text-align":"center"}},"2945",-1),Rw=t("td",{style:{"text-align":"left"}},"找到最大非递减数组的长度",-1),Zw=t("td",{style:{"text-align":"center"}},null,-1),Gw={style:{"text-align":"left"}},Sw=t("code",null,"栈",-1),Tw=t("code",null,"队列",-1),Uw=t("code",null,"数组",-1),Xw=t("code",null,"4+",-1),Yw=t("td",{style:{"text-align":"center"}},"🔴",-1),Aw={style:{"text-align":"center"}},Pw={href:"https://leetcode.cn/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Dw={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Fw=t("td",{style:{"text-align":"center"}},"3113",-1),Hw=t("td",{style:{"text-align":"left"}},"边界元素是最大值的子数组数目",-1),Jw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},$w=t("code",null,"栈",-1),tI=t("code",null,"数组",-1),eI=t("code",null,"二分查找",-1),oI=t("code",null,"1+",-1),lI=t("td",{style:{"text-align":"center"}},"🔴",-1),nI={style:{"text-align":"center"}},sI={href:"https://leetcode.cn/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},_I={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},dI=t("td",{style:{"text-align":"center"}},"3170",-1),rI=t("td",{style:{"text-align":"left"}},"删除星号以后字典序最小的字符串",-1),cI=t("td",{style:{"text-align":"center"}},null,-1),aI={style:{"text-align":"left"}},iI=t("code",null,"栈",-1),hI=t("code",null,"贪心",-1),gI=t("code",null,"哈希表",-1),uI=t("code",null,"2+",-1),fI=t("td",{style:{"text-align":"center"}},"🟠",-1),mI={style:{"text-align":"center"}},yI={href:"https://leetcode.cn/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},pI={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},xI=t("td",{style:{"text-align":"center"}},"3174",-1),bI=t("td",{style:{"text-align":"left"}},"清除数字",-1),kI={style:{"text-align":"center"}},vI={style:{"text-align":"left"}},wI=t("code",null,"栈",-1),II=t("code",null,"字符串",-1),qI=t("code",null,"模拟",-1),zI=t("td",{style:{"text-align":"center"}},"🟢",-1),jI={style:{"text-align":"center"}},OI={href:"https://leetcode.cn/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},NI={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},LI=t("td",{style:{"text-align":"center"}},"3205",-1),BI=t("td",{style:{"text-align":"left"}},"最大数组跳跃得分 I 🔒",-1),MI=t("td",{style:{"text-align":"center"}},null,-1),VI={style:{"text-align":"left"}},KI=t("code",null,"栈",-1),CI=t("code",null,"贪心",-1),EI=t("code",null,"数组",-1),QI=t("code",null,"2+",-1),RI=t("td",{style:{"text-align":"center"}},"🟠",-1),ZI={style:{"text-align":"center"}},GI={href:"https://leetcode.cn/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},SI={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},TI=t("td",{style:{"text-align":"center"}},"3221",-1),UI=t("td",{style:{"text-align":"left"}},"最大数组跳跃得分 II 🔒",-1),XI=t("td",{style:{"text-align":"center"}},null,-1),YI={style:{"text-align":"left"}},AI=t("code",null,"栈",-1),PI=t("code",null,"贪心",-1),DI=t("code",null,"数组",-1),FI=t("code",null,"1+",-1),HI=t("td",{style:{"text-align":"center"}},"🟠",-1),JI={style:{"text-align":"center"}},WI={href:"https://leetcode.cn/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},$I={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},tq=t("td",{style:{"text-align":"center"}},"3229",-1),eq=t("td",{style:{"text-align":"left"}},"使数组等于目标数组所需的最少操作次数",-1),oq=t("td",{style:{"text-align":"center"}},null,-1),lq={style:{"text-align":"left"}},nq=t("code",null,"栈",-1),sq=t("code",null,"贪心",-1),_q=t("code",null,"数组",-1),dq=t("code",null,"2+",-1),rq=t("td",{style:{"text-align":"center"}},"🔴",-1),cq={style:{"text-align":"center"}},aq={href:"https://leetcode.cn/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},iq={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},hq=t("td",{style:{"text-align":"center"}},"3359",-1),gq=t("td",{style:{"text-align":"left"}},"查找最大元素不超过 K 的有序子矩阵 🔒",-1),uq=t("td",{style:{"text-align":"center"}},null,-1),fq={style:{"text-align":"left"}},mq=t("code",null,"栈",-1),yq=t("code",null,"数组",-1),pq=t("code",null,"矩阵",-1),xq=t("code",null,"1+",-1),bq=t("td",{style:{"text-align":"center"}},"🔴",-1),kq={style:{"text-align":"center"}},vq={href:"https://leetcode.cn/problems/find-sorted-submatrices-with-maximum-element-at-most-k",target:"_blank",rel:"noopener noreferrer"},wq={href:"https://leetcode.com/problems/find-sorted-submatrices-with-maximum-element-at-most-k",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},"3412",-1),qq=t("td",{style:{"text-align":"left"}},"计算字符串的镜像分数",-1),zq=t("td",{style:{"text-align":"center"}},null,-1),jq={style:{"text-align":"left"}},Oq=t("code",null,"栈",-1),Nq=t("code",null,"哈希表",-1),Lq=t("code",null,"字符串",-1),Bq=t("code",null,"1+",-1),Mq=t("td",{style:{"text-align":"center"}},"🟠",-1),Vq={style:{"text-align":"center"}},Kq={href:"https://leetcode.cn/problems/find-mirror-score-of-a-string",target:"_blank",rel:"noopener noreferrer"},Cq={href:"https://leetcode.com/problems/find-mirror-score-of-a-string",target:"_blank",rel:"noopener noreferrer"},Eq=t("td",{style:{"text-align":"center"}},"3420",-1),Qq=t("td",{style:{"text-align":"left"}},"统计 K 次操作以内得到非递减子数组的数目",-1),Rq=t("td",{style:{"text-align":"center"}},null,-1),Zq={style:{"text-align":"left"}},Gq=t("code",null,"栈",-1),Sq=t("code",null,"线段树",-1),Tq=t("code",null,"队列",-1),Uq=t("code",null,"4+",-1),Xq=t("td",{style:{"text-align":"center"}},"🔴",-1),Yq={style:{"text-align":"center"}},Aq={href:"https://leetcode.cn/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Pq={href:"https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations",target:"_blank",rel:"noopener noreferrer"},Dq=t("td",{style:{"text-align":"center"}},"3430",-1),Fq=t("td",{style:{"text-align":"left"}},"最多 K 个元素的子数组的最值之和",-1),Hq=t("td",{style:{"text-align":"center"}},null,-1),Jq={style:{"text-align":"left"}},Wq=t("code",null,"栈",-1),$q=t("code",null,"数组",-1),tz=t("code",null,"数学",-1),ez=t("code",null,"1+",-1),oz=t("td",{style:{"text-align":"center"}},"🔴",-1),lz={style:{"text-align":"center"}},nz={href:"https://leetcode.cn/problems/maximum-and-minimum-sums-of-at-most-size-k-subarrays",target:"_blank",rel:"noopener noreferrer"},sz={href:"https://leetcode.com/problems/maximum-and-minimum-sums-of-at-most-size-k-subarrays",target:"_blank",rel:"noopener noreferrer"},_z=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),dz=t("td",{style:{"text-align":"left"}},"包含min函数的栈",-1),rz={style:{"text-align":"center"}},cz={style:{"text-align":"left"}},az=t("code",null,"栈",-1),iz=t("code",null,"设计",-1),hz=t("td",{style:{"text-align":"center"}},"🟢",-1),gz={style:{"text-align":"center"}},uz={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},fz=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),mz=t("td",{style:{"text-align":"left"}},"栈的压入、弹出序列",-1),yz={style:{"text-align":"center"}},pz={style:{"text-align":"left"}},xz=t("code",null,"栈",-1),bz=t("code",null,"数组",-1),kz=t("code",null,"模拟",-1),vz=t("td",{style:{"text-align":"center"}},"🟠",-1),wz={style:{"text-align":"center"}},Iz={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},qz=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),zz=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),jz={style:{"text-align":"center"}},Oz={style:{"text-align":"left"}},Nz=t("code",null,"栈",-1),Lz=t("code",null,"树",-1),Bz=t("code",null,"二叉搜索树",-1),Mz=t("code",null,"4+",-1),Vz=t("td",{style:{"text-align":"center"}},"🟠",-1),Kz={style:{"text-align":"center"}},Cz={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Qz=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),Rz={style:{"text-align":"center"}},Zz={style:{"text-align":"left"}},Gz=t("code",null,"栈",-1),Sz=t("code",null,"树",-1),Tz=t("code",null,"深度优先搜索",-1),Uz=t("code",null,"4+",-1),Xz=t("td",{style:{"text-align":"center"}},"🟠",-1),Yz={style:{"text-align":"center"}},Az={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},Pz=t("td",{style:{"text-align":"center"}},"剑指 Offer 6",-1),Dz=t("td",{style:{"text-align":"left"}},"从尾到头打印链表",-1),Fz={style:{"text-align":"center"}},Hz={style:{"text-align":"left"}},Jz=t("code",null,"栈",-1),Wz=t("code",null,"递归",-1),$z=t("code",null,"链表",-1),tj=t("code",null,"1+",-1),ej=t("td",{style:{"text-align":"center"}},"🟢",-1),oj={style:{"text-align":"center"}},lj={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},nj=t("td",{style:{"text-align":"center"}},"剑指 Offer 9",-1),sj=t("td",{style:{"text-align":"left"}},"用两个栈实现队列",-1),_j={style:{"text-align":"center"}},dj={style:{"text-align":"left"}},rj=t("code",null,"栈",-1),cj=t("code",null,"设计",-1),aj=t("code",null,"队列",-1),ij=t("td",{style:{"text-align":"center"}},"🟢",-1),hj={style:{"text-align":"center"}},gj={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},uj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),fj=t("td",{style:{"text-align":"left"}},"链表中的两数相加",-1),mj={style:{"text-align":"center"}},yj={style:{"text-align":"left"}},pj=t("code",null,"栈",-1),xj=t("code",null,"链表",-1),bj=t("code",null,"数学",-1),kj=t("td",{style:{"text-align":"center"}},"🟠",-1),vj={style:{"text-align":"center"}},wj={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},Ij=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),qj=t("td",{style:{"text-align":"left"}},"重排链表",-1),zj={style:{"text-align":"center"}},jj={style:{"text-align":"left"}},Oj=t("code",null,"栈",-1),Nj=t("code",null,"递归",-1),Lj=t("code",null,"链表",-1),Bj=t("code",null,"1+",-1),Mj=t("td",{style:{"text-align":"center"}},"🟠",-1),Vj={style:{"text-align":"center"}},Kj={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},Cj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),Ej=t("td",{style:{"text-align":"left"}},"回文链表",-1),Qj={style:{"text-align":"center"}},Rj={style:{"text-align":"left"}},Zj=t("code",null,"栈",-1),Gj=t("code",null,"递归",-1),Sj=t("code",null,"链表",-1),Tj=t("code",null,"1+",-1),Uj=t("td",{style:{"text-align":"center"}},"🟢",-1),Xj={style:{"text-align":"center"}},Yj={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},Aj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),Pj=t("td",{style:{"text-align":"left"}},"后缀表达式",-1),Dj={style:{"text-align":"center"}},Fj={style:{"text-align":"left"}},Hj=t("code",null,"栈",-1),Jj=t("code",null,"数组",-1),Wj=t("code",null,"数学",-1),$j=t("td",{style:{"text-align":"center"}},"🟠",-1),tO={style:{"text-align":"center"}},eO={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},oO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),lO=t("td",{style:{"text-align":"left"}},"小行星碰撞",-1),nO=t("td",{style:{"text-align":"center"}},null,-1),sO={style:{"text-align":"left"}},_O=t("code",null,"栈",-1),dO=t("code",null,"数组",-1),rO=t("code",null,"模拟",-1),cO=t("td",{style:{"text-align":"center"}},"🟠",-1),aO={style:{"text-align":"center"}},iO={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},hO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),gO=t("td",{style:{"text-align":"left"}},"每日温度",-1),uO={style:{"text-align":"center"}},fO={style:{"text-align":"left"}},mO=t("code",null,"栈",-1),yO=t("code",null,"数组",-1),pO=t("code",null,"单调栈",-1),xO=t("td",{style:{"text-align":"center"}},"🟠",-1),bO={style:{"text-align":"center"}},kO={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},vO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),wO=t("td",{style:{"text-align":"left"}},"直方图最大矩形面积",-1),IO={style:{"text-align":"center"}},qO={style:{"text-align":"left"}},zO=t("code",null,"栈",-1),jO=t("code",null,"数组",-1),OO=t("code",null,"单调栈",-1),NO=t("td",{style:{"text-align":"center"}},"🔴",-1),LO={style:{"text-align":"center"}},BO={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},MO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),VO=t("td",{style:{"text-align":"left"}},"矩阵中最大的矩形",-1),KO={style:{"text-align":"center"}},CO={style:{"text-align":"left"}},EO=t("code",null,"栈",-1),QO=t("code",null,"数组",-1),RO=t("code",null,"动态规划",-1),ZO=t("code",null,"2+",-1),GO=t("td",{style:{"text-align":"center"}},"🔴",-1),SO={style:{"text-align":"center"}},TO={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),XO=t("td",{style:{"text-align":"left"}},"展平二叉搜索树",-1),YO=t("td",{style:{"text-align":"center"}},null,-1),AO={style:{"text-align":"left"}},PO=t("code",null,"栈",-1),DO=t("code",null,"树",-1),FO=t("code",null,"深度优先搜索",-1),HO=t("code",null,"2+",-1),JO=t("td",{style:{"text-align":"center"}},"🟢",-1),WO={style:{"text-align":"center"}},$O={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},tN=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),eN=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),oN={style:{"text-align":"center"}},lN={style:{"text-align":"left"}},nN=t("code",null,"栈",-1),sN=t("code",null,"树",-1),_N=t("code",null,"设计",-1),dN=t("code",null,"3+",-1),rN=t("td",{style:{"text-align":"center"}},"🟠",-1),cN={style:{"text-align":"center"}},aN={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},iN=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),hN=t("td",{style:{"text-align":"left"}},"回文链表",-1),gN=t("td",{style:{"text-align":"center"}},null,-1),uN={style:{"text-align":"left"}},fN=t("code",null,"栈",-1),mN=t("code",null,"递归",-1),yN=t("code",null,"链表",-1),pN=t("code",null,"1+",-1),xN=t("td",{style:{"text-align":"center"}},"🟢",-1),bN={style:{"text-align":"center"}},kN={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},vN=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),wN=t("td",{style:{"text-align":"left"}},"三合一",-1),IN=t("td",{style:{"text-align":"center"}},null,-1),qN={style:{"text-align":"left"}},zN=t("code",null,"栈",-1),jN=t("code",null,"设计",-1),ON=t("code",null,"数组",-1),NN=t("td",{style:{"text-align":"center"}},"🟢",-1),LN={style:{"text-align":"center"}},BN={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),VN=t("td",{style:{"text-align":"left"}},"栈的最小值",-1),KN=t("td",{style:{"text-align":"center"}},null,-1),CN={style:{"text-align":"left"}},EN=t("code",null,"栈",-1),QN=t("code",null,"设计",-1),RN=t("td",{style:{"text-align":"center"}},"🟢",-1),ZN={style:{"text-align":"center"}},GN={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},SN=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),TN=t("td",{style:{"text-align":"left"}},"堆盘子",-1),UN=t("td",{style:{"text-align":"center"}},null,-1),XN={style:{"text-align":"left"}},YN=t("code",null,"栈",-1),AN=t("code",null,"设计",-1),PN=t("code",null,"链表",-1),DN=t("td",{style:{"text-align":"center"}},"🟠",-1),FN={style:{"text-align":"center"}},HN={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},JN=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),WN=t("td",{style:{"text-align":"left"}},"化栈为队",-1),$N=t("td",{style:{"text-align":"center"}},null,-1),tL={style:{"text-align":"left"}},eL=t("code",null,"栈",-1),oL=t("code",null,"设计",-1),lL=t("code",null,"队列",-1),nL=t("td",{style:{"text-align":"center"}},"🟢",-1),sL={style:{"text-align":"center"}},_L={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},dL=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),rL=t("td",{style:{"text-align":"left"}},"栈排序",-1),cL=t("td",{style:{"text-align":"center"}},null,-1),aL={style:{"text-align":"left"}},iL=t("code",null,"栈",-1),hL=t("code",null,"设计",-1),gL=t("code",null,"单调栈",-1),uL=t("td",{style:{"text-align":"center"}},"🟠",-1),fL={style:{"text-align":"center"}},mL={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},yL=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),pL=t("td",{style:{"text-align":"left"}},"部分排序",-1),xL=t("td",{style:{"text-align":"center"}},null,-1),bL={style:{"text-align":"left"}},kL=t("code",null,"栈",-1),vL=t("code",null,"贪心",-1),wL=t("code",null,"数组",-1),IL=t("code",null,"3+",-1),qL=t("td",{style:{"text-align":"center"}},"🟠",-1),zL={style:{"text-align":"center"}},jL={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},OL=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),NL=t("td",{style:{"text-align":"left"}},"计算器",-1),LL=t("td",{style:{"text-align":"center"}},null,-1),BL={style:{"text-align":"left"}},ML=t("code",null,"栈",-1),VL=t("code",null,"数学",-1),KL=t("code",null,"字符串",-1),CL=t("td",{style:{"text-align":"center"}},"🟠",-1),EL={style:{"text-align":"center"}},QL={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},RL=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),ZL=t("td",{style:{"text-align":"left"}},"BiNode",-1),GL=t("td",{style:{"text-align":"center"}},null,-1),SL={style:{"text-align":"left"}},TL=t("code",null,"栈",-1),UL=t("code",null,"树",-1),XL=t("code",null,"深度优先搜索",-1),YL=t("code",null,"3+",-1),AL=t("td",{style:{"text-align":"center"}},"🟢",-1),PL={style:{"text-align":"center"}},DL={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},FL=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),HL=t("td",{style:{"text-align":"left"}},"直方图的水量",-1),JL=t("td",{style:{"text-align":"center"}},null,-1),WL={style:{"text-align":"left"}},$L=t("code",null,"栈",-1),tB=t("code",null,"数组",-1),eB=t("code",null,"双指针",-1),oB=t("code",null,"2+",-1),lB=t("td",{style:{"text-align":"center"}},"🔴",-1),nB={style:{"text-align":"center"}},sB={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"};function _B(dB,rB){const l=_("RouterLink"),s=_("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),x,e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[T]),_:1})]),U,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Mt]),_:1})])]),Vt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Ct,Et,t("td",Qt,[o(l,{to:"/problem/0020.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Gt]),_:1})]),St,t("td",Tt,[t("a",Ut,[e("🀄️"),o(s)]),e(),t("a",Xt,[e("🔗"),o(s)])])]),t("tr",null,[Yt,At,t("td",Pt,[o(l,{to:"/problem/0032.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ft]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ht]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Jt]),_:1})]),Wt,t("td",$t,[t("a",te,[e("🀄️"),o(s)]),e(),t("a",ee,[e("🔗"),o(s)])])]),t("tr",null,[oe,le,t("td",ne,[o(l,{to:"/problem/0042.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",se,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_e]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[de]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[re]),_:1}),e(),ce]),ae,t("td",ie,[t("a",he,[e("🀄️"),o(s)]),e(),t("a",ge,[e("🔗"),o(s)])])]),t("tr",null,[ue,fe,t("td",me,[o(l,{to:"/problem/0071.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ye,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pe]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xe]),_:1})]),be,t("td",ke,[t("a",ve,[e("🀄️"),o(s)]),e(),t("a",we,[e("🔗"),o(s)])])]),t("tr",null,[Ie,qe,t("td",ze,[o(l,{to:"/problem/0084.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",je,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Oe]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ne]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Le]),_:1})]),Be,t("td",Me,[t("a",Ve,[e("🀄️"),o(s)]),e(),t("a",Ke,[e("🔗"),o(s)])])]),t("tr",null,[Ce,Ee,t("td",Qe,[o(l,{to:"/problem/0085.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Re,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ze]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ge]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Se]),_:1}),e(),Te]),Ue,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[Pe,De,t("td",Fe,[o(l,{to:"/problem/0094.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",He,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Je]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[We]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[$e]),_:1}),e(),to]),eo,t("td",oo,[t("a",lo,[e("🀄️"),o(s)]),e(),t("a",no,[e("🔗"),o(s)])])]),t("tr",null,[so,_o,t("td",ro,[o(l,{to:"/problem/0114.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",co,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ao]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[io]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ho]),_:1}),e(),go]),uo,t("td",fo,[t("a",mo,[e("🀄️"),o(s)]),e(),t("a",yo,[e("🔗"),o(s)])])]),t("tr",null,[po,xo,t("td",bo,[o(l,{to:"/problem/0143.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ko,[o(l,{to:"/tag/stack.html"},{default:n(()=>[vo]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[wo]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Io]),_:1}),e(),qo]),zo,t("td",jo,[t("a",Oo,[e("🀄️"),o(s)]),e(),t("a",No,[e("🔗"),o(s)])])]),t("tr",null,[Lo,Bo,t("td",Mo,[o(l,{to:"/problem/0144.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ko]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Co]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Eo]),_:1}),e(),Qo]),Ro,t("td",Zo,[t("a",Go,[e("🀄️"),o(s)]),e(),t("a",So,[e("🔗"),o(s)])])]),t("tr",null,[To,Uo,t("td",Xo,[o(l,{to:"/problem/0145.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yo,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ao]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Po]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Do]),_:1}),e(),Fo]),Ho,t("td",Jo,[t("a",Wo,[e("🀄️"),o(s)]),e(),t("a",$o,[e("🔗"),o(s)])])]),t("tr",null,[tl,el,t("td",ol,[o(l,{to:"/problem/0150.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ll,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sl]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[_l]),_:1})]),dl,t("td",rl,[t("a",cl,[e("🀄️"),o(s)]),e(),t("a",al,[e("🔗"),o(s)])])]),t("tr",null,[il,hl,t("td",gl,[o(l,{to:"/problem/0155.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ul,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fl]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[ml]),_:1})]),yl,t("td",pl,[t("a",xl,[e("🀄️"),o(s)]),e(),t("a",bl,[e("🔗"),o(s)])])]),t("tr",null,[kl,vl,t("td",wl,[o(l,{to:"/problem/0173.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Il,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ql]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[zl]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jl]),_:1}),e(),Ol]),Nl,t("td",Ll,[t("a",Bl,[e("🀄️"),o(s)]),e(),t("a",Ml,[e("🔗"),o(s)])])]),t("tr",null,[Vl,Kl,t("td",Cl,[o(l,{to:"/problem/0224.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",El,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ql]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Rl]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Zl]),_:1}),e(),Gl]),Sl,t("td",Tl,[t("a",Ul,[e("🀄️"),o(s)]),e(),t("a",Xl,[e("🔗"),o(s)])])]),t("tr",null,[Yl,Al,t("td",Pl,[o(l,{to:"/problem/0225.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Fl]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Hl]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Jl]),_:1})]),Wl,t("td",$l,[t("a",tn,[e("🀄️"),o(s)]),e(),t("a",en,[e("🔗"),o(s)])])]),t("tr",null,[on,ln,t("td",nn,[o(l,{to:"/problem/0227.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",sn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_n]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[dn]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[rn]),_:1})]),cn,t("td",an,[t("a",hn,[e("🀄️"),o(s)]),e(),t("a",gn,[e("🔗"),o(s)])])]),t("tr",null,[un,fn,t("td",mn,[o(l,{to:"/problem/0232.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pn]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[xn]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[bn]),_:1})]),kn,t("td",vn,[t("a",wn,[e("🀄️"),o(s)]),e(),t("a",In,[e("🔗"),o(s)])])]),t("tr",null,[qn,zn,t("td",jn,[o(l,{to:"/problem/0234.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",On,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Nn]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Ln]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Bn]),_:1}),e(),Mn]),Vn,t("td",Kn,[t("a",Cn,[e("🀄️"),o(s)]),e(),t("a",En,[e("🔗"),o(s)])])]),t("tr",null,[Qn,Rn,Zn,t("td",Gn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Sn]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Tn]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Un]),_:1}),e(),Xn]),Yn,t("td",An,[t("a",Pn,[e("🀄️"),o(s)]),e(),t("a",Dn,[e("🔗"),o(s)])])]),t("tr",null,[Fn,Hn,Jn,t("td",Wn,[o(l,{to:"/tag/stack.html"},{default:n(()=>[$n]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[ts]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[es]),_:1}),e(),os]),ls,t("td",ns,[t("a",ss,[e("🀄️"),o(s)]),e(),t("a",_s,[e("🔗"),o(s)])])]),t("tr",null,[ds,rs,t("td",cs,[o(l,{to:"/problem/0316.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",as,[o(l,{to:"/tag/stack.html"},{default:n(()=>[is]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[hs]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[gs]),_:1}),e(),us]),fs,t("td",ms,[t("a",ys,[e("🀄️"),o(s)]),e(),t("a",ps,[e("🔗"),o(s)])])]),t("tr",null,[xs,bs,ks,t("td",vs,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ws]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Is]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qs]),_:1}),e(),zs]),js,t("td",Os,[t("a",Ns,[e("🀄️"),o(s)]),e(),t("a",Ls,[e("🔗"),o(s)])])]),t("tr",null,[Bs,Ms,t("td",Vs,[o(l,{to:"/problem/0331.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ks,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Cs]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Es]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Qs]),_:1}),e(),Rs]),Zs,t("td",Gs,[t("a",Ss,[e("🀄️"),o(s)]),e(),t("a",Ts,[e("🔗"),o(s)])])]),t("tr",null,[Us,Xs,t("td",Ys,[o(l,{to:"/problem/0341.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",As,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ps]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Ds]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Fs]),_:1}),e(),Hs]),Js,t("td",Ws,[t("a",$s,[e("🀄️"),o(s)]),e(),t("a",t_,[e("🔗"),o(s)])])]),t("tr",null,[e_,o_,l_,t("td",n_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[s_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[__]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[d_]),_:1})]),r_,t("td",c_,[t("a",a_,[e("🀄️"),o(s)]),e(),t("a",i_,[e("🔗"),o(s)])])]),t("tr",null,[h_,g_,t("td",u_,[o(l,{to:"/problem/0385.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",f_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[m_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[y_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[p_]),_:1})]),x_,t("td",b_,[t("a",k_,[e("🀄️"),o(s)]),e(),t("a",v_,[e("🔗"),o(s)])])]),t("tr",null,[w_,I_,t("td",q_,[o(l,{to:"/problem/0388.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",z_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[j_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[O_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[N_]),_:1})]),L_,t("td",B_,[t("a",M_,[e("🀄️"),o(s)]),e(),t("a",V_,[e("🔗"),o(s)])])]),t("tr",null,[K_,C_,t("td",E_,[o(l,{to:"/problem/0394.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Q_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[R_]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Z_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[G_]),_:1})]),S_,t("td",T_,[t("a",U_,[e("🀄️"),o(s)]),e(),t("a",X_,[e("🔗"),o(s)])])]),t("tr",null,[Y_,A_,t("td",P_,[o(l,{to:"/problem/0402.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",D_,[o(l,{to:"/tag/stack.html"},{default:n(()=>[F_]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[H_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[J_]),_:1}),e(),W_]),$_,t("td",td,[t("a",ed,[e("🀄️"),o(s)]),e(),t("a",od,[e("🔗"),o(s)])])]),t("tr",null,[ld,nd,t("td",sd,[o(l,{to:"/problem/0426.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_d,[o(l,{to:"/tag/stack.html"},{default:n(()=>[dd]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[rd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cd]),_:1}),e(),ad]),id,t("td",hd,[t("a",gd,[e("🀄️"),o(s)]),e(),t("a",ud,[e("🔗"),o(s)])])]),t("tr",null,[fd,md,yd,t("td",pd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xd]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[bd]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[kd]),_:1})]),vd,t("td",wd,[t("a",Id,[e("🀄️"),o(s)]),e(),t("a",qd,[e("🔗"),o(s)])])]),t("tr",null,[zd,jd,t("td",Od,[o(l,{to:"/problem/0445.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Nd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ld]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Bd]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Md]),_:1})]),Vd,t("td",Kd,[t("a",Cd,[e("🀄️"),o(s)]),e(),t("a",Ed,[e("🔗"),o(s)])])]),t("tr",null,[Qd,Rd,t("td",Zd,[o(l,{to:"/problem/0456.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Sd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Td]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Ud]),_:1}),e(),Xd]),Yd,t("td",Ad,[t("a",Pd,[e("🀄️"),o(s)]),e(),t("a",Dd,[e("🔗"),o(s)])])]),t("tr",null,[Fd,Hd,Jd,t("td",Wd,[o(l,{to:"/tag/stack.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[er]),_:1}),e(),or]),lr,t("td",nr,[t("a",sr,[e("🀄️"),o(s)]),e(),t("a",_r,[e("🔗"),o(s)])])]),t("tr",null,[dr,rr,cr,t("td",ar,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ir]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[gr]),_:1}),e(),ur]),fr,t("td",mr,[t("a",yr,[e("🀄️"),o(s)]),e(),t("a",pr,[e("🔗"),o(s)])])]),t("tr",null,[xr,br,t("td",kr,[o(l,{to:"/problem/0496.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[wr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ir]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[qr]),_:1}),e(),zr]),jr,t("td",Or,[t("a",Nr,[e("🀄️"),o(s)]),e(),t("a",Lr,[e("🔗"),o(s)])])]),t("tr",null,[Br,Mr,t("td",Vr,[o(l,{to:"/problem/0503.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Kr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Cr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Er]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Qr]),_:1})]),Rr,t("td",Zr,[t("a",Gr,[e("🀄️"),o(s)]),e(),t("a",Sr,[e("🔗"),o(s)])])]),t("tr",null,[Tr,Ur,Xr,t("td",Yr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ar]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Pr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dr]),_:1}),e(),Fr]),Hr,t("td",Jr,[t("a",Wr,[e("🀄️"),o(s)]),e(),t("a",$r,[e("🔗"),o(s)])])]),t("tr",null,[tc,ec,oc,t("td",lc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nc]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[sc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_c]),_:1}),e(),dc]),rc,t("td",cc,[t("a",ac,[e("🀄️"),o(s)]),e(),t("a",ic,[e("🔗"),o(s)])])]),t("tr",null,[hc,gc,t("td",uc,[o(l,{to:"/problem/0589.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[mc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[yc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[pc]),_:1})]),xc,t("td",bc,[t("a",kc,[e("🀄️"),o(s)]),e(),t("a",vc,[e("🔗"),o(s)])])]),t("tr",null,[wc,Ic,t("td",qc,[o(l,{to:"/problem/0590.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Oc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Nc]),_:1})]),Lc,t("td",Bc,[t("a",Mc,[e("🀄️"),o(s)]),e(),t("a",Vc,[e("🔗"),o(s)])])]),t("tr",null,[Kc,Cc,Ec,t("td",Qc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rc]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Zc]),_:1})]),Gc,t("td",Sc,[t("a",Tc,[e("🀄️"),o(s)]),e(),t("a",Uc,[e("🔗"),o(s)])])]),t("tr",null,[Xc,Yc,Ac,t("td",Pc,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Dc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Fc]),_:1})]),Hc,t("td",Jc,[t("a",Wc,[e("🀄️"),o(s)]),e(),t("a",$c,[e("🔗"),o(s)])])]),t("tr",null,[ta,ea,t("td",oa,[o(l,{to:"/problem/0654.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",la,[o(l,{to:"/tag/stack.html"},{default:n(()=>[na]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[sa]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_a]),_:1}),e(),da]),ra,t("td",ca,[t("a",aa,[e("🀄️"),o(s)]),e(),t("a",ia,[e("🔗"),o(s)])])]),t("tr",null,[ha,ga,t("td",ua,[o(l,{to:"/problem/0678.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fa,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ma]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[ya]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[pa]),_:1}),e(),xa]),ba,t("td",ka,[t("a",va,[e("🀄️"),o(s)]),e(),t("a",wa,[e("🔗"),o(s)])])]),t("tr",null,[Ia,qa,t("td",za,[o(l,{to:"/problem/0682.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ja,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Oa]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Na]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[La]),_:1})]),Ba,t("td",Ma,[t("a",Va,[e("🀄️"),o(s)]),e(),t("a",Ka,[e("🔗"),o(s)])])]),t("tr",null,[Ca,Ea,Qa,t("td",Ra,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Za]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Ga]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Sa]),_:1}),e(),Ta]),Ua,t("td",Xa,[t("a",Ya,[e("🀄️"),o(s)]),e(),t("a",Aa,[e("🔗"),o(s)])])]),t("tr",null,[Pa,Da,Fa,t("td",Ha,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ja]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Wa]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[$a]),_:1}),e(),ti]),ei,t("td",oi,[t("a",li,[e("🀄️"),o(s)]),e(),t("a",ni,[e("🔗"),o(s)])])]),t("tr",null,[si,_i,t("td",di,[o(l,{to:"/problem/0735.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ri,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ci]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ai]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[ii]),_:1})]),hi,t("td",gi,[t("a",ui,[e("🀄️"),o(s)]),e(),t("a",fi,[e("🔗"),o(s)])])]),t("tr",null,[mi,yi,pi,t("td",xi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[bi]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[ki]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[vi]),_:1}),e(),wi]),Ii,t("td",qi,[t("a",zi,[e("🀄️"),o(s)]),e(),t("a",ji,[e("🔗"),o(s)])])]),t("tr",null,[Oi,Ni,t("td",Li,[o(l,{to:"/problem/0739.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Bi,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Mi]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Vi]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Ki]),_:1})]),Ci,t("td",Ei,[t("a",Qi,[e("🀄️"),o(s)]),e(),t("a",Ri,[e("🔗"),o(s)])])]),t("tr",null,[Zi,Gi,Si,t("td",Ti,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ui]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Xi]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yi]),_:1}),e(),Ai]),Pi,t("td",Di,[t("a",Fi,[e("🀄️"),o(s)]),e(),t("a",Hi,[e("🔗"),o(s)])])]),t("tr",null,[Ji,Wi,t("td",$i,[o(l,{to:"/problem/0769.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",t1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[e1]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[o1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[l1]),_:1}),e(),n1]),s1,t("td",_1,[t("a",d1,[e("🀄️"),o(s)]),e(),t("a",r1,[e("🔗"),o(s)])])]),t("tr",null,[c1,a1,i1,t("td",h1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[g1]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[u1]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[f1]),_:1}),e(),m1]),y1,t("td",p1,[t("a",x1,[e("🀄️"),o(s)]),e(),t("a",b1,[e("🔗"),o(s)])])]),t("tr",null,[k1,v1,t("td",w1,[o(l,{to:"/problem/0772.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",I1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[q1]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[z1]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[j1]),_:1}),e(),O1]),N1,t("td",L1,[t("a",B1,[e("🀄️"),o(s)]),e(),t("a",M1,[e("🔗"),o(s)])])]),t("tr",null,[V1,K1,t("td",C1,[o(l,{to:"/problem/0844.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",E1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Q1]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[R1]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Z1]),_:1}),e(),G1]),S1,t("td",T1,[t("a",U1,[e("🀄️"),o(s)]),e(),t("a",X1,[e("🔗"),o(s)])])]),t("tr",null,[Y1,A1,P1,t("td",D1,[o(l,{to:"/tag/stack.html"},{default:n(()=>[F1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[H1]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[J1]),_:1}),e(),W1]),$1,t("td",th,[t("a",eh,[e("🀄️"),o(s)]),e(),t("a",oh,[e("🔗"),o(s)])])]),t("tr",null,[lh,nh,sh,t("td",_h,[o(l,{to:"/tag/stack.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[rh]),_:1})]),ch,t("td",ah,[t("a",ih,[e("🀄️"),o(s)]),e(),t("a",hh,[e("🔗"),o(s)])])]),t("tr",null,[gh,uh,t("td",fh,[o(l,{to:"/problem/0880.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[yh]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ph]),_:1})]),xh,t("td",bh,[t("a",kh,[e("🀄️"),o(s)]),e(),t("a",vh,[e("🔗"),o(s)])])]),t("tr",null,[wh,Ih,qh,t("td",zh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jh]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Oh]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Nh]),_:1}),e(),Lh]),Bh,t("td",Mh,[t("a",Vh,[e("🀄️"),o(s)]),e(),t("a",Kh,[e("🔗"),o(s)])])]),t("tr",null,[Ch,Eh,t("td",Qh,[o(l,{to:"/problem/0897.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zh]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Gh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Sh]),_:1}),e(),Th]),Uh,t("td",Xh,[t("a",Yh,[e("🀄️"),o(s)]),e(),t("a",Ah,[e("🔗"),o(s)])])]),t("tr",null,[Ph,Dh,t("td",Fh,[o(l,{to:"/problem/0901.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hh,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Jh]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Wh]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[$h]),_:1}),e(),tg]),eg,t("td",og,[t("a",lg,[e("🀄️"),o(s)]),e(),t("a",ng,[e("🔗"),o(s)])])]),t("tr",null,[sg,_g,dg,t("td",rg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[cg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ag]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ig]),_:1}),e(),hg]),gg,t("td",ug,[t("a",fg,[e("🀄️"),o(s)]),e(),t("a",mg,[e("🔗"),o(s)])])]),t("tr",null,[yg,pg,t("td",xg,[o(l,{to:"/problem/0921.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[kg]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[vg]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[wg]),_:1})]),Ig,t("td",qg,[t("a",zg,[e("🀄️"),o(s)]),e(),t("a",jg,[e("🔗"),o(s)])])]),t("tr",null,[Og,Ng,Lg,t("td",Bg,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Mg]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Vg]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Kg]),_:1}),e(),Cg]),Eg,t("td",Qg,[t("a",Rg,[e("🀄️"),o(s)]),e(),t("a",Zg,[e("🔗"),o(s)])])]),t("tr",null,[Gg,Sg,t("td",Tg,[o(l,{to:"/problem/0946.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ug,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Xg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yg]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[Ag]),_:1})]),Pg,t("td",Dg,[t("a",Fg,[e("🀄️"),o(s)]),e(),t("a",Hg,[e("🔗"),o(s)])])]),t("tr",null,[Jg,Wg,t("td",$g,[o(l,{to:"/problem/0962.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[eu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ou]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[lu]),_:1})]),nu,t("td",su,[t("a",_u,[e("🀄️"),o(s)]),e(),t("a",du,[e("🔗"),o(s)])])]),t("tr",null,[ru,cu,au,t("td",iu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[hu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gu]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uu]),_:1}),e(),fu]),mu,t("td",yu,[t("a",pu,[e("🀄️"),o(s)]),e(),t("a",xu,[e("🔗"),o(s)])])]),t("tr",null,[bu,ku,vu,t("td",wu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Iu]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[qu]),_:1})]),zu,t("td",ju,[t("a",Ou,[e("🀄️"),o(s)]),e(),t("a",Nu,[e("🔗"),o(s)])])]),t("tr",null,[Lu,Bu,Mu,t("td",Vu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ku]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Cu]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[Eu]),_:1})]),Qu,t("td",Ru,[t("a",Zu,[e("🀄️"),o(s)]),e(),t("a",Gu,[e("🔗"),o(s)])])]),t("tr",null,[Su,Tu,t("td",Uu,[o(l,{to:"/problem/1008.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xu,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yu]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Au]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Pu]),_:1}),e(),Du]),Fu,t("td",Hu,[t("a",Ju,[e("🀄️"),o(s)]),e(),t("a",Wu,[e("🔗"),o(s)])])]),t("tr",null,[$u,tf,ef,t("td",of,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lf]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[nf]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[sf]),_:1}),e(),_f]),df,t("td",rf,[t("a",cf,[e("🀄️"),o(s)]),e(),t("a",af,[e("🔗"),o(s)])])]),t("tr",null,[hf,gf,t("td",uf,[o(l,{to:"/problem/1021.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ff,[o(l,{to:"/tag/stack.html"},{default:n(()=>[mf]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[yf]),_:1})]),pf,t("td",xf,[t("a",bf,[e("🀄️"),o(s)]),e(),t("a",kf,[e("🔗"),o(s)])])]),t("tr",null,[vf,wf,t("td",If,[o(l,{to:"/problem/1047.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qf,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zf]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[jf]),_:1})]),Of,t("td",Nf,[t("a",Lf,[e("🀄️"),o(s)]),e(),t("a",Bf,[e("🔗"),o(s)])])]),t("tr",null,[Mf,Vf,Kf,t("td",Cf,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ef]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Qf]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Rf]),_:1})]),Zf,t("td",Gf,[t("a",Sf,[e("🀄️"),o(s)]),e(),t("a",Tf,[e("🔗"),o(s)])])]),t("tr",null,[Uf,Xf,t("td",Yf,[o(l,{to:"/problem/1081.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Af,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Pf]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Df]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ff]),_:1}),e(),Hf]),Jf,t("td",Wf,[t("a",$f,[e("🀄️"),o(s)]),e(),t("a",tm,[e("🔗"),o(s)])])]),t("tr",null,[em,om,lm,t("td",nm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[sm]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[_m]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[dm]),_:1}),e(),rm]),cm,t("td",am,[t("a",im,[e("🀄️"),o(s)]),e(),t("a",hm,[e("🔗"),o(s)])])]),t("tr",null,[gm,um,t("td",fm,[o(l,{to:"/problem/1106.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ym]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[pm]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xm]),_:1})]),bm,t("td",km,[t("a",vm,[e("🀄️"),o(s)]),e(),t("a",wm,[e("🔗"),o(s)])])]),t("tr",null,[Im,qm,zm,t("td",jm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Om]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Nm]),_:1})]),Lm,t("td",Bm,[t("a",Mm,[e("🀄️"),o(s)]),e(),t("a",Vm,[e("🔗"),o(s)])])]),t("tr",null,[Km,Cm,Em,t("td",Qm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rm]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zm]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Gm]),_:1}),e(),Sm]),Tm,t("td",Um,[t("a",Xm,[e("🀄️"),o(s)]),e(),t("a",Ym,[e("🔗"),o(s)])])]),t("tr",null,[Am,Pm,Dm,t("td",Fm,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Hm]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Jm]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wm]),_:1}),e(),$m]),ty,t("td",ey,[t("a",oy,[e("🀄️"),o(s)]),e(),t("a",ly,[e("🔗"),o(s)])])]),t("tr",null,[ny,sy,_y,t("td",dy,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ry]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[cy]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ay]),_:1}),e(),iy]),hy,t("td",gy,[t("a",uy,[e("🀄️"),o(s)]),e(),t("a",fy,[e("🔗"),o(s)])])]),t("tr",null,[my,yy,t("td",py,[o(l,{to:"/problem/1190.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xy,[o(l,{to:"/tag/stack.html"},{default:n(()=>[by]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ky]),_:1})]),vy,t("td",wy,[t("a",Iy,[e("🀄️"),o(s)]),e(),t("a",qy,[e("🔗"),o(s)])])]),t("tr",null,[zy,jy,Oy,t("td",Ny,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ly]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[By]),_:1})]),My,t("td",Vy,[t("a",Ky,[e("🀄️"),o(s)]),e(),t("a",Cy,[e("🔗"),o(s)])])]),t("tr",null,[Ey,Qy,Ry,t("td",Zy,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Gy]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Sy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ty]),_:1}),e(),Uy]),Xy,t("td",Yy,[t("a",Ay,[e("🀄️"),o(s)]),e(),t("a",Py,[e("🔗"),o(s)])])]),t("tr",null,[Dy,Fy,Hy,t("td",Jy,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Wy]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[$y]),_:1})]),tp,t("td",ep,[t("a",op,[e("🀄️"),o(s)]),e(),t("a",lp,[e("🔗"),o(s)])])]),t("tr",null,[np,sp,_p,t("td",dp,[o(l,{to:"/tag/stack.html"},{default:n(()=>[rp]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[cp]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[ap]),_:1}),e(),ip]),hp,t("td",gp,[t("a",up,[e("🀄️"),o(s)]),e(),t("a",fp,[e("🔗"),o(s)])])]),t("tr",null,[mp,yp,t("td",pp,[o(l,{to:"/problem/1381.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xp,[o(l,{to:"/tag/stack.html"},{default:n(()=>[bp]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[kp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[vp]),_:1})]),wp,t("td",Ip,[t("a",qp,[e("🀄️"),o(s)]),e(),t("a",zp,[e("🔗"),o(s)])])]),t("tr",null,[jp,Op,t("td",Np,[o(l,{to:"/problem/1441.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Lp,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Bp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Mp]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[Vp]),_:1})]),Kp,t("td",Cp,[t("a",Ep,[e("🀄️"),o(s)]),e(),t("a",Qp,[e("🔗"),o(s)])])]),t("tr",null,[Rp,Zp,t("td",Gp,[o(l,{to:"/problem/1472.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sp,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Tp]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Up]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Xp]),_:1}),e(),Yp]),Ap,t("td",Pp,[t("a",Dp,[e("🀄️"),o(s)]),e(),t("a",Fp,[e("🔗"),o(s)])])]),t("tr",null,[Hp,Jp,t("td",Wp,[o(l,{to:"/problem/1475.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$p,[o(l,{to:"/tag/stack.html"},{default:n(()=>[tx]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ex]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[ox]),_:1})]),lx,t("td",nx,[t("a",sx,[e("🀄️"),o(s)]),e(),t("a",_x,[e("🔗"),o(s)])])]),t("tr",null,[dx,rx,cx,t("td",ax,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ix]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gx]),_:1}),e(),ux]),fx,t("td",mx,[t("a",yx,[e("🀄️"),o(s)]),e(),t("a",px,[e("🔗"),o(s)])])]),t("tr",null,[xx,bx,kx,t("td",vx,[o(l,{to:"/tag/stack.html"},{default:n(()=>[wx]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Ix]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qx]),_:1}),e(),zx]),jx,t("td",Ox,[t("a",Nx,[e("🀄️"),o(s)]),e(),t("a",Lx,[e("🔗"),o(s)])])]),t("tr",null,[Bx,Mx,Vx,t("td",Kx,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Cx]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Ex]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Qx]),_:1})]),Rx,t("td",Zx,[t("a",Gx,[e("🀄️"),o(s)]),e(),t("a",Sx,[e("🔗"),o(s)])])]),t("tr",null,[Tx,Ux,t("td",Xx,[o(l,{to:"/problem/1544.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Yx,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ax]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Px]),_:1})]),Dx,t("td",Fx,[t("a",Hx,[e("🀄️"),o(s)]),e(),t("a",Jx,[e("🔗"),o(s)])])]),t("tr",null,[Wx,$x,t("td",t2,[o(l,{to:"/problem/1574.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",e2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[o2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[l2]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[n2]),_:1}),e(),s2]),_2,t("td",d2,[t("a",r2,[e("🀄️"),o(s)]),e(),t("a",c2,[e("🔗"),o(s)])])]),t("tr",null,[a2,i2,h2,t("td",g2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[u2]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[f2]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[m2]),_:1}),e(),y2]),p2,t("td",x2,[t("a",b2,[e("🀄️"),o(s)]),e(),t("a",k2,[e("🔗"),o(s)])])]),t("tr",null,[v2,w2,I2,t("td",q2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[z2]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j2]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[O2]),_:1}),e(),N2]),L2,t("td",B2,[t("a",M2,[e("🀄️"),o(s)]),e(),t("a",V2,[e("🔗"),o(s)])])]),t("tr",null,[K2,C2,t("td",E2,[o(l,{to:"/problem/1598.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Q2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[R2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Z2]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[G2]),_:1})]),S2,t("td",T2,[t("a",U2,[e("🀄️"),o(s)]),e(),t("a",X2,[e("🔗"),o(s)])])]),t("tr",null,[Y2,A2,t("td",P2,[o(l,{to:"/problem/1614.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",D2,[o(l,{to:"/tag/stack.html"},{default:n(()=>[F2]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[H2]),_:1})]),J2,t("td",W2,[t("a",$2,[e("🀄️"),o(s)]),e(),t("a",tb,[e("🔗"),o(s)])])]),t("tr",null,[eb,ob,lb,t("td",nb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[sb]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[_b]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[db]),_:1}),e(),rb]),cb,t("td",ab,[t("a",ib,[e("🀄️"),o(s)]),e(),t("a",hb,[e("🔗"),o(s)])])]),t("tr",null,[gb,ub,fb,t("td",mb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[yb]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[pb]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[xb]),_:1})]),bb,t("td",kb,[t("a",vb,[e("🀄️"),o(s)]),e(),t("a",wb,[e("🔗"),o(s)])])]),t("tr",null,[Ib,qb,zb,t("td",jb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Ob]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[Nb]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Lb]),_:1}),e(),Bb]),Mb,t("td",Vb,[t("a",Kb,[e("🀄️"),o(s)]),e(),t("a",Cb,[e("🔗"),o(s)])])]),t("tr",null,[Eb,Qb,t("td",Rb,[o(l,{to:"/problem/1700.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Gb]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Sb]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Tb]),_:1}),e(),Ub]),Xb,t("td",Yb,[t("a",Ab,[e("🀄️"),o(s)]),e(),t("a",Pb,[e("🔗"),o(s)])])]),t("tr",null,[Db,Fb,Hb,t("td",Jb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Wb]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[$b]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[t0]),_:1})]),e0,t("td",o0,[t("a",l0,[e("🀄️"),o(s)]),e(),t("a",n0,[e("🔗"),o(s)])])]),t("tr",null,[s0,_0,d0,t("td",r0,[o(l,{to:"/tag/stack.html"},{default:n(()=>[c0]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[a0]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[i0]),_:1}),e(),h0]),g0,t("td",u0,[t("a",f0,[e("🀄️"),o(s)]),e(),t("a",m0,[e("🔗"),o(s)])])]),t("tr",null,[y0,p0,x0,t("td",b0,[o(l,{to:"/tag/stack.html"},{default:n(()=>[k0]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[v0]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[w0]),_:1})]),I0,t("td",q0,[t("a",z0,[e("🀄️"),o(s)]),e(),t("a",j0,[e("🔗"),o(s)])])]),t("tr",null,[O0,N0,L0,t("td",B0,[o(l,{to:"/tag/stack.html"},{default:n(()=>[M0]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[V0]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[K0]),_:1}),e(),C0]),E0,t("td",Q0,[t("a",R0,[e("🀄️"),o(s)]),e(),t("a",Z0,[e("🔗"),o(s)])])]),t("tr",null,[G0,S0,T0,t("td",U0,[o(l,{to:"/tag/stack.html"},{default:n(()=>[X0]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Y0]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[A0]),_:1}),e(),P0]),D0,t("td",F0,[t("a",H0,[e("🀄️"),o(s)]),e(),t("a",J0,[e("🔗"),o(s)])])]),t("tr",null,[W0,$0,t3,t("td",e3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[o3]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[l3]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[n3]),_:1}),e(),s3]),_3,t("td",d3,[t("a",r3,[e("🀄️"),o(s)]),e(),t("a",c3,[e("🔗"),o(s)])])]),t("tr",null,[a3,i3,h3,t("td",g3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[u3]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[f3]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[m3]),_:1}),e(),y3]),p3,t("td",x3,[t("a",b3,[e("🀄️"),o(s)]),e(),t("a",k3,[e("🔗"),o(s)])])]),t("tr",null,[v3,w3,t("td",I3,[o(l,{to:"/problem/1910.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",q3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[z3]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[j3]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[O3]),_:1})]),N3,t("td",L3,[t("a",B3,[e("🀄️"),o(s)]),e(),t("a",M3,[e("🔗"),o(s)])])]),t("tr",null,[V3,K3,C3,t("td",E3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Q3]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[R3]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Z3]),_:1})]),G3,t("td",S3,[t("a",T3,[e("🀄️"),o(s)]),e(),t("a",U3,[e("🔗"),o(s)])])]),t("tr",null,[X3,Y3,A3,t("td",P3,[o(l,{to:"/tag/stack.html"},{default:n(()=>[D3]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[F3]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[H3]),_:1})]),J3,t("td",W3,[t("a",$3,[e("🀄️"),o(s)]),e(),t("a",t4,[e("🔗"),o(s)])])]),t("tr",null,[e4,o4,t("td",l4,[o(l,{to:"/problem/1963.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",n4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[s4]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[_4]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[d4]),_:1}),e(),r4]),c4,t("td",a4,[t("a",i4,[e("🀄️"),o(s)]),e(),t("a",h4,[e("🔗"),o(s)])])]),t("tr",null,[g4,u4,f4,t("td",m4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[y4]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[p4]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[x4]),_:1}),e(),b4]),k4,t("td",v4,[t("a",w4,[e("🀄️"),o(s)]),e(),t("a",I4,[e("🔗"),o(s)])])]),t("tr",null,[q4,z4,t("td",j4,[o(l,{to:"/problem/2000.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",O4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[N4]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[L4]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[B4]),_:1})]),M4,t("td",V4,[t("a",K4,[e("🀄️"),o(s)]),e(),t("a",C4,[e("🔗"),o(s)])])]),t("tr",null,[E4,Q4,R4,t("td",Z4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[G4]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[S4]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[T4]),_:1}),e(),U4]),X4,t("td",Y4,[t("a",A4,[e("🀄️"),o(s)]),e(),t("a",P4,[e("🔗"),o(s)])])]),t("tr",null,[D4,F4,H4,t("td",J4,[o(l,{to:"/tag/stack.html"},{default:n(()=>[W4]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[$4]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[t5]),_:1}),e(),e5]),o5,t("td",l5,[t("a",n5,[e("🀄️"),o(s)]),e(),t("a",s5,[e("🔗"),o(s)])])]),t("tr",null,[_5,d5,r5,t("td",c5,[o(l,{to:"/tag/stack.html"},{default:n(()=>[a5]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[i5]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[h5]),_:1})]),g5,t("td",u5,[t("a",f5,[e("🀄️"),o(s)]),e(),t("a",m5,[e("🔗"),o(s)])])]),t("tr",null,[y5,p5,t("td",x5,[o(l,{to:"/problem/2116.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",b5,[o(l,{to:"/tag/stack.html"},{default:n(()=>[k5]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[v5]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[w5]),_:1})]),I5,t("td",q5,[t("a",z5,[e("🀄️"),o(s)]),e(),t("a",j5,[e("🔗"),o(s)])])]),t("tr",null,[O5,N5,t("td",L5,[o(l,{to:"/problem/2130.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",B5,[o(l,{to:"/tag/stack.html"},{default:n(()=>[M5]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[V5]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[K5]),_:1})]),C5,t("td",E5,[t("a",Q5,[e("🀄️"),o(s)]),e(),t("a",R5,[e("🔗"),o(s)])])]),t("tr",null,[Z5,G5,S5,t("td",T5,[o(l,{to:"/tag/stack.html"},{default:n(()=>[U5]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[X5]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Y5]),_:1}),e(),A5]),P5,t("td",D5,[t("a",F5,[e("🀄️"),o(s)]),e(),t("a",H5,[e("🔗"),o(s)])])]),t("tr",null,[J5,W5,$5,t("td",t6,[o(l,{to:"/tag/stack.html"},{default:n(()=>[e6]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[o6]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[l6]),_:1})]),n6,t("td",s6,[t("a",_6,[e("🀄️"),o(s)]),e(),t("a",d6,[e("🔗"),o(s)])])]),t("tr",null,[r6,c6,a6,t("td",i6,[o(l,{to:"/tag/stack.html"},{default:n(()=>[h6]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[g6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[u6]),_:1})]),f6,t("td",m6,[t("a",y6,[e("🀄️"),o(s)]),e(),t("a",p6,[e("🔗"),o(s)])])]),t("tr",null,[x6,b6,k6,t("td",v6,[o(l,{to:"/tag/stack.html"},{default:n(()=>[w6]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[I6]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[q6]),_:1}),e(),z6]),j6,t("td",O6,[t("a",N6,[e("🀄️"),o(s)]),e(),t("a",L6,[e("🔗"),o(s)])])]),t("tr",null,[B6,M6,V6,t("td",K6,[o(l,{to:"/tag/stack.html"},{default:n(()=>[C6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[E6]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Q6]),_:1}),e(),R6]),Z6,t("td",G6,[t("a",S6,[e("🀄️"),o(s)]),e(),t("a",T6,[e("🔗"),o(s)])])]),t("tr",null,[U6,X6,Y6,t("td",A6,[o(l,{to:"/tag/stack.html"},{default:n(()=>[P6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[D6]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[F6]),_:1}),e(),H6]),J6,t("td",W6,[t("a",$6,[e("🀄️"),o(s)]),e(),t("a",t9,[e("🔗"),o(s)])])]),t("tr",null,[e9,o9,l9,t("td",n9,[o(l,{to:"/tag/stack.html"},{default:n(()=>[s9]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_9]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[d9]),_:1}),e(),r9]),c9,t("td",a9,[t("a",i9,[e("🀄️"),o(s)]),e(),t("a",h9,[e("🔗"),o(s)])])]),t("tr",null,[g9,u9,f9,t("td",m9,[o(l,{to:"/tag/stack.html"},{default:n(()=>[y9]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[p9]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[x9]),_:1}),e(),b9]),k9,t("td",v9,[t("a",w9,[e("🀄️"),o(s)]),e(),t("a",I9,[e("🔗"),o(s)])])]),t("tr",null,[q9,z9,j9,t("td",O9,[o(l,{to:"/tag/stack.html"},{default:n(()=>[N9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[L9]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[B9]),_:1}),e(),M9]),V9,t("td",K9,[t("a",C9,[e("🀄️"),o(s)]),e(),t("a",E9,[e("🔗"),o(s)])])]),t("tr",null,[Q9,R9,Z9,t("td",G9,[o(l,{to:"/tag/stack.html"},{default:n(()=>[S9]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[T9]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[U9]),_:1}),e(),X9]),Y9,t("td",A9,[t("a",P9,[e("🀄️"),o(s)]),e(),t("a",D9,[e("🔗"),o(s)])])]),t("tr",null,[F9,H9,J9,t("td",W9,[o(l,{to:"/tag/stack.html"},{default:n(()=>[$9]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[t7]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[e7]),_:1}),e(),o7]),l7,t("td",n7,[t("a",s7,[e("🀄️"),o(s)]),e(),t("a",_7,[e("🔗"),o(s)])])]),t("tr",null,[d7,r7,c7,t("td",a7,[o(l,{to:"/tag/stack.html"},{default:n(()=>[i7]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[h7]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[g7]),_:1}),e(),u7]),f7,t("td",m7,[t("a",y7,[e("🀄️"),o(s)]),e(),t("a",p7,[e("🔗"),o(s)])])]),t("tr",null,[x7,b7,t("td",k7,[o(l,{to:"/problem/2375.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",v7,[o(l,{to:"/tag/stack.html"},{default:n(()=>[w7]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[I7]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q7]),_:1}),e(),z7]),j7,t("td",O7,[t("a",N7,[e("🀄️"),o(s)]),e(),t("a",L7,[e("🔗"),o(s)])])]),t("tr",null,[B7,M7,t("td",V7,[o(l,{to:"/problem/2390.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",K7,[o(l,{to:"/tag/stack.html"},{default:n(()=>[C7]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[E7]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[Q7]),_:1})]),R7,t("td",Z7,[t("a",G7,[e("🀄️"),o(s)]),e(),t("a",S7,[e("🔗"),o(s)])])]),t("tr",null,[T7,U7,X7,t("td",Y7,[o(l,{to:"/tag/stack.html"},{default:n(()=>[A7]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[P7]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[D7]),_:1}),e(),F7]),H7,t("td",J7,[t("a",W7,[e("🀄️"),o(s)]),e(),t("a",$7,[e("🔗"),o(s)])])]),t("tr",null,[t8,e8,o8,t("td",l8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[n8]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[s8]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[_8]),_:1}),e(),d8]),r8,t("td",c8,[t("a",a8,[e("🀄️"),o(s)]),e(),t("a",i8,[e("🔗"),o(s)])])]),t("tr",null,[h8,g8,u8,t("td",f8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[m8]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[y8]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p8]),_:1}),e(),x8]),b8,t("td",k8,[t("a",v8,[e("🀄️"),o(s)]),e(),t("a",w8,[e("🔗"),o(s)])])]),t("tr",null,[I8,q8,z8,t("td",j8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[O8]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[N8]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[L8]),_:1}),e(),B8]),M8,t("td",V8,[t("a",K8,[e("🀄️"),o(s)]),e(),t("a",C8,[e("🔗"),o(s)])])]),t("tr",null,[E8,Q8,R8,t("td",Z8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[G8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[S8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[T8]),_:1}),e(),U8]),X8,t("td",Y8,[t("a",A8,[e("🀄️"),o(s)]),e(),t("a",P8,[e("🔗"),o(s)])])]),t("tr",null,[D8,F8,H8,t("td",J8,[o(l,{to:"/tag/stack.html"},{default:n(()=>[W8]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[$8]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[tk]),_:1}),e(),ek]),ok,t("td",lk,[t("a",nk,[e("🀄️"),o(s)]),e(),t("a",sk,[e("🔗"),o(s)])])]),t("tr",null,[_k,dk,t("td",rk,[o(l,{to:"/problem/2696.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ck,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ak]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ik]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[hk]),_:1})]),gk,t("td",uk,[t("a",fk,[e("🀄️"),o(s)]),e(),t("a",mk,[e("🔗"),o(s)])])]),t("tr",null,[yk,pk,xk,t("td",bk,[o(l,{to:"/tag/stack.html"},{default:n(()=>[kk]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[vk]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[wk]),_:1}),e(),Ik]),qk,t("td",zk,[t("a",jk,[e("🀄️"),o(s)]),e(),t("a",Ok,[e("🔗"),o(s)])])]),t("tr",null,[Nk,Lk,Bk,t("td",Mk,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Vk]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Kk]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Ck]),_:1}),e(),Ek]),Qk,t("td",Rk,[t("a",Zk,[e("🀄️"),o(s)]),e(),t("a",Gk,[e("🔗"),o(s)])])]),t("tr",null,[Sk,Tk,Uk,t("td",Xk,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Yk]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Ak]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Pk]),_:1}),e(),Dk]),Fk,t("td",Hk,[t("a",Jk,[e("🀄️"),o(s)]),e(),t("a",Wk,[e("🔗"),o(s)])])]),t("tr",null,[$k,tv,ev,t("td",ov,[o(l,{to:"/tag/stack.html"},{default:n(()=>[lv]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[nv]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sv]),_:1}),e(),_v]),dv,t("td",rv,[t("a",cv,[e("🀄️"),o(s)]),e(),t("a",av,[e("🔗"),o(s)])])]),t("tr",null,[iv,hv,gv,t("td",uv,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fv]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[mv]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[yv]),_:1})]),pv,t("td",xv,[t("a",bv,[e("🀄️"),o(s)]),e(),t("a",kv,[e("🔗"),o(s)])])]),t("tr",null,[vv,wv,Iv,t("td",qv,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zv]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[jv]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ov]),_:1}),e(),Nv]),Lv,t("td",Bv,[t("a",Mv,[e("🀄️"),o(s)]),e(),t("a",Vv,[e("🔗"),o(s)])])]),t("tr",null,[Kv,Cv,Ev,t("td",Qv,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Rv]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zv]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[Gv]),_:1})]),Sv,t("td",Tv,[t("a",Uv,[e("🀄️"),o(s)]),e(),t("a",Xv,[e("🔗"),o(s)])])]),t("tr",null,[Yv,Av,Pv,t("td",Dv,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Fv]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Hv]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Jv]),_:1}),e(),Wv]),$v,t("td",tw,[t("a",ew,[e("🀄️"),o(s)]),e(),t("a",ow,[e("🔗"),o(s)])])]),t("tr",null,[lw,nw,sw,t("td",_w,[o(l,{to:"/tag/stack.html"},{default:n(()=>[dw]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[rw]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[cw]),_:1})]),aw,t("td",iw,[t("a",hw,[e("🀄️"),o(s)]),e(),t("a",gw,[e("🔗"),o(s)])])]),t("tr",null,[uw,fw,mw,t("td",yw,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pw]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xw]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[bw]),_:1})]),kw,t("td",vw,[t("a",ww,[e("🀄️"),o(s)]),e(),t("a",Iw,[e("🔗"),o(s)])])]),t("tr",null,[qw,zw,t("td",jw,[o(l,{to:"/problem/2940.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ow,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Nw]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Lw]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Bw]),_:1}),e(),Mw]),Vw,t("td",Kw,[t("a",Cw,[e("🀄️"),o(s)]),e(),t("a",Ew,[e("🔗"),o(s)])])]),t("tr",null,[Qw,Rw,Zw,t("td",Gw,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Sw]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Tw]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Uw]),_:1}),e(),Xw]),Yw,t("td",Aw,[t("a",Pw,[e("🀄️"),o(s)]),e(),t("a",Dw,[e("🔗"),o(s)])])]),t("tr",null,[Fw,Hw,Jw,t("td",Ww,[o(l,{to:"/tag/stack.html"},{default:n(()=>[$w]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tI]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[eI]),_:1}),e(),oI]),lI,t("td",nI,[t("a",sI,[e("🀄️"),o(s)]),e(),t("a",_I,[e("🔗"),o(s)])])]),t("tr",null,[dI,rI,cI,t("td",aI,[o(l,{to:"/tag/stack.html"},{default:n(()=>[iI]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[hI]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[gI]),_:1}),e(),uI]),fI,t("td",mI,[t("a",yI,[e("🀄️"),o(s)]),e(),t("a",pI,[e("🔗"),o(s)])])]),t("tr",null,[xI,bI,t("td",kI,[o(l,{to:"/problem/3174.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vI,[o(l,{to:"/tag/stack.html"},{default:n(()=>[wI]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[II]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[qI]),_:1})]),zI,t("td",jI,[t("a",OI,[e("🀄️"),o(s)]),e(),t("a",NI,[e("🔗"),o(s)])])]),t("tr",null,[LI,BI,MI,t("td",VI,[o(l,{to:"/tag/stack.html"},{default:n(()=>[KI]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[CI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[EI]),_:1}),e(),QI]),RI,t("td",ZI,[t("a",GI,[e("🀄️"),o(s)]),e(),t("a",SI,[e("🔗"),o(s)])])]),t("tr",null,[TI,UI,XI,t("td",YI,[o(l,{to:"/tag/stack.html"},{default:n(()=>[AI]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[PI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[DI]),_:1}),e(),FI]),HI,t("td",JI,[t("a",WI,[e("🀄️"),o(s)]),e(),t("a",$I,[e("🔗"),o(s)])])]),t("tr",null,[tq,eq,oq,t("td",lq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nq]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[sq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_q]),_:1}),e(),dq]),rq,t("td",cq,[t("a",aq,[e("🀄️"),o(s)]),e(),t("a",iq,[e("🔗"),o(s)])])]),t("tr",null,[hq,gq,uq,t("td",fq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[mq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[yq]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[pq]),_:1}),e(),xq]),bq,t("td",kq,[t("a",vq,[e("🀄️"),o(s)]),e(),t("a",wq,[e("🔗"),o(s)])])]),t("tr",null,[Iq,qq,zq,t("td",jq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Oq]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Nq]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Lq]),_:1}),e(),Bq]),Mq,t("td",Vq,[t("a",Kq,[e("🀄️"),o(s)]),e(),t("a",Cq,[e("🔗"),o(s)])])]),t("tr",null,[Eq,Qq,Rq,t("td",Zq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Gq]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Sq]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Tq]),_:1}),e(),Uq]),Xq,t("td",Yq,[t("a",Aq,[e("🀄️"),o(s)]),e(),t("a",Pq,[e("🔗"),o(s)])])]),t("tr",null,[Dq,Fq,Hq,t("td",Jq,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Wq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$q]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[tz]),_:1}),e(),ez]),oz,t("td",lz,[t("a",nz,[e("🀄️"),o(s)]),e(),t("a",sz,[e("🔗"),o(s)])])]),t("tr",null,[_z,dz,t("td",rz,[o(l,{to:"/offer/jz_offer_30_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[az]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[iz]),_:1})]),hz,t("td",gz,[t("a",uz,[e("🀄️"),o(s)])])]),t("tr",null,[fz,mz,t("td",yz,[o(l,{to:"/offer/jz_offer_31_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xz]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bz]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[kz]),_:1})]),vz,t("td",wz,[t("a",Iz,[e("🀄️"),o(s)])])]),t("tr",null,[qz,zz,t("td",jz,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Oz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Nz]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Lz]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Bz]),_:1}),e(),Mz]),Vz,t("td",Kz,[t("a",Cz,[e("🀄️"),o(s)])])]),t("tr",null,[Ez,Qz,t("td",Rz,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Gz]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Sz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tz]),_:1}),e(),Uz]),Xz,t("td",Yz,[t("a",Az,[e("🀄️"),o(s)])])]),t("tr",null,[Pz,Dz,t("td",Fz,[o(l,{to:"/offer/jz_offer_06_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Hz,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Jz]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Wz]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[$z]),_:1}),e(),tj]),ej,t("td",oj,[t("a",lj,[e("🀄️"),o(s)])])]),t("tr",null,[nj,sj,t("td",_j,[o(l,{to:"/offer/jz_offer_09_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[rj]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[cj]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[aj]),_:1})]),ij,t("td",hj,[t("a",gj,[e("🀄️"),o(s)])])]),t("tr",null,[uj,fj,t("td",mj,[o(l,{to:"/offer2/jz_offer_II_025.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pj]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[xj]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[bj]),_:1})]),kj,t("td",vj,[t("a",wj,[e("🀄️"),o(s)])])]),t("tr",null,[Ij,qj,t("td",zj,[o(l,{to:"/offer2/jz_offer_II_026.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",jj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Oj]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Nj]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Lj]),_:1}),e(),Bj]),Mj,t("td",Vj,[t("a",Kj,[e("🀄️"),o(s)])])]),t("tr",null,[Cj,Ej,t("td",Qj,[o(l,{to:"/offer2/jz_offer_II_027.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Zj]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Gj]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[Sj]),_:1}),e(),Tj]),Uj,t("td",Xj,[t("a",Yj,[e("🀄️"),o(s)])])]),t("tr",null,[Aj,Pj,t("td",Dj,[o(l,{to:"/offer2/jz_offer_II_036.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Fj,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Hj]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jj]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Wj]),_:1})]),$j,t("td",tO,[t("a",eO,[e("🀄️"),o(s)])])]),t("tr",null,[oO,lO,nO,t("td",sO,[o(l,{to:"/tag/stack.html"},{default:n(()=>[_O]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dO]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[rO]),_:1})]),cO,t("td",aO,[t("a",iO,[e("🀄️"),o(s)])])]),t("tr",null,[hO,gO,t("td",uO,[o(l,{to:"/offer2/jz_offer_II_038.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fO,[o(l,{to:"/tag/stack.html"},{default:n(()=>[mO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[yO]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[pO]),_:1})]),xO,t("td",bO,[t("a",kO,[e("🀄️"),o(s)])])]),t("tr",null,[vO,wO,t("td",IO,[o(l,{to:"/offer2/jz_offer_II_039.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",qO,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jO]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[OO]),_:1})]),NO,t("td",LO,[t("a",BO,[e("🀄️"),o(s)])])]),t("tr",null,[MO,VO,t("td",KO,[o(l,{to:"/offer2/jz_offer_II_040.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",CO,[o(l,{to:"/tag/stack.html"},{default:n(()=>[EO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[QO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[RO]),_:1}),e(),ZO]),GO,t("td",SO,[t("a",TO,[e("🀄️"),o(s)])])]),t("tr",null,[UO,XO,YO,t("td",AO,[o(l,{to:"/tag/stack.html"},{default:n(()=>[PO]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[DO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[FO]),_:1}),e(),HO]),JO,t("td",WO,[t("a",$O,[e("🀄️"),o(s)])])]),t("tr",null,[tN,eN,t("td",oN,[o(l,{to:"/offer2/jz_offer_II_055.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",lN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[nN]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[sN]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[_N]),_:1}),e(),dN]),rN,t("td",cN,[t("a",aN,[e("🀄️"),o(s)])])]),t("tr",null,[iN,hN,gN,t("td",uN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[fN]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[mN]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[yN]),_:1}),e(),pN]),xN,t("td",bN,[t("a",kN,[e("🀄️"),o(s)])])]),t("tr",null,[vN,wN,IN,t("td",qN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[zN]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jN]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ON]),_:1})]),NN,t("td",LN,[t("a",BN,[e("🀄️"),o(s)])])]),t("tr",null,[MN,VN,KN,t("td",CN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[EN]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[QN]),_:1})]),RN,t("td",ZN,[t("a",GN,[e("🀄️"),o(s)])])]),t("tr",null,[SN,TN,UN,t("td",XN,[o(l,{to:"/tag/stack.html"},{default:n(()=>[YN]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[AN]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[PN]),_:1})]),DN,t("td",FN,[t("a",HN,[e("🀄️"),o(s)])])]),t("tr",null,[JN,WN,$N,t("td",tL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[eL]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[oL]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[lL]),_:1})]),nL,t("td",sL,[t("a",_L,[e("🀄️"),o(s)])])]),t("tr",null,[dL,rL,cL,t("td",aL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[iL]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[hL]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[gL]),_:1})]),uL,t("td",fL,[t("a",mL,[e("🀄️"),o(s)])])]),t("tr",null,[yL,pL,xL,t("td",bL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[kL]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[vL]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wL]),_:1}),e(),IL]),qL,t("td",zL,[t("a",jL,[e("🀄️"),o(s)])])]),t("tr",null,[OL,NL,LL,t("td",BL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ML]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[VL]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[KL]),_:1})]),CL,t("td",EL,[t("a",QL,[e("🀄️"),o(s)])])]),t("tr",null,[RL,ZL,GL,t("td",SL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[TL]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[UL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[XL]),_:1}),e(),YL]),AL,t("td",PL,[t("a",DL,[e("🀄️"),o(s)])])]),t("tr",null,[FL,HL,JL,t("td",WL,[o(l,{to:"/tag/stack.html"},{default:n(()=>[$L]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tB]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[eB]),_:1}),e(),oB]),lB,t("td",nB,[t("a",sB,[e("🀄️"),o(s)])])])])])])}const aB=d(i,[["render",_B],["__file","stack.html.vue"]]);export{aB as default};
